pynguin log ./matplotlib/cbook/deprecation.py
[01:27:20] INFO     Start Pynguin Test Generation…              generator.py:116
           INFO     Collecting static constants from module     generator.py:216
                    under test                                                  
           INFO     No constants found                          generator.py:219
           INFO     Setting up runtime collection of constants  generator.py:228
[01:27:22] INFO     Analyzed project to create test cluster       module.py:1326
           INFO     Modules:       9                              module.py:1327
           INFO     Functions:   152                              module.py:1328
           INFO     Classes:     219                              module.py:1329
           INFO     Using seed 1733016440057051567              generator.py:202
           INFO     Using strategy:            generationalgorithmfactory.py:302
                    Algorithm.DYNAMOSA                                          
           INFO     Instantiated 96 fitness    generationalgorithmfactory.py:393
                    functions                                                   
           INFO     Using CoverageArchive      generationalgorithmfactory.py:346
           INFO     Using selection function:  generationalgorithmfactory.py:321
                    Selection.TOURNAMENT_SELEC                                  
                    TION                                                        
           INFO     Using crossover function:  generationalgorithmfactory.py:334
                    SinglePointRelativeCrossOv                                  
                    er                                                          
           INFO     Using ranking function:    generationalgorithmfactory.py:354
                    RankBasedPreferenceSorting                                  
           INFO     Start generating test cases                 generator.py:526
           INFO     Initial Population, Coverage: 0.239583  searchobserver.py:77
           INFO     Iteration:       1, Coverage: 0.239583  searchobserver.py:83
[01:27:23] INFO     Iteration:       2, Coverage: 0.239583  searchobserver.py:83
           INFO     Iteration:       3, Coverage: 0.239583  searchobserver.py:83
           INFO     Iteration:       4, Coverage: 0.250000  searchobserver.py:83
[01:27:24] INFO     Iteration:       5, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:       6, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:       7, Coverage: 0.250000  searchobserver.py:83
[01:27:25] INFO     Iteration:       8, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:       9, Coverage: 0.250000  searchobserver.py:83
[01:27:26] INFO     Iteration:      10, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      11, Coverage: 0.250000  searchobserver.py:83
[01:27:27] INFO     Iteration:      12, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      13, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      14, Coverage: 0.250000  searchobserver.py:83
[01:27:28] INFO     Iteration:      15, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      16, Coverage: 0.250000  searchobserver.py:83
[01:27:29] INFO     Iteration:      17, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      18, Coverage: 0.250000  searchobserver.py:83
[01:27:30] INFO     Iteration:      19, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      20, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      21, Coverage: 0.250000  searchobserver.py:83
[01:27:31] INFO     Iteration:      22, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      23, Coverage: 0.250000  searchobserver.py:83
[01:27:32] INFO     Iteration:      24, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      25, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      26, Coverage: 0.250000  searchobserver.py:83
[01:27:33] INFO     Iteration:      27, Coverage: 0.250000  searchobserver.py:83
[01:27:34] INFO     Iteration:      28, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      29, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      30, Coverage: 0.250000  searchobserver.py:83
[01:27:35] INFO     Iteration:      31, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      32, Coverage: 0.250000  searchobserver.py:83
[01:27:36] INFO     Iteration:      33, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      34, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      35, Coverage: 0.250000  searchobserver.py:83
[01:27:37] INFO     Iteration:      36, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      37, Coverage: 0.250000  searchobserver.py:83
[01:27:38] INFO     Iteration:      38, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      39, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      40, Coverage: 0.250000  searchobserver.py:83
[01:27:39] INFO     Iteration:      41, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      42, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      43, Coverage: 0.250000  searchobserver.py:83
[01:27:40] INFO     Iteration:      44, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      45, Coverage: 0.250000  searchobserver.py:83
[01:27:41] INFO     Iteration:      46, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      47, Coverage: 0.250000  searchobserver.py:83
[01:27:42] INFO     Iteration:      48, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      49, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      50, Coverage: 0.250000  searchobserver.py:83
[01:27:43] INFO     Iteration:      51, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      52, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      53, Coverage: 0.250000  searchobserver.py:83
[01:27:44] INFO     Iteration:      54, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      55, Coverage: 0.250000  searchobserver.py:83
[01:27:45] INFO     Iteration:      56, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      57, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      58, Coverage: 0.250000  searchobserver.py:83
[01:27:46] INFO     Iteration:      59, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      60, Coverage: 0.250000  searchobserver.py:83
[01:27:47] INFO     Iteration:      61, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      62, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      63, Coverage: 0.250000  searchobserver.py:83
[01:27:48] INFO     Iteration:      64, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      65, Coverage: 0.250000  searchobserver.py:83
[01:27:49] INFO     Iteration:      66, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      67, Coverage: 0.250000  searchobserver.py:83
[01:27:50] INFO     Iteration:      68, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      69, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      70, Coverage: 0.250000  searchobserver.py:83
[01:27:51] INFO     Iteration:      71, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      72, Coverage: 0.250000  searchobserver.py:83
[01:27:52] INFO     Iteration:      73, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      74, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      75, Coverage: 0.250000  searchobserver.py:83
[01:27:53] INFO     Iteration:      76, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      77, Coverage: 0.250000  searchobserver.py:83
[01:27:54] INFO     Iteration:      78, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      79, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      80, Coverage: 0.250000  searchobserver.py:83
[01:27:55] INFO     Iteration:      81, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      82, Coverage: 0.250000  searchobserver.py:83
[01:27:56] INFO     Iteration:      83, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      84, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      85, Coverage: 0.250000  searchobserver.py:83
[01:27:57] INFO     Iteration:      86, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      87, Coverage: 0.250000  searchobserver.py:83
[01:27:58] INFO     Iteration:      88, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      89, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      90, Coverage: 0.250000  searchobserver.py:83
[01:27:59] INFO     Iteration:      91, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      92, Coverage: 0.250000  searchobserver.py:83
[01:28:00] INFO     Iteration:      93, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      94, Coverage: 0.250000  searchobserver.py:83
[01:28:01] INFO     Iteration:      95, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      96, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      97, Coverage: 0.250000  searchobserver.py:83
[01:28:02] INFO     Iteration:      98, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:      99, Coverage: 0.250000  searchobserver.py:83
[01:28:03] INFO     Iteration:     100, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     101, Coverage: 0.250000  searchobserver.py:83
[01:28:04] INFO     Iteration:     102, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     103, Coverage: 0.250000  searchobserver.py:83
[01:28:05] INFO     Iteration:     104, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     105, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     106, Coverage: 0.250000  searchobserver.py:83
[01:28:06] INFO     Iteration:     107, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     108, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     109, Coverage: 0.250000  searchobserver.py:83
[01:28:07] INFO     Iteration:     110, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     111, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     112, Coverage: 0.250000  searchobserver.py:83
[01:28:08] INFO     Iteration:     113, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     114, Coverage: 0.250000  searchobserver.py:83
[01:28:09] INFO     Iteration:     115, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     116, Coverage: 0.250000  searchobserver.py:83
[01:28:10] INFO     Iteration:     117, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     118, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     119, Coverage: 0.250000  searchobserver.py:83
[01:28:11] INFO     Iteration:     120, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     121, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     122, Coverage: 0.250000  searchobserver.py:83
[01:28:12] INFO     Iteration:     123, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     124, Coverage: 0.250000  searchobserver.py:83
[01:28:13] INFO     Iteration:     125, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     126, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     127, Coverage: 0.250000  searchobserver.py:83
[01:28:14] INFO     Iteration:     128, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     129, Coverage: 0.250000  searchobserver.py:83
[01:28:15] INFO     Iteration:     130, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     131, Coverage: 0.250000  searchobserver.py:83
[01:28:16] INFO     Iteration:     132, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     133, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     134, Coverage: 0.250000  searchobserver.py:83
[01:28:17] INFO     Iteration:     135, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     136, Coverage: 0.250000  searchobserver.py:83
[01:28:18] INFO     Iteration:     137, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     138, Coverage: 0.250000  searchobserver.py:83
[01:28:19] INFO     Iteration:     139, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     140, Coverage: 0.250000  searchobserver.py:83
[01:28:20] INFO     Iteration:     141, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     142, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     143, Coverage: 0.250000  searchobserver.py:83
[01:28:21] INFO     Iteration:     144, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     145, Coverage: 0.250000  searchobserver.py:83
[01:28:22] INFO     Iteration:     146, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     147, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     148, Coverage: 0.250000  searchobserver.py:83
[01:28:23] INFO     Iteration:     149, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     150, Coverage: 0.250000  searchobserver.py:83
[01:28:24] INFO     Iteration:     151, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     152, Coverage: 0.250000  searchobserver.py:83
[01:28:25] INFO     Iteration:     153, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     154, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     155, Coverage: 0.250000  searchobserver.py:83
[01:28:26] INFO     Iteration:     156, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     157, Coverage: 0.250000  searchobserver.py:83
[01:28:27] INFO     Iteration:     158, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     159, Coverage: 0.250000  searchobserver.py:83
[01:28:28] INFO     Iteration:     160, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     161, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     162, Coverage: 0.250000  searchobserver.py:83
[01:28:29] INFO     Iteration:     163, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     164, Coverage: 0.250000  searchobserver.py:83
[01:28:30] INFO     Iteration:     165, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     166, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     167, Coverage: 0.250000  searchobserver.py:83
[01:28:31] INFO     Iteration:     168, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     169, Coverage: 0.250000  searchobserver.py:83
[01:28:32] INFO     Iteration:     170, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     171, Coverage: 0.250000  searchobserver.py:83
[01:28:33] INFO     Iteration:     172, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     173, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     174, Coverage: 0.250000  searchobserver.py:83
[01:28:34] INFO     Iteration:     175, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     176, Coverage: 0.250000  searchobserver.py:83
[01:28:35] INFO     Iteration:     177, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     178, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     179, Coverage: 0.250000  searchobserver.py:83
[01:28:36] INFO     Iteration:     180, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     181, Coverage: 0.250000  searchobserver.py:83
[01:28:37] INFO     Iteration:     182, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     183, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     184, Coverage: 0.250000  searchobserver.py:83
[01:28:38] INFO     Iteration:     185, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     186, Coverage: 0.250000  searchobserver.py:83
[01:28:39] INFO     Iteration:     187, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     188, Coverage: 0.250000  searchobserver.py:83
[01:28:40] INFO     Iteration:     189, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     190, Coverage: 0.250000  searchobserver.py:83
[01:28:41] INFO     Iteration:     191, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     192, Coverage: 0.250000  searchobserver.py:83
[01:28:42] INFO     Iteration:     193, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     194, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     195, Coverage: 0.250000  searchobserver.py:83
[01:28:43] INFO     Iteration:     196, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     197, Coverage: 0.250000  searchobserver.py:83
[01:28:44] INFO     Iteration:     198, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     199, Coverage: 0.250000  searchobserver.py:83
[01:28:45] INFO     Iteration:     200, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     201, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     202, Coverage: 0.250000  searchobserver.py:83
[01:28:46] INFO     Iteration:     203, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     204, Coverage: 0.250000  searchobserver.py:83
[01:28:47] INFO     Iteration:     205, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     206, Coverage: 0.250000  searchobserver.py:83
[01:28:48] INFO     Iteration:     207, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     208, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     209, Coverage: 0.250000  searchobserver.py:83
[01:28:49] INFO     Iteration:     210, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     211, Coverage: 0.250000  searchobserver.py:83
[01:28:50] INFO     Iteration:     212, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     213, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     214, Coverage: 0.250000  searchobserver.py:83
[01:28:51] INFO     Iteration:     215, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     216, Coverage: 0.250000  searchobserver.py:83
[01:28:52] INFO     Iteration:     217, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     218, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     219, Coverage: 0.250000  searchobserver.py:83
[01:28:53] INFO     Iteration:     220, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     221, Coverage: 0.250000  searchobserver.py:83
[01:28:54] INFO     Iteration:     222, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     223, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     224, Coverage: 0.250000  searchobserver.py:83
[01:28:55] INFO     Iteration:     225, Coverage: 0.250000  searchobserver.py:83
[01:28:56] INFO     Iteration:     226, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     227, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     228, Coverage: 0.250000  searchobserver.py:83
[01:28:57] INFO     Iteration:     229, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     230, Coverage: 0.250000  searchobserver.py:83
[01:28:58] INFO     Iteration:     231, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     232, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     233, Coverage: 0.250000  searchobserver.py:83
[01:28:59] INFO     Iteration:     234, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     235, Coverage: 0.250000  searchobserver.py:83
[01:29:00] INFO     Iteration:     236, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     237, Coverage: 0.250000  searchobserver.py:83
[01:29:01] INFO     Iteration:     238, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     239, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     240, Coverage: 0.250000  searchobserver.py:83
[01:29:02] INFO     Iteration:     241, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     242, Coverage: 0.250000  searchobserver.py:83
[01:29:03] INFO     Iteration:     243, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     244, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     245, Coverage: 0.250000  searchobserver.py:83
[01:29:04] INFO     Iteration:     246, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     247, Coverage: 0.250000  searchobserver.py:83
[01:29:05] INFO     Iteration:     248, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     249, Coverage: 0.250000  searchobserver.py:83
[01:29:06] INFO     Iteration:     250, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     251, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     252, Coverage: 0.250000  searchobserver.py:83
[01:29:07] INFO     Iteration:     253, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     254, Coverage: 0.250000  searchobserver.py:83
[01:29:08] INFO     Iteration:     255, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     256, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     257, Coverage: 0.250000  searchobserver.py:83
[01:29:09] INFO     Iteration:     258, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     259, Coverage: 0.250000  searchobserver.py:83
[01:29:10] INFO     Iteration:     260, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     261, Coverage: 0.250000  searchobserver.py:83
[01:29:11] INFO     Iteration:     262, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     263, Coverage: 0.250000  searchobserver.py:83
[01:29:12] INFO     Iteration:     264, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     265, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     266, Coverage: 0.250000  searchobserver.py:83
[01:29:13] INFO     Iteration:     267, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     268, Coverage: 0.250000  searchobserver.py:83
[01:29:14] INFO     Iteration:     269, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     270, Coverage: 0.250000  searchobserver.py:83
[01:29:15] INFO     Iteration:     271, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     272, Coverage: 0.250000  searchobserver.py:83
[01:29:16] INFO     Iteration:     273, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     274, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     275, Coverage: 0.250000  searchobserver.py:83
[01:29:17] INFO     Iteration:     276, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     277, Coverage: 0.250000  searchobserver.py:83
[01:29:18] INFO     Iteration:     278, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     279, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     280, Coverage: 0.250000  searchobserver.py:83
[01:29:19] INFO     Iteration:     281, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     282, Coverage: 0.250000  searchobserver.py:83
[01:29:20] INFO     Iteration:     283, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     284, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     285, Coverage: 0.250000  searchobserver.py:83
[01:29:21] INFO     Iteration:     286, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     287, Coverage: 0.250000  searchobserver.py:83
[01:29:22] INFO     Iteration:     288, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     289, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     290, Coverage: 0.250000  searchobserver.py:83
[01:29:23] INFO     Iteration:     291, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     292, Coverage: 0.250000  searchobserver.py:83
[01:29:24] INFO     Iteration:     293, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     294, Coverage: 0.250000  searchobserver.py:83
[01:29:25] INFO     Iteration:     295, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     296, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     297, Coverage: 0.250000  searchobserver.py:83
[01:29:26] INFO     Iteration:     298, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     299, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     300, Coverage: 0.250000  searchobserver.py:83
[01:29:27] INFO     Iteration:     301, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     302, Coverage: 0.250000  searchobserver.py:83
[01:29:28] INFO     Iteration:     303, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     304, Coverage: 0.250000  searchobserver.py:83
[01:29:29] INFO     Iteration:     305, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     306, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     307, Coverage: 0.250000  searchobserver.py:83
[01:29:30] INFO     Iteration:     308, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     309, Coverage: 0.250000  searchobserver.py:83
[01:29:31] INFO     Iteration:     310, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     311, Coverage: 0.250000  searchobserver.py:83
[01:29:32] INFO     Iteration:     312, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     313, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     314, Coverage: 0.250000  searchobserver.py:83
[01:29:33] INFO     Iteration:     315, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     316, Coverage: 0.250000  searchobserver.py:83
[01:29:34] INFO     Iteration:     317, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     318, Coverage: 0.250000  searchobserver.py:83
[01:29:35] INFO     Iteration:     319, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     320, Coverage: 0.250000  searchobserver.py:83
[01:29:36] INFO     Iteration:     321, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     322, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     323, Coverage: 0.250000  searchobserver.py:83
[01:29:37] INFO     Iteration:     324, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     325, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     326, Coverage: 0.250000  searchobserver.py:83
[01:29:38] INFO     Iteration:     327, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     328, Coverage: 0.250000  searchobserver.py:83
[01:29:39] INFO     Iteration:     329, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     330, Coverage: 0.250000  searchobserver.py:83
[01:29:40] INFO     Iteration:     331, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     332, Coverage: 0.250000  searchobserver.py:83
[01:29:41] INFO     Iteration:     333, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     334, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     335, Coverage: 0.250000  searchobserver.py:83
[01:29:42] INFO     Iteration:     336, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     337, Coverage: 0.250000  searchobserver.py:83
[01:29:43] INFO     Iteration:     338, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     339, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     340, Coverage: 0.250000  searchobserver.py:83
[01:29:44] INFO     Iteration:     341, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     342, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     343, Coverage: 0.250000  searchobserver.py:83
[01:29:45] INFO     Iteration:     344, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     345, Coverage: 0.250000  searchobserver.py:83
[01:29:46] INFO     Iteration:     346, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     347, Coverage: 0.250000  searchobserver.py:83
[01:29:47] INFO     Iteration:     348, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     349, Coverage: 0.250000  searchobserver.py:83
[01:29:48] INFO     Iteration:     350, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     351, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     352, Coverage: 0.250000  searchobserver.py:83
[01:29:49] INFO     Iteration:     353, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     354, Coverage: 0.250000  searchobserver.py:83
[01:29:50] INFO     Iteration:     355, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     356, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     357, Coverage: 0.250000  searchobserver.py:83
[01:29:51] INFO     Iteration:     358, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     359, Coverage: 0.250000  searchobserver.py:83
[01:29:52] INFO     Iteration:     360, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     361, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     362, Coverage: 0.250000  searchobserver.py:83
[01:29:53] INFO     Iteration:     363, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     364, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     365, Coverage: 0.250000  searchobserver.py:83
[01:29:54] INFO     Iteration:     366, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     367, Coverage: 0.250000  searchobserver.py:83
[01:29:55] INFO     Iteration:     368, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     369, Coverage: 0.250000  searchobserver.py:83
[01:29:56] INFO     Iteration:     370, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     371, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     372, Coverage: 0.250000  searchobserver.py:83
[01:29:57] INFO     Iteration:     373, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     374, Coverage: 0.250000  searchobserver.py:83
[01:29:58] INFO     Iteration:     375, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     376, Coverage: 0.250000  searchobserver.py:83
[01:29:59] INFO     Iteration:     377, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     378, Coverage: 0.250000  searchobserver.py:83
[01:30:00] INFO     Iteration:     379, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     380, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     381, Coverage: 0.250000  searchobserver.py:83
[01:30:01] INFO     Iteration:     382, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     383, Coverage: 0.250000  searchobserver.py:83
[01:30:02] INFO     Iteration:     384, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     385, Coverage: 0.250000  searchobserver.py:83
[01:30:03] INFO     Iteration:     386, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     387, Coverage: 0.250000  searchobserver.py:83
[01:30:04] INFO     Iteration:     388, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     389, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     390, Coverage: 0.250000  searchobserver.py:83
[01:30:05] INFO     Iteration:     391, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     392, Coverage: 0.250000  searchobserver.py:83
[01:30:06] INFO     Iteration:     393, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     394, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     395, Coverage: 0.250000  searchobserver.py:83
[01:30:07] INFO     Iteration:     396, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     397, Coverage: 0.250000  searchobserver.py:83
[01:30:08] INFO     Iteration:     398, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     399, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     400, Coverage: 0.250000  searchobserver.py:83
[01:30:09] INFO     Iteration:     401, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     402, Coverage: 0.250000  searchobserver.py:83
[01:30:10] INFO     Iteration:     403, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     404, Coverage: 0.250000  searchobserver.py:83
[01:30:11] INFO     Iteration:     405, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     406, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     407, Coverage: 0.250000  searchobserver.py:83
[01:30:12] INFO     Iteration:     408, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     409, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     410, Coverage: 0.250000  searchobserver.py:83
[01:30:13] INFO     Iteration:     411, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     412, Coverage: 0.250000  searchobserver.py:83
[01:30:14] INFO     Iteration:     413, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     414, Coverage: 0.250000  searchobserver.py:83
[01:30:15] INFO     Iteration:     415, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     416, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     417, Coverage: 0.250000  searchobserver.py:83
[01:30:16] INFO     Iteration:     418, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     419, Coverage: 0.250000  searchobserver.py:83
[01:30:17] INFO     Iteration:     420, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     421, Coverage: 0.250000  searchobserver.py:83
[01:30:18] INFO     Iteration:     422, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     423, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     424, Coverage: 0.250000  searchobserver.py:83
[01:30:19] INFO     Iteration:     425, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     426, Coverage: 0.250000  searchobserver.py:83
[01:30:20] INFO     Iteration:     427, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     428, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     429, Coverage: 0.250000  searchobserver.py:83
[01:30:21] INFO     Iteration:     430, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     431, Coverage: 0.250000  searchobserver.py:83
[01:30:22] INFO     Iteration:     432, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     433, Coverage: 0.250000  searchobserver.py:83
[01:30:23] INFO     Iteration:     434, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     435, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     436, Coverage: 0.250000  searchobserver.py:83
[01:30:24] INFO     Iteration:     437, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     438, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     439, Coverage: 0.250000  searchobserver.py:83
[01:30:25] INFO     Iteration:     440, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     441, Coverage: 0.250000  searchobserver.py:83
[01:30:26] INFO     Iteration:     442, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     443, Coverage: 0.250000  searchobserver.py:83
[01:30:27] INFO     Iteration:     444, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     445, Coverage: 0.250000  searchobserver.py:83
[01:30:28] INFO     Iteration:     446, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     447, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     448, Coverage: 0.250000  searchobserver.py:83
[01:30:29] INFO     Iteration:     449, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     450, Coverage: 0.250000  searchobserver.py:83
[01:30:30] INFO     Iteration:     451, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     452, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     453, Coverage: 0.250000  searchobserver.py:83
[01:30:31] INFO     Iteration:     454, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     455, Coverage: 0.250000  searchobserver.py:83
[01:30:32] INFO     Iteration:     456, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     457, Coverage: 0.250000  searchobserver.py:83
[01:30:33] INFO     Iteration:     458, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     459, Coverage: 0.250000  searchobserver.py:83
[01:30:34] INFO     Iteration:     460, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     461, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     462, Coverage: 0.250000  searchobserver.py:83
[01:30:35] INFO     Iteration:     463, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     464, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     465, Coverage: 0.250000  searchobserver.py:83
[01:30:36] INFO     Iteration:     466, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     467, Coverage: 0.250000  searchobserver.py:83
[01:30:37] INFO     Iteration:     468, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     469, Coverage: 0.250000  searchobserver.py:83
[01:30:38] INFO     Iteration:     470, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     471, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     472, Coverage: 0.250000  searchobserver.py:83
[01:30:39] INFO     Iteration:     473, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     474, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     475, Coverage: 0.250000  searchobserver.py:83
[01:30:40] INFO     Iteration:     476, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     477, Coverage: 0.250000  searchobserver.py:83
[01:30:41] INFO     Iteration:     478, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     479, Coverage: 0.250000  searchobserver.py:83
[01:30:42] INFO     Iteration:     480, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     481, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     482, Coverage: 0.250000  searchobserver.py:83
[01:30:43] INFO     Iteration:     483, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     484, Coverage: 0.250000  searchobserver.py:83
[01:30:44] INFO     Iteration:     485, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     486, Coverage: 0.250000  searchobserver.py:83
[01:30:45] INFO     Iteration:     487, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     488, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     489, Coverage: 0.250000  searchobserver.py:83
[01:30:46] INFO     Iteration:     490, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     491, Coverage: 0.250000  searchobserver.py:83
[01:30:47] INFO     Iteration:     492, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     493, Coverage: 0.250000  searchobserver.py:83
[01:30:48] INFO     Iteration:     494, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     495, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     496, Coverage: 0.250000  searchobserver.py:83
[01:30:49] INFO     Iteration:     497, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     498, Coverage: 0.250000  searchobserver.py:83
[01:30:50] INFO     Iteration:     499, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     500, Coverage: 0.250000  searchobserver.py:83
[01:30:51] INFO     Iteration:     501, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     502, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     503, Coverage: 0.250000  searchobserver.py:83
[01:30:52] INFO     Iteration:     504, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     505, Coverage: 0.250000  searchobserver.py:83
[01:30:53] INFO     Iteration:     506, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     507, Coverage: 0.250000  searchobserver.py:83
[01:30:54] INFO     Iteration:     508, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     509, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     510, Coverage: 0.250000  searchobserver.py:83
[01:30:55] INFO     Iteration:     511, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     512, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     513, Coverage: 0.250000  searchobserver.py:83
[01:30:56] INFO     Iteration:     514, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     515, Coverage: 0.250000  searchobserver.py:83
[01:30:57] INFO     Iteration:     516, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     517, Coverage: 0.250000  searchobserver.py:83
[01:30:58] INFO     Iteration:     518, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     519, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     520, Coverage: 0.250000  searchobserver.py:83
[01:30:59] INFO     Iteration:     521, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     522, Coverage: 0.250000  searchobserver.py:83
[01:31:00] INFO     Iteration:     523, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     524, Coverage: 0.250000  searchobserver.py:83
[01:31:01] INFO     Iteration:     525, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     526, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     527, Coverage: 0.250000  searchobserver.py:83
[01:31:02] INFO     Iteration:     528, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     529, Coverage: 0.250000  searchobserver.py:83
[01:31:03] INFO     Iteration:     530, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     531, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     532, Coverage: 0.250000  searchobserver.py:83
[01:31:04] INFO     Iteration:     533, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     534, Coverage: 0.250000  searchobserver.py:83
[01:31:05] INFO     Iteration:     535, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     536, Coverage: 0.250000  searchobserver.py:83
[01:31:06] INFO     Iteration:     537, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     538, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     539, Coverage: 0.250000  searchobserver.py:83
[01:31:07] INFO     Iteration:     540, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     541, Coverage: 0.250000  searchobserver.py:83
[01:31:08] INFO     Iteration:     542, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     543, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     544, Coverage: 0.250000  searchobserver.py:83
[01:31:09] INFO     Iteration:     545, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     546, Coverage: 0.250000  searchobserver.py:83
[01:31:10] INFO     Iteration:     547, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     548, Coverage: 0.250000  searchobserver.py:83
[01:31:11] INFO     Iteration:     549, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     550, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     551, Coverage: 0.250000  searchobserver.py:83
[01:31:12] INFO     Iteration:     552, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     553, Coverage: 0.250000  searchobserver.py:83
[01:31:13] INFO     Iteration:     554, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     555, Coverage: 0.250000  searchobserver.py:83
[01:31:14] INFO     Iteration:     556, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     557, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     558, Coverage: 0.250000  searchobserver.py:83
[01:31:15] INFO     Iteration:     559, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     560, Coverage: 0.250000  searchobserver.py:83
[01:31:16] INFO     Iteration:     561, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     562, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     563, Coverage: 0.250000  searchobserver.py:83
[01:31:17] INFO     Iteration:     564, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     565, Coverage: 0.250000  searchobserver.py:83
[01:31:18] INFO     Iteration:     566, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     567, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     568, Coverage: 0.250000  searchobserver.py:83
[01:31:19] INFO     Iteration:     569, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     570, Coverage: 0.250000  searchobserver.py:83
[01:31:20] INFO     Iteration:     571, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     572, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     573, Coverage: 0.250000  searchobserver.py:83
[01:31:21] INFO     Iteration:     574, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     575, Coverage: 0.250000  searchobserver.py:83
[01:31:22] INFO     Iteration:     576, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     577, Coverage: 0.250000  searchobserver.py:83
[01:31:23] INFO     Iteration:     578, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     579, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     580, Coverage: 0.250000  searchobserver.py:83
[01:31:24] INFO     Iteration:     581, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     582, Coverage: 0.250000  searchobserver.py:83
[01:31:25] INFO     Iteration:     583, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     584, Coverage: 0.250000  searchobserver.py:83
[01:31:26] INFO     Iteration:     585, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     586, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     587, Coverage: 0.250000  searchobserver.py:83
[01:31:27] INFO     Iteration:     588, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     589, Coverage: 0.250000  searchobserver.py:83
[01:31:28] INFO     Iteration:     590, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     591, Coverage: 0.250000  searchobserver.py:83
[01:31:29] INFO     Iteration:     592, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     593, Coverage: 0.250000  searchobserver.py:83
[01:31:30] INFO     Iteration:     594, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     595, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     596, Coverage: 0.250000  searchobserver.py:83
[01:31:31] INFO     Iteration:     597, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     598, Coverage: 0.250000  searchobserver.py:83
[01:31:32] INFO     Iteration:     599, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     600, Coverage: 0.250000  searchobserver.py:83
[01:31:33] INFO     Iteration:     601, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     602, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     603, Coverage: 0.250000  searchobserver.py:83
[01:31:34] INFO     Iteration:     604, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     605, Coverage: 0.250000  searchobserver.py:83
[01:31:35] INFO     Iteration:     606, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     607, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     608, Coverage: 0.250000  searchobserver.py:83
[01:31:36] INFO     Iteration:     609, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     610, Coverage: 0.250000  searchobserver.py:83
[01:31:37] INFO     Iteration:     611, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     612, Coverage: 0.250000  searchobserver.py:83
[01:31:38] INFO     Iteration:     613, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     614, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     615, Coverage: 0.250000  searchobserver.py:83
[01:31:39] INFO     Iteration:     616, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     617, Coverage: 0.250000  searchobserver.py:83
[01:31:40] INFO     Iteration:     618, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     619, Coverage: 0.250000  searchobserver.py:83
[01:31:41] INFO     Iteration:     620, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     621, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     622, Coverage: 0.250000  searchobserver.py:83
[01:31:42] INFO     Iteration:     623, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     624, Coverage: 0.250000  searchobserver.py:83
[01:31:43] INFO     Iteration:     625, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     626, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     627, Coverage: 0.250000  searchobserver.py:83
[01:31:44] INFO     Iteration:     628, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     629, Coverage: 0.250000  searchobserver.py:83
[01:31:45] INFO     Iteration:     630, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     631, Coverage: 0.250000  searchobserver.py:83
[01:31:46] INFO     Iteration:     632, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     633, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     634, Coverage: 0.250000  searchobserver.py:83
[01:31:47] INFO     Iteration:     635, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     636, Coverage: 0.250000  searchobserver.py:83
[01:31:48] INFO     Iteration:     637, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     638, Coverage: 0.250000  searchobserver.py:83
[01:31:49] INFO     Iteration:     639, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     640, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     641, Coverage: 0.250000  searchobserver.py:83
[01:31:50] INFO     Iteration:     642, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     643, Coverage: 0.250000  searchobserver.py:83
[01:31:51] INFO     Iteration:     644, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     645, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     646, Coverage: 0.250000  searchobserver.py:83
[01:31:52] INFO     Iteration:     647, Coverage: 0.250000  searchobserver.py:83
[01:31:53] INFO     Iteration:     648, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     649, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     650, Coverage: 0.250000  searchobserver.py:83
[01:31:54] INFO     Iteration:     651, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     652, Coverage: 0.250000  searchobserver.py:83
[01:31:55] INFO     Iteration:     653, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     654, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     655, Coverage: 0.250000  searchobserver.py:83
[01:31:56] INFO     Iteration:     656, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     657, Coverage: 0.250000  searchobserver.py:83
[01:31:57] INFO     Iteration:     658, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     659, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     660, Coverage: 0.250000  searchobserver.py:83
[01:31:58] INFO     Iteration:     661, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     662, Coverage: 0.250000  searchobserver.py:83
[01:31:59] INFO     Iteration:     663, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     664, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     665, Coverage: 0.250000  searchobserver.py:83
[01:32:00] INFO     Iteration:     666, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     667, Coverage: 0.250000  searchobserver.py:83
[01:32:01] INFO     Iteration:     668, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     669, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     670, Coverage: 0.250000  searchobserver.py:83
[01:32:02] INFO     Iteration:     671, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     672, Coverage: 0.250000  searchobserver.py:83
[01:32:03] INFO     Iteration:     673, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     674, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     675, Coverage: 0.250000  searchobserver.py:83
[01:32:04] INFO     Iteration:     676, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     677, Coverage: 0.250000  searchobserver.py:83
[01:32:05] INFO     Iteration:     678, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     679, Coverage: 0.250000  searchobserver.py:83
[01:32:06] INFO     Iteration:     680, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     681, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     682, Coverage: 0.250000  searchobserver.py:83
[01:32:07] INFO     Iteration:     683, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     684, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     685, Coverage: 0.250000  searchobserver.py:83
[01:32:08] INFO     Iteration:     686, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     687, Coverage: 0.250000  searchobserver.py:83
[01:32:09] INFO     Iteration:     688, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     689, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     690, Coverage: 0.250000  searchobserver.py:83
[01:32:10] INFO     Iteration:     691, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     692, Coverage: 0.250000  searchobserver.py:83
[01:32:11] INFO     Iteration:     693, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     694, Coverage: 0.250000  searchobserver.py:83
[01:32:12] INFO     Iteration:     695, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     696, Coverage: 0.250000  searchobserver.py:83
[01:32:13] INFO     Iteration:     697, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     698, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     699, Coverage: 0.250000  searchobserver.py:83
[01:32:14] INFO     Iteration:     700, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     701, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     702, Coverage: 0.250000  searchobserver.py:83
[01:32:15] INFO     Iteration:     703, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     704, Coverage: 0.250000  searchobserver.py:83
[01:32:16] INFO     Iteration:     705, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     706, Coverage: 0.250000  searchobserver.py:83
[01:32:17] INFO     Iteration:     707, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     708, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     709, Coverage: 0.250000  searchobserver.py:83
[01:32:18] INFO     Iteration:     710, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     711, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     712, Coverage: 0.250000  searchobserver.py:83
[01:32:19] INFO     Iteration:     713, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     714, Coverage: 0.250000  searchobserver.py:83
[01:32:20] INFO     Iteration:     715, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     716, Coverage: 0.250000  searchobserver.py:83
[01:32:21] INFO     Iteration:     717, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     718, Coverage: 0.250000  searchobserver.py:83
[01:32:22] INFO     Iteration:     719, Coverage: 0.250000  searchobserver.py:83
           INFO     Iteration:     720, Coverage: 0.250000  searchobserver.py:83
           INFO     Stopping condition reached                  generator.py:531
           INFO     Used search time: 300/300                   generator.py:533
           INFO     Stop generating test cases                  generator.py:534
           INFO     Start generating assertions                 generator.py:664
           INFO     Setup mutation generator                    generator.py:637
           INFO     Import module deprecation                   generator.py:640
           INFO     Build AST for deprecation                   generator.py:643
           INFO     Mutate module deprecation                   generator.py:648
           INFO     Stop Pynguin Test Generation…               generator.py:119
╭───────────────────── Traceback (most recent call last) ──────────────────────╮
│ /opt/conda/bin/pynguin:8 in <module>                                         │
│                                                                              │
│   5 from pynguin.cli import main                                             │
│   6 if __name__ == '__main__':                                               │
│   7 │   sys.argv[0] = re.sub(r'(-script\.pyw|\.exe)?$', '', sys.argv[0])     │
│ ❱ 8 │   sys.exit(main())                                                     │
│   9                                                                          │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/cli.py:193 in main           │
│                                                                              │
│   190 │   set_configuration(parsed.config)                                   │
│   191 │   if console is not None:                                            │
│   192 │   │   with console.status("Running Pynguin..."):                     │
│ ❱ 193 │   │   │   return run_pynguin().value                                 │
│   194 │   else:                                                              │
│   195 │   │   return run_pynguin().value                                     │
│   196                                                                        │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/generator.py:117 in          │
│ run_pynguin                                                                  │
│                                                                              │
│   114 │   """                                                                │
│   115 │   try:                                                               │
│   116 │   │   _LOGGER.info("Start Pynguin Test Generation…")                 │
│ ❱ 117 │   │   return _run()                                                  │
│   118 │   finally:                                                           │
│   119 │   │   _LOGGER.info("Stop Pynguin Test Generation…")                  │
│   120                                                                        │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/generator.py:542 in _run     │
│                                                                              │
│   539 │                                                                      │
│   540 │   _track_search_metrics(algorithm, generation_result, coverage_metri │
│   541 │   _remove_statements_after_exceptions(generation_result)             │
│ ❱ 542 │   _generate_assertions(executor, generation_result)                  │
│   543 │   tracked_metrics = _track_final_metrics(                            │
│   544 │   │   algorithm, executor, generation_result, constant_provider      │
│   545 │   )                                                                  │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/generator.py:667 in          │
│ _generate_assertions                                                         │
│                                                                              │
│   664 │   │   _LOGGER.info("Start generating assertions")                    │
│   665 │   │   generator: cv.ChromosomeVisitor                                │
│   666 │   │   if ass_gen == config.AssertionGenerator.MUTATION_ANALYSIS:     │
│ ❱ 667 │   │   │   generator = _setup_mutation_analysis_assertion_generator(e │
│   668 │   │   else:                                                          │
│   669 │   │   │   generator = ag.AssertionGenerator(executor)                │
│   670 │   │   generation_result.accept(generator)                            │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/generator.py:657 in          │
│ _setup_mutation_analysis_assertion_generator                                 │
│                                                                              │
│   654 │   │   executor, mutation_controller                                  │
│   655 │   )                                                                  │
│   656 │                                                                      │
│ ❱ 657 │   _LOGGER.info("Generated %d mutants", mutation_controller.mutant_co │
│   658 │   return assertion_generator                                         │
│   659                                                                        │
│   660                                                                        │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ controller.py:92 in mutant_count                                             │
│                                                                              │
│   89 │   │   Returns:                                                        │
│   90 │   │   │   The number of mutants that can be created.                  │
│   91 │   │   """                                                             │
│ ❱ 92 │   │   return sum(                                                     │
│   93 │   │   │   1 for _ in self._mutant_generator.mutate(self._module_ast,  │
│   94 │   │   )                                                               │
│   95                                                                         │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ controller.py:92 in <genexpr>                                                │
│                                                                              │
│   89 │   │   Returns:                                                        │
│   90 │   │   │   The number of mutants that can be created.                  │
│   91 │   │   """                                                             │
│ ❱ 92 │   │   return sum(                                                     │
│   93 │   │   │   1 for _ in self._mutant_generator.mutate(self._module_ast,  │
│   94 │   │   )                                                               │
│   95                                                                         │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ mutators.py:69 in mutate                                                     │
│                                                                              │
│    66 │   │   module: types.ModuleType,                                      │
│    67 │   ) -> Generator[tuple[list[Mutation], ast.AST], None, None]:        │
│    68 │   │   for op in self.operators:                                      │
│ ❱  69 │   │   │   for mutation, mutant in op.mutate(target_ast, module):     │
│    70 │   │   │   │   yield [mutation], mutant                               │
│    71                                                                        │
│    72                                                                        │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:157 in mutate                                              │
│                                                                              │
│   154 │   │   """                                                            │
│   155 │   │   operator = cls(module, only_mutation)                          │
│   156 │   │                                                                  │
│ ❱ 157 │   │   for (                                                          │
│   158 │   │   │   current_node,                                              │
│   159 │   │   │   replacement_node,                                          │
│   160 │   │   │   mutated_node,                                              │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:220 in visit                                               │
│                                                                              │
│   217 │   │   │   │                                                          │
│   218 │   │   │   │   yield node, mutated_node, mutated_node, visitor.__name │
│   219 │   │                                                                  │
│ ❱ 220 │   │   yield from self._generic_visit(node)                           │
│   221 │                                                                      │
│   222 │   def _generic_visit(                                                │
│   223 │   │   self, node: ast.AST                                            │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:234 in _generic_visit                                      │
│                                                                              │
│   231 │   │   │   else:                                                      │
│   232 │   │   │   │   generator = ()                                         │
│   233 │   │   │                                                              │
│ ❱ 234 │   │   │   for current_node, replacement_node, visitor_name in genera │
│   235 │   │   │   │   yield current_node, replacement_node, node, visitor_na │
│   236 │                                                                      │
│   237 │   def _generic_visit_list(                                           │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:242 in _generic_visit_list                                 │
│                                                                              │
│   239 │   ) -> Generator[tuple[ast.AST, ast.AST, str], None, None]:          │
│   240 │   │   for position, value in enumerate(old_value.copy()):            │
│   241 │   │   │   if isinstance(value, ast.AST):                             │
│ ❱ 242 │   │   │   │   for (                                                  │
│   243 │   │   │   │   │   current_node,                                      │
│   244 │   │   │   │   │   replacement_node,                                  │
│   245 │   │   │   │   │   mutated_node,                                      │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:220 in visit                                               │
│                                                                              │
│   217 │   │   │   │                                                          │
│   218 │   │   │   │   yield node, mutated_node, mutated_node, visitor.__name │
│   219 │   │                                                                  │
│ ❱ 220 │   │   yield from self._generic_visit(node)                           │
│   221 │                                                                      │
│   222 │   def _generic_visit(                                                │
│   223 │   │   self, node: ast.AST                                            │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:234 in _generic_visit                                      │
│                                                                              │
│   231 │   │   │   else:                                                      │
│   232 │   │   │   │   generator = ()                                         │
│   233 │   │   │                                                              │
│ ❱ 234 │   │   │   for current_node, replacement_node, visitor_name in genera │
│   235 │   │   │   │   yield current_node, replacement_node, node, visitor_na │
│   236 │                                                                      │
│   237 │   def _generic_visit_list(                                           │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:242 in _generic_visit_list                                 │
│                                                                              │
│   239 │   ) -> Generator[tuple[ast.AST, ast.AST, str], None, None]:          │
│   240 │   │   for position, value in enumerate(old_value.copy()):            │
│   241 │   │   │   if isinstance(value, ast.AST):                             │
│ ❱ 242 │   │   │   │   for (                                                  │
│   243 │   │   │   │   │   current_node,                                      │
│   244 │   │   │   │   │   replacement_node,                                  │
│   245 │   │   │   │   │   mutated_node,                                      │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:220 in visit                                               │
│                                                                              │
│   217 │   │   │   │                                                          │
│   218 │   │   │   │   yield node, mutated_node, mutated_node, visitor.__name │
│   219 │   │                                                                  │
│ ❱ 220 │   │   yield from self._generic_visit(node)                           │
│   221 │                                                                      │
│   222 │   def _generic_visit(                                                │
│   223 │   │   self, node: ast.AST                                            │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:234 in _generic_visit                                      │
│                                                                              │
│   231 │   │   │   else:                                                      │
│   232 │   │   │   │   generator = ()                                         │
│   233 │   │   │                                                              │
│ ❱ 234 │   │   │   for current_node, replacement_node, visitor_name in genera │
│   235 │   │   │   │   yield current_node, replacement_node, node, visitor_na │
│   236 │                                                                      │
│   237 │   def _generic_visit_list(                                           │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:242 in _generic_visit_list                                 │
│                                                                              │
│   239 │   ) -> Generator[tuple[ast.AST, ast.AST, str], None, None]:          │
│   240 │   │   for position, value in enumerate(old_value.copy()):            │
│   241 │   │   │   if isinstance(value, ast.AST):                             │
│ ❱ 242 │   │   │   │   for (                                                  │
│   243 │   │   │   │   │   current_node,                                      │
│   244 │   │   │   │   │   replacement_node,                                  │
│   245 │   │   │   │   │   mutated_node,                                      │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:220 in visit                                               │
│                                                                              │
│   217 │   │   │   │                                                          │
│   218 │   │   │   │   yield node, mutated_node, mutated_node, visitor.__name │
│   219 │   │                                                                  │
│ ❱ 220 │   │   yield from self._generic_visit(node)                           │
│   221 │                                                                      │
│   222 │   def _generic_visit(                                                │
│   223 │   │   self, node: ast.AST                                            │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:234 in _generic_visit                                      │
│                                                                              │
│   231 │   │   │   else:                                                      │
│   232 │   │   │   │   generator = ()                                         │
│   233 │   │   │                                                              │
│ ❱ 234 │   │   │   for current_node, replacement_node, visitor_name in genera │
│   235 │   │   │   │   yield current_node, replacement_node, node, visitor_na │
│   236 │                                                                      │
│   237 │   def _generic_visit_list(                                           │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:242 in _generic_visit_list                                 │
│                                                                              │
│   239 │   ) -> Generator[tuple[ast.AST, ast.AST, str], None, None]:          │
│   240 │   │   for position, value in enumerate(old_value.copy()):            │
│   241 │   │   │   if isinstance(value, ast.AST):                             │
│ ❱ 242 │   │   │   │   for (                                                  │
│   243 │   │   │   │   │   current_node,                                      │
│   244 │   │   │   │   │   replacement_node,                                  │
│   245 │   │   │   │   │   mutated_node,                                      │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:220 in visit                                               │
│                                                                              │
│   217 │   │   │   │                                                          │
│   218 │   │   │   │   yield node, mutated_node, mutated_node, visitor.__name │
│   219 │   │                                                                  │
│ ❱ 220 │   │   yield from self._generic_visit(node)                           │
│   221 │                                                                      │
│   222 │   def _generic_visit(                                                │
│   223 │   │   self, node: ast.AST                                            │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:234 in _generic_visit                                      │
│                                                                              │
│   231 │   │   │   else:                                                      │
│   232 │   │   │   │   generator = ()                                         │
│   233 │   │   │                                                              │
│ ❱ 234 │   │   │   for current_node, replacement_node, visitor_name in genera │
│   235 │   │   │   │   yield current_node, replacement_node, node, visitor_na │
│   236 │                                                                      │
│   237 │   def _generic_visit_list(                                           │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:242 in _generic_visit_list                                 │
│                                                                              │
│   239 │   ) -> Generator[tuple[ast.AST, ast.AST, str], None, None]:          │
│   240 │   │   for position, value in enumerate(old_value.copy()):            │
│   241 │   │   │   if isinstance(value, ast.AST):                             │
│ ❱ 242 │   │   │   │   for (                                                  │
│   243 │   │   │   │   │   current_node,                                      │
│   244 │   │   │   │   │   replacement_node,                                  │
│   245 │   │   │   │   │   mutated_node,                                      │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:220 in visit                                               │
│                                                                              │
│   217 │   │   │   │                                                          │
│   218 │   │   │   │   yield node, mutated_node, mutated_node, visitor.__name │
│   219 │   │                                                                  │
│ ❱ 220 │   │   yield from self._generic_visit(node)                           │
│   221 │                                                                      │
│   222 │   def _generic_visit(                                                │
│   223 │   │   self, node: ast.AST                                            │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:234 in _generic_visit                                      │
│                                                                              │
│   231 │   │   │   else:                                                      │
│   232 │   │   │   │   generator = ()                                         │
│   233 │   │   │                                                              │
│ ❱ 234 │   │   │   for current_node, replacement_node, visitor_name in genera │
│   235 │   │   │   │   yield current_node, replacement_node, node, visitor_na │
│   236 │                                                                      │
│   237 │   def _generic_visit_list(                                           │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:242 in _generic_visit_list                                 │
│                                                                              │
│   239 │   ) -> Generator[tuple[ast.AST, ast.AST, str], None, None]:          │
│   240 │   │   for position, value in enumerate(old_value.copy()):            │
│   241 │   │   │   if isinstance(value, ast.AST):                             │
│ ❱ 242 │   │   │   │   for (                                                  │
│   243 │   │   │   │   │   current_node,                                      │
│   244 │   │   │   │   │   replacement_node,                                  │
│   245 │   │   │   │   │   mutated_node,                                      │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/base.py:214 in visit                                               │
│                                                                              │
│   211 │   │   │   │   │   self.only_mutation.node == node                    │
│   212 │   │   │   │   │   and self.only_mutation.visitor_name == visitor.__n │
│   213 │   │   │   │   )                                                      │
│ ❱ 214 │   │   │   ) and (mutated_node := visitor(node)) is not None:         │
│   215 │   │   │   │   fix_node_internals(node, mutated_node)                 │
│   216 │   │   │   │   ast.fix_missing_locations(mutated_node)                │
│   217                                                                        │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/inheritance.py:268 in mutate_FunctionDef                           │
│                                                                              │
│   265 │   │   Returns:                                                       │
│   266 │   │   │   The mutated node, or None if the node should not be mutate │
│   267 │   │   """                                                            │
│ ❱ 268 │   │   overridden = self.is_overridden(node, node.name)               │
│   269 │   │                                                                  │
│   270 │   │   if overridden is None or not overridden:                       │
│   271 │   │   │   return None                                                │
│                                                                              │
│ /opt/conda/lib/python3.10/site-packages/pynguin/assertion/mutation_analysis/ │
│ operators/inheritance.py:64 in is_overridden                                 │
│                                                                              │
│    61 │   │                                                                  │
│    62 │   │   while parent is not None:                                      │
│    63 │   │   │   if not isinstance(parent, ast.Module):                     │
│ ❱  64 │   │   │   │   parent_names.append(parent.name)  # type: ignore[attr- │
│    65 │   │   │   if not isinstance(parent, ast.ClassDef) and not isinstance │
│    66 │   │   │   │   parent, ast.Module                                     │
│    67 │   │   │   ):                                                         │
╰──────────────────────────────────────────────────────────────────────────────╯
AttributeError: 'If' object has no attribute 'name'
