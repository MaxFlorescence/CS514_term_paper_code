# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import ls_lah as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    set_0 = set()
    module_0.get_new_command(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    float_0 = -2906.97622
    module_0.get_new_command(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.match(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_1.object()
    module_0.get_new_command(object_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"K\xdfM+\xda\xc0,S\\\xe9\xa4"
    module_0.get_new_command(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"`+G\x7f\xd6(\n\xefc\x9c\xf5u\xf0\x11)\xe6\xf2"
    module_0.get_new_command(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"\x96\x08\x88\xb0]\x92\r\x88T\xcc!\xd5\x94\r\xe4\xad\x15\xeb\xe0\x90"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    module_0.match(set_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    module_0.match(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    tuple_0 = ()
    module_0.match(tuple_0, tuple_0)


def test_case_9():
    pass
