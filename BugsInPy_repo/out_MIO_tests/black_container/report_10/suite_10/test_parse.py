# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import parse as module_0


def test_case_0():
    bool_0 = True
    parser_0 = module_0.Parser(bool_0, bool_0)
    assert parser_0.convert is True


def test_case_1():
    bool_0 = False
    parser_0 = module_0.Parser(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    parser_0 = module_0.Parser(bool_0, bool_0)
    parser_0.setup()


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    parser_0 = module_0.Parser(bool_0)
    parser_0.setup(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    parser_0 = module_0.Parser(bool_0)
    parser_0.addtoken(bool_0, bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    parser_0 = module_0.Parser(none_type_0)
    parser_0.classify(none_type_0, none_type_0, none_type_0)


def test_case_6():
    pass


def test_case_7():
    bool_0 = True
    parse_error_0 = module_0.ParseError(bool_0, bool_0, bool_0, bool_0)
    assert (
        f"{type(parse_error_0).__module__}.{type(parse_error_0).__qualname__}"
        == "parse.ParseError"
    )
    assert parse_error_0.msg is True
    assert parse_error_0.type is True
    assert parse_error_0.value is True
    assert parse_error_0.context is True


@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = True
    parser_0 = module_0.Parser(bool_0)
    parser_0.push(parser_0, bool_0, parser_0, parser_0)
