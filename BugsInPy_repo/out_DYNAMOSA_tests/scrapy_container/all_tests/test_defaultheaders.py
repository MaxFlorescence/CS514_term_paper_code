# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import defaultheaders as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -1648
    set_0 = {int_0}
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(set_0)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )
    default_headers_middleware_0.process_request(int_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "&kNh rPfD"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = True
    str_1 = "ij~)GlhN%V~vZ3gWjL"
    dict_1 = {bool_0: str_1}
    list_0 = [bool_0, str_1, dict_1]
    list_1 = []
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(list_1)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )
    var_0 = default_headers_middleware_0.process_request(list_0, bool_0)
    var_0.process_request(dict_0, str_0)


def test_case_2():
    complex_0 = 2254.83105 + 1020.6j
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(complex_0)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )
