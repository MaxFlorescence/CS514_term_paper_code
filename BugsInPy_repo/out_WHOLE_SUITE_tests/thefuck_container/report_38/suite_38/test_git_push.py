# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import git_push as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "\x0b\x0b1<wtLN?.!AX&~F.j"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_1.match(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_1.match(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_1.get_new_command(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "0p5hNepO5"
    module_1.match(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    object_0 = module_0.object()
    float_0 = -450.2962
    module_1.match(float_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    set_0 = {bool_0}
    module_1.get_new_command(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    module_1.match(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    none_type_0 = None
    module_1.get_new_command(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "GVk_[z"
    module_1.match(str_0, str_0)
