# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import utils as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    list_0 = []
    module_0.make_sure_path_exists(list_0)


def test_case_1():
    var_0 = module_0.work_in()
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "contextlib._GeneratorContextManager"
    )
    assert (
        f"{type(var_0.gen).__module__}.{type(var_0.gen).__qualname__}"
        == "builtins.generator"
    )
    assert var_0.args == ()
    assert var_0.kwds == {}


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.rmtree(none_type_0)


def test_case_3():
    bool_0 = True
    var_0 = module_0.make_executable(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "SOJXYq1"
    var_0 = module_0.make_sure_path_exists(str_0)
    assert var_0 is True
    var_1 = module_0.make_sure_path_exists(str_0)
    assert var_1 is True
    none_type_0 = None
    module_0.make_executable(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b""
    var_0 = module_0.make_sure_path_exists(bytes_0)
    assert var_0 is False
    module_0.make_executable(bytes_0)
