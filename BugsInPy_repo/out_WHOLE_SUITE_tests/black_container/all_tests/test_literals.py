# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import literals as module_0
import re as module_1
import enum as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '"\\4""'
    var_0 = module_0.evalString(str_0)
    assert var_0 == '\x04"'
    assert module_0.simple_escapes == {
        "a": "\x07",
        "b": "\x08",
        "f": "\x0c",
        "n": "\n",
        "r": "\r",
        "t": "\t",
        "v": "\x0b",
        "'": "'",
        '"': '"',
        "\\": "\\",
    }
    var_1 = module_0.evalString(str_0)
    assert var_1 == '\x04"'
    module_0.escape(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.evalString(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    regex_flag_0 = module_1.RegexFlag.DOTALL
    var_0 = regex_flag_0.__bool__()
    module_0.escape(regex_flag_0)


def test_case_3():
    str_0 = '"\n"'
    var_0 = module_0.evalString(str_0)
    assert var_0 == "\n"
    assert module_0.simple_escapes == {
        "a": "\x07",
        "b": "\x08",
        "f": "\x0c",
        "n": "\n",
        "r": "\r",
        "t": "\t",
        "v": "\x0b",
        "'": "'",
        '"': '"',
        "\\": "\\",
    }


@pytest.mark.xfail(strict=True)
def test_case_4():
    enum_dict_0 = module_2._EnumDict()
    module_0.evalString(enum_dict_0)


def test_case_5():
    str_0 = "#6aTErv(8a\n3 "
    with pytest.raises(AssertionError):
        module_0.evalString(str_0)


def test_case_6():
    str_0 = "'A|U,7c)_EUamBbDy$"
    with pytest.raises(AssertionError):
        module_0.evalString(str_0)


def test_case_7():
    str_0 = '%ZA)fSVr$z.tu>M3M"92'
    with pytest.raises(AssertionError):
        module_0.evalString(str_0)


def test_case_8():
    str_0 = "'"
    with pytest.raises(AssertionError):
        module_0.evalString(str_0)
