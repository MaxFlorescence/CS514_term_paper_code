# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import _pylab_helpers as module_0


def test_case_0():
    gcf_0 = module_0.Gcf()
    assert (
        f"{type(module_0.Gcf.get_fig_manager).__module__}.{type(module_0.Gcf.get_fig_manager).__qualname__}"
        == "builtins.method"
    )
    assert (
        f"{type(module_0.Gcf.destroy).__module__}.{type(module_0.Gcf.destroy).__qualname__}"
        == "builtins.method"
    )
    assert (
        f"{type(module_0.Gcf.destroy_fig).__module__}.{type(module_0.Gcf.destroy_fig).__qualname__}"
        == "builtins.method"
    )
    assert (
        f"{type(module_0.Gcf.destroy_all).__module__}.{type(module_0.Gcf.destroy_all).__qualname__}"
        == "builtins.method"
    )
    assert (
        f"{type(module_0.Gcf.has_fignum).__module__}.{type(module_0.Gcf.has_fignum).__qualname__}"
        == "builtins.method"
    )
    assert (
        f"{type(module_0.Gcf.get_all_fig_managers).__module__}.{type(module_0.Gcf.get_all_fig_managers).__qualname__}"
        == "builtins.method"
    )
    assert (
        f"{type(module_0.Gcf.get_num_fig_managers).__module__}.{type(module_0.Gcf.get_num_fig_managers).__qualname__}"
        == "builtins.method"
    )
    assert (
        f"{type(module_0.Gcf.get_active).__module__}.{type(module_0.Gcf.get_active).__qualname__}"
        == "builtins.method"
    )
    assert (
        f"{type(module_0.Gcf.set_active).__module__}.{type(module_0.Gcf.set_active).__qualname__}"
        == "builtins.method"
    )
    assert (
        f"{type(module_0.Gcf.draw_all).__module__}.{type(module_0.Gcf.draw_all).__qualname__}"
        == "builtins.method"
    )
