# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import literals as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    module_0.evalString(none_type_0)


def test_case_1():
    str_0 = "EB H,*G95gQemYQHDz"
    with pytest.raises(AssertionError):
        module_0.evalString(str_0)


def test_case_2():
    str_0 = '"W"'
    var_0 = module_0.evalString(str_0)
    assert var_0 == "W"
    assert module_0.simple_escapes == {
        "a": "\x07",
        "b": "\x08",
        "f": "\x0c",
        "n": "\n",
        "r": "\r",
        "t": "\t",
        "v": "\x0b",
        "'": "'",
        '"': '"',
        "\\": "\\",
    }


def test_case_3():
    str_0 = '"\r'
    with pytest.raises(AssertionError):
        module_0.evalString(str_0)


def test_case_4():
    str_0 = '"'
    with pytest.raises(AssertionError):
        module_0.evalString(str_0)


def test_case_5():
    str_0 = "'''"
    with pytest.raises(AssertionError):
        module_0.evalString(str_0)


def test_case_6():
    str_0 = "'b&"
    with pytest.raises(AssertionError):
        module_0.evalString(str_0)


def test_case_7():
    str_0 = '"\\t"'
    var_0 = module_0.evalString(str_0)
    assert var_0 == "\t"
    assert module_0.simple_escapes == {
        "a": "\x07",
        "b": "\x08",
        "f": "\x0c",
        "n": "\n",
        "r": "\r",
        "t": "\t",
        "v": "\x0b",
        "'": "'",
        '"': '"',
        "\\": "\\",
    }


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = '"\\x"'
    module_0.evalString(str_0)


def test_case_9():
    str_0 = '"\\2<"'
    var_0 = module_0.evalString(str_0)
    assert var_0 == "\x02<"
    assert module_0.simple_escapes == {
        "a": "\x07",
        "b": "\x08",
        "f": "\x0c",
        "n": "\n",
        "r": "\r",
        "t": "\t",
        "v": "\x0b",
        "'": "'",
        '"': '"',
        "\\": "\\",
    }


@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = '"\\x3@2{"'
    module_0.evalString(str_0)
