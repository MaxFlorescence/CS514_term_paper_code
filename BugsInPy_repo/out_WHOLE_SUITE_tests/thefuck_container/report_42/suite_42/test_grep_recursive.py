# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import grep_recursive as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.get_new_command(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xa3\x9d\xe1\xd9\xee\x0e\xcc\xf0K"
    none_type_0 = None
    module_0.match(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.match(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    module_0.get_new_command(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = -1948.07646
    none_type_0 = None
    module_0.match(float_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "wbKA&\rfheCgv}^Sba:"
    none_type_0 = None
    module_0.get_new_command(str_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"\t\xef\xc6\xefe\xb7)"
    module_0.match(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    none_type_0 = None
    module_0.get_new_command(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "3 Cqod`H3L\x0bm6Z\tPyvXo"
    bool_0 = False
    module_0.get_new_command(bool_0, str_0)
