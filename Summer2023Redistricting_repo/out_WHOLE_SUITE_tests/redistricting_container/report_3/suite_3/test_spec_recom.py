# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import difflib as module_0
import spec_recom as module_1
import networkx.generators.sudoku as module_2
import scipy.sparse.linalg._isolve.iterative as module_3
import networkx.algorithms.shortest_paths.weighted as module_4
import networkx.algorithms.richclub as module_5
import networkx.generators.small as module_6


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    var_0 = module_0.unified_diff(none_type_0, none_type_0, tofiledate=none_type_0)
    module_1.fiedler(var_0, normalize_laplacian=var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_1.repartition(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_1.fiedler_cut(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    var_0 = module_2.sudoku_graph()
    tuple_0 = module_1.fiedler(var_0, var_0)
    var_1 = var_0.__str__()
    module_3.bicg(var_0, var_0, var_0, maxiter=var_0, M=var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    module_4.johnson(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    module_5.rich_club_coefficient(none_type_0, Q=none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    var_0 = module_6.icosahedral_graph(backend=none_type_0)
    dict_0 = module_1.fiedler_cut(var_0)
    var_0.__next__()
