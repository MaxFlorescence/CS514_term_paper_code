# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import link as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"


def test_case_1():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"


def test_case_2():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_1.__hash__()
    assert var_5 == -8716866087637373422


def test_case_3():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073


def test_case_4():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_2.__hash__()
    assert var_5 == -552935834187556073
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_2 = module_0.Link(tuple_2, fragment=bool_4)
    var_6 = link_2.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_8.__hash__()
    assert var_9 == -8716866087637373422


def test_case_5():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788


def test_case_6():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_7 = link_3.__hash__()
    assert var_7 == -4606328870177462788
    var_8 = link_0.__hash__()
    assert var_8 == -5164621852614943975


def test_case_7():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_2 = module_0.Link(tuple_2, fragment=bool_4)
    var_7 = link_2.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_9 = link_4.__hash__()
    assert var_9 == -4606328870177462788
    var_10 = var_8.__hash__()
    assert var_10 == -8716866087637373422
    var_11 = var_10.__repr__()
    assert var_11 == "-8716866087637373422"


def test_case_8():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_4 = module_0.Link(tuple_2, fragment=bool_4)
    var_6 = link_4.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_6.__hash__()
    assert var_9 == -552935834187556073
    var_10 = var_9.__repr__()
    assert var_10 == "-552935834187556073"


def test_case_9():
    list_0 = []
    none_type_0 = None
    link_0 = module_0.Link(list_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    object_0 = module_1.object()
    none_type_1 = None
    bool_0 = True
    none_type_2 = None
    link_1 = module_0.Link(bool_0, fragment=none_type_2)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment=None, nofollow=False)"
    var_1 = var_0.__eq__(none_type_1)
    var_2 = var_1.__hash__()
    var_3 = var_2.__hash__()
    var_4 = var_3.__repr__()
    var_5 = var_4.__eq__(object_0)
    var_6 = var_5.__eq__(link_0)
    var_7 = var_6.__repr__()


def test_case_10():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_2 = module_0.Link(tuple_2, fragment=bool_4)
    var_6 = link_2.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_9 = link_4.__hash__()
    assert var_9 == -4606328870177462788
    int_0 = 2761
    link_5 = module_0.Link(link_3, int_0, var_7, bool_4)


def test_case_11():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_5 = link_3.__hash__()
    assert var_5 == -4606328870177462788
    var_6 = var_1.__eq__(var_3)


def test_case_12():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_4.__hash__()
    assert var_7 == -552935834187556073
    bytes_1 = b"aLKz\x93\x1ae;"
    link_4 = module_0.Link(bytes_1, var_6, nofollow=var_7)


def test_case_13():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_7 = link_3.__hash__()
    assert var_7 == -4606328870177462788
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_4 = module_0.Link(tuple_2, fragment=bool_4)
    var_8 = link_4.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_4.__eq__(var_8)


def test_case_14():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_2.__hash__()
    assert var_5 == -552935834187556073
    var_6 = var_2.__hash__()
    assert var_6 == -552935834187556073


def test_case_15():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_1.__hash__()
    assert var_4 == -552935834187556073
    var_5 = var_3.__eq__(var_2)


def test_case_16():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    var_4 = link_0.__repr__()
    assert var_4 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"


def test_case_17():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_2.__hash__()
    assert var_5 == -552935834187556073
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_2 = module_0.Link(tuple_2, fragment=bool_4)
    var_6 = link_2.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    link_3 = module_0.Link(var_3, fragment=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"


def test_case_18():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_4 = module_0.Link(tuple_2, fragment=bool_4)
    var_6 = link_4.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_6.__hash__()
    assert var_9 == -552935834187556073
    var_10 = var_8.__eq__(var_7)


def test_case_19():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_1.__hash__()
    assert var_4 == -552935834187556073
    var_5 = var_1.__hash__()
    assert var_5 == -552935834187556073


def test_case_20():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"


def test_case_21():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    link_1 = module_0.Link(bool_2)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_2 = module_0.Link(tuple_1, fragment=bool_3)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_1.__eq__(bool_2)


def test_case_22():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_2 = link_2.__hash__()
    assert var_2 == -4606328870177462788
    var_3 = link_1.__hash__()
    assert var_3 == -4606328870177462788


def test_case_23():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_4.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    float_0 = 1737.19
    link_5 = module_0.Link(float_0)


def test_case_24():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_1.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_2 = module_0.Link(tuple_1, fragment=bool_3)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_3 = module_0.Link(tuple_2, fragment=bool_5)
    var_7 = link_3.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_10 = link_5.__hash__()
    assert var_10 == -4606328870177462788
    link_6 = module_0.Link(var_1, var_3, link_1)


def test_case_25():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = True
    link_1 = module_0.Link(bool_2)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_2 = module_0.Link(tuple_1, fragment=bool_3)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_6 = link_4.__hash__()
    assert var_6 == -4606328870177462788
    var_7 = var_3.__repr__()
    assert var_7 == "-5164621852614943975"


def test_case_26():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    link_1 = module_0.Link(bool_2)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_2 = module_0.Link(tuple_1, fragment=bool_3)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_4.__hash__()
    assert var_7 == -552935834187556073
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_8 = link_4.__hash__()
    assert var_8 == -4606328870177462788
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_5 = module_0.Link(tuple_2, fragment=bool_5)
    var_9 = link_5.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    link_6 = module_0.Link(link_4, nofollow=bool_2)


def test_case_27():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    var_7 = var_3.__repr__()
    assert var_7 == "-5164621852614943975"


def test_case_28():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    var_4 = var_1.__eq__(var_2)


def test_case_29():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_2 = module_0.Link(tuple_2, fragment=bool_4)
    var_6 = link_2.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = link_1.__hash__()
    assert var_9 == -5164621852614943975


def test_case_30():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    var_7 = var_5.__repr__()
    assert var_7 == "'-5164621852614943975'"


def test_case_31():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    var_7 = var_1.__eq__(var_5)


def test_case_32():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_1.__hash__()
    assert var_4 == -552935834187556073
    var_5 = var_1.__eq__(bool_1)
    assert var_5 is False


def test_case_33():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_34():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    link_2 = module_0.Link(link_0, nofollow=var_4)


def test_case_35():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_1.__hash__()
    assert var_4 == -552935834187556073
    bool_2 = False
    link_3 = module_0.Link(bool_2)
    var_5 = var_3.__eq__(tuple_0)


def test_case_36():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)


def test_case_37():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = False
    link_1 = module_0.Link(bool_2)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_2 = module_0.Link(tuple_1, fragment=bool_3)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_6 = link_4.__hash__()
    assert var_6 == -4606328870177462788
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_5 = module_0.Link(tuple_2, fragment=bool_5)
    var_7 = link_5.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_4.__eq__(var_6)
    assert var_10 is False


def test_case_38():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_39():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    var_3 = var_0.__hash__()
    assert var_3 == -2300485860963768837


def test_case_40():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_1 = False
    link_1 = module_0.Link(bool_1)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_0, fragment=bool_2)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    link_3 = module_0.Link(bool_1, fragment=var_2)


def test_case_41():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837


def test_case_42():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)


def test_case_43():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    bool_3 = False
    link_4 = module_0.Link(bool_3)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_1, fragment=bool_4)
    var_7 = link_5.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_1)
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, nofollow=none_type_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_10 = link_8.__hash__()
    assert var_10 == -4606328870177462788
    var_11 = var_10.__hash__()
    assert var_11 == -2300485860963768837
    var_12 = var_8.__eq__(link_2)


def test_case_44():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_1.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_1.__hash__()
    assert var_4 == -552935834187556073
    var_5 = link_0.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"


def test_case_45():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)


def test_case_46():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_4.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    none_type_0 = None
    link_5 = module_0.Link(link_4, fragment=none_type_0)
    bool_5 = False
    link_6 = module_0.Link(bool_5)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_7 = module_0.Link(tuple_2, fragment=bool_6)
    var_9 = link_7.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_8 = module_0.Link(tuple_3, fragment=bool_8)
    var_11 = link_8.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__eq__(tuple_3)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_1)
    link_10 = module_0.Link(link_9)
    var_14 = link_10.__hash__()
    assert var_14 == -4606328870177462788
    var_15 = var_2.__eq__(bytes_0)


def test_case_47():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_48():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()


def test_case_49():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_3 = module_0.Link(tuple_1, fragment=bool_3)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_4 = module_0.Link(tuple_2, fragment=bool_5)
    var_6 = link_4.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = link_0.__repr__()
    assert var_9 == "Link(url=False, text='', fragment='', nofollow=False)"


def test_case_50():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_1 = link_3.__hash__()
    assert var_1 == -4606328870177462788
    bool_0 = True
    link_4 = module_0.Link(bool_0)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_3 = var_1.__eq__(bytes_1)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_2)
    link_6 = module_0.Link(link_5)
    var_4 = link_6.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_7 = module_0.Link(tuple_0, fragment=bool_1)
    var_6 = link_7.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_6.__hash__()
    assert var_9 == -552935834187556073
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_8 = module_0.Link(tuple_1, fragment=bool_3)
    var_10 = link_8.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    none_type_0 = None
    link_9 = module_0.Link(link_8, fragment=none_type_0)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_10 = module_0.Link(tuple_2, fragment=bool_5)
    var_12 = link_10.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__eq__(tuple_2)
    bool_7 = False
    link_11 = module_0.Link(bool_7)
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_12 = module_0.Link(tuple_3, fragment=bool_8)
    var_15 = link_12.__hash__()
    assert var_15 == -5164621852614943975
    var_16 = var_15.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = var_14.__eq__(bytes_2)


def test_case_51():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_4.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_5 = module_0.Link(tuple_2, fragment=bool_5)
    var_10 = link_5.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_2)
    var_13 = var_12.__repr__()
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_6 = module_0.Link(tuple_3, fragment=bool_7)
    var_14 = link_6.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_14.__eq__(tuple_3)
    bool_9 = True
    bool_10 = False
    tuple_4 = (bool_9, bool_10)
    link_7 = module_0.Link(tuple_4, fragment=bool_9)
    var_17 = link_7.__hash__()
    assert var_17 == -5164621852614943975
    var_18 = var_17.__repr__()
    assert var_18 == "-5164621852614943975"
    none_type_0 = None
    link_8 = module_0.Link(link_7, fragment=none_type_0)
    bool_11 = False
    link_9 = module_0.Link(bool_11)
    var_19 = var_13.__eq__(var_5)


def test_case_52():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_2 = module_0.Link(tuple_2, fragment=bool_4)
    var_6 = link_2.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    bool_6 = True
    bool_7 = False
    tuple_3 = (bool_6, bool_7)
    link_3 = module_0.Link(tuple_3, fragment=bool_6)
    var_9 = link_3.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_9.__hash__()
    assert var_12 == -552935834187556073
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_13 = link_5.__hash__()
    assert var_13 == -4606328870177462788
    var_14 = var_13.__hash__()
    assert var_14 == -2300485860963768837
    bool_8 = True
    bool_9 = False
    tuple_4 = (bool_8, bool_9)
    link_6 = module_0.Link(tuple_4, fragment=bool_8)
    var_15 = link_6.__hash__()
    assert var_15 == -5164621852614943975
    var_16 = var_15.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = var_15.__eq__(tuple_4)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_18 = link_8.__hash__()
    assert var_18 == -4606328870177462788
    var_19 = link_3.__hash__()
    assert var_19 == -5164621852614943975


def test_case_53():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_2 = link_3.__hash__()
    assert var_2 == -4606328870177462788
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_2)
    link_5 = module_0.Link(link_4)
    var_3 = link_5.__hash__()
    assert var_3 == -4606328870177462788
    bool_0 = True
    link_6 = module_0.Link(bool_0)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_2)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_7 = module_0.Link(tuple_0, fragment=bool_1)
    var_6 = link_7.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__eq__(tuple_0)
    var_9 = var_8.__repr__()
    bool_3 = True
    link_8 = module_0.Link(bool_3)
    var_10 = link_8.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    link_9 = module_0.Link(link_5, var_10)


def test_case_54():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    bool_2 = True
    link_3 = module_0.Link(bool_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_5 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_5.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__eq__(tuple_1)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_8 = link_8.__hash__()
    assert var_8 == -4606328870177462788
    bool_5 = True
    link_9 = module_0.Link(bool_5)
    var_9 = link_9.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_10 = var_8.__eq__(bytes_1)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_10 = module_0.Link(tuple_2, fragment=bool_6)
    var_11 = link_10.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    none_type_2 = None
    link_11 = module_0.Link(link_10, fragment=none_type_2)
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_12 = module_0.Link(tuple_3, fragment=bool_8)
    var_13 = link_12.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__eq__(tuple_3)
    var_16 = var_15.__repr__()
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_13 = module_0.Link(bytes_2)
    link_14 = module_0.Link(link_13)
    var_17 = link_14.__hash__()
    assert var_17 == -4606328870177462788
    var_18 = var_17.__hash__()
    assert var_18 == -2300485860963768837
    var_19 = var_18.__eq__(var_15)


def test_case_55():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_2 = link_3.__hash__()
    assert var_2 == -4606328870177462788
    bool_2 = True
    link_4 = module_0.Link(bool_2)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_5 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_5.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_5.__hash__()
    assert var_8 == -552935834187556073
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_9 = link_7.__hash__()
    assert var_9 == -4606328870177462788
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_8 = module_0.Link(tuple_2, fragment=bool_5)
    var_10 = link_8.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_2)
    var_13 = var_7.__repr__()
    assert var_13 == "'-5164621852614943975'"


def test_case_56():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    bool_3 = True
    link_4 = module_0.Link(bool_3)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_1, fragment=bool_4)
    var_6 = link_5.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_7 = module_0.Link(tuple_2, fragment=bool_6)
    var_8 = link_7.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_2)
    var_11 = var_10.__repr__()
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_8 = module_0.Link(tuple_3, fragment=bool_8)
    var_12 = link_8.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_12.__hash__()
    assert var_15 == -552935834187556073
    var_16 = var_4.__hash__()
    assert var_16 == -8716866087637373422


def test_case_57():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_4 = link_3.__hash__()
    assert var_4 == -4606328870177462788
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_1, fragment=bool_2)
    var_5 = link_4.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__eq__(tuple_1)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_8 = link_6.__hash__()
    assert var_8 == -4606328870177462788
    bool_4 = True
    link_7 = module_0.Link(bool_4)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_10 = var_8.__eq__(bytes_1)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_5 = False
    link_9 = module_0.Link(bool_5)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_2)
    link_11 = module_0.Link(link_10)
    var_11 = link_11.__hash__()
    assert var_11 == -4606328870177462788
    var_12 = var_11.__hash__()
    assert var_12 == -2300485860963768837
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_12 = module_0.Link(tuple_2, fragment=bool_6)
    var_13 = link_12.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_8.__hash__()
    assert var_15 == -2300485860963768837


def test_case_58():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_0)
    var_5 = link_2.__hash__()
    assert var_5 == -5164621852614943975


def test_case_59():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_4.__hash__()
    assert var_7 == -552935834187556073
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_4 = module_0.Link(tuple_2, fragment=bool_4)
    var_8 = link_4.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    none_type_0 = None
    link_5 = module_0.Link(link_4, fragment=none_type_0)
    bool_6 = True
    bool_7 = False
    tuple_3 = (bool_6, bool_7)
    link_6 = module_0.Link(tuple_3, fragment=bool_6)
    var_10 = link_6.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_3)
    var_13 = var_12.__repr__()
    bool_8 = False
    link_7 = module_0.Link(bool_8)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, nofollow=none_type_2)
    var_14 = link_0.__hash__()
    assert var_14 == -4606328870177462788


def test_case_60():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_2 = True
    link_2 = module_0.Link(bool_2)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_5 = link_4.__hash__()
    assert var_5 == -4606328870177462788
    var_6 = var_5.__hash__()
    assert var_6 == -2300485860963768837
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_7 = link_6.__hash__()
    assert var_7 == -4606328870177462788
    bool_3 = True
    link_7 = module_0.Link(bool_3)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_1)
    bool_4 = False
    link_8 = module_0.Link(bool_4)
    var_10 = link_1.__repr__()
    assert var_10 == "Link(url=None, text='', fragment='', nofollow=None)"


def test_case_61():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_3 = link_4.__hash__()
    assert var_3 == -4606328870177462788
    var_4 = var_3.__hash__()
    assert var_4 == -2300485860963768837
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_5 = module_0.Link(tuple_0, fragment=bool_1)
    var_5 = link_5.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_0 = None
    link_6 = module_0.Link(link_5, fragment=none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_7.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_1)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_8 = module_0.Link(tuple_2, fragment=bool_5)
    var_10 = link_8.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_9 = module_0.Link(tuple_3, fragment=bool_7)
    var_12 = link_9.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__repr__()
    assert var_14 == "-5164621852614943975"
    bool_9 = True
    link_10 = module_0.Link(bool_9)
    var_15 = link_10.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_2)
    link_12 = module_0.Link(link_11)
    var_16 = link_12.__hash__()
    assert var_16 == -4606328870177462788
    none_type_1 = None
    link_13 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_10 = True
    bool_11 = False
    tuple_4 = (bool_10, bool_11)
    link_14 = module_0.Link(tuple_4, fragment=bool_10)
    var_17 = link_14.__hash__()
    assert var_17 == -5164621852614943975
    var_18 = var_17.__repr__()
    assert var_18 == "-5164621852614943975"
    var_19 = var_17.__repr__()
    assert var_19 == "-5164621852614943975"
    var_20 = var_17.__hash__()
    assert var_20 == -552935834187556073
    var_21 = link_1.__repr__()
    assert (
        var_21
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )


def test_case_62():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_3 = module_0.Link(tuple_2, fragment=bool_4)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_2)
    link_4 = module_0.Link(bool_3, nofollow=link_3)


def test_case_63():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_2 = module_0.Link(tuple_2, fragment=bool_4)
    var_7 = link_2.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_2)
    var_10 = var_9.__repr__()
    bool_6 = True
    bool_7 = False
    tuple_3 = (bool_6, bool_7)
    link_3 = module_0.Link(tuple_3, fragment=bool_6)
    var_11 = link_3.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__eq__(tuple_3)
    bool_8 = True
    link_4 = module_0.Link(bool_8)
    var_14 = link_4.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    var_15 = link_5.__repr__()
    assert var_15 == "Link(url=None, text='', fragment=None, nofollow=None)"


def test_case_64():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_4 = link_2.__hash__()
    assert var_4 == -4606328870177462788
    bool_2 = True
    link_3 = module_0.Link(bool_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_0)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_5 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_5.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    bool_5 = True
    link_6 = module_0.Link(bool_5)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_10 = var_8.__eq__(var_6)


def test_case_65():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_66():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(link_1, fragment=none_type_0)
    link_3 = module_0.Link(var_1, link_1)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"


def test_case_67():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_4 = link_2.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_1, fragment=bool_2)
    var_6 = link_4.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_6 = module_0.Link(tuple_2, fragment=bool_4)
    var_9 = link_6.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    link_7 = module_0.Link(var_1, var_0)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    var_11 = link_6.__eq__(link_7)
    assert var_11 is False


def test_case_68():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(link_1, fragment=none_type_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_2 = link_5.__hash__()
    assert var_2 == -4606328870177462788
    bool_3 = True
    link_6 = module_0.Link(bool_3)
    var_3 = link_6.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_8 = module_0.Link(tuple_1, fragment=bool_4)
    var_5 = link_8.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__eq__(tuple_1)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_9 = module_0.Link(tuple_2, fragment=bool_6)
    var_8 = link_9.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_8.__hash__()
    assert var_11 == -552935834187556073
    bool_8 = True
    link_10 = module_0.Link(bool_8)
    var_12 = link_10.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_9 = True
    bool_10 = False
    tuple_3 = (bool_9, bool_10)
    link_11 = module_0.Link(tuple_3, fragment=bool_9)
    var_13 = link_11.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__eq__(tuple_3)
    var_16 = var_15.__repr__()
    link_12 = module_0.Link(var_6)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"


def test_case_69():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    none_type_0 = None
    link_4 = module_0.Link(link_3, fragment=none_type_0)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_4 = False
    link_6 = module_0.Link(bool_4)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, nofollow=none_type_2)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_8 = module_0.Link(tuple_2, fragment=bool_5)
    var_6 = link_8.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__eq__(tuple_2)
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_9 = module_0.Link(tuple_3, fragment=bool_7)
    var_9 = link_9.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_11 = var_2.__hash__()
    assert var_11 == -8716866087637373422


def test_case_70():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_3 = module_0.Link(link_2, fragment=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_1)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_2, fragment=bool_4)
    var_6 = link_5.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_6.__hash__()
    assert var_9 == -552935834187556073
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, nofollow=none_type_1)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_10 = link_8.__hash__()
    assert var_10 == -4606328870177462788
    bool_6 = True
    link_9 = module_0.Link(bool_6)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_12 = var_10.__eq__(bytes_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_11 = module_0.Link(tuple_3, fragment=bool_7)
    var_13 = link_11.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__eq__(tuple_3)
    var_16 = var_15.__repr__()
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_3)
    link_13 = module_0.Link(link_12)
    var_17 = link_13.__hash__()
    assert var_17 == -4606328870177462788
    var_18 = var_17.__hash__()
    assert var_18 == -2300485860963768837
    bool_9 = False
    link_14 = module_0.Link(bool_9)
    link_15 = module_0.Link(none_type_0, none_type_0)


def test_case_71():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_1)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_4 = module_0.Link(tuple_2, fragment=bool_4)
    var_5 = link_4.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    bool_6 = True
    bool_7 = False
    tuple_3 = (bool_6, bool_7)
    link_5 = module_0.Link(tuple_3, fragment=bool_6)
    var_7 = link_5.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_3)
    var_10 = var_9.__repr__()
    bool_8 = True
    bool_9 = False
    tuple_4 = (bool_8, bool_9)
    link_6 = module_0.Link(tuple_4, fragment=bool_8)
    var_11 = link_6.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__repr__()
    assert var_13 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_0)
    link_8 = module_0.Link(link_7)
    var_14 = link_8.__hash__()
    assert var_14 == -4606328870177462788
    bool_10 = True
    link_9 = module_0.Link(bool_10)
    var_15 = link_9.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_16 = var_14.__eq__(bytes_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_1)
    link_11 = module_0.Link(link_10)
    var_17 = link_11.__hash__()
    assert var_17 == -4606328870177462788
    var_18 = var_0.__eq__(bool_9)
    assert var_18 is False


def test_case_72():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_4 = link_2.__hash__()
    assert var_4 == -4606328870177462788
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_5 = link_4.__hash__()
    assert var_5 == -4606328870177462788
    bool_2 = True
    link_5 = module_0.Link(bool_2)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_1)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_2)
    link_7 = module_0.Link(link_6)
    var_8 = link_7.__hash__()
    assert var_8 == -4606328870177462788
    var_9 = var_8.__hash__()
    assert var_9 == -2300485860963768837
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_8 = module_0.Link(tuple_1, fragment=bool_3)
    var_10 = link_8.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_1)
    none_type_0 = None
    link_9 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_10 = module_0.Link(tuple_2, fragment=bool_5)
    var_13 = link_10.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_3, bytes_3)
    bytes_4 = b"|\xdb\x97"
    link_12 = module_0.Link(var_13, fragment=bytes_4, nofollow=var_14)


def test_case_73():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__eq__(tuple_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_4 = link_4.__hash__()
    assert var_4 == -4606328870177462788
    bool_3 = True
    link_5 = module_0.Link(bool_3)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_0)
    link_6 = module_0.Link(bool_1, nofollow=none_type_0)


def test_case_74():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    bool_2 = True
    link_3 = module_0.Link(bool_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_6 = link_4.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_6.__hash__()
    assert var_9 == -552935834187556073
    var_10 = link_4.__hash__()
    assert var_10 == -5164621852614943975


def test_case_75():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_1)
    link_2 = module_0.Link(link_1)
    var_0 = link_2.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_2)
    link_4 = module_0.Link(link_3)
    var_2 = link_4.__hash__()
    assert var_2 == -4606328870177462788
    bool_0 = True
    link_5 = module_0.Link(bool_0)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_2)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_6 = module_0.Link(tuple_0, fragment=bool_1)
    var_5 = link_6.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__eq__(tuple_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_1, fragment=bool_3)
    var_8 = link_7.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_1)
    var_11 = var_10.__repr__()
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_8 = module_0.Link(tuple_2, fragment=bool_5)
    var_12 = link_8.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_9 = module_0.Link(tuple_3, fragment=bool_7)
    var_14 = link_9.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_14.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = var_14.__hash__()
    assert var_17 == -552935834187556073
    bool_9 = True
    link_10 = module_0.Link(bool_9)
    var_18 = link_10.__repr__()
    assert var_18 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_3)
    link_12 = module_0.Link(link_11)
    var_19 = link_12.__hash__()
    assert var_19 == -4606328870177462788
    var_20 = var_7.__hash__()


def test_case_76():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    none_type_1 = None
    link_3 = module_0.Link(link_2, fragment=none_type_1)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_4 = module_0.Link(tuple_2, fragment=bool_4)
    var_6 = link_4.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__eq__(tuple_2)
    bool_6 = True
    link_5 = module_0.Link(bool_6)
    var_9 = link_5.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_1)
    link_9 = module_0.Link(link_8)
    var_10 = link_9.__hash__()
    assert var_10 == -4606328870177462788
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_2)
    link_11 = module_0.Link(link_10)
    var_11 = link_11.__hash__()
    assert var_11 == -4606328870177462788
    bool_7 = True
    link_12 = module_0.Link(bool_7)
    var_12 = link_12.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_13 = var_11.__eq__(bytes_2)
    bool_8 = False
    link_13 = module_0.Link(bool_8)
    var_14 = var_5.__eq__(bool_4)


def test_case_77():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_1)
    var_7 = var_6.__repr__()
    var_8 = var_2.__eq__(link_1)


def test_case_78():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_1 = link_2.__hash__()
    assert var_1 == -4606328870177462788
    var_2 = var_1.__hash__()
    assert var_2 == -2300485860963768837
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_0 = None
    link_5 = module_0.Link(link_4, fragment=none_type_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_5 = link_7.__hash__()
    assert var_5 == -4606328870177462788
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_8 = module_0.Link(tuple_1, fragment=bool_4)
    var_6 = link_8.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__eq__(tuple_1)
    var_9 = link_0.__hash__()
    assert var_9 == 1
    var_10 = var_9.__repr__()
    assert var_10 == "1"


def test_case_79():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_4.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_2, fragment=bool_4)
    var_7 = link_5.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    none_type_2 = None
    link_6 = module_0.Link(link_5, fragment=none_type_2)
    bool_6 = True
    link_7 = module_0.Link(bool_6)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_10 = link_0.__eq__(link_4)
    assert var_10 is False


def test_case_80():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_4 = link_2.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    bool_2 = True
    link_3 = module_0.Link(bool_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_4.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_7.__hash__()
    assert var_10 == -552935834187556073
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_5 = False
    link_6 = module_0.Link(bool_5)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_7 = module_0.Link(tuple_2, fragment=bool_6)
    var_11 = link_7.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_6.__eq__(link_2)


def test_case_81():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_1.__hash__()
    assert var_4 == -552935834187556073
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_5 = link_3.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_0 = None
    link_4 = module_0.Link(link_3, fragment=none_type_0)
    var_7 = var_1.__hash__()
    assert var_7 == -552935834187556073


def test_case_82():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_3 = module_0.Link(tuple_1, fragment=bool_3)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_1)
    var_5 = var_4.__repr__()
    link_4 = module_0.Link(link_2, bytes_0, nofollow=var_4)


def test_case_83():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_0)
    var_6 = var_5.__repr__()
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_5 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_5.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_1)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_7 = module_0.Link(tuple_2, fragment=bool_5)
    var_10 = link_7.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_8 = module_0.Link(tuple_3, fragment=bool_7)
    var_13 = link_8.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    none_type_2 = None
    link_9 = module_0.Link(link_8, fragment=none_type_2)
    link_10 = module_0.Link(var_6, fragment=bool_2)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"


def test_case_84():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = True
    link_1 = module_0.Link(bool_2)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_1.__hash__()
    assert var_5 == -8716866087637373422


def test_case_85():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    bytes_0 = b"\r"
    link_2 = module_0.Link(link_1, fragment=var_3, nofollow=bytes_0)


def test_case_86():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_4 = link_3.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_6 = link_5.__hash__()
    assert var_6 == -4606328870177462788
    bool_3 = True
    link_6 = module_0.Link(bool_3)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_7 = module_0.Link(tuple_1, fragment=bool_4)
    var_8 = link_7.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    none_type_0 = None
    link_8 = module_0.Link(link_7, fragment=none_type_0)
    var_10 = var_5.__eq__(var_2)


def test_case_87():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)


def test_case_88():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_0.__eq__(var_3)
    assert var_6 is False


def test_case_89():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    none_type_0 = None
    link_3 = module_0.Link(link_2, fragment=none_type_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_4 = link_6.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = link_1.__hash__()
    assert var_5 == -4606328870177462788


def test_case_90():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_1)
    var_7 = var_6.__repr__()
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_4 = module_0.Link(tuple_2, fragment=bool_4)
    var_8 = link_4.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_2)
    bool_6 = True
    bool_7 = False
    tuple_3 = (bool_6, bool_7)
    link_5 = module_0.Link(tuple_3, fragment=bool_6)
    var_11 = link_5.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_13 = link_7.__hash__()
    assert var_13 == -4606328870177462788
    bool_8 = True
    link_8 = module_0.Link(bool_8)
    var_14 = link_8.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_15 = var_13.__eq__(bytes_1)
    none_type_0 = None
    link_9 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_9 = False
    link_10 = module_0.Link(bool_9)
    none_type_1 = None
    link_11 = module_0.Link(none_type_1, nofollow=none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_2, bytes_2)
    var_16 = var_14.__eq__(bytes_2)


def test_case_91():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_0 = None
    link_4 = module_0.Link(link_3, fragment=none_type_0)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_6.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_8 = module_0.Link(tuple_2, fragment=bool_5)
    var_7 = link_8.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_1)
    link_10 = module_0.Link(link_9)
    var_10 = link_10.__hash__()
    assert var_10 == -4606328870177462788
    bool_7 = True
    link_11 = module_0.Link(bool_7)
    var_11 = link_11.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_12 = var_10.__eq__(bytes_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_2, bytes_2)
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_13 = module_0.Link(bytes_3)
    link_14 = module_0.Link(link_13)
    var_13 = link_14.__hash__()
    assert var_13 == -4606328870177462788
    var_14 = var_4.__eq__(bool_1)


def test_case_92():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_2 = module_0.Link(tuple_2, fragment=bool_4)
    var_5 = link_2.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_5.__hash__()
    assert var_8 == -552935834187556073
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_6 = True
    link_4 = module_0.Link(bool_6)
    var_9 = link_4.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_1 = None
    bool_7 = True
    link_5 = module_0.Link(bool_7, nofollow=bool_7)
    var_10 = link_5.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_1)
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_6 = module_0.Link(tuple_3, fragment=bool_8)
    var_12 = link_6.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__eq__(tuple_3)
    var_15 = var_14.__repr__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_0)
    link_8 = module_0.Link(link_7)
    var_16 = link_8.__hash__()
    assert var_16 == -4606328870177462788
    bool_10 = True
    bool_11 = False
    tuple_4 = (bool_10, bool_11)
    link_9 = module_0.Link(tuple_4, fragment=bool_10)
    var_17 = link_9.__hash__()
    assert var_17 == -5164621852614943975
    var_18 = var_17.__repr__()
    assert var_18 == "-5164621852614943975"
    none_type_2 = None
    link_10 = module_0.Link(link_9, fragment=none_type_2)
    link_11 = module_0.Link(bool_2)


def test_case_93():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_7 = link_4.__hash__()
    assert var_7 == -4606328870177462788
    var_8 = var_7.__hash__()
    assert var_8 == -2300485860963768837
    link_5 = module_0.Link(link_1, var_4)


def test_case_94():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    none_type_1 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_0 = link_2.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_1)
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_6 = link_6.__hash__()
    assert var_6 == -4606328870177462788
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_7 = module_0.Link(tuple_1, fragment=bool_4)
    var_7 = link_7.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_1)
    var_10 = var_9.__repr__()
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_9 = module_0.Link(tuple_2, fragment=bool_6)
    var_11 = link_9.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__eq__(tuple_2)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_2)
    link_11 = module_0.Link(link_10)
    var_14 = link_11.__hash__()
    assert var_14 == -4606328870177462788
    var_15 = var_14.__hash__()
    assert var_15 == -2300485860963768837
    link_12 = module_0.Link(bytes_0)


def test_case_95():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_2 = link_2.__hash__()
    assert var_2 == -4606328870177462788
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_5 = link_5.__hash__()
    assert var_5 == -4606328870177462788
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    bool_2 = False
    link_8 = module_0.Link(bool_2)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_9 = module_0.Link(tuple_0, fragment=bool_3)
    var_6 = link_9.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_2 = None
    link_10 = module_0.Link(link_9, fragment=none_type_2)
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_11 = module_0.Link(tuple_1, fragment=bool_5)
    var_8 = link_11.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = link_5.__repr__()
    assert (
        var_11
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )


def test_case_96():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_2 = link_3.__hash__()
    assert var_2 == -4606328870177462788
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_2, fragment=bool_4)
    var_5 = link_5.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_1 = None
    bool_6 = True
    link_6 = module_0.Link(bool_6, nofollow=bool_6)
    var_8 = link_6.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_1)
    bool_7 = True
    link_7 = module_0.Link(bool_7)
    var_10 = link_7.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_2)
    link_10 = module_0.Link(link_9)
    var_11 = link_10.__hash__()
    assert var_11 == -4606328870177462788
    var_12 = var_11.__hash__()
    assert var_12 == -2300485860963768837
    none_type_2 = None
    link_11 = module_0.Link(none_type_2, nofollow=none_type_2)
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_12 = module_0.Link(tuple_3, fragment=bool_8)
    var_13 = link_12.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__eq__(tuple_3)
    var_16 = link_4.__hash__()
    assert var_16 == -5164621852614943975


def test_case_97():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    bool_3 = True
    link_2 = module_0.Link(bool_3)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_3 = module_0.Link(tuple_1, fragment=bool_4)
    var_6 = link_3.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__eq__(tuple_1)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_9 = link_5.__hash__()
    assert var_9 == -4606328870177462788
    var_10 = var_9.__hash__()
    assert var_10 == -2300485860963768837
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_6 = module_0.Link(tuple_2, fragment=bool_6)
    var_11 = link_6.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, nofollow=none_type_1)
    link_8 = module_0.Link(var_4, bool_0)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"


def test_case_98():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    none_type_0 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    var_5 = link_0.__repr__()
    assert var_5 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"


def test_case_99():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_6.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__eq__(tuple_1)
    var_8 = var_7.__repr__()
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_7 = module_0.Link(tuple_2, fragment=bool_5)
    var_9 = link_7.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__eq__(tuple_2)
    none_type_1 = None
    bool_7 = True
    link_8 = module_0.Link(bool_7, nofollow=bool_7)
    var_12 = link_8.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_1)
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, nofollow=none_type_2)
    link_10 = module_0.Link(var_5, bool_3)


def test_case_100():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, nofollow=none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    bool_0 = True
    link_4 = module_0.Link(bool_0)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_5 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_5.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_2)
    link_7 = module_0.Link(link_6)
    var_6 = link_7.__hash__()
    assert var_6 == -4606328870177462788
    bool_3 = True
    link_8 = module_0.Link(bool_3)
    var_7 = link_8.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_8 = var_6.__eq__(bytes_2)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_9 = module_0.Link(tuple_1, fragment=bool_4)
    var_9 = link_9.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    none_type_1 = None
    link_10 = module_0.Link(link_9, fragment=none_type_1)
    none_type_2 = None
    bool_6 = True
    link_11 = module_0.Link(bool_6, nofollow=bool_6)
    var_11 = link_11.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_2)
    var_13 = var_7.__hash__()
    assert var_13 == -7472913314594357801


def test_case_101():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192


def test_case_102():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_7 = link_5.__hash__()
    assert var_7 == -4606328870177462788
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_1, fragment=bool_3)
    var_8 = link_6.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_7.__eq__(var_7)


def test_case_103():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_1)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_2 = module_0.Link(tuple_2, fragment=bool_4)
    var_7 = link_2.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    none_type_0 = None
    link_3 = module_0.Link(link_2, fragment=none_type_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_9 = link_5.__hash__()
    assert var_9 == -4606328870177462788
    var_10 = var_9.__hash__()
    assert var_10 == -2300485860963768837
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_11 = link_7.__hash__()
    assert var_11 == -4606328870177462788
    bool_6 = True
    link_8 = module_0.Link(bool_6)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_9 = module_0.Link(tuple_3, fragment=bool_7)
    var_13 = link_9.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    bool_9 = True
    bool_10 = False
    tuple_4 = (bool_9, bool_10)
    link_10 = module_0.Link(tuple_4, fragment=bool_9)
    var_15 = link_10.__hash__()
    assert var_15 == -5164621852614943975
    var_16 = var_15.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = var_15.__repr__()
    assert var_17 == "-5164621852614943975"
    bool_11 = False
    link_11 = module_0.Link(bool_11)
    var_18 = link_5.__hash__()
    assert var_18 == -4606328870177462788
    var_19 = var_12.__eq__(var_18)


def test_case_104():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_105():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()


def test_case_106():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    var_4 = var_0.__eq__(var_2)


def test_case_107():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_1 = link_2.__hash__()
    assert var_1 == -4606328870177462788
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_4.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_1)
    var_5 = var_4.__repr__()
    bool_4 = False
    link_5 = module_0.Link(bool_4)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_6 = module_0.Link(tuple_2, fragment=bool_5)
    var_6 = link_6.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_1 = None
    link_7 = module_0.Link(link_6, fragment=none_type_1)
    link_8 = module_0.Link(bool_4, nofollow=var_1)


def test_case_108():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_0)
    var_6 = link_1.__hash__()
    assert var_6 == -4606328870177462788


def test_case_109():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_0 = None
    link_4 = module_0.Link(link_3, fragment=none_type_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_5 = link_6.__hash__()
    assert var_5 == -4606328870177462788
    var_6 = var_5.__hash__()
    assert var_6 == -2300485860963768837
    none_type_1 = None
    bool_3 = True
    link_7 = module_0.Link(bool_3, nofollow=bool_3)
    var_7 = link_7.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_2, bytes_2)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_10 = var_8.__repr__()
    none_type_2 = None
    bool_4 = True
    link_9 = module_0.Link(bool_4, nofollow=bool_4)
    var_11 = link_9.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_2)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_3, bytes_3)
    var_13 = link_9.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_11 = module_0.Link(tuple_1, fragment=bool_5)
    var_14 = link_11.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_14.__repr__()
    assert var_16 == "-5164621852614943975"
    bool_7 = True
    bool_8 = False
    tuple_2 = (bool_7, bool_8)
    link_12 = module_0.Link(tuple_2, fragment=bool_7)
    var_17 = link_12.__hash__()
    assert var_17 == -5164621852614943975
    var_18 = var_17.__repr__()
    assert var_18 == "-5164621852614943975"
    var_19 = var_17.__repr__()
    assert var_19 == "-5164621852614943975"
    var_20 = var_17.__hash__()
    assert var_20 == -552935834187556073
    none_type_3 = None
    bool_9 = True
    link_13 = module_0.Link(bool_9, nofollow=bool_9)
    var_21 = link_13.__hash__()
    assert var_21 == 0
    var_22 = var_21.__eq__(none_type_3)
    bool_10 = True
    link_14 = module_0.Link(bool_10)
    var_23 = link_14.__repr__()
    assert var_23 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_24 = var_1.__eq__(var_22)


def test_case_110():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_2 = link_3.__hash__()
    assert var_2 == -4606328870177462788
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_2)
    link_5 = module_0.Link(link_4)
    var_3 = link_5.__hash__()
    assert var_3 == -4606328870177462788
    bool_0 = True
    link_6 = module_0.Link(bool_0)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_2)
    none_type_0 = None
    link_7 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_8 = module_0.Link(bool_1, fragment=tuple_0)
    var_6 = link_8.__hash__()
    assert var_6 == -8753497827991233192
    none_type_1 = None
    bool_3 = True
    link_9 = module_0.Link(bool_3, nofollow=bool_3)
    var_7 = link_9.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_3, bytes_3)
    var_9 = link_9.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_10 = var_8.__repr__()
    bool_4 = True
    link_11 = module_0.Link(bool_4)
    var_11 = link_11.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_12 = module_0.Link(tuple_1, fragment=bool_5)
    var_12 = link_12.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_12.__hash__()
    assert var_15 == -552935834187556073
    link_13 = module_0.Link(var_8, var_7)
    var_16 = link_13.__hash__()
    assert var_16 == 477043


def test_case_111():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_0 = link_2.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_3 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_3.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_1.__hash__()
    assert var_4 == -552935834187556073
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_1, fragment=bool_2)
    var_5 = link_4.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_1 = None
    link_5 = module_0.Link(link_4, fragment=none_type_1)
    bool_4 = True
    link_6 = module_0.Link(bool_4)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_7 = module_0.Link(tuple_2, fragment=bool_5)
    var_8 = link_7.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_2)
    none_type_2 = None
    bool_7 = True
    link_8 = module_0.Link(bool_7, nofollow=bool_7)
    var_11 = link_8.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_13 = link_8.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_14 = var_12.__repr__()
    none_type_3 = None
    bool_8 = True
    link_10 = module_0.Link(bool_8, nofollow=bool_8)
    var_15 = link_10.__hash__()
    assert var_15 == 0
    var_16 = var_15.__eq__(none_type_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    var_17 = link_10.__repr__()
    assert var_17 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_18 = var_3.__hash__()
    assert var_18 == -8716866087637373422


def test_case_112():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_6 = link_4.__hash__()
    assert var_6 == -4606328870177462788
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_2, bytes_2)
    var_7 = var_4.__eq__(var_1)


def test_case_113():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_0 = link_2.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_3 = module_0.Link(bool_0)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_0)
    var_6 = var_5.__repr__()
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_6.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_1)
    bool_5 = False
    link_7 = module_0.Link(bool_5)
    none_type_2 = None
    bool_6 = True
    link_8 = module_0.Link(bool_6, nofollow=bool_6)
    var_10 = link_8.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_7 = True
    bool_8 = False
    tuple_2 = (bool_7, bool_8)
    link_10 = module_0.Link(tuple_2, fragment=bool_7)
    var_13 = link_10.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    none_type_3 = None
    link_11 = module_0.Link(link_10, fragment=none_type_3)
    none_type_4 = None
    bool_9 = True
    link_12 = module_0.Link(bool_9, nofollow=bool_9)
    var_15 = link_12.__hash__()
    assert var_15 == 0
    var_16 = var_15.__eq__(none_type_4)
    var_17 = link_5.__hash__()
    assert var_17 == 0
    var_18 = var_17.__repr__()
    assert var_18 == "0"


def test_case_114():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_2, fragment=bool_4)
    var_6 = link_5.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__eq__(tuple_2)
    var_9 = var_8.__repr__()
    bool_6 = True
    bool_7 = False
    tuple_3 = (bool_6, bool_7)
    link_6 = module_0.Link(tuple_3, fragment=bool_6)
    var_10 = link_6.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_10.__hash__()
    assert var_13 == -552935834187556073
    link_7 = module_0.Link(var_11, link_1)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"


def test_case_115():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_1.__hash__()
    assert var_0 == -8753497827991233192
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_1 = None
    link_3 = module_0.Link(link_2, fragment=none_type_1)
    bool_4 = True
    link_4 = module_0.Link(bool_4)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_2 = None
    link_5 = module_0.Link(none_type_2, nofollow=none_type_2)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_0)
    link_7 = module_0.Link(link_6)
    var_4 = link_7.__hash__()
    assert var_4 == -4606328870177462788
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_2.__hash__()
    assert var_5 == -5164621852614943975


def test_case_116():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_7 = link_5.__hash__()
    assert var_7 == -4606328870177462788
    none_type_0 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_8 = link_6.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_6.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, nofollow=none_type_1)
    var_11 = var_6.__repr__()
    assert var_11 == "-552935834187556073"


def test_case_117():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_0)
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, nofollow=none_type_1)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_5 = link_4.__hash__()
    assert var_5 == -4606328870177462788
    var_6 = link_3.__repr__()
    assert (
        var_6
        == "Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False)"
    )


def test_case_118():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = False
    link_1 = module_0.Link(bool_2)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_2 = module_0.Link(tuple_1, fragment=bool_3)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_1)
    var_6 = link_0.__eq__(link_0)
    assert var_6 is True
    var_7 = var_6.__eq__(bool_3)
    assert var_7 is True


def test_case_119():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)


def test_case_120():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(link_1, fragment=none_type_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_6 = link_5.__hash__()
    assert var_6 == -4606328870177462788
    var_7 = var_6.__hash__()
    assert var_7 == -2300485860963768837
    none_type_2 = None
    bool_4 = True
    link_6 = module_0.Link(bool_4, nofollow=bool_4)
    var_8 = link_6.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_10 = link_6.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_11 = var_9.__repr__()
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_8 = module_0.Link(bool_5, fragment=tuple_2)
    var_12 = link_8.__hash__()
    assert var_12 == -8753497827991233192
    none_type_3 = None
    bool_7 = True
    link_9 = module_0.Link(bool_7, nofollow=bool_7)
    var_13 = link_9.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_15 = link_9.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_8 = False
    link_11 = module_0.Link(bool_8, fragment=bytes_0)


def test_case_121():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_4 = link_4.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    var_6 = link_4.__repr__()
    assert (
        var_6
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )


def test_case_122():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_0)
    bool_3 = False
    link_3 = module_0.Link(bool_3)
    none_type_1 = None
    bool_4 = True
    link_4 = module_0.Link(bool_4, nofollow=bool_4)
    var_7 = link_4.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_4.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_10 = var_9.__hash__()
    assert var_10 == 5710265117276615615


def test_case_123():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    none_type_2 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_3.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_2)
    none_type_3 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_6 = link_4.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_0, fragment=bool_3)
    var_9 = link_6.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    set_0 = set()
    link_7 = module_0.Link(set_0, nofollow=none_type_3)


def test_case_124():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_1 = link_1.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_1.__hash__()
    assert var_4 == -552935834187556073
    bool_4 = False
    link_2 = module_0.Link(bool_4)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_3 = module_0.Link(tuple_2, fragment=bool_5)
    var_5 = link_3.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_0 = None
    bool_7 = True
    link_4 = module_0.Link(bool_7, nofollow=bool_7)
    var_7 = link_4.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_0)
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_5 = module_0.Link(tuple_3, fragment=bool_8)
    var_9 = link_5.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__eq__(tuple_3)
    var_12 = var_1.__repr__()
    assert var_12 == "-5164621852614943975"


def test_case_125():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_3 = module_0.Link(bool_4, fragment=tuple_2)
    var_6 = link_3.__hash__()
    assert var_6 == -8753497827991233192
    set_0 = {tuple_2, var_6, bool_5, bool_4}
    var_7 = var_6.__eq__(set_0)
    none_type_1 = None
    bool_6 = True
    link_4 = module_0.Link(bool_6, nofollow=bool_6)
    var_8 = link_4.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_1)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_0)
    link_6 = module_0.Link(link_5)
    var_10 = link_6.__hash__()
    assert var_10 == -4606328870177462788
    var_11 = var_10.__hash__()
    assert var_11 == -2300485860963768837
    bool_7 = True
    link_7 = module_0.Link(bool_7)
    var_12 = link_7.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_2 = None
    bool_8 = True
    link_8 = module_0.Link(bool_8, nofollow=bool_8)
    var_13 = link_8.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_15 = link_8.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_16 = var_5.__repr__()
    assert var_16 == "'-5164621852614943975'"


def test_case_126():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_1 = True
    link_1 = module_0.Link(bool_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_0, fragment=bool_2)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_4 = link_4.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    var_6 = var_4.__eq__(var_4)


def test_case_127():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_1 = link_2.__hash__()
    assert var_1 == -4606328870177462788
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_1)
    none_type_0 = None
    bool_4 = True
    link_4 = module_0.Link(bool_4, nofollow=bool_4)
    var_5 = link_4.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_6 = module_0.Link(tuple_2, fragment=bool_5)
    var_8 = link_6.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_7 = module_0.Link(tuple_3, fragment=bool_7)
    var_10 = link_7.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_3)
    var_13 = var_12.__repr__()
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_2)
    link_9 = module_0.Link(link_8)
    var_14 = link_9.__hash__()
    assert var_14 == -4606328870177462788
    bool_9 = True
    link_10 = module_0.Link(bool_9)
    var_15 = link_10.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_16 = var_14.__eq__(bytes_2)
    bool_10 = True
    bool_11 = False
    tuple_4 = (bool_10, bool_11)
    link_11 = module_0.Link(tuple_4, fragment=bool_10)
    var_17 = link_11.__hash__()
    assert var_17 == -5164621852614943975
    var_18 = var_17.__repr__()
    assert var_18 == "-5164621852614943975"
    var_19 = var_17.__repr__()
    assert var_19 == "-5164621852614943975"
    var_20 = var_17.__hash__()
    assert var_20 == -552935834187556073
    none_type_1 = None
    link_12 = module_0.Link(none_type_1, nofollow=none_type_1)
    none_type_2 = None
    bool_12 = True
    link_13 = module_0.Link(bool_12, nofollow=bool_12)
    var_21 = link_13.__hash__()
    assert var_21 == 0
    var_22 = var_21.__eq__(none_type_2)
    var_23 = var_13.__hash__()


def test_case_128():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_1)
    var_6 = var_5.__repr__()
    none_type_0 = None
    bool_4 = True
    link_3 = module_0.Link(bool_4, nofollow=bool_4)
    var_7 = link_3.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_0)
    var_9 = link_1.__repr__()
    assert var_9 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"


def test_case_129():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_1 = module_0.Link(bool_2, fragment=tuple_1)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_1, var_3, bool_3, bool_2}
    var_4 = var_3.__eq__(set_0)
    bool_4 = True
    link_2 = module_0.Link(bool_4)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_3 = module_0.Link(bool_5, fragment=tuple_2)
    var_6 = link_3.__hash__()
    assert var_6 == -8753497827991233192
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_7 = link_5.__hash__()
    assert var_7 == -4606328870177462788
    bool_7 = True
    link_6 = module_0.Link(bool_7)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_0)
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_7 = module_0.Link(tuple_3, fragment=bool_8)
    var_10 = link_7.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    none_type_0 = None
    link_8 = module_0.Link(link_7, fragment=none_type_0)
    bool_10 = True
    bool_11 = False
    tuple_4 = (bool_10, bool_11)
    link_9 = module_0.Link(tuple_4, fragment=bool_10)
    var_12 = link_9.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_12.__hash__()
    assert var_15 == -552935834187556073
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_1)
    link_11 = module_0.Link(link_10)
    var_16 = link_11.__hash__()
    assert var_16 == -4606328870177462788
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_2)
    link_13 = module_0.Link(link_12)
    var_17 = link_13.__hash__()
    assert var_17 == -4606328870177462788
    var_18 = var_17.__hash__()
    assert var_18 == -2300485860963768837
    bool_12 = True
    bool_13 = False
    tuple_5 = (bool_12, bool_13)
    link_14 = module_0.Link(tuple_5, fragment=bool_12)
    var_19 = link_14.__hash__()
    assert var_19 == -5164621852614943975
    var_20 = var_19.__repr__()
    assert var_20 == "-5164621852614943975"
    var_21 = var_15.__hash__()
    assert var_21 == -552935834187556073


def test_case_130():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192


def test_case_131():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_3 = link_2.__hash__()
    assert var_3 == -8753497827991233192
    set_1 = {tuple_1, var_3, bool_3, bool_2}
    var_4 = var_3.__eq__(set_1)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_3 = module_0.Link(tuple_2, fragment=bool_4)
    var_5 = link_3.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_5.__hash__()
    assert var_8 == -552935834187556073
    bool_6 = True
    bool_7 = False
    tuple_3 = (bool_6, bool_7)
    link_4 = module_0.Link(tuple_3, fragment=bool_6)
    var_9 = link_4.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    none_type_0 = None
    link_5 = module_0.Link(link_4, fragment=none_type_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_11 = link_7.__hash__()
    assert var_11 == -4606328870177462788
    bool_8 = True
    bool_9 = False
    tuple_4 = (bool_8, bool_9)
    link_8 = module_0.Link(tuple_4, fragment=bool_8)
    var_12 = link_8.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__eq__(tuple_4)
    var_15 = link_6.__hash__()
    assert var_15 == -4606328870177462788


def test_case_132():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_1.__hash__()
    assert var_0 == -8753497827991233192
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_1 = link_2.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_1, var_1, bool_3, bool_2}
    var_2 = var_1.__eq__(set_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_3 = link_4.__hash__()
    assert var_3 == -4606328870177462788
    none_type_1 = None
    bool_4 = True
    link_5 = module_0.Link(bool_4, nofollow=bool_4)
    var_4 = link_5.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_6 = module_0.Link(tuple_2, fragment=bool_5)
    var_6 = link_6.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_6.__hash__()
    assert var_9 == -552935834187556073
    bool_7 = False
    bool_8 = False
    tuple_3 = (bool_8,)
    link_7 = module_0.Link(bool_7, fragment=tuple_3)
    var_10 = link_7.__hash__()
    assert var_10 == -8753497827991233192
    set_1 = {tuple_3, var_10, bool_8, bool_7}
    var_11 = var_10.__eq__(set_1)
    var_12 = link_7.__hash__()
    assert var_12 == -8753497827991233192
    var_13 = var_3.__hash__()
    assert var_13 == -2300485860963768837
    var_14 = var_13.__hash__()
    assert var_14 == -2300485860963768837
    var_15 = var_14.__repr__()
    assert var_15 == "-2300485860963768837"


def test_case_133():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_4 = link_4.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_0)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_1, fragment=bool_4)
    var_7 = link_5.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_9 = link_7.__hash__()
    assert var_9 == -4606328870177462788
    var_10 = var_9.__hash__()
    assert var_10 == -2300485860963768837
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_2)
    link_9 = module_0.Link(link_8)
    var_11 = link_9.__hash__()
    assert var_11 == -4606328870177462788
    var_12 = var_6.__eq__(var_10)


def test_case_134():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_1.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__eq__(tuple_0)
    var_4 = var_3.__repr__()
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_2 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_2.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_3 = module_0.Link(bool_5, fragment=tuple_2)
    var_7 = link_3.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_2, var_7, bool_6, bool_5}
    var_8 = var_7.__eq__(set_0)
    var_9 = link_3.__hash__()
    assert var_9 == -8753497827991233192
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_4 = module_0.Link(tuple_3, fragment=bool_7)
    var_10 = link_4.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_10.__hash__()
    assert var_13 == -552935834187556073
    bool_9 = False
    bool_10 = False
    tuple_4 = (bool_10,)
    link_5 = module_0.Link(bool_9, fragment=tuple_4)
    var_14 = link_5.__hash__()
    assert var_14 == -8753497827991233192
    set_1 = {tuple_4, var_14, bool_10, bool_9}
    var_15 = var_14.__eq__(set_1)
    bool_11 = True
    var_16 = var_10.__eq__(bool_11)
    assert var_16 is False


def test_case_135():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_1)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_2 = module_0.Link(tuple_2, fragment=bool_4)
    var_5 = link_2.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_5.__hash__()
    assert var_8 == -552935834187556073
    bool_6 = True
    bool_7 = False
    tuple_3 = (bool_6, bool_7)
    link_3 = module_0.Link(tuple_3, fragment=bool_6)
    var_9 = link_3.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__eq__(tuple_3)
    var_12 = var_11.__repr__()
    bool_8 = True
    bool_9 = False
    tuple_4 = (bool_8, bool_9)
    link_4 = module_0.Link(tuple_4, fragment=bool_8)
    var_13 = link_4.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = link_3.__repr__()
    assert var_15 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"


def test_case_136():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_6 = link_4.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_6.__hash__()
    assert var_9 == -552935834187556073
    bool_5 = False
    link_5 = module_0.Link(bool_5)
    var_10 = link_3.__hash__()
    assert var_10 == -5164621852614943975


def test_case_137():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, nofollow=none_type_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_3 = link_5.__hash__()
    assert var_3 == -4606328870177462788
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_6 = module_0.Link(tuple_0, fragment=bool_1)
    var_4 = link_6.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_7.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_7.__hash__()
    assert var_10 == -552935834187556073
    none_type_1 = None
    bool_5 = True
    link_8 = module_0.Link(bool_5, nofollow=bool_5)
    var_11 = link_8.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_13 = link_8.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_14 = var_12.__repr__()
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    var_15 = var_2.__repr__()


def test_case_138():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1


def test_case_139():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_4 = link_2.__hash__()
    assert var_4 == -4606328870177462788
    none_type_0 = None
    bool_2 = True
    link_3 = module_0.Link(bool_2, nofollow=bool_2)
    var_5 = link_3.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_5 = module_0.Link(tuple_1, fragment=bool_3)
    var_8 = link_5.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_8.__hash__()
    assert var_11 == -552935834187556073
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_6 = module_0.Link(bool_5, fragment=tuple_2)
    var_12 = link_6.__hash__()
    assert var_12 == -8753497827991233192
    set_0 = {tuple_2, var_12, bool_6, bool_5}
    var_13 = var_12.__eq__(set_0)
    var_14 = link_6.__hash__()
    assert var_14 == -8753497827991233192
    bool_7 = False
    link_7 = module_0.Link(bool_7)
    bool_8 = True
    link_8 = module_0.Link(bool_8, bool_8, nofollow=bool_8)
    var_15 = link_8.__hash__()
    assert var_15 == 1
    bool_9 = True
    bool_10 = False
    tuple_3 = (bool_9, bool_10)
    link_9 = module_0.Link(tuple_3, fragment=bool_9)
    var_16 = link_9.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    var_18 = var_16.__eq__(tuple_3)
    none_type_1 = None
    bool_11 = True
    link_10 = module_0.Link(bool_11, nofollow=bool_11)
    var_19 = link_10.__hash__()
    assert var_19 == 0
    var_20 = var_19.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    var_21 = link_10.__repr__()
    assert var_21 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_22 = var_20.__repr__()
    link_12 = module_0.Link(none_type_0)


def test_case_140():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_4 = link_3.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    bool_1 = True
    link_4 = module_0.Link(bool_1)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    link_5 = module_0.Link(link_1)


def test_case_141():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    bool_2 = True
    link_3 = module_0.Link(bool_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_0)
    none_type_0 = None
    bool_3 = True
    link_4 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_4.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    var_8 = var_7.__repr__()


def test_case_142():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = var_0.__hash__()
    assert var_2 == -1835968800350151339


def test_case_143():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)


def test_case_144():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_1)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_5 = link_3.__hash__()
    assert var_5 == -4606328870177462788
    bool_4 = True
    link_4 = module_0.Link(bool_4)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_0)
    none_type_0 = None
    none_type_1 = None
    link_5 = module_0.Link(none_type_1)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == 2234852059487564994
    var_10 = var_9.__eq__(none_type_0)
    bool_5 = True
    link_6 = module_0.Link(bool_5, bool_5, nofollow=bool_5)
    var_11 = link_6.__hash__()
    assert var_11 == 1
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_7 = module_0.Link(tuple_2, fragment=bool_6)
    var_12 = link_7.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_12.__hash__()
    assert var_15 == -552935834187556073
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, nofollow=none_type_2)
    bool_8 = False
    bool_9 = False
    tuple_3 = (bool_9,)
    link_9 = module_0.Link(bool_8, fragment=tuple_3)
    var_16 = link_9.__hash__()
    assert var_16 == -8753497827991233192
    set_0 = {tuple_3, var_16, bool_9, bool_8}
    var_17 = var_16.__eq__(set_0)
    none_type_3 = None
    bool_10 = True
    link_10 = module_0.Link(bool_10, nofollow=bool_10)
    var_18 = link_10.__hash__()
    assert var_18 == 0
    var_19 = var_18.__eq__(none_type_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_1, bytes_1)
    var_20 = link_10.__repr__()
    assert var_20 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_21 = var_19.__repr__()
    var_22 = link_10.__hash__()
    assert var_22 == 0


def test_case_145():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_2 = module_0.Link(tuple_1, fragment=bool_3)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = link_1.__hash__()
    assert var_5 == 0


def test_case_146():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    none_type_0 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_6 = var_4.__repr__()
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_5 = module_0.Link(tuple_0, fragment=bool_2)
    var_7 = link_5.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    none_type_1 = None
    bool_4 = True
    link_6 = module_0.Link(bool_4, nofollow=bool_4)
    var_10 = link_6.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    var_12 = link_6.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_3, bytes_3)
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_9 = module_0.Link(bool_5, fragment=tuple_1)
    var_13 = link_9.__hash__()
    assert var_13 == -8753497827991233192
    set_0 = {tuple_1, var_13, bool_6, bool_5}
    var_14 = var_13.__eq__(set_0)
    var_15 = link_9.__hash__()
    assert var_15 == -8753497827991233192
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_4)
    link_11 = module_0.Link(link_10)
    var_16 = link_11.__hash__()
    assert var_16 == -4606328870177462788
    bool_7 = True
    bool_8 = False
    tuple_2 = (bool_7, bool_8)
    link_12 = module_0.Link(tuple_2, fragment=bool_7)
    var_17 = link_12.__hash__()
    assert var_17 == -5164621852614943975
    var_18 = var_17.__repr__()
    assert var_18 == "-5164621852614943975"
    var_19 = var_17.__eq__(tuple_2)
    bool_9 = False
    bool_10 = False
    tuple_3 = (bool_10,)
    link_13 = module_0.Link(bool_9, fragment=tuple_3)
    var_20 = link_13.__hash__()
    assert var_20 == -8753497827991233192
    bool_11 = True
    bool_12 = False
    tuple_4 = (bool_11, bool_12)
    link_14 = module_0.Link(tuple_4, fragment=bool_11)
    var_21 = link_14.__hash__()
    assert var_21 == -5164621852614943975
    var_22 = var_21.__repr__()
    assert var_22 == "-5164621852614943975"
    var_23 = var_21.__repr__()
    assert var_23 == "-5164621852614943975"
    var_24 = var_21.__hash__()
    assert var_24 == -552935834187556073
    var_25 = var_1.__eq__(set_0)


def test_case_147():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_1 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_0, var_1, bool_2, bool_1}
    var_2 = var_1.__eq__(set_0)
    var_3 = link_0.__eq__(link_0)
    assert var_3 is True


def test_case_148():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(link_1, fragment=none_type_0)
    none_type_1 = None
    none_type_2 = None
    link_3 = module_0.Link(none_type_2)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_3 = var_2.__hash__()
    assert var_3 == 2234852059487564994
    var_4 = var_3.__eq__(none_type_1)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_5 = link_5.__hash__()
    assert var_5 == -4606328870177462788
    bool_3 = True
    link_6 = module_0.Link(bool_3)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_8 = link_8.__hash__()
    assert var_8 == -4606328870177462788
    none_type_3 = None
    link_9 = module_0.Link(none_type_3, nofollow=none_type_3)
    var_9 = link_7.__eq__(link_4)
    assert var_9 is True


def test_case_149():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_3 = module_0.Link(tuple_2, fragment=bool_4)
    var_7 = link_3.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_2)
    var_10 = link_1.__hash__()
    assert var_10 == 0


def test_case_150():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_2 = link_2.__hash__()
    assert var_2 == -8753497827991233192
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_3 = module_0.Link(tuple_2, fragment=bool_4)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    link_4 = module_0.Link(var_0)


def test_case_151():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_1.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(link_1, fragment=none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_3 = module_0.Link(tuple_1, fragment=bool_3)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_4 = module_0.Link(bool_5, fragment=tuple_2)
    var_7 = link_4.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_2, var_7, bool_6, bool_5}
    var_8 = var_7.__eq__(set_0)
    var_9 = link_4.__hash__()
    assert var_9 == -8753497827991233192
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_5 = module_0.Link(tuple_3, fragment=bool_7)
    var_10 = link_5.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    link_6 = module_0.Link(var_11)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    var_12 = var_1.__eq__(link_6)


def test_case_152():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_1 = module_0.Link(bool_2, fragment=tuple_1)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_1, var_3, bool_3, bool_2}
    var_4 = var_3.__eq__(set_0)
    var_5 = link_1.__hash__()
    assert var_5 == -8753497827991233192
    bool_4 = True
    link_2 = module_0.Link(bool_4, bool_4, nofollow=bool_4)
    var_6 = link_2.__hash__()
    assert var_6 == 1
    none_type_0 = None
    bool_5 = True
    link_3 = module_0.Link(bool_5, nofollow=bool_5)
    var_7 = link_3.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_9 = link_3.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_10 = var_8.__repr__()
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_5 = module_0.Link(tuple_2, fragment=bool_6)
    var_11 = link_5.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    none_type_1 = None
    link_6 = module_0.Link(link_5, fragment=none_type_1)
    link_7 = module_0.Link(var_4, nofollow=link_6)


def test_case_153():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    bool_4 = False
    link_2 = module_0.Link(bool_4)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_3 = module_0.Link(tuple_2, fragment=bool_5)
    var_7 = link_3.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_2)
    var_10 = var_9.__repr__()
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_0)
    link_6 = module_0.Link(link_5)
    var_11 = link_6.__hash__()
    assert var_11 == -4606328870177462788
    bool_7 = True
    link_7 = module_0.Link(bool_7)
    var_12 = link_7.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_13 = var_11.__eq__(bytes_0)
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_8 = module_0.Link(tuple_3, fragment=bool_8)
    var_14 = link_8.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    none_type_1 = None
    link_9 = module_0.Link(link_8, fragment=none_type_1)
    bool_10 = False
    bool_11 = False
    tuple_4 = (bool_11,)
    link_10 = module_0.Link(bool_10, fragment=tuple_4)
    var_16 = link_10.__hash__()
    assert var_16 == -8753497827991233192
    link_11 = module_0.Link(bool_7)


def test_case_154():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_1 = True
    link_1 = module_0.Link(bool_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_1 = link_3.__hash__()
    assert var_1 == -4606328870177462788
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    none_type_1 = None
    bool_2 = True
    link_5 = module_0.Link(bool_2, nofollow=bool_2)
    var_2 = link_5.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_0, fragment=bool_3)
    var_4 = link_6.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_7 = module_0.Link(bool_5, fragment=tuple_1)
    var_7 = link_7.__hash__()
    assert var_7 == -8753497827991233192
    var_8 = link_4.__hash__()
    assert var_8 == 477042


def test_case_155():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)


def test_case_156():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    none_type_1 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_6 = var_4.__repr__()
    none_type_2 = None
    none_type_3 = None
    link_4 = module_0.Link(none_type_3)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == 2234852059487564994
    var_9 = var_8.__eq__(none_type_2)
    bool_3 = True
    link_5 = module_0.Link(bool_3)
    var_10 = link_5.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_6 = module_0.Link(tuple_1, fragment=bool_4)
    var_11 = link_6.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__repr__()
    assert var_13 == "-5164621852614943975"
    link_7 = module_0.Link(bool_4, fragment=var_3)


def test_case_157():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_1.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_4 = link_3.__hash__()
    assert var_4 == -4606328870177462788
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_4.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_0 = None
    none_type_1 = None
    link_5 = module_0.Link(none_type_1)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == 2234852059487564994
    var_9 = var_8.__eq__(none_type_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_10 = link_7.__hash__()
    assert var_10 == -4606328870177462788
    var_11 = var_10.__hash__()
    assert var_11 == -2300485860963768837
    none_type_2 = None
    bool_5 = True
    link_8 = module_0.Link(bool_5, nofollow=bool_5)
    var_12 = link_8.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_14 = link_8.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, nofollow=none_type_3)
    bool_6 = False
    bool_7 = False
    tuple_2 = (bool_7,)
    link_11 = module_0.Link(bool_6, fragment=tuple_2)
    var_15 = link_11.__hash__()
    assert var_15 == -8753497827991233192
    set_0 = {tuple_2, var_15, bool_7, bool_6}
    var_16 = var_15.__eq__(set_0)
    int_0 = 3005
    link_12 = module_0.Link(int_0)


def test_case_158():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_159():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_3 = module_0.Link(tuple_2, fragment=bool_4)
    var_5 = link_3.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__eq__(tuple_2)
    bool_6 = True
    bool_7 = False
    tuple_3 = (bool_6, bool_7)
    link_4 = module_0.Link(tuple_3, fragment=bool_6)
    var_8 = link_4.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_3)
    var_11 = var_10.__repr__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_12 = link_6.__hash__()
    assert var_12 == -4606328870177462788
    bool_8 = True
    link_7 = module_0.Link(bool_8)
    var_13 = link_7.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_14 = var_12.__eq__(bytes_1)
    none_type_0 = None
    bool_9 = True
    link_8 = module_0.Link(bool_9, nofollow=bool_9)
    var_15 = link_8.__hash__()
    assert var_15 == 0
    var_16 = var_15.__eq__(none_type_0)
    var_17 = var_5.__eq__(var_2)


def test_case_160():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_2 = True
    link_2 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == 1
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_3 = module_0.Link(bool_3, fragment=tuple_1)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_1, var_4, bool_4, bool_3}
    var_5 = var_4.__eq__(set_0)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_4 = module_0.Link(tuple_2, fragment=bool_5)
    var_6 = link_4.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__eq__(tuple_2)
    var_9 = var_8.__repr__()
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_5 = module_0.Link(tuple_3, fragment=bool_7)
    var_10 = link_5.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_3)
    bool_9 = False
    link_6 = module_0.Link(bool_9)
    none_type_0 = None
    bool_10 = True
    link_7 = module_0.Link(bool_10, nofollow=bool_10)
    var_13 = link_7.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_0, bytes_0)
    var_15 = link_7.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_1 = None
    none_type_2 = None
    link_9 = module_0.Link(none_type_2)
    var_16 = link_9.__repr__()
    assert var_16 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_17 = var_16.__hash__()
    assert var_17 == 2234852059487564994
    var_18 = var_17.__eq__(none_type_1)
    var_19 = var_2.__hash__()
    assert var_19 == -8716866087637373422


def test_case_161():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_1 = link_2.__hash__()
    assert var_1 == -4606328870177462788
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_3 = var_1.__eq__(bytes_0)
    none_type_0 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_4 = link_4.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    int_0 = 3199
    link_5 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_0, fragment=bool_3)
    var_6 = link_6.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_7 = module_0.Link(bool_5, fragment=tuple_1)
    var_8 = link_7.__hash__()
    assert var_8 == -8753497827991233192
    bool_7 = True
    bool_8 = False
    tuple_2 = (bool_7, bool_8)
    link_8 = module_0.Link(tuple_2, fragment=bool_7)
    var_9 = link_8.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    none_type_1 = None
    link_9 = module_0.Link(link_8, fragment=none_type_1)
    var_11 = var_8.__eq__(link_5)


def test_case_162():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_3.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_4 = module_0.Link(link_3, fragment=none_type_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_3 = link_6.__hash__()
    assert var_3 == -4606328870177462788
    bool_3 = True
    link_7 = module_0.Link(bool_3)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_1)
    none_type_1 = None
    bool_4 = True
    link_8 = module_0.Link(bool_4, nofollow=bool_4)
    var_6 = link_8.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_3, bytes_3)
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_11 = module_0.Link(tuple_1, fragment=bool_5)
    var_9 = link_11.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_9.__hash__()
    assert var_12 == -552935834187556073
    bool_7 = False
    bool_8 = False
    tuple_2 = (bool_8,)
    link_12 = module_0.Link(bool_7, fragment=tuple_2)
    var_13 = link_12.__hash__()
    assert var_13 == -8753497827991233192
    set_0 = {tuple_2, var_13, bool_8, bool_7}
    var_14 = var_13.__eq__(set_0)
    link_13 = module_0.Link(var_8)
    assert f"{type(link_13).__module__}.{type(link_13).__qualname__}" == "link.Link"


def test_case_163():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_1)
    var_6 = var_5.__repr__()
    bool_4 = True
    link_2 = module_0.Link(bool_4)
    var_7 = link_2.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_3 = module_0.Link(tuple_2, fragment=bool_5)
    var_8 = link_3.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_2)
    none_type_0 = None
    bool_7 = True
    link_4 = module_0.Link(bool_7, nofollow=bool_7)
    var_11 = link_4.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_13 = link_4.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_14 = var_12.__repr__()
    bool_8 = False
    bool_9 = False
    tuple_3 = (bool_9,)
    link_6 = module_0.Link(bool_8, fragment=tuple_3)
    var_15 = link_6.__hash__()
    assert var_15 == -8753497827991233192
    set_0 = {tuple_3, var_15, bool_9, bool_8}
    var_16 = var_15.__eq__(set_0)
    var_17 = link_6.__hash__()
    assert var_17 == -8753497827991233192
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_10 = True
    bool_11 = False
    tuple_4 = (bool_10, bool_11)
    link_8 = module_0.Link(tuple_4, fragment=bool_10)
    var_18 = link_8.__hash__()
    assert var_18 == -5164621852614943975
    var_19 = var_18.__repr__()
    assert var_19 == "-5164621852614943975"
    var_20 = var_18.__repr__()
    assert var_20 == "-5164621852614943975"
    var_21 = var_18.__hash__()
    assert var_21 == -552935834187556073
    bool_12 = True
    link_9 = module_0.Link(bool_12, bool_12, nofollow=bool_12)
    var_22 = link_9.__hash__()
    assert var_22 == 1
    var_23 = var_3.__repr__()
    assert var_23 == "-5164621852614943975"


def test_case_164():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )


def test_case_165():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )


def test_case_166():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_0.__repr__()
    assert var_2 == "0"


def test_case_167():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_3 = module_0.Link(tuple_0, fragment=bool_0)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    bool_2 = True
    link_4 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_5 = link_4.__hash__()
    assert var_5 == 1
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_5 = module_0.Link(tuple_1, fragment=bool_3)
    var_6 = link_5.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_6.__hash__()
    assert var_9 == -552935834187556073
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    bool_5 = True
    link_7 = module_0.Link(bool_5)
    var_10 = link_7.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_8 = module_0.Link(float_0, fragment=var_10)
    none_type_1 = None
    bool_6 = True
    link_9 = module_0.Link(bool_6, nofollow=bool_6)
    var_11 = link_9.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_1)
    dict_0 = {float_0: bool_2}
    link_10 = module_0.Link(link_5, fragment=dict_0)


def test_case_168():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_2 = module_0.Link(tuple_1, fragment=bool_3)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_1)
    var_7 = var_6.__repr__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_8 = link_4.__hash__()
    assert var_8 == -4606328870177462788
    var_9 = var_8.__hash__()
    assert var_9 == -2300485860963768837
    none_type_1 = None
    none_type_2 = None
    link_5 = module_0.Link(none_type_2)
    var_10 = link_5.__repr__()
    assert var_10 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_11 = var_10.__hash__()
    assert var_11 == 2234852059487564994
    var_12 = var_11.__eq__(none_type_1)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_6 = module_0.Link(tuple_2, fragment=bool_5)
    var_13 = link_6.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__eq__(tuple_2)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_16 = link_8.__hash__()
    assert var_16 == -4606328870177462788
    bool_7 = True
    link_9 = module_0.Link(bool_7, bool_7, nofollow=bool_7)
    var_17 = link_9.__hash__()
    assert var_17 == 1
    var_18 = link_2.__repr__()
    assert var_18 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"


def test_case_169():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_1 = link_1.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_2 = module_0.Link(tuple_2, fragment=bool_4)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    none_type_0 = None
    link_3 = module_0.Link(link_2, fragment=none_type_0)
    bool_6 = True
    bool_7 = False
    tuple_3 = (bool_6, bool_7)
    link_4 = module_0.Link(tuple_3, fragment=bool_6)
    var_6 = link_4.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_6.__hash__()
    assert var_9 == -552935834187556073
    bool_8 = True
    link_5 = module_0.Link(bool_8, bool_8, nofollow=bool_8)
    var_10 = link_5.__hash__()
    assert var_10 == 1
    bool_9 = False
    bool_10 = False
    tuple_4 = (bool_10,)
    link_6 = module_0.Link(bool_9, fragment=tuple_4)
    var_11 = link_6.__hash__()
    assert var_11 == -8753497827991233192
    set_0 = {tuple_4, var_11, bool_10, bool_9}
    var_12 = var_11.__eq__(set_0)
    var_13 = link_4.__repr__()
    assert var_13 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"


def test_case_170():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, var_1, nofollow=link_1)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"


def test_case_171():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    none_type_0 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_5 = var_3.__repr__()
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_2, bytes_2)
    var_6 = link_5.__repr__()
    assert (
        var_6
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_3, bytes_3)
    bool_2 = True
    link_7 = module_0.Link(bool_2)
    var_7 = link_7.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_8 = module_0.Link(float_0, fragment=var_7)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_9 = module_0.Link(tuple_0, fragment=bool_3)
    var_8 = link_9.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_10 = module_0.Link(bool_5, fragment=tuple_1)
    var_10 = link_10.__hash__()
    assert var_10 == -8753497827991233192
    bool_7 = False
    link_11 = module_0.Link(bool_7)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_4, bytes_4)
    var_11 = link_12.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_8 = False
    link_13 = module_0.Link(bool_8)
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_9 = False
    bool_10 = False
    tuple_2 = (bool_10,)
    link_14 = module_0.Link(bool_9, fragment=tuple_2)
    var_13 = link_14.__hash__()
    assert var_13 == -8753497827991233192
    set_0 = {tuple_2, var_13, bool_10, bool_9}
    var_14 = var_13.__eq__(set_0)
    var_15 = link_14.__hash__()
    assert var_15 == -8753497827991233192
    bytes_5 = b"\xb3\xa6L'#\xe0\x91\t"
    link_15 = module_0.Link(bytes_5)
    link_16 = module_0.Link(link_15)
    var_16 = link_16.__hash__()
    assert var_16 == -4606328870177462788
    none_type_1 = None
    none_type_2 = None
    link_17 = module_0.Link(none_type_2)
    var_17 = link_17.__repr__()
    assert var_17 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_18 = var_17.__hash__()
    assert var_18 == 2234852059487564994
    var_19 = var_18.__eq__(none_type_1)
    var_20 = var_5.__repr__()


def test_case_172():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_0)
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_5 = link_6.__hash__()
    assert var_5 == -4606328870177462788
    none_type_0 = None
    bool_4 = True
    link_7 = module_0.Link(bool_4, nofollow=bool_4)
    var_6 = link_7.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_2, bytes_2)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_9 = var_7.__repr__()
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_9 = module_0.Link(tuple_1, fragment=bool_5)
    var_10 = link_9.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    none_type_1 = None
    link_10 = module_0.Link(link_9, fragment=none_type_1)
    none_type_2 = None
    bool_7 = True
    link_11 = module_0.Link(bool_7, nofollow=bool_7)
    var_12 = link_11.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_2)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_3, bytes_3)
    var_14 = link_11.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_8 = True
    link_13 = module_0.Link(bool_8, bool_8, nofollow=bool_8)
    var_15 = link_13.__hash__()
    assert var_15 == 1
    bool_9 = False
    link_14 = module_0.Link(bool_9)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_15 = module_0.Link(bytes_4, bytes_4)
    var_16 = link_15.__repr__()
    assert (
        var_16
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_10 = False
    link_16 = module_0.Link(bool_10)
    var_17 = var_16.__repr__()
    assert (
        var_17
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_17 = module_0.Link(var_16, var_17, nofollow=link_15)
    assert f"{type(link_17).__module__}.{type(link_17).__qualname__}" == "link.Link"
    bytes_5 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_18 = module_0.Link(bytes_5, bytes_5)
    link_19 = module_0.Link(var_6, none_type_2)


def test_case_173():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)


def test_case_174():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_0, var_3, bool_2, bool_1}
    var_4 = var_3.__eq__(set_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    bool_3 = True
    link_5 = module_0.Link(bool_3, bool_3, nofollow=bool_3)
    var_5 = link_5.__hash__()
    assert var_5 == 1
    var_6 = link_2.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"


def test_case_175():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    var_3 = link_0.__hash__()
    assert var_3 == -8753497827991233192


def test_case_176():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_0 = None
    bool_4 = True
    link_3 = module_0.Link(bool_4, nofollow=bool_4)
    var_5 = link_3.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_7 = link_5.__hash__()
    assert var_7 == -4606328870177462788
    bool_5 = True
    link_6 = module_0.Link(bool_5)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_1)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_2)
    link_8 = module_0.Link(link_7)
    var_10 = link_8.__hash__()
    assert var_10 == -4606328870177462788
    none_type_1 = None
    none_type_2 = None
    link_9 = module_0.Link(none_type_2)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_12 = var_11.__hash__()
    assert var_12 == 2234852059487564994
    var_13 = var_12.__eq__(none_type_1)
    bool_6 = False
    link_10 = module_0.Link(bool_6)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_3, bytes_3)
    var_14 = link_11.__repr__()
    assert (
        var_14
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_7 = False
    link_12 = module_0.Link(bool_7)
    var_15 = var_14.__repr__()
    assert (
        var_15
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_13 = module_0.Link(var_14, var_15, nofollow=link_11)
    assert f"{type(link_13).__module__}.{type(link_13).__qualname__}" == "link.Link"
    none_type_3 = None
    link_14 = module_0.Link(none_type_3, nofollow=none_type_3)
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_15 = module_0.Link(bytes_4)
    link_16 = module_0.Link(link_15)
    var_16 = link_16.__hash__()
    assert var_16 == -4606328870177462788
    var_17 = var_16.__hash__()
    assert var_17 == -2300485860963768837
    var_18 = link_0.__repr__()
    assert (
        var_18
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )


def test_case_177():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    bool_3 = False
    link_3 = module_0.Link(bool_3)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_4.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_1, fragment=bool_4)
    var_5 = link_5.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_1 = None
    bool_6 = True
    link_6 = module_0.Link(bool_6, nofollow=bool_6)
    var_7 = link_6.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    none_type_2 = None
    bool_7 = True
    link_7 = module_0.Link(bool_7, nofollow=bool_7)
    var_9 = link_7.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    var_11 = link_7.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_8 = True
    bool_9 = False
    tuple_2 = (bool_8, bool_9)
    link_9 = module_0.Link(tuple_2, fragment=bool_8)
    var_12 = link_9.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_5.__repr__()
    assert var_15 == "-5164621852614943975"


def test_case_178():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    none_type_2 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_2)
    var_5 = var_3.__repr__()
    assert var_5 == "0"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_6 = link_2.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_9 = link_4.__hash__()
    assert var_9 == -4606328870177462788
    var_10 = var_9.__hash__()
    assert var_10 == -2300485860963768837
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_5 = module_0.Link(bool_3, fragment=tuple_1)
    var_11 = link_5.__hash__()
    assert var_11 == -8753497827991233192
    set_0 = {tuple_1, var_11, bool_4, bool_3}
    var_12 = var_11.__eq__(set_0)
    var_13 = link_5.__hash__()
    assert var_13 == -8753497827991233192
    var_14 = link_5.__hash__()
    assert var_14 == -8753497827991233192
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_6 = module_0.Link(tuple_2, fragment=bool_5)
    var_15 = link_6.__hash__()
    assert var_15 == -5164621852614943975
    var_16 = var_15.__repr__()
    assert var_16 == "-5164621852614943975"
    none_type_3 = None
    link_7 = module_0.Link(link_6, fragment=none_type_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    bool_7 = True
    link_9 = module_0.Link(bool_7)
    var_17 = link_9.__repr__()
    assert var_17 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_10 = module_0.Link(float_0, fragment=var_17)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_2)
    link_12 = module_0.Link(link_11)
    var_18 = link_12.__hash__()
    assert var_18 == -4606328870177462788
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_3, bytes_3)
    none_type_4 = None
    link_14 = module_0.Link(none_type_4, nofollow=none_type_4)
    var_19 = link_13.__hash__()
    assert var_19 == 0


def test_case_179():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_1 = link_4.__hash__()
    assert var_1 == -4606328870177462788
    bool_1 = True
    link_5 = module_0.Link(bool_1)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_3 = var_1.__eq__(bytes_1)
    none_type_0 = None
    bool_2 = True
    link_6 = module_0.Link(bool_2, nofollow=bool_2)
    var_4 = link_6.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_0, fragment=bool_3)
    var_6 = link_7.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_1 = None
    none_type_2 = None
    link_8 = module_0.Link(none_type_2)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == 2234852059487564994
    var_10 = var_9.__eq__(none_type_1)
    var_11 = link_6.__hash__()
    assert var_11 == 0


def test_case_180():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    none_type_0 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_1 = link_2.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_4 = link_4.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    none_type_1 = None
    link_5 = module_0.Link(link_4, fragment=none_type_1)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_6 = module_0.Link(tuple_2, fragment=bool_5)
    var_6 = link_6.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_6.__hash__()
    assert var_9 == -552935834187556073
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_7 = module_0.Link(tuple_3, fragment=bool_7)
    var_10 = link_7.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_3)
    var_13 = var_12.__repr__()
    bool_9 = False
    link_8 = module_0.Link(bool_9)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_14 = link_9.__repr__()
    assert (
        var_14
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_10 = False
    link_10 = module_0.Link(bool_10)
    var_15 = var_14.__repr__()
    assert (
        var_15
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_11 = False
    bool_12 = False
    tuple_4 = (bool_12,)
    link_11 = module_0.Link(bool_11, fragment=tuple_4)
    var_16 = link_11.__hash__()
    assert var_16 == -8753497827991233192
    set_0 = {tuple_4, var_16, bool_12, bool_11}
    var_17 = var_16.__eq__(set_0)
    var_18 = link_11.__hash__()
    assert var_18 == -8753497827991233192
    var_19 = var_6.__repr__()
    assert var_19 == "-5164621852614943975"
    var_20 = var_9.__eq__(var_19)


def test_case_181():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_1 = True
    link_4 = module_0.Link(bool_1)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_5 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_5.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_6 = module_0.Link(bool_4, fragment=tuple_1)
    var_5 = link_6.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_1, var_5, bool_5, bool_4}
    var_6 = var_5.__eq__(set_0)
    var_7 = link_6.__hash__()
    assert var_7 == -8753497827991233192
    none_type_1 = None
    bool_6 = True
    link_7 = module_0.Link(bool_6, nofollow=bool_6)
    var_8 = link_7.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_1)
    var_10 = var_8.__repr__()
    assert var_10 == "0"
    bool_7 = False
    bool_8 = False
    tuple_2 = (bool_8,)
    link_8 = module_0.Link(bool_7, fragment=tuple_2)
    var_11 = link_8.__hash__()
    assert var_11 == -8753497827991233192
    set_1 = {tuple_2, var_11, bool_8, bool_7}
    var_12 = var_11.__eq__(set_1)
    bool_9 = False
    link_9 = module_0.Link(bool_9)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_13 = link_10.__repr__()
    assert (
        var_13
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_10 = False
    link_11 = module_0.Link(bool_10)
    var_14 = var_13.__repr__()
    assert (
        var_14
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_12 = module_0.Link(var_13, var_14, nofollow=link_10)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_13 = module_0.Link(bytes_2)
    link_14 = module_0.Link(link_13)
    var_15 = link_14.__hash__()
    assert var_15 == -4606328870177462788
    link_15 = module_0.Link(var_5, var_11, bool_9)


def test_case_182():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__hash__()
    assert var_1 == 477042


def test_case_183():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_0 = link_3.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_4 = module_0.Link(bool_0, fragment=tuple_0)
    var_1 = link_4.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_0, var_1, bool_1, bool_0}
    var_2 = var_1.__eq__(set_0)
    var_3 = link_4.__hash__()
    assert var_3 == -8753497827991233192
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_5 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_5.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    bool_4 = False
    link_6 = module_0.Link(bool_4)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    var_6 = link_7.__repr__()
    assert (
        var_6
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    var_7 = var_6.__hash__()
    assert var_7 == -8635037249155231917
    var_8 = var_7.__eq__(bool_3)


def test_case_184():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_3 = link_3.__hash__()
    assert var_3 == -4606328870177462788
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_5.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_6 = module_0.Link(bool_3)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_7 = module_0.Link(var_2)


def test_case_185():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_2.__hash__()
    assert var_3 == -8753497827991233192
    bool_3 = False
    link_3 = module_0.Link(bool_3)
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_4 = False
    link_5 = module_0.Link(bool_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_6.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_7 = module_0.Link(bool_5)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_2, bytes_2)
    var_5 = link_8.__repr__()
    assert (
        var_5
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_6 = False
    link_9 = module_0.Link(bool_6)
    var_6 = var_5.__repr__()
    assert (
        var_6
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_10 = module_0.Link(var_5, var_6, nofollow=link_8)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    none_type_1 = None
    link_11 = module_0.Link(none_type_1)
    var_7 = link_11.__hash__()
    assert var_7 == 477042
    var_8 = var_7.__hash__()
    assert var_8 == 477042
    none_type_2 = None
    none_type_3 = None
    link_12 = module_0.Link(none_type_3)
    var_9 = link_12.__repr__()
    assert var_9 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_10 = var_9.__hash__()
    assert var_10 == 2234852059487564994
    var_11 = var_10.__eq__(none_type_2)
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_13 = module_0.Link(bytes_3)
    link_14 = module_0.Link(link_13)
    var_12 = link_14.__hash__()
    assert var_12 == -4606328870177462788
    var_13 = var_12.__hash__()
    assert var_13 == -2300485860963768837
    var_14 = var_13.__eq__(bytes_1)


def test_case_186():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)


def test_case_187():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_5 = module_0.Link(var_2, var_3, nofollow=link_3)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    none_type_0 = None
    none_type_1 = None
    link_6 = module_0.Link(none_type_1)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_5 = var_4.__hash__()
    assert var_5 == 2234852059487564994
    var_6 = var_5.__eq__(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    bool_2 = True
    link_8 = module_0.Link(bool_2)
    var_7 = link_8.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_9 = module_0.Link(float_0, fragment=var_7)
    link_10 = module_0.Link(float_0, fragment=link_8)
    none_type_2 = None
    bool_3 = True
    link_11 = module_0.Link(bool_3, nofollow=bool_3)
    var_8 = link_11.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_2)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_3, bytes_3)
    var_10 = link_11.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_4 = False
    bool_5 = False
    tuple_0 = (bool_5,)
    link_13 = module_0.Link(bool_4, fragment=tuple_0)
    var_11 = link_13.__hash__()
    assert var_11 == -8753497827991233192
    set_0 = {tuple_0, var_11, bool_5, bool_4}
    var_12 = var_11.__eq__(set_0)
    bool_6 = True
    bool_7 = False
    tuple_1 = (bool_6, bool_7)
    link_14 = module_0.Link(tuple_1, fragment=bool_6)
    var_13 = link_14.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    none_type_3 = None
    link_15 = module_0.Link(link_14, fragment=none_type_3)
    var_15 = link_2.__hash__()
    assert var_15 == 0


def test_case_188():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_0 = None
    link_4 = module_0.Link(link_3, fragment=none_type_0)
    none_type_1 = None
    bool_3 = True
    link_5 = module_0.Link(bool_3, nofollow=bool_3)
    var_5 = link_5.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    bool_4 = False
    link_6 = module_0.Link(bool_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_7.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_8 = module_0.Link(bool_5)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_9 = module_0.Link(var_7, var_8, nofollow=link_7)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_2)
    link_11 = module_0.Link(link_10)
    var_9 = link_11.__hash__()
    assert var_9 == -4606328870177462788
    var_10 = var_9.__hash__()
    assert var_10 == -2300485860963768837
    int_0 = 3199
    link_12 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_6 = False
    bool_7 = False
    tuple_1 = (bool_7,)
    link_13 = module_0.Link(bool_6, fragment=tuple_1)
    var_11 = link_13.__hash__()
    assert var_11 == -8753497827991233192
    set_0 = {tuple_1, var_11, bool_7, bool_6}
    var_12 = var_11.__eq__(set_0)
    var_13 = link_13.__hash__()
    assert var_13 == -8753497827991233192
    var_14 = var_7.__hash__()
    assert var_14 == -8635037249155231917


def test_case_189():
    bool_0 = False
    none_type_0 = None
    link_0 = module_0.Link(bool_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"


def test_case_190():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"


def test_case_191():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_1, bytes_1)
    none_type_0 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_3.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_2, bytes_2)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_3, bytes_3)
    bool_2 = True
    link_6 = module_0.Link(bool_2)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_7 = module_0.Link(float_0, fragment=var_4)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_8 = module_0.Link(tuple_0, fragment=bool_3)
    var_5 = link_8.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__eq__(tuple_0)
    var_8 = var_7.__repr__()
    link_9 = module_0.Link(var_7, fragment=link_8)


def test_case_192():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = False
    none_type_0 = None
    link_2 = module_0.Link(bool_2, fragment=none_type_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_3 = module_0.Link(bool_3, fragment=tuple_1)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    none_type_2 = None
    bool_5 = True
    link_5 = module_0.Link(bool_5, nofollow=bool_5)
    var_5 = link_5.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_2)
    var_7 = var_5.__repr__()
    assert var_7 == "0"
    var_8 = link_4.__hash__()
    assert var_8 == 477042


def test_case_193():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_2 = link_4.__hash__()
    assert var_2 == -4606328870177462788
    bool_2 = True
    link_5 = module_0.Link(bool_2)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_1)
    none_type_0 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_5 = link_6.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_8 = var_6.__repr__()
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_4 = True
    bool_5 = False
    tuple_0 = (bool_4, bool_5)
    link_9 = module_0.Link(tuple_0, fragment=bool_4)
    var_9 = link_9.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    none_type_2 = None
    link_10 = module_0.Link(link_9, fragment=none_type_2)
    bool_6 = True
    bool_7 = False
    tuple_1 = (bool_6, bool_7)
    link_11 = module_0.Link(tuple_1, fragment=bool_6)
    var_11 = link_11.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__eq__(tuple_1)
    var_14 = link_4.__repr__()
    assert (
        var_14
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )


def test_case_194():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_3 = False
    link_4 = module_0.Link(bool_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_5.__repr__()
    assert (
        var_5
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_6 = module_0.Link(bool_4)
    var_6 = var_5.__repr__()
    assert (
        var_6
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    none_type_2 = None
    bool_5 = True
    link_7 = module_0.Link(bool_5, nofollow=bool_5)
    var_7 = link_7.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_2)
    link_8 = module_0.Link(link_7)
    bool_6 = True
    bool_7 = False
    tuple_1 = (bool_6, bool_7)
    link_9 = module_0.Link(tuple_1, fragment=bool_6)
    var_9 = link_9.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__eq__(tuple_1)
    var_12 = var_11.__repr__()
    none_type_3 = None
    none_type_4 = None
    link_10 = module_0.Link(none_type_4)
    var_13 = link_10.__repr__()
    assert var_13 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_14 = var_13.__hash__()
    assert var_14 == 2234852059487564994
    var_15 = var_14.__eq__(none_type_3)
    bool_8 = False
    link_11 = module_0.Link(bool_8)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_2, bytes_2)
    var_16 = link_12.__repr__()
    assert (
        var_16
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_9 = False
    link_13 = module_0.Link(bool_9)
    var_17 = var_16.__repr__()
    assert (
        var_17
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_14 = module_0.Link(var_16, var_17, nofollow=link_12)
    assert f"{type(link_14).__module__}.{type(link_14).__qualname__}" == "link.Link"
    var_18 = link_4.__hash__()
    assert var_18 == 0


def test_case_195():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_2.__hash__()
    assert var_5 == -552935834187556073
    none_type_0 = None
    bool_2 = True
    link_3 = module_0.Link(bool_2, nofollow=bool_2)
    var_6 = link_3.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    var_8 = var_6.__repr__()
    assert var_8 == "0"
    bool_3 = False
    link_4 = module_0.Link(bool_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_5.__repr__()
    assert (
        var_9
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_6 = module_0.Link(tuple_1, fragment=bool_4)
    var_10 = link_6.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = link_2.__repr__()
    assert var_13 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"


def test_case_196():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)


def test_case_197():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bool_2 = False
    link_1 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_3 = module_0.Link(bool_3)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_4 = module_0.Link(var_3, var_4, nofollow=link_2)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_1, fragment=bool_4)
    var_5 = link_5.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_0 = None
    link_6 = module_0.Link(link_5, fragment=none_type_0)
    var_7 = var_3.__eq__(var_6)


def test_case_198():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0)
    var_1 = link_4.__hash__()
    assert var_1 == 477042
    var_2 = var_1.__hash__()
    assert var_2 == 477042
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(url=3106.326, text='', fragment=\"Link(url=True, text='', fragment='', nofollow=False)\", nofollow=False)"
    )


def test_case_199():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, var_1, nofollow=link_1)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_4.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_1, fragment=bool_4)
    var_5 = link_5.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_0 = None
    link_6 = module_0.Link(none_type_0)
    var_7 = link_6.__hash__()
    assert var_7 == 477042
    var_8 = var_7.__hash__()
    assert var_8 == 477042
    bool_6 = False
    bool_7 = False
    tuple_2 = (bool_7,)
    link_7 = module_0.Link(bool_6, fragment=tuple_2)
    var_9 = link_7.__hash__()
    assert var_9 == -8753497827991233192
    link_8 = module_0.Link(var_9, var_9, nofollow=var_9)
    var_10 = var_8.__hash__()
    assert var_10 == 477042


def test_case_200():
    bool_0 = False
    none_type_0 = None
    link_0 = module_0.Link(bool_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"
    none_type_1 = None
    link_1 = module_0.Link(none_type_1)
    var_1 = link_1.__hash__()
    assert var_1 == 477042
    var_2 = var_1.__hash__()
    assert var_2 == 477042
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_2.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_0, var_3, bool_2, bool_1}
    var_4 = var_3.__eq__(set_0)
    var_5 = link_2.__hash__()
    assert var_5 == -8753497827991233192
    none_type_2 = None
    bool_3 = True
    link_3 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_3.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_2)
    link_4 = module_0.Link(link_3)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    bool_4 = True
    link_6 = module_0.Link(bool_4)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_7 = module_0.Link(float_0, fragment=var_8)
    link_8 = module_0.Link(float_0, fragment=link_6)
    bool_5 = False
    link_9 = module_0.Link(bool_5)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_10.__repr__()
    assert (
        var_9
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_6 = False
    link_11 = module_0.Link(bool_6)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_12.__repr__()
    assert (
        var_10
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_7 = False
    link_13 = module_0.Link(bool_7)
    var_11 = var_10.__repr__()
    assert (
        var_11
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_14 = module_0.Link(var_10, var_11, nofollow=link_12)
    assert f"{type(link_14).__module__}.{type(link_14).__qualname__}" == "link.Link"
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_15 = module_0.Link(bytes_3)
    link_16 = module_0.Link(link_15)
    var_12 = link_16.__hash__()
    assert var_12 == -4606328870177462788
    bool_8 = True
    bool_9 = False
    tuple_1 = (bool_8, bool_9)
    link_17 = module_0.Link(tuple_1, fragment=bool_8)
    var_13 = link_17.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_13.__hash__()
    assert var_16 == -552935834187556073
    var_17 = var_1.__hash__()
    assert var_17 == 477042


def test_case_201():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0


def test_case_202():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)


def test_case_203():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__hash__()
    assert var_2 == -552935834187556073


def test_case_204():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    none_type_1 = None
    none_type_2 = None
    link_2 = module_0.Link(none_type_2)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_3 = var_2.__hash__()
    assert var_3 == 2234852059487564994
    var_4 = var_3.__eq__(none_type_1)
    var_5 = link_0.__hash__()
    assert var_5 == -5164621852614943975


def test_case_205():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_0.__hash__()
    assert var_1 == -8753497827991233192


def test_case_206():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_2 = module_0.Link(bool_3, fragment=tuple_1)
    var_2 = link_2.__hash__()
    assert var_2 == -8753497827991233192
    set_0 = {tuple_1, var_2, bool_4, bool_3}
    var_3 = var_2.__eq__(set_0)
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    var_5 = link_2.__hash__()
    assert var_5 == -8753497827991233192
    dict_0 = {link_1: var_0}
    link_3 = module_0.Link(dict_0)


def test_case_207():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    bool_1 = True
    link_5 = module_0.Link(bool_1)
    var_1 = link_5.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_6 = module_0.Link(float_1, fragment=var_1)
    bool_2 = True
    link_7 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_2 = link_7.__hash__()
    assert var_2 == 1
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_8 = module_0.Link(bool_3, fragment=tuple_0)
    var_3 = link_8.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_0, var_3, bool_4, bool_3}
    var_4 = var_3.__eq__(set_0)
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_9 = module_0.Link(bool_5, fragment=tuple_1)
    var_5 = link_9.__hash__()
    assert var_5 == -8753497827991233192
    set_1 = {tuple_1, var_5, bool_6, bool_5}
    var_6 = var_5.__eq__(set_1)
    var_7 = link_9.__hash__()
    assert var_7 == -8753497827991233192
    bool_7 = True
    bool_8 = False
    tuple_2 = (bool_7, bool_8)
    link_10 = module_0.Link(tuple_2, fragment=bool_7)
    var_8 = link_10.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    none_type_0 = None
    link_11 = module_0.Link(link_10, fragment=none_type_0)
    bool_9 = False
    link_12 = module_0.Link(bool_9)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_13.__repr__()
    assert (
        var_10
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_10 = False
    link_14 = module_0.Link(bool_10)
    var_11 = var_10.__repr__()
    assert (
        var_11
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_15 = module_0.Link(var_10, var_11, nofollow=link_13)
    assert f"{type(link_15).__module__}.{type(link_15).__qualname__}" == "link.Link"
    none_type_1 = None
    bool_11 = True
    link_16 = module_0.Link(bool_11, nofollow=bool_11)
    var_12 = link_16.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_1)
    link_17 = module_0.Link(link_16)
    link_18 = module_0.Link(bool_11)


def test_case_208():
    int_0 = 1093
    set_0 = {int_0, int_0}
    link_0 = module_0.Link(int_0, set_0, set_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    int_1 = 859
    link_1 = module_0.Link(link_0, set_0, int_1)
    str_0 = "z`?&dyeyQ'\x0c\x0cbSj/Urq,"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bytes_0 = b"l\xc4\x00\xca\x1fp\xce\x94\x88\xf2\x0e\x18\xd2\x92\xb7n\x08\x9f"
    link_2 = module_0.Link(bytes_0)
    var_0 = link_2.__hash__()
    assert var_0 == -236866080198168850
    var_1 = var_0.__repr__()
    assert var_1 == "-236866080198168850"
    var_2 = var_1.__hash__()
    assert var_2 == 4534865783331405880
    var_3 = var_2.__eq__(dict_0)
    var_4 = var_3.__eq__(link_1)


def test_case_209():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_3 = module_0.Link(bool_4, fragment=tuple_2)
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    link_4 = module_0.Link(var_5, var_5, nofollow=var_5)
    var_6 = link_3.__hash__()
    assert var_6 == -8753497827991233192
    none_type_1 = None
    bool_6 = True
    link_5 = module_0.Link(bool_6, nofollow=bool_6)
    var_7 = link_5.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    var_9 = var_7.__repr__()
    assert var_9 == "0"
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_6 = module_0.Link(tuple_3, fragment=bool_7)
    var_10 = link_6.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_10.__hash__()
    assert var_13 == -552935834187556073
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_0, bytes_0)
    bool_9 = False
    none_type_2 = None
    link_8 = module_0.Link(bool_9, fragment=none_type_2)
    var_14 = link_8.__repr__()
    assert var_14 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_10 = False
    bool_11 = False
    tuple_4 = (bool_11,)
    link_9 = module_0.Link(bool_10, fragment=tuple_4)
    var_15 = link_9.__hash__()
    assert var_15 == -8753497827991233192
    set_0 = {tuple_4, var_15, bool_11, bool_10}
    var_16 = var_15.__eq__(set_0)
    var_17 = var_3.__repr__()
    assert var_17 == "'-5164621852614943975'"


def test_case_210():
    bool_0 = False
    none_type_0 = None
    link_0 = module_0.Link(bool_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_3 = True
    link_3 = module_0.Link(bool_3, bool_3, nofollow=bool_3)
    var_3 = link_3.__hash__()
    assert var_3 == 1
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_6 = module_0.Link(tuple_1, fragment=bool_4)
    var_4 = link_6.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_1)
    var_7 = var_6.__repr__()
    none_type_2 = None
    bool_6 = True
    link_7 = module_0.Link(bool_6, nofollow=bool_6)
    var_8 = link_7.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_2)
    link_8 = module_0.Link(link_7)
    bool_7 = True
    bool_8 = False
    tuple_2 = (bool_7, bool_8)
    link_9 = module_0.Link(tuple_2, fragment=bool_7)
    var_10 = link_9.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    bool_9 = True
    bool_10 = False
    tuple_3 = (bool_9, bool_10)
    link_11 = module_0.Link(tuple_3, fragment=bool_9)
    var_13 = link_11.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__hash__()
    assert var_15 == -552935834187556073
    var_16 = var_2.__eq__(bool_6)


def test_case_211():
    bool_0 = False
    none_type_0 = None
    link_0 = module_0.Link(bool_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_1 = False
    link_1 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_1 = link_2.__repr__()
    assert (
        var_1
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_3 = module_0.Link(bool_2)
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    bool_3 = True
    link_5 = module_0.Link(bool_3)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_6 = module_0.Link(float_0, fragment=var_3)
    link_7 = module_0.Link(float_0, fragment=link_5)
    bool_4 = True
    link_8 = module_0.Link(bool_4)
    var_4 = link_8.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_5 = True
    bool_6 = False
    tuple_0 = (bool_5, bool_6)
    link_9 = module_0.Link(tuple_0, fragment=bool_5)
    var_5 = link_9.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    int_0 = 3199
    link_10 = module_0.Link(int_0, int_0, nofollow=int_0)
    none_type_1 = None
    bool_7 = True
    link_11 = module_0.Link(bool_7, nofollow=bool_7)
    var_8 = link_11.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_11.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_13 = module_0.Link(link_11)
    var_11 = link_13.__repr__()
    assert (
        var_11
        == "Link(url=Link(url=True, text='', fragment='', nofollow=True), text='', fragment='', nofollow=False)"
    )


def test_case_212():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_0.__hash__()
    assert var_1 == -8753497827991233192
    none_type_0 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    link_3 = module_0.Link(link_2)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_4 = link_5.__hash__()
    assert var_4 == -4606328870177462788
    bool_3 = True
    link_6 = module_0.Link(bool_3)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_0)
    bool_4 = False
    link_7 = module_0.Link(bool_4)
    var_7 = link_0.__repr__()
    assert var_7 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    var_8 = var_7.__eq__(var_6)


def test_case_213():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_5 = module_0.Link(var_4, var_5, nofollow=link_3)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_6 = module_0.Link(bool_3, fragment=tuple_0)
    var_6 = link_6.__hash__()
    assert var_6 == -8753497827991233192
    set_0 = {tuple_0, var_6, bool_4, bool_3}
    var_7 = var_6.__eq__(set_0)
    var_8 = link_6.__hash__()
    assert var_8 == -8753497827991233192
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_7 = module_0.Link(tuple_1, fragment=bool_5)
    var_9 = link_7.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__eq__(tuple_1)
    var_12 = var_11.__repr__()
    int_0 = 3199
    link_8 = module_0.Link(int_0, int_0, nofollow=int_0)
    none_type_2 = None
    bool_7 = True
    link_9 = module_0.Link(bool_7, nofollow=bool_7)
    var_13 = link_9.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_15 = link_9.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    bool_8 = True
    link_12 = module_0.Link(bool_8)
    var_16 = link_12.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_13 = module_0.Link(float_0, fragment=var_16)
    link_14 = module_0.Link(float_0, fragment=link_12)
    none_type_3 = None
    bool_9 = True
    link_15 = module_0.Link(bool_9, nofollow=bool_9)
    var_17 = link_15.__hash__()
    assert var_17 == 0
    var_18 = var_17.__eq__(none_type_3)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_16 = module_0.Link(bytes_3, bytes_3)
    var_19 = link_15.__repr__()
    assert var_19 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_17 = module_0.Link(link_15)
    link_18 = module_0.Link(var_2)


def test_case_214():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_2 = link_3.__hash__()
    assert var_2 == -4606328870177462788
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_2, bytes_2)
    var_3 = var_0.__eq__(var_2)


def test_case_215():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_2 = link_2.__hash__()
    assert var_2 == -8753497827991233192
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_3 = module_0.Link(tuple_1, fragment=bool_3)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    bool_5 = False
    link_5 = module_0.Link(bool_5)
    none_type_1 = None
    bool_6 = True
    link_6 = module_0.Link(bool_6, nofollow=bool_6)
    var_5 = link_6.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    bool_7 = False
    bool_8 = False
    tuple_2 = (bool_8,)
    link_7 = module_0.Link(bool_7, fragment=tuple_2)
    var_7 = link_7.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_2, var_7, bool_8, bool_7}
    var_8 = var_7.__eq__(set_0)
    var_9 = link_7.__hash__()
    assert var_9 == -8753497827991233192
    var_10 = link_7.__hash__()
    assert var_10 == -8753497827991233192
    bool_9 = True
    link_8 = module_0.Link(bool_9)
    var_11 = link_8.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    int_0 = 3199
    link_9 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_12 = link_7.__eq__(link_0)
    assert var_12 is False


def test_case_216():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__hash__()
    assert var_1 == 477042
    none_type_1 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    var_4 = var_2.__repr__()
    assert var_4 == "0"
    var_5 = var_3.__repr__()


def test_case_217():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    bool_2 = False
    link_3 = module_0.Link(bool_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_4.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_5 = module_0.Link(bool_3)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_6 = module_0.Link(var_4, var_5, nofollow=link_4)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_7 = module_0.Link(tuple_1, fragment=bool_4)
    var_6 = link_7.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_0 = None
    link_8 = module_0.Link(link_7, fragment=none_type_0)
    none_type_1 = None
    bool_6 = True
    link_9 = module_0.Link(bool_6, nofollow=bool_6)
    var_8 = link_9.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_9.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_11 = var_9.__repr__()
    bool_7 = False
    bool_8 = False
    tuple_2 = (bool_8,)
    link_11 = module_0.Link(bool_7, fragment=tuple_2)
    var_12 = link_11.__hash__()
    assert var_12 == -8753497827991233192
    set_0 = {tuple_2, var_12, bool_8, bool_7}
    var_13 = var_12.__eq__(set_0)
    var_14 = link_11.__hash__()
    assert var_14 == -8753497827991233192
    var_15 = link_11.__hash__()
    assert var_15 == -8753497827991233192
    none_type_2 = None
    bool_9 = True
    link_12 = module_0.Link(bool_9, nofollow=bool_9)
    var_16 = link_12.__hash__()
    assert var_16 == 0
    var_17 = var_16.__eq__(none_type_2)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_3, bytes_3)
    var_18 = link_12.__repr__()
    assert var_18 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_14 = module_0.Link(link_12)
    var_19 = var_3.__repr__()
    assert var_19 == "'-5164621852614943975'"


def test_case_218():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_1 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_0, var_1, bool_2, bool_1}
    var_2 = var_1.__eq__(set_0)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    var_4 = link_1.__hash__()
    assert var_4 == -8753497827991233192
    var_5 = var_2.__hash__()


def test_case_219():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    bool_4 = True
    link_2 = module_0.Link(bool_4)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_5 = True
    link_4 = module_0.Link(bool_5, bool_5, nofollow=bool_5)
    var_7 = link_4.__hash__()
    assert var_7 == 1
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_6 = False
    bool_7 = False
    tuple_2 = (bool_7,)
    link_6 = module_0.Link(bool_6, fragment=tuple_2)
    var_8 = link_6.__hash__()
    assert var_8 == -8753497827991233192
    none_type_2 = None
    bool_8 = True
    link_7 = module_0.Link(bool_8, nofollow=bool_8)
    var_9 = link_7.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_0, bytes_0)
    var_11 = link_7.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_3 = None
    bool_9 = True
    link_9 = module_0.Link(bool_9, nofollow=bool_9)
    var_12 = link_9.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_3)
    link_10 = module_0.Link(link_9)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_1)
    link_12 = module_0.Link(link_11)
    var_14 = link_12.__hash__()
    assert var_14 == -4606328870177462788
    var_15 = link_6.__repr__()
    assert var_15 == "Link(url=False, text='', fragment=(False,), nofollow=False)"


def test_case_220():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=False, text='', fragment='', nofollow=False)"
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_5 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_5.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__hash__()
    assert var_4 == -552935834187556073
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, fragment=none_type_1)
    var_5 = link_6.__hash__()
    assert var_5 == 0
    var_6 = var_5.__hash__()
    assert var_6 == 0
    var_7 = var_3.__hash__()
    assert var_7 == -8716866087637373422


def test_case_221():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    none_type_0 = None
    none_type_1 = None
    link_4 = module_0.Link(none_type_1)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == 2234852059487564994
    var_9 = var_8.__eq__(none_type_0)
    var_10 = var_4.__hash__()
    assert var_10 == -8716866087637373422


def test_case_222():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()


def test_case_223():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)


def test_case_224():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    none_type_2 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_2)
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_3.__repr__()
    assert (
        var_5
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    var_6 = var_5.__repr__()
    assert (
        var_6
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_5 = module_0.Link(bool_3, fragment=tuple_0)
    var_7 = link_5.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_0, var_7, bool_4, bool_3}
    var_8 = var_7.__eq__(set_0)
    var_9 = link_5.__hash__()
    assert var_9 == -8753497827991233192
    var_10 = link_5.__hash__()
    assert var_10 == -8753497827991233192
    bool_5 = True
    link_6 = module_0.Link(bool_5)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_3 = None
    link_7 = module_0.Link(none_type_3, fragment=none_type_3)
    var_12 = link_7.__hash__()
    assert var_12 == 0
    var_13 = var_12.__hash__()
    assert var_13 == 0
    none_type_4 = None
    link_8 = module_0.Link(none_type_4, fragment=none_type_4, nofollow=none_type_4)
    bool_6 = True
    bool_7 = False
    tuple_1 = (bool_6, bool_7)
    link_9 = module_0.Link(tuple_1, fragment=bool_6)
    var_14 = link_9.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_14.__hash__()
    assert var_16 == -552935834187556073
    var_17 = link_5.__repr__()
    assert var_17 == "Link(url=False, text='', fragment=(False,), nofollow=False)"


def test_case_225():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    link_2 = module_0.Link(link_1)
    none_type_1 = None
    bool_3 = True
    link_3 = module_0.Link(bool_3, nofollow=bool_3)
    var_3 = link_3.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_5 = module_0.Link(link_3)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_6 = link_7.__hash__()
    assert var_6 == -4606328870177462788
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_8 = module_0.Link(tuple_1, fragment=bool_4)
    var_7 = link_8.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    none_type_2 = None
    link_9 = module_0.Link(link_8, fragment=none_type_2)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_10 = module_0.Link(tuple_2, fragment=bool_6)
    var_9 = link_10.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__eq__(tuple_2)
    var_12 = var_11.__repr__()
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    bool_8 = True
    link_12 = module_0.Link(bool_8)
    var_13 = link_12.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_13 = module_0.Link(float_0, fragment=var_13)
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_14 = module_0.Link(bytes_3)
    link_15 = module_0.Link(link_14)
    var_14 = link_15.__hash__()
    assert var_14 == -4606328870177462788
    var_15 = var_14.__hash__()
    assert var_15 == -2300485860963768837
    var_16 = var_3.__hash__()
    assert var_16 == 0


def test_case_226():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bool_1 = True
    link_2 = module_0.Link(bool_1, bool_1, nofollow=bool_1)
    var_4 = link_2.__hash__()
    assert var_4 == 1
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_5 = link_4.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__hash__()
    assert var_7 == -552935834187556073
    link_5 = module_0.Link(link_2, var_4, nofollow=tuple_0)


def test_case_227():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_3 = link_2.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_1, var_3, bool_3, bool_2}
    var_4 = var_3.__eq__(set_0)
    var_5 = link_2.__hash__()
    assert var_5 == -8753497827991233192
    var_6 = link_2.__hash__()
    assert var_6 == -8753497827991233192
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_3 = module_0.Link(tuple_2, fragment=bool_4)
    var_7 = link_3.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_2)
    var_10 = var_9.__repr__()
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    none_type_1 = None
    bool_6 = True
    link_5 = module_0.Link(bool_6, nofollow=bool_6)
    var_11 = link_5.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_1)
    link_6 = module_0.Link(link_5)
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_7 = module_0.Link(tuple_3, fragment=bool_7)
    var_13 = link_7.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__eq__(tuple_3)
    bool_9 = False
    link_8 = module_0.Link(bool_9)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_0, bytes_0)
    var_16 = link_9.__repr__()
    assert (
        var_16
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_10 = False
    link_10 = module_0.Link(bool_10)
    var_17 = var_16.__repr__()
    assert (
        var_17
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_11 = False
    bool_12 = False
    tuple_4 = (bool_12,)
    link_11 = module_0.Link(bool_11, fragment=tuple_4)
    var_18 = link_11.__hash__()
    assert var_18 == -8753497827991233192
    set_1 = {tuple_4, var_18, bool_12, bool_11}
    var_19 = var_18.__eq__(set_1)
    bool_13 = True
    bool_14 = False
    tuple_5 = (bool_13, bool_14)
    link_12 = module_0.Link(tuple_5, fragment=bool_13)
    var_20 = link_12.__hash__()
    assert var_20 == -5164621852614943975
    var_21 = var_20.__repr__()
    assert var_21 == "-5164621852614943975"
    none_type_2 = None
    link_13 = module_0.Link(link_12, fragment=none_type_2)
    none_type_3 = None
    link_14 = module_0.Link(none_type_3)
    var_22 = link_14.__hash__()
    assert var_22 == 477042
    var_23 = var_22.__hash__()
    assert var_23 == 477042
    var_24 = var_15.__eq__(none_type_0)


def test_case_228():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    none_type_1 = None
    link_2 = module_0.Link(none_type_1)
    var_2 = link_2.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__hash__()
    assert var_3 == 477042
    none_type_2 = None
    none_type_3 = None
    link_3 = module_0.Link(none_type_3)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_5 = var_4.__hash__()
    assert var_5 == 2234852059487564994
    var_6 = var_5.__eq__(none_type_2)
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_5 = module_0.Link(bool_3, fragment=tuple_1)
    var_8 = link_5.__hash__()
    assert var_8 == -8753497827991233192
    link_6 = module_0.Link(var_8, var_8, nofollow=var_8)
    var_9 = link_5.__hash__()
    assert var_9 == -8753497827991233192
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_0)
    link_8 = module_0.Link(link_7)
    var_10 = link_8.__hash__()
    assert var_10 == -4606328870177462788
    bool_5 = False
    link_9 = module_0.Link(bool_5)
    link_10 = module_0.Link(none_type_1, fragment=var_7)


def test_case_229():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_1 = True
    link_2 = module_0.Link(bool_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_3 = module_0.Link(float_0, fragment=var_2)
    link_4 = module_0.Link(float_0, fragment=link_2)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1)
    var_3 = link_5.__hash__()
    assert var_3 == 477042
    var_4 = var_3.__hash__()
    assert var_4 == 477042
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, nofollow=none_type_2)
    bool_2 = True
    link_7 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_5 = link_7.__hash__()
    assert var_5 == 1
    int_0 = 3199
    link_8 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_6 = var_1.__hash__()


def test_case_230():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    none_type_0 = None
    none_type_1 = None
    link_1 = module_0.Link(none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == 2234852059487564994
    var_5 = var_4.__eq__(none_type_0)
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_6 = link_3.__repr__()
    assert (
        var_6
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_4 = module_0.Link(bool_3)
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_1, fragment=bool_4)
    var_8 = link_5.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__repr__()
    assert var_10 == "-5164621852614943975"
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, bool_5)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_6 = True
    link_8 = module_0.Link(bool_6)
    var_11 = link_8.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_9 = module_0.Link(float_0, fragment=var_11)
    none_type_3 = None
    bool_7 = True
    link_10 = module_0.Link(bool_7, nofollow=bool_7)
    var_12 = link_10.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    var_14 = link_10.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_12 = module_0.Link(link_10)
    none_type_4 = None
    bool_8 = True
    link_13 = module_0.Link(bool_8, nofollow=bool_8)
    var_15 = link_13.__hash__()
    assert var_15 == 0
    var_16 = var_15.__eq__(none_type_4)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_14 = module_0.Link(bytes_3, bytes_3)
    var_17 = link_13.__repr__()
    assert var_17 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_18 = var_16.__repr__()
    none_type_5 = None
    link_15 = module_0.Link(none_type_5, nofollow=none_type_5)
    int_0 = 36
    bytes_4 = b"\xeb\xdc\xa3"
    link_16 = module_0.Link(bytes_4)
    var_19 = link_16.__repr__()
    assert (
        var_19 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_20 = var_19.__eq__(int_0)
    var_21 = var_20.__repr__()
    bool_9 = False
    bool_10 = False
    tuple_2 = (bool_10,)
    link_17 = module_0.Link(bool_9, fragment=tuple_2)
    var_22 = link_17.__hash__()
    assert var_22 == -8753497827991233192
    set_1 = {tuple_2, var_22, bool_10, bool_9}
    var_23 = var_22.__eq__(set_1)
    var_24 = link_17.__hash__()
    assert var_24 == -8753497827991233192
    var_25 = link_17.__hash__()
    assert var_25 == -8753497827991233192
    link_18 = module_0.Link(none_type_1, nofollow=link_17)


def test_case_231():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_4 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_4.__hash__()
    assert var_1 == -8753497827991233192
    link_5 = module_0.Link(var_1, var_1, nofollow=var_1)
    none_type_0 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_2 = link_6.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_8 = module_0.Link(link_6)
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_10 = module_0.Link(bool_4, fragment=tuple_1)
    var_5 = link_10.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_1, var_5, bool_5, bool_4}
    var_6 = var_5.__eq__(set_0)
    var_7 = link_10.__hash__()
    assert var_7 == -8753497827991233192
    var_8 = link_10.__hash__()
    assert var_8 == -8753497827991233192
    var_9 = link_1.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"


def test_case_232():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_5 = link_2.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, bool_3)
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_4 = module_0.Link(bool_4, fragment=tuple_2)
    var_8 = link_4.__hash__()
    assert var_8 == -8753497827991233192
    set_0 = {tuple_2, var_8, bool_5, bool_4}
    var_9 = var_8.__eq__(set_0)
    var_10 = link_4.__hash__()
    assert var_10 == -8753497827991233192
    bool_6 = False
    link_5 = module_0.Link(bool_6)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    var_11 = link_6.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_7 = False
    link_7 = module_0.Link(bool_7)
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_8 = module_0.Link(var_11, var_12, nofollow=link_6)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    none_type_2 = None
    bool_8 = True
    link_10 = module_0.Link(bool_8, nofollow=bool_8)
    var_13 = link_10.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_2)
    var_15 = var_13.__repr__()
    assert var_15 == "0"
    bool_9 = True
    bool_10 = False
    tuple_3 = (bool_9, bool_10)
    link_11 = module_0.Link(tuple_3, fragment=bool_9)
    var_16 = link_11.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    var_18 = var_16.__hash__()
    assert var_18 == -552935834187556073


def test_case_233():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, bool_3)
    bool_4 = True
    link_5 = module_0.Link(bool_4)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_0)
    link_7 = module_0.Link(link_6)
    var_8 = link_7.__hash__()
    assert var_8 == -4606328870177462788
    bool_5 = True
    link_8 = module_0.Link(bool_5)
    var_9 = link_8.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_10 = var_8.__eq__(bytes_0)
    none_type_2 = None
    bool_6 = True
    link_9 = module_0.Link(bool_6, nofollow=bool_6)
    var_11 = link_9.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_2)
    link_10 = module_0.Link(link_9)
    bool_7 = False
    bool_8 = False
    tuple_2 = (bool_8,)
    link_11 = module_0.Link(bool_7, fragment=tuple_2)
    var_13 = link_11.__hash__()
    assert var_13 == -8753497827991233192
    set_0 = {tuple_2, var_13, bool_8, bool_7}
    var_14 = var_13.__eq__(set_0)
    bool_9 = True
    link_12 = module_0.Link(bool_9, bool_9, nofollow=bool_9)
    var_15 = link_12.__hash__()
    assert var_15 == 1
    var_16 = var_9.__repr__()
    assert var_16 == "\"Link(url=True, text='', fragment='', nofollow=False)\""


def test_case_234():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    none_type_0 = None
    none_type_1 = None
    link_1 = module_0.Link(none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == 2234852059487564994
    var_5 = var_4.__eq__(none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_6 = link_2.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__eq__(tuple_1)
    var_9 = var_8.__repr__()
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_3 = module_0.Link(tuple_2, fragment=bool_4)
    var_10 = link_3.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_10.__hash__()
    assert var_13 == -552935834187556073
    var_14 = link_3.__hash__()
    assert var_14 == -5164621852614943975


def test_case_235():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(link_1, fragment=none_type_0)
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_3 = module_0.Link(bool_4, fragment=tuple_2)
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_2, var_5, bool_5, bool_4}
    var_6 = var_5.__eq__(set_0)
    var_7 = link_3.__hash__()
    assert var_7 == -8753497827991233192
    var_8 = link_3.__hash__()
    assert var_8 == -8753497827991233192
    bool_6 = True
    bool_7 = False
    tuple_3 = (bool_6, bool_7)
    link_4 = module_0.Link(tuple_3, fragment=bool_6)
    var_9 = link_4.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    bool_8 = False
    link_5 = module_0.Link(bool_8)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    var_11 = link_6.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_9 = True
    link_7 = module_0.Link(bool_9, bool_9, nofollow=bool_9)
    var_12 = link_7.__hash__()
    assert var_12 == 1
    var_13 = var_10.__eq__(link_5)


def test_case_236():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__hash__()
    assert var_2 == -552935834187556073
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073


def test_case_237():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_4 = link_3.__hash__()
    assert var_4 == -4606328870177462788
    none_type_1 = None
    bool_3 = True
    link_4 = module_0.Link(bool_3, nofollow=bool_3)
    var_5 = link_4.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    link_5 = module_0.Link(link_4)
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_6 = module_0.Link(bool_4, fragment=tuple_1)
    var_7 = link_6.__hash__()
    assert var_7 == -8753497827991233192
    link_7 = module_0.Link(var_7, var_7, nofollow=var_7)
    var_8 = link_6.__hash__()
    assert var_8 == -8753497827991233192
    bool_6 = False
    bool_7 = False
    tuple_2 = (bool_7,)
    link_8 = module_0.Link(bool_6, fragment=tuple_2)
    var_9 = link_8.__hash__()
    assert var_9 == -8753497827991233192
    link_9 = module_0.Link(var_9, var_9, nofollow=var_9)
    bool_8 = True
    link_10 = module_0.Link(bool_8, bool_8, nofollow=bool_8)
    var_10 = link_10.__hash__()
    assert var_10 == 1
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_1, bytes_1)
    bool_9 = False
    bool_10 = False
    tuple_3 = (bool_10,)
    link_12 = module_0.Link(bool_9, fragment=tuple_3)
    var_11 = link_12.__hash__()
    assert var_11 == -8753497827991233192
    set_0 = {tuple_3, var_11, bool_10, bool_9}
    var_12 = var_11.__eq__(set_0)
    var_13 = link_12.__hash__()
    assert var_13 == -8753497827991233192
    var_14 = link_12.__hash__()
    assert var_14 == -8753497827991233192
    bool_11 = False
    bool_12 = False
    tuple_4 = (bool_12,)
    link_13 = module_0.Link(bool_11, fragment=tuple_4)
    var_15 = link_13.__hash__()
    assert var_15 == -8753497827991233192
    set_1 = {tuple_4, var_15, bool_12, bool_11}
    var_16 = var_15.__eq__(set_1)
    var_17 = link_0.__repr__()
    assert var_17 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_238():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__hash__()
    assert var_5 == -552935834187556073
    bool_4 = False
    link_3 = module_0.Link(bool_4)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_4 = module_0.Link(tuple_2, fragment=bool_5)
    var_7 = link_4.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_2)
    var_10 = var_9.__repr__()
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_5 = module_0.Link(tuple_3, fragment=bool_7)
    var_11 = link_5.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    bool_9 = True
    bool_10 = False
    tuple_4 = (bool_9, bool_10)
    link_6 = module_0.Link(tuple_4, fragment=bool_9)
    var_13 = link_6.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__repr__()
    assert var_15 == "-5164621852614943975"
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, bool_10)
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, fragment=none_type_2)
    var_16 = link_8.__hash__()
    assert var_16 == 0
    var_17 = var_16.__hash__()
    assert var_17 == 0
    bool_11 = False
    bool_12 = False
    tuple_5 = (bool_12,)
    link_9 = module_0.Link(bool_11, fragment=tuple_5)
    var_18 = link_9.__hash__()
    assert var_18 == -8753497827991233192
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_0)
    link_11 = module_0.Link(link_10)
    var_19 = link_11.__hash__()
    assert var_19 == -4606328870177462788
    var_20 = var_19.__hash__()
    assert var_20 == -2300485860963768837
    link_12 = module_0.Link(bool_1, nofollow=bool_8)


def test_case_239():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)


def test_case_240():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = True
    link_2 = module_0.Link(bool_1, bool_1, nofollow=bool_1)
    var_1 = link_2.__hash__()
    assert var_1 == 1
    link_3 = module_0.Link(var_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_2 = link_3.__hash__()
    assert var_2 == -8635037249155231917


def test_case_241():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    none_type_0 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_4 = link_4.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_6 = module_0.Link(link_4)
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    none_type_2 = None
    bool_3 = True
    link_8 = module_0.Link(bool_3, nofollow=bool_3)
    var_7 = link_8.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_2)
    link_9 = module_0.Link(link_8)
    bool_4 = True
    bool_5 = False
    tuple_0 = (bool_4, bool_5)
    link_10 = module_0.Link(tuple_0, fragment=bool_4)
    var_9 = link_10.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__eq__(tuple_0)
    int_0 = 3199
    link_11 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_12 = var_3.__hash__()
    assert var_12 == -3936900723769714473


def test_case_242():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    link_2 = module_0.Link(link_1)


def test_case_243():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    bool_4 = False
    link_3 = module_0.Link(bool_4)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_4.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    bool_5 = True
    link_6 = module_0.Link(bool_5)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_7 = module_0.Link(float_0, fragment=var_8)
    link_8 = module_0.Link(float_0, fragment=link_6)
    bool_6 = False
    bool_7 = False
    tuple_2 = (bool_7,)
    link_9 = module_0.Link(bool_6, fragment=tuple_2)
    var_9 = link_9.__hash__()
    assert var_9 == -8753497827991233192
    set_0 = {tuple_2, var_9, bool_7, bool_6}
    var_10 = var_9.__eq__(set_0)
    bool_8 = True
    link_10 = module_0.Link(bool_8)
    var_11 = link_10.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_9 = False
    link_11 = module_0.Link(bool_9)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_2, bytes_2)
    var_12 = link_12.__repr__()
    assert (
        var_12
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_10 = False
    link_13 = module_0.Link(bool_10)
    var_13 = var_12.__repr__()
    assert (
        var_13
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_14 = module_0.Link(var_12, var_13, nofollow=link_12)
    assert f"{type(link_14).__module__}.{type(link_14).__qualname__}" == "link.Link"
    none_type_1 = None
    link_15 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_11 = True
    bool_12 = False
    tuple_3 = (bool_11, bool_12)
    link_16 = module_0.Link(tuple_3, fragment=bool_11)
    var_14 = link_16.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_14.__hash__()
    assert var_16 == -552935834187556073
    var_17 = var_11.__eq__(tuple_3)


def test_case_244():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_1 = module_0.Link(bytes_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_2 = var_1.__eq__(int_0)
    var_3 = var_2.__repr__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_4 = link_3.__hash__()
    assert var_4 == -4606328870177462788
    bool_2 = True
    link_4 = module_0.Link(bool_2)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_1)
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_6.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__hash__()
    assert var_9 == -552935834187556073
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_7 = module_0.Link(tuple_2, fragment=bool_5)
    var_10 = link_7.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_2)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, fragment=none_type_1)
    var_13 = link_8.__hash__()
    assert var_13 == 0
    var_14 = var_13.__hash__()
    assert var_14 == 0
    none_type_2 = None
    bool_7 = True
    link_9 = module_0.Link(bool_7, nofollow=bool_7)
    var_15 = link_9.__hash__()
    assert var_15 == 0
    var_16 = var_15.__eq__(none_type_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_17 = link_9.__repr__()
    assert var_17 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_18 = var_16.__repr__()
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_11 = module_0.Link(tuple_3, fragment=bool_8)
    var_19 = link_11.__hash__()
    assert var_19 == -5164621852614943975
    var_20 = var_19.__repr__()
    assert var_20 == "-5164621852614943975"
    var_21 = var_19.__repr__()
    assert var_21 == "-5164621852614943975"
    none_type_3 = None
    link_12 = module_0.Link(none_type_3, bool_9)
    none_type_4 = None
    link_13 = module_0.Link(none_type_4)
    var_22 = link_13.__hash__()
    assert var_22 == 477042
    var_23 = var_22.__hash__()
    assert var_23 == 477042
    var_24 = var_2.__eq__(bool_7)


def test_case_245():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    none_type_0 = None
    bool_1 = True
    link_1 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    var_3 = var_1.__repr__()
    assert var_3 == "0"
    none_type_1 = None
    link_2 = module_0.Link(none_type_1)
    var_4 = link_2.__hash__()
    assert var_4 == 477042
    var_5 = var_4.__hash__()
    assert var_5 == 477042
    list_0 = []
    var_6 = var_3.__eq__(list_0)


def test_case_246():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_1)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_4 = module_0.Link(tuple_0, fragment=bool_0)
    var_4 = link_4.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__hash__()
    assert var_6 == -552935834187556073
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_2 = False
    link_6 = module_0.Link(bool_2)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_2)
    link_8 = module_0.Link(link_7)
    var_7 = link_8.__hash__()
    assert var_7 == -4606328870177462788
    var_8 = var_7.__hash__()
    assert var_8 == -2300485860963768837
    none_type_2 = None
    link_9 = module_0.Link(none_type_2)
    var_9 = link_9.__hash__()
    assert var_9 == 477042
    var_10 = var_9.__hash__()
    assert var_10 == 477042
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_10 = module_0.Link(bool_3, fragment=tuple_1)
    var_11 = link_10.__hash__()
    assert var_11 == -8753497827991233192
    set_0 = {tuple_1, var_11, bool_4, bool_3}
    var_12 = var_11.__eq__(set_0)
    var_13 = link_10.__hash__()
    assert var_13 == -8753497827991233192
    var_14 = link_10.__hash__()
    assert var_14 == -8753497827991233192
    var_15 = link_6.__repr__()
    assert var_15 == "Link(url=False, text='', fragment='', nofollow=False)"


def test_case_247():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_1, bytes_1)
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_4 = module_0.Link(float_0, fragment=var_4)
    link_5 = module_0.Link(float_0, fragment=link_3)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_6 = module_0.Link(tuple_0, fragment=bool_2)
    var_5 = link_6.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__eq__(tuple_0)
    var_8 = var_7.__repr__()
    bool_4 = False
    link_7 = module_0.Link(bool_4)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_2, bytes_2)
    var_9 = link_8.__repr__()
    assert (
        var_9
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = True
    link_9 = module_0.Link(bool_5)
    var_10 = link_9.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    int_0 = 3199
    link_10 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_6 = False
    bool_7 = False
    tuple_1 = (bool_7,)
    link_11 = module_0.Link(bool_6, fragment=tuple_1)
    var_11 = link_11.__hash__()
    assert var_11 == -8753497827991233192
    set_0 = {tuple_1, var_11, bool_7, bool_6}
    var_12 = var_11.__eq__(set_0)
    var_13 = link_11.__hash__()
    assert var_13 == -8753497827991233192
    bool_8 = True
    link_12 = module_0.Link(bool_8, bool_8, nofollow=bool_8)
    var_14 = link_12.__hash__()
    assert var_14 == 1
    bool_9 = True
    bool_10 = False
    tuple_2 = (bool_9, bool_10)
    link_13 = module_0.Link(tuple_2, fragment=bool_9)
    var_15 = link_13.__hash__()
    assert var_15 == -5164621852614943975
    var_16 = var_15.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = link_9.__repr__()
    assert var_17 == "Link(url=True, text='', fragment='', nofollow=False)"


def test_case_248():
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_249():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = link_0.__hash__()
    assert var_3 == 0


def test_case_250():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_1 = False
    none_type_0 = None
    link_1 = module_0.Link(bool_1, fragment=none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_2 = module_0.Link(bytes_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_4.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    none_type_1 = None
    link_5 = module_0.Link(link_4, fragment=none_type_1)
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_6 = module_0.Link(bool_4, fragment=tuple_1)
    var_4 = link_6.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_1, var_4, bool_5, bool_4}
    var_5 = var_4.__eq__(set_0)
    bool_6 = False
    bool_7 = False
    tuple_2 = (bool_7,)
    link_7 = module_0.Link(bool_6, fragment=tuple_2)
    var_6 = link_7.__hash__()
    assert var_6 == -8753497827991233192
    link_8 = module_0.Link(var_6, var_6, nofollow=var_6)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_2)
    link_10 = module_0.Link(link_9)
    var_7 = link_10.__hash__()
    assert var_7 == -4606328870177462788
    link_11 = module_0.Link(none_type_1, fragment=link_10)


def test_case_251():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_2 = module_0.Link(bool_0, fragment=tuple_0)
    var_1 = link_2.__hash__()
    assert var_1 == -8753497827991233192
    link_3 = module_0.Link(var_1, var_1, nofollow=var_1)
    bool_2 = True
    link_4 = module_0.Link(bool_2)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )


def test_case_252():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_4 = module_0.Link(bool_3, fragment=tuple_1)
    var_7 = link_4.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_1, var_7, bool_4, bool_3}
    var_8 = var_7.__eq__(set_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    bool_5 = True
    link_6 = module_0.Link(bool_5)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_7 = module_0.Link(float_0, fragment=var_9)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_2)
    link_9 = module_0.Link(link_8)
    var_10 = link_9.__hash__()
    assert var_10 == -4606328870177462788
    var_11 = var_10.__hash__()
    assert var_11 == -2300485860963768837
    bool_6 = False
    bool_7 = False
    tuple_2 = (bool_7,)
    link_10 = module_0.Link(bool_6, fragment=tuple_2)
    var_12 = link_10.__hash__()
    assert var_12 == -8753497827991233192
    set_1 = {tuple_2, var_12, bool_7, bool_6}
    var_13 = var_12.__eq__(set_1)
    var_14 = link_10.__hash__()
    assert var_14 == -8753497827991233192
    bool_8 = True
    link_11 = module_0.Link(bool_8)
    var_15 = link_11.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_9 = False
    bool_10 = False
    tuple_3 = (bool_10,)
    link_12 = module_0.Link(bool_9, fragment=tuple_3)
    var_16 = link_12.__hash__()
    assert var_16 == -8753497827991233192
    link_13 = module_0.Link(var_16, var_16, nofollow=var_16)
    bool_11 = False
    none_type_0 = None
    link_14 = module_0.Link(bool_11, fragment=none_type_0)
    var_17 = link_14.__repr__()
    assert var_17 == "Link(url=False, text='', fragment=None, nofollow=False)"
    var_18 = link_14.__hash__()
    assert var_18 == 477042


def test_case_253():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_254():
    bool_0 = False
    none_type_0 = None
    link_0 = module_0.Link(bool_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_1 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_0, var_1, bool_2, bool_1}
    var_2 = var_1.__eq__(set_0)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    var_4 = var_1.__eq__(none_type_0)


def test_case_255():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(link_1, fragment=none_type_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_4 = module_0.Link(bool_4, fragment=tuple_2)
    var_5 = link_4.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_2, var_5, bool_5, bool_4}
    var_6 = var_5.__eq__(set_0)
    var_7 = link_4.__hash__()
    assert var_7 == -8753497827991233192
    var_8 = link_4.__hash__()
    assert var_8 == -8753497827991233192
    bool_6 = True
    link_5 = module_0.Link(bool_6, bool_6, nofollow=bool_6)
    var_9 = link_5.__hash__()
    assert var_9 == 1
    bool_7 = False
    link_6 = module_0.Link(bool_7)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_0, bytes_0)
    var_10 = link_7.__repr__()
    assert (
        var_10
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    none_type_2 = None
    bool_8 = True
    link_8 = module_0.Link(bool_8, nofollow=bool_8)
    var_11 = link_8.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_13 = link_8.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_14 = link_8.__hash__()
    assert var_14 == 0
    bool_9 = True
    link_10 = module_0.Link(bool_9)
    var_15 = link_10.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_3 = None
    bool_10 = True
    link_11 = module_0.Link(bool_10, nofollow=bool_10)
    var_16 = link_11.__hash__()
    assert var_16 == 0
    var_17 = var_16.__eq__(none_type_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_2, bytes_2)
    var_18 = link_11.__repr__()
    assert var_18 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_19 = var_16.__repr__()
    assert var_19 == "0"


def test_case_256():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_0.__repr__()
    assert var_2 == "0"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_0)
    var_6 = var_5.__repr__()
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_2 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_2.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    none_type_1 = None
    bool_5 = True
    link_3 = module_0.Link(bool_5, nofollow=bool_5)
    var_10 = link_3.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_1)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_4 = module_0.Link(tuple_2, fragment=bool_6)
    var_12 = link_4.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    bool_8 = False
    link_5 = module_0.Link(bool_8)
    var_14 = var_10.__hash__()
    assert var_14 == 0


def test_case_257():
    complex_0 = -2489 + 3297.83623j
    link_0 = module_0.Link(complex_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1172959022599657258


def test_case_258():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"


def test_case_259():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    var_3 = var_1.__hash__()
    assert var_3 == -8716866087637373422
    var_4 = var_3.__hash__()
    assert var_4 == -1799337059996291569


def test_case_260():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_2 = link_2.__hash__()
    assert var_2 == -8753497827991233192
    set_0 = {tuple_0, var_2, bool_2, bool_1}
    var_3 = var_2.__eq__(set_0)
    var_4 = link_0.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_261():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_4 = link_3.__hash__()
    assert var_4 == -4606328870177462788
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_4 = module_0.Link(bool_1, fragment=tuple_0)
    var_5 = link_4.__hash__()
    assert var_5 == -8753497827991233192
    link_5 = module_0.Link(var_5, var_5, nofollow=var_5)
    var_6 = link_4.__hash__()
    assert var_6 == -8753497827991233192
    none_type_1 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_7 = link_6.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    var_9 = var_7.__repr__()
    assert var_9 == "0"
    link_7 = module_0.Link(bool_2)


def test_case_262():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, bool_3)
    bool_4 = False
    link_3 = module_0.Link(bool_4)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    none_type_1 = None
    bool_5 = True
    link_5 = module_0.Link(bool_5, nofollow=bool_5)
    var_6 = link_5.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_1)
    link_6 = module_0.Link(link_5)
    bool_6 = False
    link_7 = module_0.Link(bool_6)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_9 = var_4.__hash__()
    assert var_9 == -8716866087637373422


def test_case_263():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = link_0.__hash__()
    assert var_3 == 0
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_1, bytes_1)
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_4 = module_0.Link(float_0, fragment=var_4)
    link_5 = module_0.Link(float_0, fragment=link_3)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1)
    var_5 = link_6.__hash__()
    assert var_5 == 477042
    var_6 = var_5.__hash__()
    assert var_6 == 477042
    complex_0 = -2489 + 3297.83623j
    link_7 = module_0.Link(complex_0)
    var_7 = link_7.__hash__()
    assert var_7 == 1172959022599657258
    none_type_2 = None
    bool_2 = True
    link_8 = module_0.Link(bool_2, nofollow=bool_2)
    var_8 = link_8.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_2)
    link_9 = module_0.Link(link_8)
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, nofollow=none_type_3)
    none_type_4 = None
    bool_3 = True
    link_11 = module_0.Link(bool_3, nofollow=bool_3)
    var_10 = link_11.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_4)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_2, bytes_2)
    var_12 = link_11.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_4 = True
    bool_5 = False
    tuple_0 = (bool_4, bool_5)
    link_13 = module_0.Link(tuple_0, fragment=bool_4)
    var_13 = link_13.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    none_type_5 = None
    link_14 = module_0.Link(link_13, fragment=none_type_5)
    bool_6 = True
    bool_7 = False
    tuple_1 = (bool_6, bool_7)
    link_15 = module_0.Link(tuple_1, fragment=bool_6)
    var_15 = link_15.__hash__()
    assert var_15 == -5164621852614943975
    var_16 = var_15.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = var_15.__repr__()
    assert var_17 == "-5164621852614943975"
    none_type_6 = None
    link_16 = module_0.Link(none_type_6, bool_7)
    bool_8 = False
    link_17 = module_0.Link(bool_8)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_18 = module_0.Link(bytes_3, bytes_3)
    var_18 = link_18.__repr__()
    assert (
        var_18
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_9 = False
    link_19 = module_0.Link(bool_9)
    var_19 = var_18.__repr__()
    assert (
        var_19
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    var_20 = link_0.__hash__()
    assert var_20 == 0


def test_case_264():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    complex_0 = -2489 + 3297.83623j
    link_1 = module_0.Link(complex_0)
    var_2 = link_1.__hash__()
    assert var_2 == 1172959022599657258
    none_type_1 = None
    link_2 = module_0.Link(none_type_1)
    var_3 = link_2.__hash__()
    assert var_3 == 477042
    var_4 = var_3.__hash__()
    assert var_4 == 477042
    none_type_2 = None
    bool_0 = True
    link_3 = module_0.Link(bool_0, nofollow=bool_0)
    var_5 = link_3.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_8 = var_6.__repr__()
    none_type_3 = None
    bool_1 = True
    link_5 = module_0.Link(bool_1, nofollow=bool_1)
    var_9 = link_5.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_3)
    link_6 = module_0.Link(link_5)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_7 = module_0.Link(tuple_0, fragment=bool_2)
    var_11 = link_7.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    bool_4 = False
    link_8 = module_0.Link(bool_4)
    var_13 = link_8.__repr__()
    assert var_13 == "Link(url=False, text='', fragment='', nofollow=False)"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_9 = module_0.Link(bytes_1)
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_10 = module_0.Link(bool_5, fragment=tuple_1)
    var_14 = link_10.__hash__()
    assert var_14 == -8753497827991233192
    int_0 = 36
    bytes_2 = b"\xeb\xdc\xa3"
    link_11 = module_0.Link(bytes_2)
    var_15 = link_11.__repr__()
    assert (
        var_15 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_16 = var_15.__eq__(int_0)
    var_17 = var_16.__repr__()
    var_18 = var_17.__eq__(int_0)
    var_19 = var_18.__eq__(bool_4)


def test_case_265():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"


def test_case_266():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__hash__()
    assert var_1 == 477042
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_2 = link_1.__hash__()
    assert var_2 == -8753497827991233192
    link_2 = module_0.Link(var_2, var_2, nofollow=var_2)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_3 = module_0.Link(bool_2, fragment=tuple_1)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_1, var_4, bool_3, bool_2}
    var_5 = var_4.__eq__(set_0)
    var_6 = link_3.__hash__()
    assert var_6 == -8753497827991233192
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_2, fragment=bool_4)
    var_7 = link_5.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__hash__()
    assert var_9 == -552935834187556073
    bool_6 = True
    link_6 = module_0.Link(bool_6, bool_6, nofollow=bool_6)
    var_10 = link_6.__hash__()
    assert var_10 == 1
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_7 = module_0.Link(tuple_3, fragment=bool_7)
    var_11 = link_7.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__eq__(tuple_3)
    var_14 = var_13.__repr__()
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_8 = module_0.Link(bytes_0)
    none_type_2 = None
    bool_9 = True
    link_9 = module_0.Link(bool_9, nofollow=bool_9)
    var_15 = link_9.__hash__()
    assert var_15 == 0
    var_16 = var_15.__eq__(none_type_2)
    link_10 = module_0.Link(link_9)
    none_type_3 = None
    link_11 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    link_12 = module_0.Link(tuple_2)


def test_case_267():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_7 = link_3.__hash__()
    assert var_7 == -4606328870177462788
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_2)
    link_5 = module_0.Link(link_4)
    var_8 = link_5.__hash__()
    assert var_8 == -4606328870177462788
    bool_2 = True
    link_6 = module_0.Link(bool_2)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_10 = var_8.__eq__(bytes_2)
    none_type_0 = None
    bool_3 = True
    link_7 = module_0.Link(bool_3, nofollow=bool_3)
    var_11 = link_7.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_0)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_3, bytes_3)
    var_13 = link_7.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_4 = False
    link_9 = module_0.Link(bool_4)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_4, bytes_4)
    var_14 = link_10.__repr__()
    assert (
        var_14
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_11 = module_0.Link(bool_5)
    var_15 = var_14.__repr__()
    assert (
        var_15
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_12 = module_0.Link(var_14, var_15, nofollow=link_10)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"
    none_type_1 = None
    link_13 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    var_16 = var_13.__hash__()
    assert var_16 == 5710265117276615615


def test_case_268():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__hash__()
    assert var_4 == 0
    none_type_1 = None
    link_2 = module_0.Link(none_type_1)
    var_5 = link_2.__hash__()
    assert var_5 == 477042
    var_6 = var_5.__hash__()
    assert var_6 == 477042
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_7 = link_4.__hash__()
    assert var_7 == -4606328870177462788
    bool_2 = True
    link_5 = module_0.Link(bool_2)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_1, fragment=bool_3)
    var_10 = link_6.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    none_type_2 = None
    link_7 = module_0.Link(link_6, fragment=none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    bool_5 = True
    link_9 = module_0.Link(bool_5)
    var_12 = link_9.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_10 = module_0.Link(float_0, fragment=var_12)
    none_type_3 = None
    bool_6 = True
    link_11 = module_0.Link(bool_6, nofollow=bool_6)
    var_13 = link_11.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_3)
    var_15 = var_0.__repr__()
    assert var_15 == "-8753497827991233192"


def test_case_269():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bool_2 = False
    link_1 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    var_5 = var_4.__eq__(var_0)


def test_case_270():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_4.__hash__()
    assert var_7 == -552935834187556073
    var_8 = var_5.__hash__()
    assert var_8 == -8716866087637373422


def test_case_271():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_0 = link_2.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_3 = module_0.Link(link_2, fragment=none_type_0)
    none_type_1 = None
    bool_3 = True
    link_4 = module_0.Link(bool_3, nofollow=bool_3)
    var_2 = link_4.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_6 = module_0.Link(bytes_1)
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_7 = module_0.Link(bool_4, fragment=tuple_1)
    var_5 = link_7.__hash__()
    assert var_5 == -8753497827991233192
    link_8 = module_0.Link(var_5, var_5, nofollow=var_5)
    var_6 = var_3.__hash__()


def test_case_272():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, bool_1)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    var_6 = link_1.__repr__()
    assert var_6 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"


def test_case_273():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bool_1 = True
    link_2 = module_0.Link(bool_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_2 = True
    link_3 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_5 = link_3.__hash__()
    assert var_5 == 1
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_6 = link_5.__hash__()
    assert var_6 == -4606328870177462788
    var_7 = var_6.__hash__()
    assert var_7 == -2300485860963768837
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_6 = module_0.Link(bytes_2)
    var_8 = link_0.__hash__()
    assert var_8 == 0


def test_case_274():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()


def test_case_275():
    complex_0 = -2489 + 3297.83623j
    link_0 = module_0.Link(complex_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1172959022599657258
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    var_3 = var_1.__repr__()
    assert var_3 == "0"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    bool_3 = True
    dict_0 = {}
    none_type_1 = None
    float_0 = 2515.28653
    link_3 = module_0.Link(dict_0, none_type_1, float_0, none_type_1)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_6 = var_5.__eq__(bool_3)
    var_7 = var_6.__hash__()
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_4 = module_0.Link(bool_4, fragment=tuple_1)
    var_8 = link_4.__hash__()
    assert var_8 == -8753497827991233192
    set_0 = {tuple_1, var_8, bool_5, bool_4}
    var_9 = var_8.__eq__(set_0)
    var_10 = link_4.__hash__()
    assert var_10 == -8753497827991233192
    bool_6 = False
    bool_7 = False
    tuple_2 = (bool_7,)
    link_5 = module_0.Link(bool_6, fragment=tuple_2)
    var_11 = link_5.__hash__()
    assert var_11 == -8753497827991233192
    set_1 = {tuple_2, var_11, bool_7, bool_6}
    var_12 = var_11.__eq__(set_1)
    var_13 = link_5.__hash__()
    assert var_13 == -8753497827991233192
    var_14 = link_5.__hash__()
    assert var_14 == -8753497827991233192
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_7 = module_0.Link(tuple_3, fragment=bool_8)
    var_15 = link_7.__hash__()
    assert var_15 == -5164621852614943975
    var_16 = var_15.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = var_15.__hash__()
    assert var_17 == -552935834187556073
    var_18 = link_4.__repr__()
    assert var_18 == "Link(url=False, text='', fragment=(False,), nofollow=False)"


def test_case_276():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__hash__()
    assert var_4 == 0
    bool_2 = True
    dict_0 = {}
    none_type_1 = None
    float_0 = 2515.28653
    link_2 = module_0.Link(dict_0, none_type_1, float_0, none_type_1)
    var_5 = link_2.__repr__()
    var_6 = var_5.__eq__(bool_2)
    var_7 = var_6.__hash__()
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_3 = module_0.Link(bool_3, fragment=tuple_1)
    var_8 = link_3.__hash__()
    assert var_8 == -8753497827991233192
    link_4 = module_0.Link(var_8, var_8, nofollow=var_8)
    var_9 = link_3.__hash__()
    assert var_9 == -8753497827991233192
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_5 = module_0.Link(tuple_2, fragment=bool_5)
    var_10 = link_5.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_2)
    bool_7 = False
    link_6 = module_0.Link(bool_7)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_0, bytes_0)
    var_13 = link_7.__repr__()
    assert (
        var_13
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_8 = False
    link_8 = module_0.Link(bool_8)
    var_14 = var_13.__repr__()
    assert (
        var_14
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_9 = module_0.Link(var_13, bytes_0)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    bool_9 = True
    bool_10 = False
    tuple_3 = (bool_9, bool_10)
    link_10 = module_0.Link(tuple_3, fragment=bool_9)
    var_15 = link_10.__hash__()
    assert var_15 == -5164621852614943975
    var_16 = var_15.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = var_15.__repr__()
    assert var_17 == "-5164621852614943975"
    none_type_2 = None
    link_11 = module_0.Link(none_type_2, bool_10)
    var_18 = var_0.__eq__(none_type_0)
    var_19 = var_18.__hash__()


def test_case_277():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, var_1, nofollow=link_1)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_4.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_2.__hash__()
    assert var_5 == -552935834187556073
    bool_4 = False
    link_5 = module_0.Link(bool_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_6.__repr__()
    assert (
        var_6
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_7 = module_0.Link(bool_5)
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    var_8 = var_4.__repr__()
    assert var_8 == "'-5164621852614943975'"


def test_case_278():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    bool_2 = True
    link_3 = module_0.Link(bool_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_0)
    none_type_0 = None
    bool_3 = True
    link_4 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_4.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    var_8 = var_6.__repr__()
    assert var_8 == "0"
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, nofollow=none_type_1)
    none_type_2 = None
    bool_4 = True
    link_6 = module_0.Link(bool_4, nofollow=bool_4)
    var_9 = link_6.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_2)
    link_7 = module_0.Link(link_6)
    var_11 = var_9.__eq__(var_8)


def test_case_279():
    tuple_0 = ()
    link_0 = module_0.Link(tuple_0, nofollow=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    dict_0 = {tuple_0: link_0}
    list_0 = [dict_0, dict_0, tuple_0]
    bool_0 = True
    str_0 = ""
    dict_1 = {str_0: str_0}
    tuple_1 = (list_0, bool_0, str_0, dict_1)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=(), text='', fragment='', nofollow=())"
    link_1 = module_0.Link(tuple_1, fragment=list_0, nofollow=var_0)


def test_case_280():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    bool_1 = True
    dict_0 = {}
    none_type_0 = None
    float_1 = 2515.28653
    link_3 = module_0.Link(dict_0, none_type_0, float_1, none_type_0)
    var_1 = link_3.__repr__()
    var_2 = var_1.__eq__(bool_1)
    var_3 = var_2.__hash__()
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_4 = link_4.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_1 = None
    bool_4 = True
    link_5 = module_0.Link(bool_4, nofollow=bool_4)
    var_7 = link_5.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_5.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_7 = module_0.Link(link_5)
    int_0 = 36
    bytes_2 = b"\xeb\xdc\xa3"
    link_8 = module_0.Link(bytes_2)
    var_10 = link_8.__repr__()
    assert (
        var_10 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_11 = var_10.__eq__(int_0)
    var_12 = var_11.__repr__()
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_9 = module_0.Link(tuple_1, fragment=bool_5)
    var_13 = link_9.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    none_type_2 = None
    link_10 = module_0.Link(link_9, fragment=none_type_2)
    link_11 = module_0.Link(link_8, bool_0)
    var_15 = link_11.__repr__()
    assert (
        var_15
        == "Link(url=Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False), text=True, fragment='', nofollow=False)"
    )


def test_case_281():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__hash__()
    assert var_3 == 0
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_4 = module_0.Link(bool_3)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    none_type_1 = None
    bool_4 = True
    link_5 = module_0.Link(bool_4, nofollow=bool_4)
    var_6 = link_5.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_1)
    link_6 = module_0.Link(link_5)
    none_type_2 = None
    bool_5 = True
    link_7 = module_0.Link(bool_5, nofollow=bool_5)
    var_8 = link_7.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    var_10 = link_7.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_11 = var_9.__repr__()
    link_9 = module_0.Link(var_10)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"


def test_case_282():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_1 = module_0.Link(bool_2, fragment=tuple_1)
    var_2 = link_1.__hash__()
    assert var_2 == -8753497827991233192
    set_0 = {tuple_1, var_2, bool_3, bool_2}
    var_3 = var_2.__eq__(set_0)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_2 = module_0.Link(tuple_2, fragment=bool_4)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = link_2.__repr__()
    assert var_6 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_0 = None
    link_3 = module_0.Link(none_type_0)
    var_7 = link_3.__hash__()
    assert var_7 == 477042
    var_8 = var_7.__hash__()
    assert var_8 == 477042
    bool_6 = True
    dict_0 = {}
    none_type_1 = None
    float_0 = 2515.28653
    link_4 = module_0.Link(dict_0, none_type_1, float_0, none_type_1)
    var_9 = link_4.__repr__()
    var_10 = var_9.__eq__(bool_6)
    var_11 = var_10.__hash__()
    bool_7 = False
    link_5 = module_0.Link(bool_7)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    var_12 = link_6.__repr__()
    assert (
        var_12
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_8 = False
    link_7 = module_0.Link(bool_8)
    var_13 = var_12.__repr__()
    assert (
        var_13
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_8 = module_0.Link(bytes_1)
    var_14 = link_8.__repr__()
    assert (
        var_14 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_15 = var_14.__eq__(int_0)
    var_16 = var_15.__repr__()
    var_17 = var_16.__eq__(int_0)
    bool_9 = False
    bool_10 = False
    tuple_3 = (bool_10,)
    link_9 = module_0.Link(bool_9, fragment=tuple_3)
    var_18 = link_9.__hash__()
    assert var_18 == -8753497827991233192
    set_1 = {tuple_3, var_18, bool_10, bool_9}
    var_19 = var_18.__eq__(set_1)
    var_20 = link_9.__hash__()
    assert var_20 == -8753497827991233192
    var_21 = link_9.__hash__()
    assert var_21 == -8753497827991233192
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_11 = True
    bool_12 = False
    tuple_4 = (bool_11, bool_12)
    link_11 = module_0.Link(tuple_4, fragment=bool_11)
    var_22 = link_11.__hash__()
    assert var_22 == -5164621852614943975
    var_23 = var_22.__repr__()
    assert var_23 == "-5164621852614943975"
    var_24 = var_22.__hash__()
    assert var_24 == -552935834187556073
    bool_13 = True
    bytes_2 = b"\xb6E\x8d\x8bY7\xed"
    tuple_5 = (bool_13, link_1, bytes_2)
    link_12 = module_0.Link(tuple_5, bool_4)


def test_case_283():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    none_type_1 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_6 = var_4.__repr__()
    complex_0 = -2489 + 3297.83623j
    link_4 = module_0.Link(complex_0)
    var_7 = link_4.__hash__()
    assert var_7 == 1172959022599657258
    bool_3 = True
    dict_0 = {}
    none_type_2 = None
    float_0 = 2515.28653
    link_5 = module_0.Link(dict_0, none_type_2, float_0, none_type_2)
    var_8 = link_5.__repr__()
    var_9 = var_8.__eq__(bool_3)
    var_10 = var_9.__hash__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_11 = link_7.__hash__()
    assert var_11 == -4606328870177462788
    var_12 = var_11.__hash__()
    assert var_12 == -2300485860963768837
    none_type_3 = None
    bool_4 = True
    link_8 = module_0.Link(bool_4, nofollow=bool_4)
    var_13 = link_8.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_15 = link_8.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_10 = module_0.Link(link_8)
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_3)
    link_12 = module_0.Link(link_11)
    var_16 = link_12.__hash__()
    assert var_16 == -4606328870177462788
    bool_5 = True
    link_13 = module_0.Link(bool_5)
    var_17 = link_13.__repr__()
    assert var_17 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_18 = var_16.__eq__(bytes_3)
    bool_6 = False
    bool_7 = False
    tuple_1 = (bool_7,)
    link_14 = module_0.Link(bool_6, fragment=tuple_1)
    var_19 = link_14.__hash__()
    assert var_19 == -8753497827991233192
    none_type_4 = None
    none_type_5 = None
    link_15 = module_0.Link(none_type_5)
    var_20 = link_15.__repr__()
    assert var_20 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_21 = var_20.__hash__()
    assert var_21 == 2234852059487564994
    var_22 = var_21.__eq__(none_type_4)
    none_type_6 = None
    bool_8 = True
    link_16 = module_0.Link(bool_8, nofollow=bool_8)
    var_23 = link_16.__hash__()
    assert var_23 == 0
    var_24 = var_23.__eq__(none_type_6)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_17 = module_0.Link(bytes_4, bytes_4)
    var_25 = link_16.__repr__()
    assert var_25 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_18 = module_0.Link(none_type_2, link_12, tuple_0)


def test_case_284():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    complex_0 = -2489 + 3297.83623j
    link_1 = module_0.Link(complex_0)
    var_0 = link_1.__hash__()
    assert var_0 == 1172959022599657258
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__eq__(tuple_0)
    var_4 = var_3.__repr__()
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_3 = module_0.Link(bool_2, fragment=tuple_1)
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    link_4 = module_0.Link(var_5, var_5, nofollow=var_5)
    var_6 = link_3.__hash__()
    assert var_6 == -8753497827991233192
    var_7 = var_5.__repr__()
    assert var_7 == "-8753497827991233192"


def test_case_285():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_286():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    none_type_1 = None
    link_1 = module_0.Link(bool_0, fragment=none_type_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__eq__(tuple_0)
    var_4 = var_3.__repr__()
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_4.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_0)
    link_6 = module_0.Link(link_5)
    var_8 = link_6.__hash__()
    assert var_8 == -4606328870177462788
    bool_5 = True
    link_7 = module_0.Link(bool_5)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_10 = var_8.__eq__(bytes_0)
    none_type_2 = None
    bool_6 = True
    link_8 = module_0.Link(bool_6, nofollow=bool_6)
    var_11 = link_8.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_13 = link_8.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_14 = var_12.__repr__()
    none_type_3 = None
    none_type_4 = None
    link_10 = module_0.Link(none_type_4)
    var_15 = link_10.__repr__()
    assert var_15 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_16 = var_15.__hash__()
    assert var_16 == 2234852059487564994
    var_17 = var_16.__eq__(none_type_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    bool_7 = True
    link_12 = module_0.Link(bool_7)
    var_18 = link_12.__repr__()
    assert var_18 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_13 = module_0.Link(float_1, fragment=var_18)
    var_19 = var_3.__hash__()


def test_case_287():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_1 = link_4.__repr__()
    assert (
        var_1
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_6 = module_0.Link(var_1, var_2, nofollow=link_4)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_0, fragment=bool_3)
    var_3 = link_7.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_0 = None
    link_8 = module_0.Link(link_7, fragment=none_type_0)
    none_type_1 = None
    bool_5 = True
    link_9 = module_0.Link(bool_5, nofollow=bool_5)
    var_5 = link_9.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    var_7 = var_5.__repr__()
    assert var_7 == "0"
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_6 = False
    none_type_3 = None
    link_11 = module_0.Link(bool_6, fragment=none_type_3)
    var_8 = link_11.__repr__()
    assert var_8 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_7 = False
    bool_8 = False
    tuple_1 = (bool_8,)
    link_12 = module_0.Link(bool_7, fragment=tuple_1)
    var_9 = link_12.__hash__()
    assert var_9 == -8753497827991233192
    link_13 = module_0.Link(var_9, var_9, nofollow=var_9)
    complex_0 = -2489 + 3297.83623j
    link_14 = module_0.Link(complex_0)
    var_10 = link_14.__hash__()
    assert var_10 == 1172959022599657258
    link_15 = module_0.Link(link_12, fragment=link_2)


def test_case_288():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    bool_2 = False
    none_type_0 = None
    link_1 = module_0.Link(bool_2, fragment=none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_3 = True
    dict_0 = {}
    none_type_1 = None
    float_0 = 2515.28653
    link_2 = module_0.Link(dict_0, none_type_1, float_0, none_type_1)
    var_4 = link_2.__repr__()
    var_5 = var_4.__eq__(bool_3)
    var_6 = var_5.__hash__()
    none_type_2 = None
    link_3 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_4 = module_0.Link(tuple_1, fragment=bool_4)
    var_7 = link_4.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__hash__()
    assert var_9 == -552935834187556073
    none_type_3 = None
    bool_6 = True
    link_5 = module_0.Link(bool_6, nofollow=bool_6)
    var_10 = link_5.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_3)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    var_12 = link_5.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_7 = module_0.Link(link_5)
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_8 = module_0.Link(bytes_1)
    var_13 = link_8.__repr__()
    assert (
        var_13 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_14 = var_13.__eq__(int_0)
    var_15 = var_14.__repr__()
    var_16 = var_9.__hash__()
    assert var_16 == -552935834187556073


def test_case_289():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_0.__repr__()
    assert var_2 == "0"
    bool_1 = False
    link_1 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_3 = module_0.Link(bool_2)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_4 = module_0.Link(var_3, bytes_0)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_5 = module_0.Link(tuple_0, fragment=bool_3)
    var_5 = link_5.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    link_6 = module_0.Link(link_4, tuple_0, nofollow=link_4)


def test_case_290():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = link_0.__hash__()
    assert var_3 == 0
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_3 = module_0.Link(bool_2, fragment=tuple_0)
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_0, var_5, bool_3, bool_2}
    var_6 = var_5.__eq__(set_0)
    var_7 = link_3.__hash__()
    assert var_7 == -8753497827991233192
    var_8 = link_3.__hash__()
    assert var_8 == -8753497827991233192
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_1, fragment=bool_4)
    var_9 = link_5.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__hash__()
    assert var_11 == -552935834187556073
    none_type_2 = None
    link_6 = module_0.Link(none_type_2)
    var_12 = link_6.__hash__()
    assert var_12 == 477042
    var_13 = var_12.__hash__()
    assert var_13 == 477042
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_7 = module_0.Link(bytes_1)
    none_type_3 = None
    bool_6 = True
    link_8 = module_0.Link(bool_6, nofollow=bool_6)
    var_14 = link_8.__hash__()
    assert var_14 == 0
    var_15 = var_14.__eq__(none_type_3)
    var_16 = var_14.__repr__()
    assert var_16 == "0"
    var_17 = var_15.__eq__(none_type_1)
    var_18 = var_17.__hash__()


def test_case_291():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, var_1, nofollow=link_1)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_5 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_5.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_6 = module_0.Link(bool_4, fragment=tuple_1)
    var_5 = link_6.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_1, var_5, bool_5, bool_4}
    var_6 = var_5.__eq__(set_0)
    var_7 = link_6.__hash__()
    assert var_7 == -8753497827991233192
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_7 = module_0.Link(tuple_2, fragment=bool_6)
    var_8 = link_7.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = link_7.__repr__()
    assert var_10 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    var_11 = link_1.__hash__()
    assert var_11 == 0


def test_case_292():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    complex_0 = -2489 + 3297.83623j
    link_3 = module_0.Link(complex_0)
    var_3 = link_3.__hash__()
    assert var_3 == 1172959022599657258
    var_4 = var_2.__eq__(var_1)
    var_5 = var_4.__repr__()


def test_case_293():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)


def test_case_294():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_1)
    bool_4 = False
    link_2 = module_0.Link(bool_4)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_3.__repr__()
    assert (
        var_5
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_4 = module_0.Link(bool_5)
    var_6 = var_5.__repr__()
    assert (
        var_6
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_5 = module_0.Link(var_5, var_6, nofollow=link_3)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, nofollow=none_type_0)
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, fragment=none_type_1)
    var_7 = link_7.__hash__()
    assert var_7 == 0
    var_8 = var_7.__hash__()
    assert var_8 == 0
    none_type_2 = None
    bool_6 = True
    link_8 = module_0.Link(bool_6, nofollow=bool_6)
    var_9 = link_8.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_2)
    bool_7 = False
    link_9 = module_0.Link(bool_7)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_11 = link_10.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_8 = False
    link_11 = module_0.Link(bool_8)
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_2)
    link_13 = module_0.Link(link_12)
    var_13 = link_13.__hash__()
    assert var_13 == -4606328870177462788
    bool_9 = True
    link_14 = module_0.Link(bool_9)
    var_14 = link_14.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_15 = var_13.__eq__(bytes_2)
    link_15 = module_0.Link(var_9, link_10, nofollow=var_6)


def test_case_295():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_2 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_2 = var_1.__eq__(bool_0)
    var_3 = var_2.__hash__()
    float_1 = 5.0
    link_3 = module_0.Link(float_1)
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_4 = module_0.Link(bytes_1)
    int_0 = 36
    bytes_2 = b"\xeb\xdc\xa3"
    link_5 = module_0.Link(bytes_2)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_5 = var_4.__eq__(int_0)
    var_6 = var_5.__repr__()
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    link_7 = module_0.Link(none_type_0)


def test_case_296():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_1, bytes_1)
    bool_0 = True
    link_3 = module_0.Link(bool_0)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_4 = module_0.Link(float_0, fragment=var_1)
    bool_1 = True
    dict_0 = {}
    none_type_0 = None
    float_1 = 2515.28653
    link_5 = module_0.Link(dict_0, none_type_0, float_1, none_type_0)
    var_2 = link_5.__repr__()
    var_3 = var_2.__eq__(bool_1)
    var_4 = var_3.__hash__()
    var_5 = link_2.__hash__()
    assert var_5 == 0


def test_case_297():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = link_0.__hash__()
    assert var_3 == 0
    dict_0 = {var_1: var_3}
    link_2 = module_0.Link(var_3, nofollow=dict_0)


def test_case_298():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = False
    link_1 = module_0.Link(bool_2)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_2 = module_0.Link(bool_3, fragment=tuple_1)
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_1, var_4, bool_4, bool_3}
    var_5 = var_4.__eq__(set_0)
    var_6 = link_2.__hash__()
    assert var_6 == -8753497827991233192
    var_7 = link_2.__hash__()
    assert var_7 == -8753497827991233192
    var_8 = var_1.__hash__()
    assert var_8 == -8716866087637373422


def test_case_299():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_0)
    none_type_1 = None
    bool_3 = True
    link_2 = module_0.Link(bool_3, nofollow=bool_3)
    var_5 = link_2.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_2.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_8 = var_6.__repr__()
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_4 = module_0.Link(bool_4, fragment=tuple_1)
    var_9 = link_4.__hash__()
    assert var_9 == -8753497827991233192
    link_5 = module_0.Link(var_9, var_9, nofollow=var_9)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_6 = module_0.Link(tuple_2, fragment=bool_6)
    var_10 = link_6.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_10.__hash__()
    assert var_13 == -552935834187556073
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_8 = True
    link_8 = module_0.Link(bool_8)
    var_14 = link_8.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_9 = module_0.Link(float_0, fragment=var_14)
    float_1 = 5.0
    link_10 = module_0.Link(float_1)
    none_type_2 = None
    link_11 = module_0.Link(none_type_2, link_10)
    int_0 = 36
    bytes_2 = b"\xeb\xdc\xa3"
    link_12 = module_0.Link(bytes_2)
    var_15 = link_12.__repr__()
    assert (
        var_15 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_16 = var_15.__eq__(int_0)
    var_17 = var_16.__repr__()
    var_18 = var_17.__eq__(int_0)
    link_13 = module_0.Link(bool_2)


def test_case_300():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    complex_0 = -2489 + 3297.83623j
    link_1 = module_0.Link(complex_0)
    var_4 = link_1.__hash__()
    assert var_4 == 1172959022599657258
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_5 = link_2.__hash__()
    assert var_5 == -8753497827991233192
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    bool_4 = True
    link_4 = module_0.Link(bool_4)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_5 = module_0.Link(float_0, fragment=var_6)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_6 = module_0.Link(tuple_2, fragment=bool_5)
    var_7 = link_6.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(bytes_0)


def test_case_301():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, var_1, nofollow=link_1)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    bool_2 = True
    link_5 = module_0.Link(bool_2)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_6 = module_0.Link(float_0, fragment=var_2)
    link_7 = module_0.Link(float_0, fragment=link_5)
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_8 = module_0.Link(bool_3, fragment=tuple_0)
    var_3 = link_8.__hash__()
    assert var_3 == -8753497827991233192
    link_9 = module_0.Link(var_3, var_3, nofollow=var_3)
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_10 = module_0.Link(bool_5, fragment=tuple_1)
    var_4 = link_10.__hash__()
    assert var_4 == -8753497827991233192
    link_11 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = link_10.__hash__()
    assert var_5 == -8753497827991233192
    int_0 = 3199
    link_12 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_2, bytes_2)
    bool_7 = True
    link_14 = module_0.Link(bool_7)
    var_6 = link_14.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_15 = module_0.Link(float_1, fragment=var_6)
    none_type_0 = None
    link_16 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    none_type_1 = None
    bool_8 = True
    link_17 = module_0.Link(bool_8, nofollow=bool_8)
    var_7 = link_17.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_18 = module_0.Link(bytes_3, bytes_3)
    var_9 = link_17.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_19 = module_0.Link(bytes_4)
    link_20 = module_0.Link(link_19)
    var_10 = link_20.__hash__()
    assert var_10 == -4606328870177462788
    var_11 = var_10.__hash__()
    assert var_11 == -2300485860963768837
    link_21 = module_0.Link(none_type_1)


def test_case_302():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    bool_4 = True
    link_3 = module_0.Link(bool_4)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_4 = module_0.Link(float_0, fragment=var_5)
    link_5 = module_0.Link(float_0, fragment=link_3)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_6 = link_7.__hash__()
    assert var_6 == -4606328870177462788
    var_7 = var_6.__hash__()
    assert var_7 == -2300485860963768837
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_8 = module_0.Link(bool_5, fragment=tuple_2)
    var_8 = link_8.__hash__()
    assert var_8 == -8753497827991233192
    set_1 = {tuple_2, var_8, bool_6, bool_5}
    var_9 = var_8.__eq__(set_1)
    var_10 = link_8.__hash__()
    assert var_10 == -8753497827991233192
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_2)
    link_10 = module_0.Link(link_9)
    var_11 = link_10.__hash__()
    assert var_11 == -4606328870177462788
    bool_7 = False
    link_11 = module_0.Link(bool_7)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_3, bytes_3)
    var_12 = link_12.__repr__()
    assert (
        var_12
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_8 = False
    link_13 = module_0.Link(bool_8)
    var_13 = var_12.__repr__()
    assert (
        var_13
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_14 = module_0.Link(var_12, bytes_3)
    assert f"{type(link_14).__module__}.{type(link_14).__qualname__}" == "link.Link"
    none_type_0 = None
    link_15 = module_0.Link(none_type_0, nofollow=none_type_0)
    none_type_1 = None
    bool_9 = True
    link_16 = module_0.Link(bool_9, nofollow=bool_9)
    var_14 = link_16.__hash__()
    assert var_14 == 0
    var_15 = var_14.__eq__(none_type_1)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_17 = module_0.Link(bytes_4, bytes_4)
    var_16 = link_16.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_17 = link_16.__hash__()
    assert var_17 == 0
    var_18 = var_16.__eq__(var_2)


def test_case_303():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    var_3 = var_2.__hash__()


def test_case_304():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__hash__()
    assert var_2 == -552935834187556073
    bool_2 = False
    none_type_1 = None
    link_2 = module_0.Link(bool_2, fragment=none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=False, text='', fragment=None, nofollow=False)"
    none_type_2 = None
    bool_3 = True
    link_3 = module_0.Link(bool_3, nofollow=bool_3)
    var_4 = link_3.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_2)
    link_7 = module_0.Link(link_6)
    var_7 = link_7.__hash__()
    assert var_7 == -4606328870177462788
    bool_4 = True
    link_8 = module_0.Link(bool_4)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_2)
    var_10 = var_9.__hash__()
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_9 = module_0.Link(bool_5, fragment=tuple_1)
    var_11 = link_9.__hash__()
    assert var_11 == -8753497827991233192
    set_0 = {tuple_1, var_11, bool_6, bool_5}
    var_12 = var_11.__eq__(set_0)
    var_13 = link_9.__hash__()
    assert var_13 == -8753497827991233192
    var_14 = link_9.__hash__()
    assert var_14 == -8753497827991233192
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, fragment=none_type_3)
    var_15 = link_10.__hash__()
    assert var_15 == 0
    var_16 = var_15.__hash__()
    assert var_16 == 0
    int_0 = 36
    bytes_3 = b"\xeb\xdc\xa3"
    link_11 = module_0.Link(bytes_3)
    var_17 = link_11.__repr__()
    assert (
        var_17 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_18 = var_17.__eq__(int_0)
    var_19 = var_18.__repr__()
    var_20 = var_19.__eq__(int_0)
    var_21 = var_0.__hash__()
    assert var_21 == -552935834187556073


def test_case_305():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__hash__()
    assert var_6 == -552935834187556073
    bool_4 = False
    link_4 = module_0.Link(bool_4)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_5 = True
    link_5 = module_0.Link(bool_5)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_6 = False
    link_6 = module_0.Link(bool_6)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_0, bytes_0)
    var_9 = link_7.__repr__()
    assert (
        var_9
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_7 = False
    bool_8 = False
    tuple_2 = (bool_8,)
    link_8 = module_0.Link(bool_7, fragment=tuple_2)
    var_10 = link_8.__hash__()
    assert var_10 == -8753497827991233192
    link_9 = module_0.Link(var_10, var_10, nofollow=var_10)
    float_0 = 5.0
    link_10 = module_0.Link(float_0)
    none_type_1 = None
    link_11 = module_0.Link(none_type_1, link_10)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_1)
    link_13 = module_0.Link(link_12)
    var_11 = link_13.__hash__()
    assert var_11 == -4606328870177462788
    bool_9 = True
    link_14 = module_0.Link(bool_9)
    var_12 = link_14.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_13 = var_11.__eq__(bytes_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_15 = module_0.Link(bytes_2, bytes_2)
    bool_10 = True
    link_16 = module_0.Link(bool_10)
    var_14 = link_16.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_17 = module_0.Link(float_1, fragment=var_14)
    link_18 = module_0.Link(var_13)


def test_case_306():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    bool_0 = False
    none_type_1 = None
    link_2 = module_0.Link(bool_0, fragment=none_type_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_3.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_0, var_1, bool_2, bool_1}
    var_2 = var_1.__eq__(set_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    link_4 = module_0.Link(bool_1)


def test_case_307():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_0 = link_2.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bool_0 = False
    link_3 = module_0.Link(bool_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_2 = link_4.__repr__()
    assert (
        var_2
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, fragment=none_type_0)
    var_3 = link_5.__hash__()
    assert var_3 == 0
    var_4 = var_3.__hash__()
    assert var_4 == 0
    bool_1 = False
    link_6 = module_0.Link(bool_1)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_7 = module_0.Link(var_1)


def test_case_308():
    complex_0 = -2489 + 3297.83623j
    link_0 = module_0.Link(complex_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1172959022599657258
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__hash__()
    assert var_2 == 0
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_2 = module_0.Link(bool_0, fragment=tuple_0)
    var_3 = link_2.__hash__()
    assert var_3 == -8753497827991233192
    link_3 = module_0.Link(var_3, var_3, nofollow=var_3)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_4 = link_5.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    bool_2 = True
    link_7 = module_0.Link(bool_2)
    var_6 = link_7.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_8 = module_0.Link(float_0, fragment=var_6)
    link_9 = module_0.Link(float_0, fragment=link_7)
    none_type_1 = None
    bool_3 = True
    link_10 = module_0.Link(bool_3, nofollow=bool_3)
    var_7 = link_10.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    link_11 = module_0.Link(link_10)
    var_9 = link_3.__repr__()
    assert (
        var_9
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )


def test_case_309():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_3 = link_3.__hash__()
    assert var_3 == -4606328870177462788
    none_type_1 = None
    none_type_2 = None
    link_4 = module_0.Link(none_type_2)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_5 = var_4.__hash__()
    assert var_5 == 2234852059487564994
    var_6 = var_5.__eq__(none_type_1)
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_5 = module_0.Link(bytes_1)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_8 = var_7.__eq__(int_0)
    var_9 = var_8.__repr__()
    none_type_3 = None
    bool_2 = True
    link_6 = module_0.Link(bool_2, nofollow=bool_2)
    var_10 = link_6.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    var_12 = link_6.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_8 = module_0.Link(link_6)
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_9 = module_0.Link(bool_3, fragment=tuple_1)
    var_13 = link_9.__hash__()
    assert var_13 == -8753497827991233192
    link_10 = module_0.Link(var_13, var_13, nofollow=var_13)
    none_type_4 = None
    link_11 = module_0.Link(none_type_4)
    var_14 = link_11.__hash__()
    assert var_14 == 477042
    var_15 = var_14.__hash__()
    assert var_15 == 477042
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_12 = module_0.Link(tuple_2, fragment=bool_5)
    var_16 = link_12.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    var_18 = var_16.__eq__(tuple_2)
    var_19 = var_18.__repr__()
    bool_7 = True
    dict_0 = {}
    none_type_5 = None
    float_0 = 2515.28653
    link_13 = module_0.Link(dict_0, none_type_5, float_0, none_type_5)
    var_20 = link_13.__repr__()
    var_21 = var_20.__eq__(bool_7)
    var_22 = var_21.__hash__()
    var_23 = var_18.__eq__(bool_0)


def test_case_310():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_1 = False
    link_1 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_2.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    int_0 = 3199
    link_3 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_1 = link_4.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_5 = module_0.Link(link_4, fragment=none_type_0)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_6 = module_0.Link(tuple_1, fragment=bool_4)
    var_3 = link_6.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_2.__hash__()
    assert var_6 == -8716866087637373422
    var_7 = var_6.__hash__()
    assert var_7 == -1799337059996291569


def test_case_311():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_4 = module_0.Link(bool_3, fragment=tuple_1)
    var_6 = link_4.__hash__()
    assert var_6 == -8753497827991233192
    link_5 = module_0.Link(var_6, var_6, nofollow=var_6)
    str_0 = "|_qQO(`vH@`v+ksZhn"
    list_0 = [var_2, str_0, tuple_1, var_3]
    link_6 = module_0.Link(list_0)


def test_case_312():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_2 = link_5.__repr__()
    assert (
        var_2
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_0, fragment=bool_3)
    var_3 = link_6.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_0 = None
    link_7 = module_0.Link(link_6, fragment=none_type_0)
    none_type_1 = None
    none_type_2 = None
    link_8 = module_0.Link(none_type_2)
    var_5 = link_8.__repr__()
    assert var_5 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == 2234852059487564994
    var_7 = var_6.__eq__(none_type_1)
    bool_5 = False
    link_9 = module_0.Link(bool_5)
    float_0 = 5.0
    link_10 = module_0.Link(float_0)
    var_8 = link_2.__hash__()
    assert var_8 == 0


def test_case_313():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    link_3 = module_0.Link(var_2, var_2)


def test_case_314():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    none_type_1 = None
    bool_2 = True
    link_3 = module_0.Link(bool_2, nofollow=bool_2)
    var_2 = link_3.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    link_4 = module_0.Link(link_3)
    none_type_2 = None
    link_5 = module_0.Link(none_type_2, fragment=none_type_2)
    var_4 = link_5.__hash__()
    assert var_4 == 0
    var_5 = var_4.__hash__()
    assert var_5 == 0
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_1, fragment=bool_3)
    var_6 = link_7.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = link_7.__repr__()
    assert var_8 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    link_8 = module_0.Link(bool_4)


def test_case_315():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_316():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_3 = link_4.__hash__()
    assert var_3 == -4606328870177462788
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_5 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_5.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_0, var_4, bool_2, bool_1}
    var_5 = var_4.__eq__(set_0)
    none_type_1 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_6.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_9 = var_7.__repr__()
    var_10 = var_3.__hash__()
    assert var_10 == -2300485860963768837


def test_case_317():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bool_2 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_1 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_5 = var_4.__eq__(bool_2)
    var_6 = var_5.__hash__()
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_2 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_2.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_7.__hash__()
    assert var_10 == -552935834187556073
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_3 = module_0.Link(bytes_0)
    var_11 = link_3.__repr__()
    assert (
        var_11 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_12 = var_11.__eq__(int_0)
    var_13 = var_12.__repr__()
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_5 = module_0.Link(tuple_2, fragment=bool_5)
    var_14 = link_5.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    float_1 = 5.0
    link_6 = module_0.Link(float_1)
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_7 = module_0.Link(tuple_3, fragment=bool_7)
    var_16 = link_7.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    var_18 = link_7.__repr__()
    assert var_18 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    var_19 = link_6.__hash__()
    assert var_19 == 5


def test_case_318():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"


def test_case_319():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_1 = link_3.__repr__()
    assert (
        var_1
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_4 = module_0.Link(bool_3)
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_5 = module_0.Link(var_1, bytes_0)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_8 = module_0.Link(tuple_1, fragment=bool_4)
    var_3 = link_8.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = link_1.__repr__()
    assert (
        var_6
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )


def test_case_320():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    link_3 = module_0.Link(bool_0)


def test_case_321():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__hash__()
    assert var_2 == -552935834187556073
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    bool_2 = True
    link_4 = module_0.Link(bool_2)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_5 = module_0.Link(float_0, fragment=var_3)
    none_type_1 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_4 = link_6.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    var_6 = var_4.__repr__()
    assert var_6 == "0"
    none_type_2 = None
    bool_4 = True
    link_7 = module_0.Link(bool_4, nofollow=bool_4)
    var_7 = link_7.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_2)
    bool_5 = False
    link_8 = module_0.Link(bool_5)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_9.__repr__()
    assert (
        var_9
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_2)
    link_11 = module_0.Link(link_10)
    var_10 = link_11.__hash__()
    assert var_10 == -4606328870177462788
    var_11 = var_10.__hash__()
    assert var_11 == -2300485860963768837
    var_12 = var_1.__hash__()
    assert var_12 == -8716866087637373422


def test_case_322():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    var_4 = var_2.__eq__(none_type_0)


def test_case_323():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True


def test_case_324():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    complex_0 = -2489 + 3297.83623j
    link_2 = module_0.Link(complex_0)
    var_3 = link_2.__hash__()
    assert var_3 == 1172959022599657258
    var_4 = link_1.__hash__()
    assert var_4 == 0


def test_case_325():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = True
    link_1 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == 1
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_2 = module_0.Link(bytes_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_6 = var_5.__eq__(int_0)
    var_7 = var_6.__repr__()
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_4 = module_0.Link(bool_3, fragment=tuple_1)
    var_8 = link_4.__hash__()
    assert var_8 == -8753497827991233192
    link_5 = module_0.Link(var_8, var_8, nofollow=var_8)
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_6 = module_0.Link(bool_5, fragment=tuple_2)
    var_9 = link_6.__hash__()
    assert var_9 == -8753497827991233192
    set_0 = {tuple_2, var_9, bool_6, bool_5}
    var_10 = var_9.__eq__(set_0)
    var_11 = link_6.__hash__()
    assert var_11 == -8753497827991233192
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_7 = module_0.Link(tuple_3, fragment=bool_7)
    var_12 = link_7.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_2)
    link_9 = module_0.Link(link_8)
    var_14 = link_9.__hash__()
    assert var_14 == -4606328870177462788
    bool_9 = True
    bool_10 = False
    tuple_4 = (bool_9, bool_10)
    link_10 = module_0.Link(tuple_4, fragment=bool_9)
    var_15 = link_10.__hash__()
    assert var_15 == -5164621852614943975
    var_16 = var_15.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = var_15.__repr__()
    assert var_17 == "-5164621852614943975"
    none_type_0 = None
    link_11 = module_0.Link(none_type_0, bool_10)
    none_type_1 = None
    bool_11 = True
    link_12 = module_0.Link(bool_11, nofollow=bool_11)
    var_18 = link_12.__hash__()
    assert var_18 == 0
    var_19 = var_18.__eq__(none_type_1)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_3, bytes_3)
    var_20 = link_12.__repr__()
    assert var_20 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_21 = var_9.__hash__()
    assert var_21 == -1835968800350151339


def test_case_326():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bool_2 = False
    link_1 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0)
    var_3 = link_3.__hash__()
    assert var_3 == 477042
    var_4 = var_3.__hash__()
    assert var_4 == 477042
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_4 = module_0.Link(bool_3, fragment=tuple_1)
    var_5 = link_4.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_1, var_5, bool_4, bool_3}
    var_6 = var_5.__eq__(set_0)
    bool_5 = True
    link_5 = module_0.Link(bool_5, bool_5, nofollow=bool_5)
    var_7 = link_5.__hash__()
    assert var_7 == 1
    link_6 = module_0.Link(var_4)


def test_case_327():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bool_1 = True
    link_2 = module_0.Link(bool_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, link_3)
    var_5 = link_4.__eq__(link_4)
    assert var_5 is True
    bytes_1 = b"-5164621852614943975"
    link_5 = module_0.Link(bytes_1, nofollow=bytes_1)
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    var_6 = var_0.__repr__()
    assert var_6 == "0"


def test_case_328():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    bool_4 = False
    link_4 = module_0.Link(bool_4)
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_5 = module_0.Link(bool_5, fragment=tuple_1)
    var_4 = link_5.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_1, var_4, bool_6, bool_5}
    var_5 = var_4.__eq__(set_0)
    int_0 = 3199
    link_6 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_7 = False
    bool_8 = False
    tuple_2 = (bool_8,)
    link_7 = module_0.Link(bool_7, fragment=tuple_2)
    var_6 = link_7.__hash__()
    assert var_6 == -8753497827991233192
    set_1 = {tuple_2, var_6, bool_8, bool_7}
    var_7 = var_6.__eq__(set_1)
    var_8 = link_7.__hash__()
    assert var_8 == -8753497827991233192
    var_9 = link_7.__hash__()
    assert var_9 == -8753497827991233192
    var_10 = link_7.__repr__()
    assert var_10 == "Link(url=False, text='', fragment=(False,), nofollow=False)"


def test_case_329():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_6 = link_3.__hash__()
    assert var_6 == -4606328870177462788
    var_7 = var_6.__hash__()
    assert var_7 == -2300485860963768837
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_8 = link_5.__hash__()
    assert var_8 == -4606328870177462788
    bool_3 = True
    link_6 = module_0.Link(bool_3)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_10 = var_8.__eq__(bytes_1)
    var_11 = link_4.__repr__()
    assert (
        var_11
        == "Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False)"
    )


def test_case_330():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    var_3 = link_0.__hash__()
    assert var_3 == -8753497827991233192
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_1 = module_0.Link(bool_2, fragment=tuple_1)
    var_4 = link_1.__hash__()
    assert var_4 == -8753497827991233192
    set_1 = {tuple_1, var_4, bool_3, bool_2}
    var_5 = var_4.__eq__(set_1)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_2 = module_0.Link(tuple_2, fragment=bool_4)
    var_6 = link_2.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, bool_5)
    bool_6 = True
    bool_7 = False
    tuple_3 = (bool_6, bool_7)
    link_4 = module_0.Link(tuple_3, fragment=bool_6)
    var_9 = link_4.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_5 = module_0.Link(bytes_0)
    var_11 = link_5.__repr__()
    assert (
        var_11 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_12 = var_11.__eq__(int_0)
    var_13 = var_12.__repr__()
    bool_8 = True
    bool_9 = False
    tuple_4 = (bool_8, bool_9)
    link_6 = module_0.Link(tuple_4, fragment=bool_8)
    var_14 = link_6.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_14.__repr__()
    assert var_16 == "-5164621852614943975"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_17 = link_8.__hash__()
    assert var_17 == -4606328870177462788
    var_18 = var_17.__hash__()
    assert var_18 == -2300485860963768837
    none_type_1 = None
    bool_10 = True
    link_9 = module_0.Link(bool_10, nofollow=bool_10)
    var_19 = link_9.__hash__()
    assert var_19 == 0
    var_20 = var_19.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_21 = link_9.__repr__()
    assert var_21 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_11 = module_0.Link(link_9)
    none_type_2 = None
    bool_11 = True
    link_12 = module_0.Link(bool_11, nofollow=bool_11)
    var_22 = link_12.__hash__()
    assert var_22 == 0
    var_23 = var_22.__eq__(none_type_2)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_3, bytes_3)
    var_24 = link_12.__repr__()
    assert var_24 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_25 = var_12.__eq__(bytes_0)


def test_case_331():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_1 = link_2.__hash__()
    assert var_1 == -4606328870177462788
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_3 = var_1.__eq__(bytes_0)
    link_4 = module_0.Link(var_3, var_3)
    object_0 = module_1.object()
    link_5 = module_0.Link(object_0, fragment=object_0)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_6 = module_0.Link(tuple_0, fragment=bool_2)
    var_4 = link_6.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    link_7 = module_0.Link(link_3, var_0)


def test_case_332():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"


def test_case_333():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_0 = link_3.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_4 = module_0.Link(bool_0)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    link_5 = module_0.Link(var_2, var_2)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1)
    var_3 = link_6.__hash__()
    assert var_3 == 477042
    var_4 = var_3.__hash__()
    assert var_4 == 477042
    none_type_2 = None
    bool_1 = True
    link_7 = module_0.Link(bool_1, nofollow=bool_1)
    var_5 = link_7.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_2)
    var_7 = var_5.__repr__()
    assert var_7 == "0"
    bool_2 = False
    link_8 = module_0.Link(bool_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_9.__repr__()
    assert (
        var_8
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_10 = module_0.Link(bool_3)
    var_9 = var_8.__repr__()
    assert (
        var_9
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_11 = module_0.Link(var_8, bytes_1)
    assert f"{type(link_11).__module__}.{type(link_11).__qualname__}" == "link.Link"
    bool_4 = False
    link_12 = module_0.Link(bool_4)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_13.__repr__()
    assert (
        var_10
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    bool_6 = False
    tuple_0 = (bool_6,)
    link_14 = module_0.Link(bool_5, fragment=tuple_0)
    var_11 = link_14.__hash__()
    assert var_11 == -8753497827991233192
    set_0 = {tuple_0, var_11, bool_6, bool_5}
    var_12 = var_11.__eq__(set_0)
    var_13 = link_14.__hash__()
    assert var_13 == -8753497827991233192
    var_14 = link_14.__hash__()
    assert var_14 == -8753497827991233192
    var_15 = var_11.__eq__(link_3)


def test_case_334():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_1 = module_0.Link(bool_2, fragment=tuple_1)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    link_2 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_1.__hash__()
    assert var_4 == -8753497827991233192
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_3 = module_0.Link(tuple_2, fragment=bool_4)
    var_5 = link_3.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_7 = link_5.__hash__()
    assert var_7 == -4606328870177462788
    bool_6 = True
    link_6 = module_0.Link(bool_6)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_0)
    var_10 = var_9.__hash__()
    bool_7 = False
    link_7 = module_0.Link(bool_7)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    var_11 = link_8.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_8 = False
    link_9 = module_0.Link(bool_8)
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_10 = module_0.Link(var_11, bytes_1)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    none_type_0 = None
    link_11 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_9 = True
    bool_10 = False
    tuple_3 = (bool_9, bool_10)
    link_12 = module_0.Link(tuple_3, fragment=bool_9)
    var_13 = link_12.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = link_12.__repr__()
    assert var_15 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_1 = None
    link_13 = module_0.Link(none_type_1, fragment=none_type_1)
    var_16 = link_13.__hash__()
    assert var_16 == 0
    var_17 = var_16.__hash__()
    assert var_17 == 0
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_14 = module_0.Link(bytes_2, bytes_2)
    bool_11 = True
    link_15 = module_0.Link(bool_11)
    var_18 = link_15.__repr__()
    assert var_18 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_16 = module_0.Link(float_0, fragment=var_18)
    link_17 = module_0.Link(float_0, fragment=link_15)
    var_19 = var_14.__hash__()
    assert var_19 == -8716866087637373422


def test_case_335():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)


def test_case_336():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()


def test_case_337():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_338():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, var_1, nofollow=link_1)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    bool_2 = True
    link_5 = module_0.Link(bool_2)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_6 = module_0.Link(float_0, fragment=var_2)
    none_type_0 = None
    link_7 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_8 = module_0.Link(tuple_0, fragment=bool_3)
    var_3 = link_8.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__hash__()
    assert var_5 == -552935834187556073
    bool_5 = False
    link_9 = module_0.Link(bool_5)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_6 = link_10.__repr__()
    assert (
        var_6
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_6 = False
    link_11 = module_0.Link(bool_6)
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    var_8 = var_0.__hash__()
    assert var_8 == -8635037249155231917


def test_case_339():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_3.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    bool_3 = True
    link_4 = module_0.Link(bool_3)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_0 = None
    bool_4 = True
    link_5 = module_0.Link(bool_4, nofollow=bool_4)
    var_5 = link_5.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_5 = False
    link_7 = module_0.Link(bool_5)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(url=False, text='', fragment='', nofollow=False)"
    float_1 = 5.0
    link_8 = module_0.Link(float_1)
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, link_8)
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_10 = module_0.Link(bytes_2)
    float_2 = 5.0
    link_11 = module_0.Link(float_2)
    none_type_2 = None
    link_12 = module_0.Link(none_type_2, link_11)
    var_9 = link_12.__eq__(link_12)
    assert var_9 is True
    str_0 = ")VT0di',9Z[,(\n9W0Q"
    link_13 = module_0.Link(bool_1, nofollow=str_0)


def test_case_340():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    link_3 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = link_2.__hash__()
    assert var_5 == -8753497827991233192
    var_6 = link_1.__repr__()
    assert (
        var_6
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )


def test_case_341():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_6 = var_4.__repr__()
    bool_1 = True
    link_3 = module_0.Link(bool_1, bool_1, nofollow=bool_1)
    var_7 = link_3.__hash__()
    assert var_7 == 1
    var_8 = link_0.__repr__()
    assert var_8 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"


def test_case_342():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, nofollow=none_type_0)
    none_type_1 = None
    bool_2 = True
    link_5 = module_0.Link(bool_2, nofollow=bool_2)
    var_2 = link_5.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    link_6 = module_0.Link(link_5)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_0, fragment=bool_3)
    var_4 = link_7.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_0)
    var_7 = var_6.__repr__()
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_8 = module_0.Link(bool_5, fragment=tuple_1)
    var_8 = link_8.__hash__()
    assert var_8 == -8753497827991233192
    link_9 = module_0.Link(var_8, var_8, nofollow=var_8)
    var_9 = link_8.__hash__()
    assert var_9 == -8753497827991233192
    var_10 = link_7.__hash__()
    assert var_10 == -5164621852614943975


def test_case_343():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_1 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_3 = link_4.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    float_1 = 5.0
    link_7 = module_0.Link(float_1)
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, link_7)
    var_5 = link_8.__eq__(link_8)
    assert var_5 is True
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_1)
    link_10 = module_0.Link(link_9)
    var_6 = link_10.__hash__()
    assert var_6 == -4606328870177462788
    var_7 = var_6.__hash__()
    assert var_7 == -2300485860963768837
    bytes_2 = b"-5164621852614943975"
    link_11 = module_0.Link(bytes_2, nofollow=bytes_2)
    bool_4 = True
    bool_5 = False
    tuple_0 = (bool_4, bool_5)
    link_12 = module_0.Link(tuple_0, fragment=bool_4)
    var_8 = link_12.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_8.__hash__()
    assert var_11 == -552935834187556073
    link_13 = module_0.Link(link_5, fragment=link_11)


def test_case_344():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    var_3 = var_2.__hash__()
    none_type_0 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_3.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    var_6 = var_4.__repr__()
    assert var_6 == "0"
    none_type_1 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_7 = link_4.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    bool_3 = True
    dict_0 = {}
    none_type_2 = None
    float_0 = 2515.28653
    link_5 = module_0.Link(dict_0, none_type_2, float_0, none_type_2)
    var_9 = link_5.__repr__()
    var_10 = var_9.__eq__(bool_3)
    var_11 = var_10.__hash__()
    float_1 = 5.0
    link_6 = module_0.Link(float_1)
    none_type_3 = None
    link_7 = module_0.Link(none_type_3, link_6)
    var_12 = link_7.__eq__(link_7)
    assert var_12 is True
    object_0 = module_1.object()
    link_8 = module_0.Link(object_0, fragment=object_0)
    link_9 = module_0.Link(object_0, none_type_3)
    float_2 = 5.0
    link_10 = module_0.Link(float_2)
    bool_4 = True
    bool_5 = False
    tuple_0 = (bool_4, bool_5)
    link_11 = module_0.Link(tuple_0, fragment=bool_4)
    var_13 = link_11.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = link_11.__repr__()
    assert var_15 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bool_6 = False
    bool_7 = False
    tuple_1 = (bool_7,)
    link_12 = module_0.Link(bool_6, fragment=tuple_1)
    var_16 = link_12.__hash__()
    assert var_16 == -8753497827991233192
    link_13 = module_0.Link(var_16, var_16, nofollow=var_16)
    none_type_4 = None
    bool_8 = True
    link_14 = module_0.Link(bool_8, nofollow=bool_8)
    var_17 = link_14.__hash__()
    assert var_17 == 0
    var_18 = var_17.__eq__(none_type_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_15 = module_0.Link(bytes_1, bytes_1)
    var_19 = link_14.__repr__()
    assert var_19 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_20 = link_14.__hash__()
    assert var_20 == 0
    float_3 = 5.0
    link_16 = module_0.Link(float_3)
    none_type_5 = None
    link_17 = module_0.Link(none_type_5, link_16)
    var_21 = link_17.__eq__(link_17)
    assert var_21 is True
    var_22 = link_1.__repr__()
    assert (
        var_22
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )


def test_case_345():
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_1, bytes_1)
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_3 = module_0.Link(float_0, fragment=var_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_4.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    var_4 = var_2.__hash__()
    assert var_4 == -8716866087637373422


def test_case_346():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_0 = None
    link_5 = module_0.Link(none_type_0)
    var_2 = link_5.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__hash__()
    assert var_3 == 477042
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_6 = module_0.Link(tuple_0, fragment=bool_2)
    var_4 = link_6.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_0)
    var_7 = var_6.__repr__()
    bool_4 = True
    link_7 = module_0.Link(bool_4)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_8 = module_0.Link(tuple_1, fragment=bool_5)
    var_9 = link_8.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_9.__hash__()
    assert var_12 == -552935834187556073
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, nofollow=none_type_1)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_1)
    link_11 = module_0.Link(link_10)
    var_13 = link_11.__hash__()
    assert var_13 == -4606328870177462788
    none_type_2 = None
    link_12 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_14 = link_12.__repr__()
    assert var_14 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_13 = module_0.Link(var_14, nofollow=link_12)
    var_15 = link_0.__hash__()
    assert var_15 == 0


def test_case_347():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_0.__repr__()
    assert var_2 == "0"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_0)
    bool_2 = True
    link_4 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_6 = link_4.__hash__()
    assert var_6 == 1
    var_7 = var_2.__eq__(var_2)


def test_case_348():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    bool_1 = False
    link_1 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_3 = module_0.Link(bool_2)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_4 = module_0.Link(var_3, var_4, nofollow=link_2)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    bool_3 = False
    link_5 = module_0.Link(bool_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_6.__repr__()
    assert (
        var_5
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_7 = module_0.Link(bool_4)
    var_6 = var_5.__repr__()
    assert (
        var_6
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_7 = link_8.__repr__()
    assert var_7 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_9 = module_0.Link(var_7, nofollow=link_8)
    bool_5 = False
    bool_6 = False
    tuple_0 = (bool_6,)
    link_10 = module_0.Link(bool_5, fragment=tuple_0)
    var_8 = link_10.__hash__()
    assert var_8 == -8753497827991233192
    set_0 = {tuple_0, var_8, bool_6, bool_5}
    var_9 = var_8.__eq__(set_0)
    var_10 = link_5.__eq__(link_1)
    assert var_10 is True
    var_11 = var_10.__eq__(tuple_0)
    var_12 = var_11.__hash__()


def test_case_349():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_1)
    var_5 = var_4.__repr__()
    none_type_1 = None
    link_3 = module_0.Link(none_type_1)
    var_6 = link_3.__hash__()
    assert var_6 == 477042
    var_7 = var_6.__hash__()
    assert var_7 == 477042
    list_0 = [var_6]
    link_4 = module_0.Link(none_type_1, list_0, nofollow=var_4)


def test_case_350():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_1)
    none_type_0 = None
    bool_4 = True
    link_2 = module_0.Link(bool_4, nofollow=bool_4)
    var_7 = link_2.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_9 = link_2.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_4 = module_0.Link(var_9, nofollow=var_9)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, link_5)
    var_10 = link_6.__eq__(link_6)
    assert var_10 is True
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    link_8 = module_0.Link(object_0, none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    bool_5 = True
    link_10 = module_0.Link(bool_5)
    var_11 = link_10.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_11 = module_0.Link(float_1, fragment=var_11)
    link_12 = module_0.Link(float_1, fragment=link_10)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_2, bytes_2)
    bool_6 = True
    link_14 = module_0.Link(bool_6)
    var_12 = link_14.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_2 = 3106.326
    link_15 = module_0.Link(float_2, fragment=var_12)
    var_13 = var_3.__hash__()


def test_case_351():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    none_type_0 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_4 = link_4.__hash__()
    assert var_4 == 0
    var_5 = link_4.__hash__()
    assert var_5 == 0


def test_case_352():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    int_0 = 3199
    link_3 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_3 = var_1.__repr__()


def test_case_353():
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)


def test_case_354():
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    none_type_0 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_6 = var_4.__repr__()
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    var_7 = link_4.__repr__()
    none_type_1 = None
    bool_3 = True
    link_5 = module_0.Link(bool_3, nofollow=bool_3)
    var_8 = link_5.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_1)
    var_10 = var_8.__repr__()
    assert var_10 == "0"
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, nofollow=none_type_2)
    bool_4 = False
    link_7 = module_0.Link(bool_4)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_2, bytes_2)
    var_11 = link_8.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_9 = module_0.Link(bool_5)
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    var_13 = link_6.__hash__()
    assert var_13 == 0


def test_case_355():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_1 = False
    link_1 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_2.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_3 = module_0.Link(bool_2)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_3 = True
    link_4 = module_0.Link(bool_3, bool_3, nofollow=bool_3)
    var_2 = link_4.__hash__()
    assert var_2 == 1
    none_type_0 = None
    bool_4 = True
    link_5 = module_0.Link(bool_4, nofollow=bool_4)
    var_3 = link_5.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    link_6 = module_0.Link(link_5)
    bool_5 = True
    bool_6 = False
    tuple_0 = (bool_5, bool_6)
    link_7 = module_0.Link(tuple_0, fragment=bool_5)
    var_5 = link_7.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    bool_7 = False
    bool_8 = False
    tuple_1 = (bool_8,)
    link_8 = module_0.Link(bool_7, fragment=tuple_1)
    var_7 = link_8.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_1, var_7, bool_8, bool_7}
    var_8 = var_7.__eq__(set_0)
    var_9 = link_8.__hash__()
    assert var_9 == -8753497827991233192
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_1)
    link_10 = module_0.Link(link_9)
    var_10 = link_10.__hash__()
    assert var_10 == -4606328870177462788
    var_11 = var_10.__hash__()
    assert var_11 == -2300485860963768837
    bool_9 = False
    none_type_1 = None
    link_11 = module_0.Link(bool_9, fragment=none_type_1)
    var_12 = link_11.__repr__()
    assert var_12 == "Link(url=False, text='', fragment=None, nofollow=False)"
    none_type_2 = None
    none_type_3 = None
    link_12 = module_0.Link(none_type_3)
    var_13 = link_12.__repr__()
    assert var_13 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_14 = var_13.__hash__()
    assert var_14 == 2234852059487564994
    var_15 = var_14.__eq__(none_type_2)
    bool_10 = False
    bool_11 = False
    tuple_2 = (bool_11,)
    link_13 = module_0.Link(bool_10, fragment=tuple_2)
    var_16 = link_13.__hash__()
    assert var_16 == -8753497827991233192
    link_14 = module_0.Link(var_16, var_16, nofollow=var_16)
    var_17 = link_13.__hash__()
    assert var_17 == -8753497827991233192
    var_18 = var_14.__hash__()
    assert var_18 == 2234852059487564994


def test_case_356():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_2 = False
    none_type_1 = None
    link_3 = module_0.Link(bool_2, fragment=none_type_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=False, text='', fragment=None, nofollow=False)"
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_2 = None
    link_5 = module_0.Link(none_type_2, link_4)
    var_3 = link_5.__eq__(link_5)
    assert var_3 is True
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    link_7 = module_0.Link(object_0, none_type_2)
    link_8 = module_0.Link(link_2)


def test_case_357():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bytes_1 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_2 = link_1.__hash__()
    assert var_2 == 0


def test_case_358():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_1 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    link_2 = module_0.Link(var_3, var_3, nofollow=var_3)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_3 = module_0.Link(tuple_1, fragment=bool_3)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    var_7 = var_6.__repr__()
    assert (
        var_7 == "\"Link(url=(True, False), text='', fragment=True, nofollow=False)\""
    )


def test_case_359():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_1.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_3 = module_0.Link(var_6, nofollow=var_6)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, link_4)
    var_7 = link_5.__eq__(link_5)
    assert var_7 is True
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    link_7 = module_0.Link(object_0, none_type_1)
    none_type_2 = None
    bool_1 = True
    link_8 = module_0.Link(bool_1, nofollow=bool_1)
    var_8 = link_8.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_2)
    var_10 = var_8.__repr__()
    assert var_10 == "0"
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_9 = module_0.Link(bool_2, fragment=tuple_0)
    var_11 = link_9.__hash__()
    assert var_11 == -8753497827991233192
    float_1 = 5.0
    link_10 = module_0.Link(float_1)
    none_type_3 = None
    link_11 = module_0.Link(none_type_3, link_10)
    var_12 = link_11.__eq__(link_11)
    assert var_12 is True
    int_1 = 36
    bytes_2 = b"\xeb\xdc\xa3"
    link_12 = module_0.Link(bytes_2)
    var_13 = link_12.__repr__()
    assert (
        var_13 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_14 = var_13.__eq__(int_1)
    var_15 = var_14.__repr__()
    float_2 = 5.0
    link_13 = module_0.Link(float_2)
    var_16 = link_3.__hash__()
    assert var_16 == 0


def test_case_360():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    complex_0 = -2489 + 3297.83623j
    link_1 = module_0.Link(complex_0)
    var_0 = link_1.__hash__()
    assert var_0 == 1172959022599657258
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_3 = module_0.Link(bool_0, fragment=tuple_0)
    var_1 = link_3.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_0, var_1, bool_1, bool_0}
    var_2 = var_1.__eq__(set_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_4 = link_5.__hash__()
    assert var_4 == -4606328870177462788
    bool_2 = True
    link_6 = module_0.Link(bool_2)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_0)
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_8 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_8.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__hash__()
    assert var_9 == -552935834187556073
    bool_5 = False
    link_9 = module_0.Link(bool_5)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_10 = link_10.__repr__()
    assert (
        var_10
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_6 = False
    link_11 = module_0.Link(bool_6)
    var_11 = var_10.__repr__()
    assert (
        var_11
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_12 = module_0.Link(var_10, bytes_1)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"
    bool_7 = True
    link_13 = module_0.Link(bool_7, nofollow=bool_7)
    var_12 = var_10.__hash__()
    assert var_12 == -8635037249155231917


def test_case_361():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_1)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    var_4 = var_3.__hash__()
    assert var_4 == -2300485860963768837
    complex_0 = -2489 + 3297.83623j
    link_3 = module_0.Link(complex_0)
    var_5 = link_3.__hash__()
    assert var_5 == 1172959022599657258
    var_6 = var_4.__hash__()
    assert var_6 == -2300485860963768837


def test_case_362():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_2 = module_0.Link(bytes_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_4 = var_3.__eq__(int_0)
    var_5 = var_4.__repr__()
    var_6 = var_5.__eq__(int_0)
    none_type_1 = None
    none_type_2 = None
    link_3 = module_0.Link(none_type_2)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == 2234852059487564994
    var_9 = var_8.__eq__(none_type_1)
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_5.__repr__()
    assert (
        var_10
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_6 = module_0.Link(bool_2)
    var_11 = var_10.__repr__()
    assert (
        var_11
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_7 = module_0.Link(var_10, var_11, nofollow=link_5)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    bool_3 = False
    link_8 = module_0.Link(bool_3)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=False, text='', fragment='', nofollow=False)"
    complex_0 = -2489 + 3297.83623j
    link_9 = module_0.Link(complex_0)
    var_13 = link_9.__hash__()
    assert var_13 == 1172959022599657258
    bool_4 = False
    bool_5 = False
    tuple_0 = (bool_5,)
    link_10 = module_0.Link(bool_4, fragment=tuple_0)
    var_14 = link_10.__hash__()
    assert var_14 == -8753497827991233192
    none_type_3 = None
    link_11 = module_0.Link(none_type_3, fragment=none_type_3)
    var_15 = link_11.__hash__()
    assert var_15 == 0
    var_16 = var_15.__hash__()
    assert var_16 == 0
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_3)
    link_13 = module_0.Link(link_12)
    var_17 = link_13.__hash__()
    assert var_17 == -4606328870177462788
    var_18 = var_17.__hash__()
    assert var_18 == -2300485860963768837
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_14 = module_0.Link(bytes_4, bytes_4)
    bool_6 = True
    link_15 = module_0.Link(bool_6)
    var_19 = link_15.__repr__()
    assert var_19 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_16 = module_0.Link(float_0, fragment=var_19)
    link_17 = module_0.Link(float_0, fragment=link_15)
    var_20 = var_19.__hash__()
    assert var_20 == -7472913314594357801


def test_case_363():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    var_4 = var_0.__hash__()
    assert var_4 == -2300485860963768837


def test_case_364():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    none_type_0 = None
    none_type_1 = None
    link_5 = module_0.Link(none_type_1)
    var_1 = link_5.__repr__()
    assert var_1 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_2 = var_1.__hash__()
    assert var_2 == 2234852059487564994
    var_3 = var_2.__eq__(none_type_0)
    bool_1 = True
    link_6 = module_0.Link(bool_1)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_2 = False
    link_7 = module_0.Link(bool_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_2, bytes_2)
    var_5 = link_8.__repr__()
    assert (
        var_5
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    none_type_2 = None
    bool_3 = True
    link_9 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_9.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_2)
    var_8 = var_6.__repr__()
    assert var_8 == "0"
    bool_4 = True
    bool_5 = False
    tuple_0 = (bool_4, bool_5)
    link_10 = module_0.Link(tuple_0, fragment=bool_4)
    var_9 = link_10.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__eq__(tuple_0)
    link_11 = module_0.Link(bytes_0, bytes_1, nofollow=link_2)


def test_case_365():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_3 = link_4.__hash__()
    assert var_3 == -4606328870177462788
    var_4 = var_3.__hash__()
    assert var_4 == -2300485860963768837
    none_type_1 = None
    bool_2 = True
    link_5 = module_0.Link(bool_2, nofollow=bool_2)
    var_5 = link_5.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    var_8 = link_7.__repr__()
    bool_3 = True
    link_8 = module_0.Link(bool_3)
    var_9 = link_8.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_9 = module_0.Link(tuple_1, fragment=bool_4)
    var_10 = link_9.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_1)
    bool_6 = False
    link_10 = module_0.Link(bool_6)
    bool_7 = True
    bool_8 = False
    tuple_2 = (bool_7, bool_8)
    link_11 = module_0.Link(tuple_2, fragment=bool_7)
    var_13 = link_11.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__repr__()
    assert var_15 == "-5164621852614943975"
    bool_9 = True
    bool_10 = False
    tuple_3 = (bool_9, bool_10)
    link_12 = module_0.Link(tuple_3, fragment=bool_9)
    var_16 = link_12.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    none_type_2 = None
    link_13 = module_0.Link(link_12, fragment=none_type_2)
    link_14 = module_0.Link(link_8, set_0)


def test_case_366():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == 4128530656735687579


def test_case_367():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    bool_2 = True
    link_4 = module_0.Link(bool_2)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_5 = module_0.Link(float_1, fragment=var_3)
    link_6 = module_0.Link(float_1, fragment=link_4)
    float_2 = 5.0
    link_7 = module_0.Link(float_2)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, link_7)
    var_4 = link_8.__eq__(link_8)
    assert var_4 is True
    object_0 = module_1.object()
    link_9 = module_0.Link(object_0, fragment=object_0)
    link_10 = module_0.Link(object_0, none_type_1)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_11 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_11.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    complex_0 = -2489 + 3297.83623j
    link_12 = module_0.Link(complex_0)
    var_8 = link_12.__hash__()
    assert var_8 == 1172959022599657258
    link_13 = module_0.Link(var_6, var_8, none_type_0)
    assert f"{type(link_13).__module__}.{type(link_13).__qualname__}" == "link.Link"


def test_case_368():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_1 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    link_2 = module_0.Link(var_1, var_1, nofollow=var_1)
    none_type_0 = None
    bool_3 = True
    link_3 = module_0.Link(bool_3, nofollow=bool_3)
    var_2 = link_3.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    var_4 = var_2.__repr__()
    assert var_4 == "0"
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, link_4)
    var_5 = link_5.__eq__(link_5)
    assert var_5 is True
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    link_7 = module_0.Link(object_0, none_type_1)
    bool_4 = True
    link_8 = module_0.Link(bool_4)
    var_6 = link_8.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(var_3)


def test_case_369():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == 1
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_2 = var_1.__eq__(var_0)
    assert var_2 is False


def test_case_370():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    var_1 = link_2.__repr__()
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_3 = module_0.Link(bool_0, fragment=tuple_0)
    var_2 = link_3.__hash__()
    assert var_2 == -8753497827991233192
    set_0 = {tuple_0, var_2, bool_1, bool_0}
    var_3 = var_2.__eq__(set_0)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_5 = module_0.Link(tuple_1, fragment=bool_2)
    var_6 = link_5.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    object_1 = module_1.object()
    link_6 = module_0.Link(object_1, fragment=object_1)
    var_8 = var_2.__hash__()
    assert var_8 == -1835968800350151339


def test_case_371():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    none_type_1 = None
    bool_1 = True
    link_2 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_2.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    var_6 = var_4.__repr__()
    assert var_6 == "0"
    bool_2 = False
    none_type_2 = None
    link_3 = module_0.Link(bool_2, fragment=none_type_2)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(url=False, text='', fragment=None, nofollow=False)"
    none_type_3 = None
    link_4 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_5 = module_0.Link(var_8, nofollow=link_4)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_9 = link_5.__hash__()
    assert var_9 == 4128530656735687579
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_0, fragment=bool_3)
    var_10 = link_6.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    none_type_4 = None
    link_7 = module_0.Link(link_6, fragment=none_type_4)
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_8 = module_0.Link(bytes_1)
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_9 = module_0.Link(bool_5, fragment=tuple_1)
    var_12 = link_9.__hash__()
    assert var_12 == -8753497827991233192
    link_10 = module_0.Link(var_12, var_12, nofollow=var_12)
    var_13 = link_9.__hash__()
    assert var_13 == -8753497827991233192
    list_0 = [var_0, none_type_0, link_5, var_4]
    link_11 = module_0.Link(none_type_1, list_0)


def test_case_372():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_1 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_0, var_1, bool_2, bool_1}
    var_2 = var_1.__eq__(set_0)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    var_4 = link_1.__hash__()
    assert var_4 == -8753497827991233192
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_3 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_3.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__hash__()
    assert var_7 == -552935834187556073
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_4 = module_0.Link(tuple_2, fragment=bool_5)
    var_8 = link_4.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_2)
    var_11 = var_10.__repr__()
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, link_5)
    var_12 = link_6.__eq__(link_6)
    assert var_12 is True
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_7 = module_0.Link(bytes_0)
    var_13 = var_7.__repr__()
    assert var_13 == "-552935834187556073"
    var_14 = var_13.__repr__()
    assert var_14 == "'-552935834187556073'"


def test_case_373():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_0 = link_2.__hash__()
    assert var_0 == -4606328870177462788
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    none_type_0 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_4.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_6 = module_0.Link(var_5, nofollow=var_5)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    none_type_1 = None
    bool_3 = True
    link_7 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_7.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_1)
    var_8 = var_6.__repr__()
    assert var_8 == "0"
    bool_4 = True
    bool_5 = False
    tuple_0 = (bool_4, bool_5)
    link_8 = module_0.Link(tuple_0, fragment=bool_4)
    var_9 = link_8.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__repr__()
    assert var_11 == "-5164621852614943975"
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, bool_5)
    bool_6 = False
    link_10 = module_0.Link(bool_6)


def test_case_374():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_0 = link_2.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_3 = module_0.Link(bool_0)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    none_type_1 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_3 = link_4.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    link_5 = module_0.Link(link_4)
    bool_2 = True
    link_6 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_5 = link_6.__hash__()
    assert var_5 == 1
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_0, fragment=bool_3)
    var_6 = link_7.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__eq__(tuple_0)
    var_9 = var_8.__repr__()
    none_type_2 = None
    bool_5 = True
    link_8 = module_0.Link(bool_5, nofollow=bool_5)
    var_10 = link_8.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_2)
    var_12 = var_10.__repr__()
    assert var_12 == "0"
    bool_6 = False
    link_9 = module_0.Link(bool_6)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_13 = link_10.__repr__()
    assert (
        var_13
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_7 = False
    link_11 = module_0.Link(bool_7)
    var_14 = var_13.__repr__()
    assert (
        var_14
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_8 = False
    bool_9 = False
    tuple_1 = (bool_9,)
    link_12 = module_0.Link(bool_8, fragment=tuple_1)
    var_15 = link_12.__hash__()
    assert var_15 == -8753497827991233192
    bool_10 = False
    bool_11 = False
    tuple_2 = (bool_11,)
    link_13 = module_0.Link(bool_10, fragment=tuple_2)
    var_16 = link_13.__hash__()
    assert var_16 == -8753497827991233192
    link_14 = module_0.Link(var_16, var_16, nofollow=var_16)
    none_type_3 = None
    link_15 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_17 = link_15.__repr__()
    assert var_17 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_16 = module_0.Link(var_17, nofollow=link_15)
    assert f"{type(link_16).__module__}.{type(link_16).__qualname__}" == "link.Link"
    var_18 = link_16.__hash__()
    assert var_18 == 4128530656735687579
    var_19 = link_0.__repr__()
    assert var_19 == "Link(url=None, text='', fragment=None, nofollow=None)"


def test_case_375():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_4 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_4.__hash__()
    assert var_3 == -8753497827991233192
    link_5 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_4.__hash__()
    assert var_4 == -8753497827991233192
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_2)
    link_7 = module_0.Link(link_6)
    var_5 = link_7.__hash__()
    assert var_5 == -4606328870177462788
    var_6 = var_5.__hash__()
    assert var_6 == -2300485860963768837
    bytes_3 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_8 = module_0.Link(bytes_3)
    link_9 = module_0.Link(link_8)
    none_type_1 = None
    link_10 = module_0.Link(none_type_1, fragment=none_type_1)
    var_7 = link_10.__hash__()
    assert var_7 == 0
    var_8 = var_7.__hash__()
    assert var_8 == 0
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_4, bytes_4)
    bool_3 = True
    link_12 = module_0.Link(bool_3)
    var_9 = link_12.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_13 = module_0.Link(float_0, fragment=var_9)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_14 = module_0.Link(tuple_1, fragment=bool_4)
    var_10 = link_14.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_1)
    var_13 = var_12.__repr__()
    float_1 = 5.0
    link_15 = module_0.Link(float_1)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_16 = module_0.Link(tuple_2, fragment=bool_6)
    var_14 = link_16.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = link_16.__repr__()
    assert var_16 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    var_17 = link_15.__hash__()
    assert var_17 == 5


def test_case_376():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    var_3 = link_0.__hash__()
    assert var_3 == -8753497827991233192
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_2 = module_0.Link(var_4, nofollow=link_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_5 = link_2.__hash__()
    assert var_5 == 4128530656735687579
    none_type_1 = None
    bool_2 = True
    link_3 = module_0.Link(bool_2, nofollow=bool_2)
    var_6 = link_3.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    bool_3 = True
    link_6 = module_0.Link(bool_3)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_7 = module_0.Link(float_0, fragment=var_9)
    none_type_2 = None
    bool_4 = True
    link_8 = module_0.Link(bool_4, nofollow=bool_4)
    var_10 = link_8.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_13 = var_11.__repr__()
    bool_5 = True
    link_10 = module_0.Link(bool_5)
    var_14 = link_10.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    object_0 = module_1.object()
    link_11 = module_0.Link(object_0, fragment=object_0)
    var_15 = link_11.__repr__()
    bool_6 = True
    bool_7 = False
    tuple_1 = (bool_6, bool_7)
    link_12 = module_0.Link(tuple_1, fragment=bool_6)
    var_16 = link_12.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    var_18 = link_12.__repr__()
    assert var_18 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    var_19 = var_5.__repr__()
    assert var_19 == "4128530656735687579"
    var_20 = var_19.__repr__()
    assert var_20 == "'4128530656735687579'"


def test_case_377():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_4 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_4.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_1 = None
    link_5 = module_0.Link(link_4, fragment=none_type_1)
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_7 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_7.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__hash__()
    assert var_5 == -552935834187556073
    var_6 = var_4.__eq__(var_0)


def test_case_378():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    none_type_1 = None
    link_1 = module_0.Link(none_type_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    bool_0 = True
    link_3 = module_0.Link(bool_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_4 = module_0.Link(float_1, fragment=var_3)
    none_type_2 = None
    bool_1 = True
    link_5 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_5.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_3 = None
    bool_2 = True
    link_7 = module_0.Link(bool_2, nofollow=bool_2)
    var_7 = link_7.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_3)
    link_8 = module_0.Link(link_7)
    none_type_4 = None
    link_9 = module_0.Link(none_type_4, fragment=none_type_4)
    var_9 = link_9.__hash__()
    assert var_9 == 0
    var_10 = var_9.__hash__()
    assert var_10 == 0
    bool_3 = False
    link_10 = module_0.Link(bool_3)
    bool_4 = True
    bool_5 = False
    tuple_0 = (bool_4, bool_5)
    link_11 = module_0.Link(tuple_0, fragment=bool_4)
    var_11 = link_11.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__repr__()
    assert var_13 == "-5164621852614943975"
    none_type_5 = None
    link_12 = module_0.Link(none_type_5, bool_5)
    bool_6 = True
    bool_7 = False
    tuple_1 = (bool_6, bool_7)
    link_13 = module_0.Link(tuple_1, fragment=bool_6)
    var_14 = link_13.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    none_type_6 = None
    link_14 = module_0.Link(link_13, fragment=none_type_6)
    float_2 = 5.0
    link_15 = module_0.Link(float_2)
    none_type_7 = None
    link_16 = module_0.Link(none_type_7, link_15)
    int_0 = 887
    var_16 = link_0.__repr__()
    assert var_16 == "Link(url=5.0, text='', fragment='', nofollow=False)"
    var_17 = var_16.__eq__(int_0)


def test_case_379():
    int_0 = 401
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_380():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    link_3 = module_0.Link(var_2, var_2)
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, link_4)
    var_3 = link_5.__eq__(link_5)
    assert var_3 is True
    none_type_1 = None
    bool_1 = True
    link_6 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_6.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_7 = link_6.__hash__()
    assert var_7 == 0
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_8 = module_0.Link(bool_2, fragment=tuple_0)
    var_8 = link_8.__hash__()
    assert var_8 == -8753497827991233192
    link_9 = module_0.Link(var_8, var_8, nofollow=var_8)
    none_type_2 = None
    bool_4 = True
    link_10 = module_0.Link(bool_4, nofollow=bool_4)
    var_9 = link_10.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    var_11 = link_10.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_12 = module_0.Link(link_10)
    none_type_3 = None
    link_13 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_12 = link_13.__repr__()
    assert var_12 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_14 = module_0.Link(var_12, nofollow=link_13)
    assert f"{type(link_14).__module__}.{type(link_14).__qualname__}" == "link.Link"
    link_15 = module_0.Link(none_type_0)


def test_case_381():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"


def test_case_382():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, link_3)
    bool_2 = True
    dict_0 = {}
    none_type_1 = None
    float_1 = 2515.28653
    link_5 = module_0.Link(dict_0, none_type_1, float_1, none_type_1)
    var_2 = link_5.__repr__()
    var_3 = var_2.__eq__(bool_2)
    var_4 = var_3.__hash__()
    none_type_2 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_5 = link_6.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_8 = link_6.__hash__()
    assert var_8 == 0
    none_type_3 = None
    link_8 = module_0.Link(none_type_3, nofollow=none_type_3)
    none_type_4 = None
    bool_4 = True
    link_9 = module_0.Link(bool_4, nofollow=bool_4)
    var_9 = link_9.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_4)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_11 = module_0.Link(var_11, nofollow=var_11)
    assert f"{type(link_11).__module__}.{type(link_11).__qualname__}" == "link.Link"
    bool_5 = True
    bool_6 = False
    tuple_0 = (bool_5, bool_6)
    link_12 = module_0.Link(tuple_0, fragment=bool_5)
    var_12 = link_12.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = link_12.__repr__()
    assert var_14 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_5 = None
    link_13 = module_0.Link(none_type_5, fragment=none_type_5, nofollow=none_type_5)
    bool_7 = True
    bool_8 = False
    tuple_1 = (bool_7, bool_8)
    link_14 = module_0.Link(tuple_1, fragment=bool_7)
    var_15 = link_14.__hash__()
    assert var_15 == -5164621852614943975
    var_16 = var_15.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = var_15.__hash__()
    assert var_17 == -552935834187556073
    int_0 = 3199
    link_15 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_18 = link_5.__repr__()


def test_case_383():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    var_1 = link_0.__hash__()
    assert var_1 == 0


def test_case_384():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_0.__repr__()
    assert var_2 == "0"
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, link_1)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_0, var_3, bool_2, bool_1}
    var_4 = var_3.__eq__(set_0)
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    var_6 = link_3.__hash__()
    assert var_6 == -8753497827991233192
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_4.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    none_type_2 = None
    link_5 = module_0.Link(none_type_2, bool_4)
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_6 = module_0.Link(bytes_0)
    var_10 = link_6.__repr__()
    assert (
        var_10 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_11 = var_10.__eq__(int_0)
    var_12 = var_11.__repr__()
    var_13 = var_12.__eq__(int_0)
    none_type_3 = None
    bool_5 = True
    link_7 = module_0.Link(bool_5, nofollow=bool_5)
    var_14 = link_7.__hash__()
    assert var_14 == 0
    var_15 = var_14.__eq__(none_type_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    var_16 = link_7.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_17 = var_15.__repr__()
    bool_6 = False
    bool_7 = False
    tuple_2 = (bool_7,)
    link_9 = module_0.Link(bool_6, fragment=tuple_2)
    var_18 = link_9.__hash__()
    assert var_18 == -8753497827991233192
    var_19 = link_2.__repr__()
    assert (
        var_19
        == "Link(url=None, text=Link(url=5.0, text='', fragment='', nofollow=False), fragment='', nofollow=False)"
    )


def test_case_385():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    none_type_1 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_5 = link_2.__hash__()
    assert var_5 == 0
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_2)
    link_5 = module_0.Link(link_4)
    var_6 = link_5.__hash__()
    assert var_6 == -4606328870177462788
    none_type_2 = None
    link_6 = module_0.Link(none_type_2)
    var_7 = link_6.__hash__()
    assert var_7 == 477042
    var_8 = var_7.__hash__()
    assert var_8 == 477042
    bool_1 = False
    link_7 = module_0.Link(bool_1)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_3, bytes_3)
    var_9 = link_8.__repr__()
    assert (
        var_9
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    none_type_3 = None
    link_9 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_10 = module_0.Link(tuple_0, fragment=bool_2)
    var_10 = link_10.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__hash__()
    assert var_12 == -552935834187556073
    bytes_4 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_11 = module_0.Link(bytes_4)
    link_12 = module_0.Link(bytes_3, fragment=none_type_0, nofollow=none_type_0)


def test_case_386():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    complex_0 = -2489 + 3297.83623j
    link_3 = module_0.Link(complex_0)
    var_2 = link_3.__hash__()
    assert var_2 == 1172959022599657258
    none_type_0 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_4.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1)
    var_5 = link_6.__hash__()
    assert var_5 == 477042
    var_6 = var_5.__hash__()
    assert var_6 == 477042
    bool_3 = False
    link_7 = module_0.Link(bool_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_8.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    int_0 = 36
    bytes_2 = b"\xeb\xdc\xa3"
    link_9 = module_0.Link(bytes_2)
    var_8 = link_9.__repr__()
    assert var_8 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_9 = var_8.__eq__(int_0)
    var_10 = var_9.__repr__()
    var_11 = var_10.__eq__(int_0)
    var_12 = link_1.__hash__()
    assert var_12 == 0


def test_case_387():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_4 = module_0.Link(bool_2, fragment=tuple_0)
    var_4 = link_4.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_0, var_4, bool_3, bool_2}
    var_5 = var_4.__eq__(set_0)
    var_6 = link_4.__hash__()
    assert var_6 == -8753497827991233192
    bool_4 = False
    link_5 = module_0.Link(bool_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_6.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_7 = module_0.Link(bool_5)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_8 = module_0.Link(var_7, bytes_1)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    bool_6 = False
    link_9 = module_0.Link(bool_6)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_9 = link_10.__repr__()
    assert (
        var_9
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    link_11 = module_0.Link(bytes_2, link_6)


def test_case_388():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_5 = link_4.__hash__()
    assert var_5 == -4606328870177462788
    bool_3 = True
    link_5 = module_0.Link(bool_3)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_0)
    link_6 = module_0.Link(var_7, var_7)
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_8 = module_0.Link(tuple_1, fragment=bool_4)
    var_8 = link_8.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__hash__()
    assert var_10 == -552935834187556073
    var_11 = link_7.__hash__()
    assert var_11 == 477042


def test_case_389():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    complex_0 = -2489 + 3297.83623j
    link_2 = module_0.Link(complex_0)
    var_0 = link_2.__hash__()
    assert var_0 == 1172959022599657258
    object_1 = module_1.object()
    link_3 = module_0.Link(object_1, fragment=object_1)
    var_1 = link_3.__repr__()
    var_2 = link_3.__hash__()
    assert var_2 == 0
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    bool_0 = True
    link_5 = module_0.Link(bool_0)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_6 = module_0.Link(float_1, fragment=var_3)
    link_7 = module_0.Link(float_1, fragment=link_5)
    bool_1 = True
    dict_0 = {}
    none_type_0 = None
    float_2 = 2515.28653
    link_8 = module_0.Link(dict_0, none_type_0, float_2, none_type_0)
    var_4 = link_8.__repr__()
    var_5 = var_4.__eq__(bool_1)
    var_6 = var_5.__hash__()
    bool_2 = False
    link_9 = module_0.Link(bool_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_10.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_11 = module_0.Link(bool_3)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_12 = module_0.Link(var_7, var_8, nofollow=link_10)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_2, bytes_2)
    bool_4 = False
    link_14 = module_0.Link(bool_4)
    link_15 = module_0.Link(link_1, nofollow=var_6)


def test_case_390():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    complex_0 = -2489 + 3297.83623j
    link_3 = module_0.Link(complex_0)
    var_5 = link_3.__hash__()
    assert var_5 == 1172959022599657258
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_4 = module_0.Link(bool_2, fragment=tuple_0)
    var_6 = link_4.__hash__()
    assert var_6 == -8753497827991233192
    set_0 = {tuple_0, var_6, bool_3, bool_2}
    var_7 = var_6.__eq__(set_0)
    var_8 = link_4.__hash__()
    assert var_8 == -8753497827991233192
    var_9 = link_4.__hash__()
    assert var_9 == -8753497827991233192
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_5 = module_0.Link(bool_4, fragment=tuple_1)
    var_10 = link_5.__hash__()
    assert var_10 == -8753497827991233192
    set_1 = {tuple_1, var_10, bool_5, bool_4}
    var_11 = var_10.__eq__(set_1)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_6 = module_0.Link(tuple_2, fragment=bool_6)
    var_12 = link_6.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__eq__(tuple_2)
    float_0 = 5.0
    link_7 = module_0.Link(float_0)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, link_7)
    var_15 = link_8.__eq__(link_8)
    assert var_15 is True
    object_0 = module_1.object()
    link_9 = module_0.Link(object_0, fragment=object_0)
    link_10 = module_0.Link(object_0, none_type_1)
    none_type_2 = None
    link_11 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_16 = link_11.__repr__()
    assert var_16 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_12 = module_0.Link(var_16, nofollow=link_11)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"
    var_17 = link_12.__hash__()
    assert var_17 == 4128530656735687579
    float_1 = 5.0
    link_13 = module_0.Link(float_1)
    str_0 = ""
    link_14 = module_0.Link(tuple_1, nofollow=str_0)


def test_case_391():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_2 = module_0.Link(var_1, nofollow=link_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_0)
    var_6 = var_5.__eq__(link_2)


def test_case_392():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__hash__()
    assert var_2 == -552935834187556073
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_3 = link_3.__hash__()
    assert var_3 == -4606328870177462788
    var_4 = var_3.__hash__()
    assert var_4 == -2300485860963768837
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_1, fragment=bool_2)
    var_5 = link_4.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_1 = None
    link_5 = module_0.Link(link_4, fragment=none_type_1)
    bool_4 = False
    link_6 = module_0.Link(bool_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_7.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_8 = module_0.Link(bool_5)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_9 = module_0.Link(var_7, bytes_1)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    int_0 = 401
    link_10 = module_0.Link(int_0, int_0)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_11 = module_0.Link(tuple_2, fragment=bool_6)
    var_9 = link_11.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__repr__()
    assert var_11 == "-5164621852614943975"
    none_type_2 = None
    link_12 = module_0.Link(none_type_2, bool_7)
    var_12 = var_5.__repr__()
    assert var_12 == "-5164621852614943975"


def test_case_393():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    link_2 = module_0.Link(link_1)
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, link_3)
    var_3 = link_4.__eq__(link_4)
    assert var_3 is True
    link_5 = module_0.Link(var_0, nofollow=bool_2)


def test_case_394():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    var_3 = link_0.__hash__()
    assert var_3 == -8753497827991233192
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_6 = link_3.__hash__()
    assert var_6 == -4606328870177462788
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_4 = module_0.Link(bool_4, fragment=tuple_2)
    var_7 = link_4.__hash__()
    assert var_7 == -8753497827991233192
    set_1 = {tuple_2, var_7, bool_5, bool_4}
    var_8 = var_7.__eq__(set_1)
    var_9 = link_4.__hash__()
    assert var_9 == -8753497827991233192
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_10 = link_5.__repr__()
    assert var_10 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_6 = module_0.Link(var_10, nofollow=link_5)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    bool_6 = False
    link_7 = module_0.Link(bool_6)
    var_11 = link_7.__repr__()
    assert var_11 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_8 = module_0.Link(tuple_3, fragment=bool_7)
    var_12 = link_8.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = link_8.__repr__()
    assert var_14 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    link_9 = module_0.Link(set_0, nofollow=var_10)


def test_case_395():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_0)
    var_5 = var_4.__repr__()
    bytes_1 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_1, nofollow=bytes_1)
    link_5 = module_0.Link(var_1, var_1, nofollow=var_3)


def test_case_396():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_2 = link_4.__hash__()
    assert var_2 == -4606328870177462788
    bool_2 = True
    link_5 = module_0.Link(bool_2)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_1)
    link_6 = module_0.Link(var_4, var_4)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_0, fragment=bool_3)
    var_5 = link_7.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    int_0 = 3199
    link_8 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_2 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_8 = link_1.__hash__()
    assert var_8 == 0


def test_case_397():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__hash__()
    assert var_1 == 477042
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_0)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_5 = link_2.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_1, var_5, bool_3, bool_2}
    var_6 = var_5.__eq__(set_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    none_type_1 = None
    bool_4 = True
    link_4 = module_0.Link(bool_4, nofollow=bool_4)
    var_7 = link_4.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_4.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_6 = module_0.Link(var_9, nofollow=var_9)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    bool_5 = False
    link_7 = module_0.Link(bool_5)
    object_0 = module_1.object()
    link_8 = module_0.Link(object_0, fragment=object_0)
    var_10 = link_8.__repr__()
    var_11 = link_8.__hash__()
    assert var_11 == 0
    none_type_2 = None
    bool_6 = True
    link_9 = module_0.Link(bool_6, nofollow=bool_6)
    var_12 = link_9.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_2)
    link_10 = module_0.Link(link_9)
    var_14 = var_3.__hash__()
    assert var_14 == -8716866087637373422


def test_case_398():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_1)
    var_5 = var_4.__repr__()
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_3 = module_0.Link(tuple_2, fragment=bool_4)
    var_6 = link_3.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, bool_5)
    bool_6 = True
    link_5 = module_0.Link(bool_6, bool_6, nofollow=bool_6)
    var_9 = link_5.__hash__()
    assert var_9 == 1
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, link_6)
    var_10 = var_5.__eq__(var_5)


def test_case_399():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    complex_0 = -2489 + 3297.83623j
    link_5 = module_0.Link(complex_0)
    var_2 = link_5.__hash__()
    assert var_2 == 1172959022599657258
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    bool_2 = True
    link_7 = module_0.Link(bool_2)
    var_3 = link_7.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_8 = module_0.Link(float_0, fragment=var_3)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_9 = module_0.Link(tuple_0, fragment=bool_3)
    var_4 = link_9.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_4.__hash__()
    assert var_7 == -552935834187556073
    none_type_0 = None
    bool_5 = True
    link_10 = module_0.Link(bool_5, nofollow=bool_5)
    var_8 = link_10.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_10.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_11 = var_9.__repr__()
    var_12 = link_10.__hash__()
    assert var_12 == 0


def test_case_400():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_0.__hash__()
    assert var_1 == -8753497827991233192
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_2 = link_2.__hash__()
    assert var_2 == -8753497827991233192
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    var_3 = link_3.__repr__()
    var_4 = link_3.__hash__()
    assert var_4 == 0
    complex_0 = -2489 + 3297.83623j
    link_4 = module_0.Link(complex_0)
    var_5 = link_4.__hash__()
    assert var_5 == 1172959022599657258
    bool_4 = False
    link_5 = module_0.Link(bool_4)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    var_6 = link_6.__repr__()
    assert (
        var_6
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_7 = module_0.Link(bool_5)
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_8 = module_0.Link(var_6, bytes_0)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_9 = module_0.Link(bytes_1)
    var_8 = link_9.__repr__()
    assert var_8 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_9 = var_8.__eq__(int_0)
    var_10 = var_9.__repr__()
    var_11 = var_10.__eq__(int_0)
    int_1 = 3199
    link_10 = module_0.Link(int_1, int_1, nofollow=int_1)
    bool_6 = False
    link_11 = module_0.Link(bool_6)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_2, bytes_2)
    var_12 = link_12.__repr__()
    assert (
        var_12
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_7 = False
    link_13 = module_0.Link(bool_7)
    var_13 = var_12.__repr__()
    assert (
        var_13
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    none_type_0 = None
    link_14 = module_0.Link(none_type_0, fragment=none_type_0)
    var_14 = link_14.__hash__()
    assert var_14 == 0
    var_15 = var_14.__hash__()
    assert var_15 == 0
    bool_8 = False
    bool_9 = False
    tuple_2 = (bool_9,)
    link_15 = module_0.Link(bool_8, fragment=tuple_2)
    var_16 = link_15.__hash__()
    assert var_16 == -8753497827991233192
    set_0 = {tuple_2, var_16, bool_9, bool_8}
    var_17 = var_16.__eq__(set_0)
    link_16 = module_0.Link(bool_2)


def test_case_401():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    var_4 = link_3.__repr__()
    var_5 = link_0.__hash__()
    assert var_5 == 1


def test_case_402():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_1 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    link_2 = module_0.Link(var_1, var_1, nofollow=var_1)
    var_2 = link_1.__hash__()
    assert var_2 == -8753497827991233192
    none_type_0 = None
    bool_3 = True
    link_3 = module_0.Link(bool_3, nofollow=bool_3)
    var_3 = link_3.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_5 = module_0.Link(link_3)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_6 = module_0.Link(tuple_1, fragment=bool_4)
    var_6 = link_6.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_1 = None
    link_7 = module_0.Link(link_6, fragment=none_type_1)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_8 = module_0.Link(tuple_2, fragment=bool_6)
    var_8 = link_8.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = link_7.__hash__()
    assert var_11 == -5164621852614730645


def test_case_403():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_1.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, bool_2)
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_3 = module_0.Link(bytes_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_5 = var_4.__eq__(int_0)
    var_6 = var_5.__repr__()
    var_7 = var_6.__eq__(int_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_8 = link_4.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    none_type_1 = None
    link_5 = module_0.Link(link_4, fragment=none_type_1)
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2)
    var_10 = link_6.__hash__()
    assert var_10 == 0
    var_11 = var_10.__hash__()
    assert var_11 == 0
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_5 = True
    link_8 = module_0.Link(bool_5)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_9 = module_0.Link(float_0, fragment=var_12)
    bool_6 = True
    link_10 = module_0.Link(bool_6)
    var_13 = link_10.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_7 = True
    bool_8 = False
    tuple_2 = (bool_7, bool_8)
    link_11 = module_0.Link(tuple_2, fragment=bool_7)
    var_14 = link_11.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_14.__eq__(tuple_2)
    var_17 = var_16.__repr__()
    var_18 = var_7.__hash__()


def test_case_404():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    int_0 = 3199
    link_3 = module_0.Link(int_0, int_0, nofollow=int_0)
    int_1 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_4 = module_0.Link(bytes_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_4 = var_3.__eq__(int_1)
    var_5 = var_4.__repr__()
    var_6 = link_1.__hash__()
    assert var_6 == 0


def test_case_405():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    none_type_0 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    link_5 = module_0.Link(link_4)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_3 = link_7.__hash__()
    assert var_3 == -4606328870177462788
    bool_2 = True
    link_8 = module_0.Link(bool_2)
    var_4 = link_8.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_1)
    link_9 = module_0.Link(var_5, var_5)
    bytes_2 = b"-5164621852614943975"
    link_10 = module_0.Link(bytes_2, nofollow=bytes_2)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_3, bytes_3)
    bool_3 = True
    link_12 = module_0.Link(bool_3)
    var_6 = link_12.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_4 = True
    bool_5 = False
    tuple_0 = (bool_4, bool_5)
    link_13 = module_0.Link(tuple_0, fragment=bool_4)
    var_7 = link_13.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_0)
    var_10 = var_9.__repr__()
    var_11 = var_10.__repr__()


def test_case_406():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_2 = link_2.__hash__()
    assert var_2 == -4606328870177462788
    bool_2 = True
    link_3 = module_0.Link(bool_2)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_0)
    link_4 = module_0.Link(var_4, var_4)
    bool_3 = True
    link_5 = module_0.Link(bool_3)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    var_6 = link_6.__repr__()
    none_type_0 = None
    bool_4 = True
    link_7 = module_0.Link(bool_4, nofollow=bool_4)
    var_7 = link_7.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_1 = None
    bool_5 = True
    link_9 = module_0.Link(bool_5, nofollow=bool_5)
    var_10 = link_9.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_12 = link_9.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_11 = module_0.Link(var_12, nofollow=var_12)
    assert f"{type(link_11).__module__}.{type(link_11).__qualname__}" == "link.Link"
    none_type_2 = None
    none_type_3 = None
    link_12 = module_0.Link(none_type_3)
    var_13 = link_12.__repr__()
    assert var_13 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_14 = var_13.__hash__()
    assert var_14 == 2234852059487564994
    var_15 = var_14.__eq__(none_type_2)
    var_16 = var_2.__eq__(bool_2)


def test_case_407():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_3 = module_0.Link(tuple_1, fragment=bool_3)
    var_6 = link_3.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1)
    var_8 = link_4.__hash__()
    assert var_8 == 0
    var_9 = var_8.__hash__()
    assert var_9 == 0
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_10 = link_6.__hash__()
    assert var_10 == -4606328870177462788
    bool_5 = True
    link_7 = module_0.Link(bool_5)
    var_11 = link_7.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_12 = var_10.__eq__(bytes_1)
    var_13 = var_12.__hash__()
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_14 = link_8.__repr__()
    assert var_14 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_9 = module_0.Link(var_14, nofollow=link_8)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_2)
    link_11 = module_0.Link(link_10)
    var_15 = link_11.__hash__()
    assert var_15 == -4606328870177462788
    bool_6 = True
    link_12 = module_0.Link(bool_6)
    var_16 = link_12.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_17 = var_15.__eq__(bytes_2)
    bool_7 = False
    link_13 = module_0.Link(bool_7)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_14 = module_0.Link(bytes_3, bytes_3)
    var_18 = link_14.__repr__()
    assert (
        var_18
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_8 = False
    link_15 = module_0.Link(bool_8)
    var_19 = var_18.__repr__()
    assert (
        var_19
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_16 = module_0.Link(var_18, bytes_3)
    var_20 = link_13.__repr__()
    assert var_20 == "Link(url=False, text='', fragment='', nofollow=False)"


def test_case_408():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_3 = module_0.Link(bytes_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_2 = var_1.__eq__(int_0)
    var_3 = var_2.__repr__()
    var_4 = var_3.__eq__(int_0)
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_4 = module_0.Link(bytes_2)
    link_5 = module_0.Link(link_4)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_6 = module_0.Link(tuple_0, fragment=bool_1)
    var_5 = link_6.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    float_1 = 5.0
    link_7 = module_0.Link(float_1)
    bool_3 = True
    link_8 = module_0.Link(bool_3)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_4 = False
    link_9 = module_0.Link(bool_4)
    var_9 = link_9.__repr__()
    assert var_9 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_10 = module_0.Link(var_0)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"


def test_case_409():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_0 = link_3.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )


def test_case_410():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_4, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_5 = link_3.__hash__()
    assert var_5 == 4128530656735687579
    none_type_2 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_6 = link_4.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_6 = module_0.Link(link_4)
    int_0 = 401
    link_7 = module_0.Link(int_0, int_0)
    none_type_3 = None
    bool_2 = True
    link_8 = module_0.Link(bool_2, nofollow=bool_2)
    var_9 = link_8.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_11 = link_8.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_10 = module_0.Link(var_11, nofollow=var_11)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_411():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_1 = module_0.Link(bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_3 = var_2.__eq__(int_0)
    var_4 = var_3.__repr__()
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_1, bytes_1)
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_1, fragment=bool_2)
    var_5 = link_4.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_2, fragment=bool_4)
    var_8 = link_5.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__repr__()
    assert var_10 == "-5164621852614943975"
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, bool_5)
    bool_6 = True
    link_7 = module_0.Link(bool_4, fragment=bool_6)
    var_11 = link_7.__repr__()
    assert var_11 == "Link(url=True, text='', fragment=True, nofollow=False)"


def test_case_412():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, bool_1)
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    link_5 = module_0.Link(bool_0, link_4)


def test_case_413():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"


def test_case_414():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_2.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, bool_1)
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_5.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_6 = module_0.Link(bool_3)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_7 = module_0.Link(bool_0)


def test_case_415():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_1)
    var_7 = var_6.__repr__()
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    var_8 = link_2.__repr__()
    var_9 = link_2.__hash__()
    assert var_9 == 0
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_3 = module_0.Link(bool_4, fragment=tuple_2)
    var_10 = link_3.__hash__()
    assert var_10 == -8753497827991233192
    link_4 = module_0.Link(var_10, var_10, nofollow=var_10)
    var_11 = link_3.__hash__()
    assert var_11 == -8753497827991233192
    bool_6 = False
    link_5 = module_0.Link(bool_6)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    var_12 = link_6.__repr__()
    assert (
        var_12
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    var_13 = var_1.__eq__(link_5)


def test_case_416():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, nofollow=none_type_1)
    bytes_1 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_1, nofollow=bytes_1)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_2)
    link_5 = module_0.Link(link_4)
    var_4 = link_5.__hash__()
    assert var_4 == -4606328870177462788
    bool_1 = True
    link_6 = module_0.Link(bool_1)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_2)
    var_7 = var_6.__hash__()
    float_0 = 5.0
    link_7 = module_0.Link(float_0)
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, link_7)
    int_0 = 36
    bytes_3 = b"\xeb\xdc\xa3"
    link_9 = module_0.Link(bytes_3)
    var_8 = link_9.__repr__()
    assert var_8 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_9 = var_8.__eq__(int_0)
    var_10 = var_9.__repr__()
    int_1 = 401
    link_10 = module_0.Link(int_1, int_1)
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_4)
    link_12 = module_0.Link(link_11)
    var_11 = link_12.__hash__()
    assert var_11 == -4606328870177462788
    bool_2 = True
    link_13 = module_0.Link(bool_2)
    var_12 = link_13.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_13 = var_11.__eq__(bytes_4)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_14 = module_0.Link(tuple_0, fragment=bool_3)
    var_14 = link_14.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = link_13.__hash__()
    assert var_16 == 1
    link_15 = module_0.Link(var_16, fragment=link_7, nofollow=int_0)


def test_case_417():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__hash__()
    assert var_5 == -552935834187556073
    int_1 = 3199
    link_3 = module_0.Link(int_1, int_1, nofollow=int_1)
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, link_4)
    var_6 = link_5.__eq__(link_5)
    assert var_6 is True
    none_type_2 = None
    none_type_3 = None
    link_6 = module_0.Link(none_type_3)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == 2234852059487564994
    var_9 = var_8.__eq__(none_type_2)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_7 = module_0.Link(tuple_1, fragment=bool_2)
    var_10 = link_7.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_8 = module_0.Link(tuple_2, fragment=bool_4)
    var_13 = link_8.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = link_8.__repr__()
    assert var_15 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bool_6 = False
    none_type_4 = None
    link_9 = module_0.Link(bool_6, fragment=none_type_4)
    var_16 = link_9.__repr__()
    assert var_16 == "Link(url=False, text='', fragment=None, nofollow=False)"
    var_17 = var_13.__hash__()
    assert var_17 == -552935834187556073


def test_case_418():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    set_0 = set()
    var_4 = var_2.__eq__(set_0)


def test_case_419():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    link_3 = module_0.Link(var_2, var_2)
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_5 = module_0.Link(var_3, nofollow=var_3)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    bool_2 = True
    link_7 = module_0.Link(bool_2)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_8 = module_0.Link(float_0, fragment=var_4)
    link_9 = module_0.Link(float_0, fragment=link_7)
    complex_0 = -2489 + 3297.83623j
    link_10 = module_0.Link(complex_0)
    var_5 = link_10.__hash__()
    assert var_5 == 1172959022599657258
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_11 = module_0.Link(tuple_0, fragment=bool_3)
    var_6 = link_11.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_6.__hash__()
    assert var_9 == -552935834187556073
    var_10 = var_1.__hash__()
    assert var_10 == -7472913314594357801
    var_11 = var_10.__repr__()
    assert var_11 == "-7472913314594357801"
    var_12 = var_11.__repr__()
    assert var_12 == "'-7472913314594357801'"


def test_case_420():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    object_1 = module_1.object()
    link_4 = module_0.Link(object_1, fragment=object_1)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_5 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_5.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__eq__(tuple_0)
    var_4 = var_3.__repr__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_0)
    link_7 = module_0.Link(link_6)
    var_5 = link_7.__hash__()
    assert var_5 == -4606328870177462788
    bool_2 = True
    link_8 = module_0.Link(bool_2)
    var_6 = link_8.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_0)
    var_8 = var_7.__hash__()
    bool_3 = False
    link_9 = module_0.Link(bool_3)
    var_9 = link_9.__repr__()
    assert var_9 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_10 = module_0.Link(var_9, nofollow=var_9)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_11 = module_0.Link(tuple_1, fragment=bool_4)
    var_10 = link_11.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_10.__hash__()
    assert var_13 == -552935834187556073
    var_14 = link_2.__hash__()
    assert var_14 == 0


def test_case_421():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_0 = link_3.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_4 = module_0.Link(tuple_0, fragment=bool_0)
    var_2 = link_4.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    float_1 = 5.0
    link_5 = module_0.Link(float_1)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, link_5)
    var_4 = link_6.__eq__(link_6)
    assert var_4 is True
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    link_8 = module_0.Link(object_0, none_type_1)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_9 = module_0.Link(tuple_1, fragment=bool_2)
    var_5 = link_9.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = link_8.__repr__()


def test_case_422():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_1)
    link_2 = module_0.Link(link_1)
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, link_3)
    int_0 = 3199
    link_5 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_2 = b"-5164621852614943975"
    link_6 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_2 = link_6.__repr__()
    assert (
        var_2
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    float_1 = 5.0
    link_7 = module_0.Link(float_1)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, link_7)
    var_3 = link_8.__eq__(link_8)
    assert var_3 is True
    bool_0 = True
    dict_0 = {}
    none_type_2 = None
    float_2 = 2515.28653
    link_9 = module_0.Link(dict_0, none_type_2, float_2, none_type_2)
    var_4 = link_9.__repr__()
    var_5 = var_4.__eq__(bool_0)
    var_6 = var_5.__hash__()
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_10 = module_0.Link(bool_1, fragment=tuple_0)
    var_7 = link_10.__hash__()
    assert var_7 == -8753497827991233192
    link_11 = module_0.Link(var_7, var_7, nofollow=var_7)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_3, bytes_3)
    bool_3 = True
    link_13 = module_0.Link(bool_3)
    var_8 = link_13.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_3 = 3106.326
    link_14 = module_0.Link(float_3, fragment=var_8)
    link_15 = module_0.Link(float_3, fragment=link_13)
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_16 = module_0.Link(bytes_4)
    link_17 = module_0.Link(link_16)
    var_9 = link_17.__hash__()
    assert var_9 == -4606328870177462788
    bool_4 = True
    link_18 = module_0.Link(bool_4)
    var_10 = link_18.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_11 = var_9.__eq__(bytes_4)
    float_4 = 5.0
    link_19 = module_0.Link(float_4)
    none_type_3 = None
    link_20 = module_0.Link(none_type_3, link_19)
    var_12 = link_20.__eq__(link_20)
    assert var_12 is True
    object_0 = module_1.object()
    link_21 = module_0.Link(object_0, fragment=object_0)
    link_22 = module_0.Link(object_0, none_type_3)
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_23 = module_0.Link(bool_5, fragment=tuple_1)
    var_13 = link_23.__hash__()
    assert var_13 == -8753497827991233192
    set_0 = {tuple_1, var_13, bool_6, bool_5}
    var_14 = var_13.__eq__(set_0)
    link_24 = module_0.Link(var_9, bool_6)


def test_case_423():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    none_type_1 = None
    bool_1 = True
    link_2 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_2.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_4 = module_0.Link(link_2)
    bool_2 = True
    link_5 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_7 = link_5.__hash__()
    assert var_7 == 1
    none_type_2 = None
    link_6 = module_0.Link(none_type_2)
    var_8 = link_6.__hash__()
    assert var_8 == 477042
    var_9 = var_8.__hash__()
    assert var_9 == 477042
    none_type_3 = None
    none_type_4 = None
    link_7 = module_0.Link(none_type_4)
    var_10 = link_7.__repr__()
    assert var_10 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_11 = var_10.__hash__()
    assert var_11 == 2234852059487564994
    var_12 = var_11.__eq__(none_type_3)
    none_type_5 = None
    bool_3 = True
    link_8 = module_0.Link(bool_3, nofollow=bool_3)
    var_13 = link_8.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_5)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_15 = link_8.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_4 = True
    bool_5 = False
    tuple_0 = (bool_4, bool_5)
    link_10 = module_0.Link(tuple_0, fragment=bool_4)
    var_16 = link_10.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    var_18 = var_16.__repr__()
    assert var_18 == "-5164621852614943975"
    none_type_6 = None
    link_11 = module_0.Link(none_type_6, bool_5)
    none_type_7 = None
    link_12 = module_0.Link(none_type_7, nofollow=none_type_7)
    var_19 = var_15.__repr__()
    assert var_19 == "\"Link(url=True, text='', fragment='', nofollow=True)\""


def test_case_424():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    none_type_0 = None
    bool_4 = True
    link_2 = module_0.Link(bool_4, nofollow=bool_4)
    var_4 = link_2.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_4 = module_0.Link(link_2)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_5 = module_0.Link(tuple_2, fragment=bool_5)
    var_7 = link_5.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = link_5.__repr__()
    assert var_9 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_6 = module_0.Link(tuple_3, fragment=bool_7)
    var_10 = link_6.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    none_type_1 = None
    link_7 = module_0.Link(link_6, fragment=none_type_1)
    none_type_2 = None
    none_type_3 = None
    link_8 = module_0.Link(none_type_3)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_13 = var_12.__hash__()
    assert var_13 == 2234852059487564994
    var_14 = var_13.__eq__(none_type_2)
    bool_9 = False
    none_type_4 = None
    link_9 = module_0.Link(bool_9, fragment=none_type_4)
    var_15 = link_9.__repr__()
    assert var_15 == "Link(url=False, text='', fragment=None, nofollow=False)"
    var_16 = var_15.__hash__()
    assert var_16 == 7193445401468023119


def test_case_425():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__hash__()
    assert var_2 == -552935834187556073
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_3 = var_0.__eq__(link_0)


def test_case_426():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    var_2 = link_2.__repr__()
    var_3 = link_2.__hash__()
    assert var_3 == 0
    none_type_1 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_3.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    none_type_2 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_6 = link_4.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    int_0 = 401
    link_6 = module_0.Link(int_0, int_0)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_0, fragment=bool_3)
    var_9 = link_7.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = link_7.__repr__()
    assert var_11 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    link_9 = module_0.Link(var_3, var_2, link_5, bool_1)


def test_case_427():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    var_1 = link_2.__repr__()
    var_2 = link_2.__hash__()
    assert var_2 == 0
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_0)
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, link_5)
    var_6 = link_6.__eq__(link_6)
    assert var_6 is True
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_8 = module_0.Link(tuple_1, fragment=bool_4)
    var_7 = link_8.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__hash__()
    assert var_9 == -552935834187556073
    var_10 = link_0.__repr__()
    assert var_10 == "Link(url=False, text='', fragment='', nofollow=False)"


def test_case_428():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    link_2 = module_0.Link(var_0, fragment=none_type_0)


def test_case_429():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_0 = None
    bool_4 = True
    link_2 = module_0.Link(bool_4, nofollow=bool_4)
    var_5 = link_2.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_2.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_4 = module_0.Link(var_7, nofollow=var_7)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, link_5)
    int_0 = 3199
    link_7 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_1 = b"-5164621852614943975"
    link_8 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_8 = link_8.__repr__()
    assert (
        var_8
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_2 = None
    bool_5 = True
    link_9 = module_0.Link(bool_5, nofollow=bool_5)
    var_9 = link_9.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_11 = module_0.Link(link_9)
    var_12 = var_4.__repr__()
    assert var_12 == "'-5164621852614943975'"


def test_case_430():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_4.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__eq__(tuple_0)
    bool_3 = True
    link_5 = module_0.Link(bool_3, bool_3, nofollow=bool_3)
    var_4 = link_5.__hash__()
    assert var_4 == 1
    none_type_0 = None
    bool_4 = True
    link_6 = module_0.Link(bool_4, nofollow=bool_4)
    var_5 = link_6.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_8 = module_0.Link(link_6)
    bool_5 = False
    link_9 = module_0.Link(bool_5)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_8 = link_10.__repr__()
    assert (
        var_8
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bytes_3 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_11 = module_0.Link(bytes_3, bytes_3)
    var_9 = link_11.__hash__()
    assert var_9 == 0
    var_10 = var_9.__repr__()
    assert var_10 == "0"
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_4)
    link_13 = module_0.Link(link_12)
    var_11 = link_13.__hash__()
    assert var_11 == -4606328870177462788
    bool_6 = True
    link_14 = module_0.Link(bool_6)
    var_12 = link_14.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_13 = var_11.__eq__(bytes_4)
    var_14 = var_13.__hash__()
    bool_7 = False
    bool_8 = False
    tuple_1 = (bool_8,)
    link_15 = module_0.Link(bool_7, fragment=tuple_1)
    var_15 = link_15.__hash__()
    assert var_15 == -8753497827991233192
    set_0 = {tuple_1, var_15, bool_8, bool_7}
    var_16 = var_15.__eq__(set_0)
    bool_9 = False
    bool_10 = False
    tuple_2 = (bool_10,)
    link_16 = module_0.Link(bool_9, fragment=tuple_2)
    var_17 = link_16.__hash__()
    assert var_17 == -8753497827991233192
    link_17 = module_0.Link(var_17, var_17, nofollow=var_17)
    var_18 = link_16.__hash__()
    assert var_18 == -8753497827991233192
    bytes_5 = b".\xab\xd9:-\xda\xd1\x18"
    link_18 = module_0.Link(bool_3, bool_9, nofollow=bytes_5)


def test_case_431():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )


def test_case_432():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_1 = True
    link_2 = module_0.Link(bool_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_3 = module_0.Link(float_1, fragment=var_3)
    none_type_1 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_4 = link_4.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    link_5 = module_0.Link(link_4)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_0, fragment=bool_3)
    var_6 = link_6.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_9 = link_8.__hash__()
    assert var_9 == -4606328870177462788
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_9 = module_0.Link(tuple_1, fragment=bool_5)
    var_10 = link_9.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_1)
    var_13 = var_12.__repr__()
    var_14 = link_2.__hash__()
    assert var_14 == 1


def test_case_433():
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    bool_1 = True
    link_2 = module_0.Link(bool_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_0 = None
    bool_2 = True
    link_3 = module_0.Link(bool_2, nofollow=bool_2)
    var_1 = link_3.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_3 = True
    link_5 = module_0.Link(bool_3, nofollow=bool_3)
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_6 = module_0.Link(bytes_2)
    link_7 = module_0.Link(link_6)
    link_8 = module_0.Link(link_3, nofollow=none_type_0)


def test_case_434():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_1.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    bytes_0 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_0, nofollow=bytes_0)
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )


def test_case_435():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, var_1, nofollow=link_1)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_4.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    bool_4 = True
    link_6 = module_0.Link(bool_4)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_7 = module_0.Link(float_0, fragment=var_4)
    bool_5 = True
    dict_0 = {}
    none_type_0 = None
    float_1 = 2515.28653
    link_8 = module_0.Link(dict_0, none_type_0, float_1, none_type_0)
    var_5 = link_8.__repr__()
    var_6 = var_5.__eq__(bool_5)
    var_7 = var_6.__hash__()
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    none_type_1 = None
    link_10 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_8 = link_10.__repr__()
    assert var_8 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_11 = module_0.Link(var_8, nofollow=link_10)
    int_0 = 36
    bytes_3 = b"\xeb\xdc\xa3"
    link_12 = module_0.Link(bytes_3)
    var_9 = link_12.__repr__()
    assert var_9 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_10 = var_9.__eq__(int_0)
    var_11 = var_10.__repr__()
    var_12 = var_11.__eq__(int_0)
    none_type_2 = None
    bool_6 = True
    link_13 = module_0.Link(bool_6, nofollow=bool_6)
    var_13 = link_13.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_2)
    bool_7 = True
    link_14 = module_0.Link(bool_7)
    var_15 = link_14.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=False)"
    complex_0 = -2489 + 3297.83623j
    link_15 = module_0.Link(complex_0)
    var_16 = link_15.__hash__()
    assert var_16 == 1172959022599657258
    var_17 = var_2.__hash__()
    assert var_17 == -552935834187556073


def test_case_436():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_0)
    link_4 = module_0.Link(var_5, var_5)
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_5 = module_0.Link(bytes_1)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_7 = var_6.__eq__(int_0)
    var_8 = var_7.__repr__()
    link_6 = module_0.Link(none_type_0, var_3)


def test_case_437():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_4 = link_3.__hash__()
    assert var_4 == -4606328870177462788
    bool_1 = True
    link_4 = module_0.Link(bool_1)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_1)
    link_5 = module_0.Link(var_6, var_6)
    bool_2 = False
    link_6 = module_0.Link(bool_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    var_7 = link_7.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_8 = module_0.Link(bool_3)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_9 = module_0.Link(var_7, bytes_2)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    bool_4 = False
    bool_5 = False
    tuple_0 = (bool_5,)
    link_10 = module_0.Link(bool_4, fragment=tuple_0)
    var_9 = link_10.__hash__()
    assert var_9 == -8753497827991233192
    link_11 = module_0.Link(var_9, var_9, nofollow=var_9)
    var_10 = link_11.__repr__()
    assert (
        var_10
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_3)
    link_13 = module_0.Link(link_12)
    var_11 = link_13.__hash__()
    assert var_11 == -4606328870177462788
    var_12 = var_11.__hash__()
    assert var_12 == -2300485860963768837
    float_0 = 5.0
    link_14 = module_0.Link(float_0)
    float_1 = 5.0
    link_15 = module_0.Link(float_1)
    none_type_1 = None
    link_16 = module_0.Link(none_type_1, link_15)
    var_13 = link_16.__eq__(link_16)
    assert var_13 is True
    object_0 = module_1.object()
    link_17 = module_0.Link(object_0, fragment=object_0)
    link_18 = module_0.Link(object_0, none_type_1)
    object_1 = module_1.object()
    link_19 = module_0.Link(object_1, fragment=object_1)
    var_14 = link_19.__repr__()
    var_15 = link_19.__hash__()
    assert var_15 == 0
    bool_6 = True
    link_20 = module_0.Link(bool_6, bool_6, nofollow=bool_6)
    var_16 = link_20.__hash__()
    assert var_16 == 1
    var_17 = link_7.__hash__()
    assert var_17 == 0


def test_case_438():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    link_3 = module_0.Link(var_0)


def test_case_439():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    link_2 = module_0.Link(link_1)
    none_type_1 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_3.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_5 = module_0.Link(link_3)
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_7 = module_0.Link(tuple_0, fragment=bool_2)
    var_7 = link_7.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__hash__()
    assert var_9 == -552935834187556073
    bool_4 = False
    link_8 = module_0.Link(bool_4)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_9.__repr__()
    assert (
        var_10
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_10 = module_0.Link(bool_5)
    var_11 = var_10.__repr__()
    assert (
        var_11
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_11 = module_0.Link(var_10, var_11, nofollow=link_9)
    assert f"{type(link_11).__module__}.{type(link_11).__qualname__}" == "link.Link"
    none_type_3 = None
    bool_6 = True
    link_12 = module_0.Link(bool_6, nofollow=bool_6)
    var_12 = link_12.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_3)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_3, bytes_3)
    var_14 = link_12.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_15 = link_12.__hash__()
    assert var_15 == 0
    none_type_4 = None
    bool_7 = True
    link_14 = module_0.Link(bool_7, nofollow=bool_7)
    var_16 = link_14.__hash__()
    assert var_16 == 0
    var_17 = var_16.__eq__(none_type_4)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_15 = module_0.Link(bytes_4, bytes_4)
    var_18 = link_14.__repr__()
    assert var_18 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_5 = None
    link_16 = module_0.Link(none_type_5, none_type_5, nofollow=none_type_5)
    var_19 = link_16.__repr__()
    assert var_19 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_17 = module_0.Link(var_19, nofollow=link_16)
    var_20 = link_17.__hash__()
    assert var_20 == 4128530656735687579
    link_18 = module_0.Link(var_19)


def test_case_440():
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_2.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_3 = link_4.__hash__()
    assert var_3 == -4606328870177462788
    bool_2 = True
    link_5 = module_0.Link(bool_2)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_1)
    var_6 = var_5.__hash__()
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_7.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    link_8 = module_0.Link(bool_2, fragment=bool_1)


def test_case_441():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_4 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_4.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_0, var_1, bool_2, bool_1}
    var_2 = var_1.__eq__(set_0)
    float_1 = 5.0
    link_5 = module_0.Link(float_1)
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, link_5)
    none_type_1 = None
    link_7 = module_0.Link(none_type_1)
    var_3 = link_7.__hash__()
    assert var_3 == 477042
    var_4 = var_3.__hash__()
    assert var_4 == 477042
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_1)
    link_9 = module_0.Link(link_8)
    var_5 = link_9.__hash__()
    assert var_5 == -4606328870177462788
    bool_3 = True
    link_10 = module_0.Link(bool_3)
    var_6 = link_10.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_1)
    var_8 = var_7.__hash__()
    bool_4 = True
    link_11 = module_0.Link(bool_4, nofollow=bool_4)
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_12 = module_0.Link(bool_5, fragment=tuple_1)
    var_9 = link_12.__hash__()
    assert var_9 == -8753497827991233192
    link_13 = module_0.Link(var_9, var_9, nofollow=var_9)
    var_10 = link_12.__hash__()
    assert var_10 == -8753497827991233192
    bool_7 = False
    bool_8 = False
    tuple_2 = (bool_8,)
    link_14 = module_0.Link(bool_7, fragment=tuple_2)
    var_11 = link_14.__hash__()
    assert var_11 == -8753497827991233192
    var_12 = var_9.__repr__()
    assert var_12 == "-8753497827991233192"


def test_case_442():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__hash__()
    assert var_6 == -552935834187556073
    int_1 = 3199
    link_3 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_7 = link_2.__repr__()
    assert var_7 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"


def test_case_443():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_2 = module_0.Link(var_1, nofollow=link_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    none_type_1 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_2 = link_3.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_5 = link_3.__hash__()
    assert var_5 == 0
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    bool_2 = True
    link_6 = module_0.Link(bool_2)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_7 = module_0.Link(float_0, fragment=var_6)
    none_type_2 = None
    bool_3 = True
    link_8 = module_0.Link(bool_3, nofollow=bool_3)
    var_7 = link_8.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_9 = link_8.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_4 = True
    bool_5 = False
    tuple_0 = (bool_4, bool_5)
    link_10 = module_0.Link(tuple_0, fragment=bool_4)
    var_10 = link_10.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    none_type_3 = None
    link_11 = module_0.Link(none_type_3, bool_5)
    bool_6 = False
    bool_7 = False
    tuple_1 = (bool_7,)
    link_12 = module_0.Link(bool_6, fragment=tuple_1)
    var_13 = link_12.__hash__()
    assert var_13 == -8753497827991233192
    bool_8 = False
    bool_9 = False
    tuple_2 = (bool_9,)
    link_13 = module_0.Link(bool_8, fragment=tuple_2)
    var_14 = link_13.__hash__()
    assert var_14 == -8753497827991233192
    set_0 = {tuple_2, var_14, bool_9, bool_8}
    var_15 = var_14.__eq__(set_0)
    var_16 = var_13.__repr__()
    assert var_16 == "-8753497827991233192"


def test_case_444():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__eq__(tuple_0)
    var_4 = var_3.__repr__()
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_4.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__hash__()
    assert var_7 == -552935834187556073
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_5 = module_0.Link(tuple_2, fragment=bool_5)
    var_8 = link_5.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    bool_7 = False
    link_6 = module_0.Link(bool_7)
    var_10 = link_6.__repr__()
    assert var_10 == "Link(url=False, text='', fragment='', nofollow=False)"
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, nofollow=none_type_1)
    none_type_2 = None
    bool_8 = True
    link_8 = module_0.Link(bool_8, nofollow=bool_8)
    var_11 = link_8.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_0, bytes_0)
    var_13 = link_8.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_14 = link_8.__hash__()
    assert var_14 == 0
    none_type_3 = None
    bool_9 = True
    link_10 = module_0.Link(bool_9, nofollow=bool_9)
    var_15 = link_10.__hash__()
    assert var_15 == 0
    var_16 = var_15.__eq__(none_type_3)
    link_11 = module_0.Link(link_10)
    bool_10 = False
    bool_11 = False
    tuple_3 = (bool_11,)
    link_12 = module_0.Link(bool_10, fragment=tuple_3)
    var_17 = link_12.__hash__()
    assert var_17 == -8753497827991233192
    set_0 = {tuple_3, var_17, bool_11, bool_10}
    var_18 = var_17.__eq__(set_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_13 = module_0.Link(bytes_1)
    link_14 = module_0.Link(link_13)
    var_19 = link_14.__hash__()
    assert var_19 == -4606328870177462788
    var_20 = var_1.__hash__()
    assert var_20 == -552935834187556073


def test_case_445():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    none_type_1 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_3.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_5 = module_0.Link(var_3, nofollow=var_3)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_6.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    float_0 = 5.0
    link_8 = module_0.Link(float_0)
    bool_2 = True
    link_9 = module_0.Link(bool_2)
    var_6 = link_9.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = link_8.__repr__()
    assert var_7 == "Link(url=5.0, text='', fragment='', nofollow=False)"


def test_case_446():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_3 = link_4.__hash__()
    assert var_3 == -4606328870177462788
    bool_1 = True
    link_5 = module_0.Link(bool_1)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_1)
    var_6 = var_5.__hash__()
    bool_2 = False
    link_6 = module_0.Link(bool_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    var_7 = link_7.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_8 = module_0.Link(bool_3)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_3, bytes_3)
    var_8 = link_9.__repr__()
    assert (
        var_8
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_10 = module_0.Link(bool_4)
    var_9 = var_8.__repr__()
    assert (
        var_9
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_4)
    link_12 = module_0.Link(link_11)
    var_10 = link_12.__hash__()
    assert var_10 == -4606328870177462788
    bool_5 = False
    link_13 = module_0.Link(bool_5)
    var_11 = link_13.__repr__()
    assert var_11 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_14 = module_0.Link(var_11, nofollow=var_11)
    bool_6 = False
    link_15 = module_0.Link(bool_6)
    bytes_5 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_16 = module_0.Link(bytes_5, bytes_5)
    var_12 = link_16.__repr__()
    assert (
        var_12
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_7 = False
    link_17 = module_0.Link(bool_7)
    var_13 = var_12.__repr__()
    assert (
        var_13
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_18 = module_0.Link(var_12, var_13, nofollow=link_16)
    int_0 = 3199
    link_19 = module_0.Link(int_0, int_0, nofollow=int_0)
    none_type_1 = None
    link_20 = module_0.Link(none_type_1)
    var_14 = link_20.__hash__()
    assert var_14 == 477042
    var_15 = var_14.__hash__()
    assert var_15 == 477042
    var_16 = var_10.__hash__()
    assert var_16 == -2300485860963768837


def test_case_447():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    bool_2 = True
    link_3 = module_0.Link(bool_2)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_4 = module_0.Link(float_0, fragment=var_3)
    link_5 = module_0.Link(float_0, fragment=link_3)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, nofollow=none_type_1)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, fragment=none_type_2)
    var_4 = link_7.__hash__()
    assert var_4 == 0
    var_5 = var_4.__hash__()
    assert var_5 == 0
    none_type_3 = None
    link_8 = module_0.Link(none_type_3)
    var_6 = link_8.__hash__()
    assert var_6 == 477042
    var_7 = var_6.__hash__()
    assert var_7 == 477042
    none_type_4 = None
    link_9 = module_0.Link(none_type_4, none_type_4, nofollow=none_type_4)
    var_8 = link_9.__repr__()
    assert var_8 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_10 = module_0.Link(var_8, nofollow=link_9)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    var_9 = link_7.__repr__()
    assert var_9 == "Link(url=None, text='', fragment=None, nofollow=False)"


def test_case_448():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_2, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_4 = module_0.Link(bytes_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_4 = var_3.__eq__(int_0)
    var_5 = var_4.__repr__()
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_6 = module_0.Link(tuple_0, fragment=bool_0)
    var_6 = link_6.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_1 = None
    link_7 = module_0.Link(link_6, fragment=none_type_1)
    bool_2 = False
    link_8 = module_0.Link(bool_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_8 = link_9.__repr__()
    assert (
        var_8
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_9 = link_10.__repr__()
    assert var_9 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_11 = module_0.Link(var_9, nofollow=link_10)
    var_10 = link_11.__hash__()
    assert var_10 == 4128530656735687579
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_12 = module_0.Link(tuple_1, fragment=bool_3)
    var_11 = link_12.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_3, bytes_3)
    bool_5 = True
    link_14 = module_0.Link(bool_5)
    var_13 = link_14.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_15 = module_0.Link(float_1, fragment=var_13)
    int_1 = 1648
    link_16 = module_0.Link(var_13, nofollow=int_1)
    var_14 = link_16.__hash__()
    assert var_14 == -7472913314594358361


def test_case_449():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    object_1 = module_1.object()
    link_4 = module_0.Link(object_1, fragment=object_1)
    bool_0 = False
    link_5 = module_0.Link(bool_0)
    var_1 = link_5.__repr__()
    assert var_1 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_6 = module_0.Link(var_1, nofollow=var_1)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    object_2 = module_1.object()
    link_7 = module_0.Link(object_2, fragment=object_2)
    var_2 = link_7.__repr__()
    none_type_1 = None
    bool_1 = True
    link_8 = module_0.Link(bool_1, nofollow=bool_1)
    var_3 = link_8.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    link_9 = module_0.Link(link_8)
    link_10 = module_0.Link(var_3, fragment=none_type_1)
    float_1 = 5.0
    link_11 = module_0.Link(float_1)
    none_type_2 = None
    link_12 = module_0.Link(none_type_2, link_11)
    var_5 = link_12.__eq__(link_12)
    assert var_5 is True
    bytes_0 = b"-5164621852614943975"
    link_13 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_6 = var_2.__eq__(var_5)


def test_case_450():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_1 = var_0.__hash__()
    assert var_1 == -3936900723769714473


def test_case_451():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_4 = module_0.Link(bool_3)
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_5 = module_0.Link(var_2, var_3, nofollow=link_3)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_4 = False
    link_7 = module_0.Link(bool_4)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_8 = module_0.Link(var_4, nofollow=var_4)
    var_5 = var_4.__hash__()
    assert var_5 == -3936900723769714473
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    bool_5 = True
    link_10 = module_0.Link(bool_5)
    var_6 = link_10.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_11 = module_0.Link(float_0, fragment=var_6)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_2)
    link_13 = module_0.Link(link_12)
    var_7 = link_13.__hash__()
    assert var_7 == -4606328870177462788
    link_14 = module_0.Link(bool_2, fragment=var_4, nofollow=var_4)


def test_case_452():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_2 = module_0.Link(bool_0, fragment=tuple_0)
    var_1 = link_2.__hash__()
    assert var_1 == -8753497827991233192
    link_3 = module_0.Link(var_1, var_1, nofollow=var_1)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, nofollow=none_type_1)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_0)
    link_6 = module_0.Link(link_5)
    var_3 = link_6.__hash__()
    assert var_3 == -4606328870177462788
    var_4 = var_3.__hash__()
    assert var_4 == -2300485860963768837
    none_type_2 = None
    bool_2 = True
    link_7 = module_0.Link(bool_2, nofollow=bool_2)
    var_5 = link_7.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_2)
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_8 = module_0.Link(bool_3, fragment=tuple_1)
    var_7 = link_8.__hash__()
    assert var_7 == -8753497827991233192
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_9 = module_0.Link(tuple_2, fragment=bool_5)
    var_8 = link_9.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_2)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_1)
    link_11 = module_0.Link(link_10)
    var_11 = link_11.__hash__()
    assert var_11 == -4606328870177462788
    bool_7 = True
    link_12 = module_0.Link(bool_7)
    var_12 = link_12.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_13 = var_11.__eq__(bytes_1)
    link_13 = module_0.Link(var_11)
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_14 = module_0.Link(tuple_3, fragment=bool_8)
    var_14 = link_14.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_14.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = var_14.__hash__()
    assert var_17 == -552935834187556073
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_15 = module_0.Link(bytes_2)
    link_16 = module_0.Link(link_15)
    var_18 = link_16.__hash__()
    assert var_18 == -4606328870177462788
    bool_10 = True
    link_17 = module_0.Link(bool_10)
    var_19 = link_17.__repr__()
    assert var_19 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_20 = var_18.__eq__(bytes_2)
    var_21 = var_20.__hash__()
    var_22 = link_0.__repr__()
    assert var_22 == "Link(url=None, text=None, fragment='', nofollow=None)"


def test_case_453():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_1 = module_0.Link(bool_2, fragment=tuple_1)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    link_2 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_1.__hash__()
    assert var_4 == -8753497827991233192
    none_type_0 = None
    bool_4 = True
    link_3 = module_0.Link(bool_4, nofollow=bool_4)
    var_5 = link_3.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_8 = link_3.__hash__()
    assert var_8 == 0
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_5 = module_0.Link(tuple_2, fragment=bool_5)
    var_9 = link_5.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__repr__()
    assert var_11 == "-5164621852614943975"
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, bool_6)
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_8 = module_0.Link(bytes_1)
    var_12 = link_8.__repr__()
    assert (
        var_12 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_13 = var_12.__eq__(int_0)
    var_14 = var_13.__repr__()
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    bool_7 = True
    link_10 = module_0.Link(bool_7)
    var_15 = link_10.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_11 = module_0.Link(float_0, fragment=var_15)
    link_12 = module_0.Link(float_0, fragment=link_10)
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_13 = module_0.Link(tuple_3, fragment=bool_8)
    var_16 = link_13.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    var_18 = var_16.__repr__()
    assert var_18 == "-5164621852614943975"
    var_19 = var_16.__hash__()
    assert var_19 == -552935834187556073
    bool_10 = False
    bool_11 = False
    tuple_4 = (bool_11,)
    link_14 = module_0.Link(bool_10, fragment=tuple_4)
    var_20 = link_14.__hash__()
    assert var_20 == -8753497827991233192
    set_0 = {tuple_4, var_20, bool_11, bool_10}
    var_21 = var_20.__eq__(set_0)
    var_22 = link_14.__hash__()
    assert var_22 == -8753497827991233192
    var_23 = link_14.__hash__()
    assert var_23 == -8753497827991233192
    float_1 = 5.0
    link_15 = module_0.Link(float_1)
    var_24 = var_10.__repr__()
    assert var_24 == "'-5164621852614943975'"


def test_case_454():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_2 = link_3.__hash__()
    assert var_2 == -4606328870177462788
    bool_2 = True
    link_4 = module_0.Link(bool_2)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_0)
    link_5 = module_0.Link(var_2)
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    var_5 = link_6.__repr__()
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_3 = False
    link_8 = module_0.Link(bool_3)
    var_6 = link_8.__repr__()
    assert var_6 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_9 = module_0.Link(var_6, nofollow=var_6)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    var_7 = var_6.__hash__()
    assert var_7 == -3936900723769714473
    float_0 = 5.0
    link_10 = module_0.Link(float_0)
    none_type_2 = None
    link_11 = module_0.Link(none_type_2, nofollow=none_type_2)
    var_8 = link_3.__repr__()
    assert (
        var_8
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )


def test_case_455():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_1 = module_0.Link(bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_3 = var_2.__eq__(int_0)
    var_4 = var_3.__repr__()
    var_5 = var_4.__eq__(int_0)
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_3 = module_0.Link(var_6, nofollow=var_6)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, link_4)
    var_7 = link_5.__eq__(link_5)
    assert var_7 is True
    none_type_1 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_8 = link_6.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_1)
    link_7 = module_0.Link(link_6)
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    var_10 = link_3.__eq__(link_5)
    assert var_10 is False


def test_case_456():
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_2 = module_0.Link(link_1)
    link_3 = module_0.Link(var_0, fragment=none_type_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_2 = link_5.__hash__()
    assert var_2 == -4606328870177462788
    bool_1 = True
    link_6 = module_0.Link(bool_1)
    var_3 = link_6.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_1)
    link_7 = module_0.Link(var_4, var_4)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_2)
    link_9 = module_0.Link(link_8)
    var_5 = link_9.__hash__()
    assert var_5 == -4606328870177462788
    bool_2 = True
    link_10 = module_0.Link(bool_2)
    var_6 = link_10.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_2)
    var_8 = var_1.__repr__()


def test_case_457():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_1)
    var_2 = var_0.__eq__(bytes_0)


def test_case_458():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    none_type_1 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_6 = var_4.__repr__()
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    var_7 = link_4.__repr__()
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_6 = module_0.Link(bytes_2)
    link_7 = module_0.Link(link_6)
    none_type_2 = None
    none_type_3 = None
    link_8 = module_0.Link(none_type_3)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == 2234852059487564994
    var_10 = var_9.__eq__(none_type_2)
    none_type_4 = None
    link_9 = module_0.Link(none_type_4, none_type_4, nofollow=none_type_4)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_10 = module_0.Link(var_11, nofollow=link_9)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    int_0 = 401
    link_11 = module_0.Link(int_0, int_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_12 = module_0.Link(tuple_1, fragment=bool_3)
    var_12 = link_12.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = link_2.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_459():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    bool_1 = False
    link_1 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_3 = module_0.Link(bool_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_4.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_5 = module_0.Link(bool_3)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_6 = module_0.Link(var_4, var_5, nofollow=link_4)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    bool_4 = True
    link_7 = module_0.Link(bool_4, bool_4, nofollow=bool_4)
    var_6 = link_7.__hash__()
    assert var_6 == 1
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_2)
    link_9 = module_0.Link(link_8)
    var_7 = link_9.__hash__()
    assert var_7 == -4606328870177462788
    bool_5 = True
    link_10 = module_0.Link(bool_5)
    var_8 = link_10.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_2)
    link_11 = module_0.Link(var_9, var_9)
    none_type_1 = None
    bool_6 = True
    link_12 = module_0.Link(bool_6, nofollow=bool_6)
    var_10 = link_12.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_1)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_3, bytes_3)
    var_12 = link_12.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_14 = module_0.Link(link_12)
    none_type_2 = None
    bool_7 = True
    link_15 = module_0.Link(bool_7, nofollow=bool_7)
    var_13 = link_15.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_2)
    float_1 = 5.0
    link_16 = module_0.Link(float_1)
    var_15 = link_10.__hash__()
    assert var_15 == 1


def test_case_460():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_1 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_2 = module_0.Link(bytes_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_4 = var_3.__eq__(int_0)
    var_5 = var_4.__repr__()
    var_6 = var_5.__eq__(int_0)
    bool_1 = False
    none_type_1 = None
    link_3 = module_0.Link(bool_1, fragment=none_type_1)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(url=False, text='', fragment=None, nofollow=False)"
    none_type_2 = None
    link_4 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_5 = module_0.Link(var_8, nofollow=link_4)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_9 = link_3.__hash__()
    assert var_9 == 477042


def test_case_461():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_0.__repr__()
    assert var_2 == "0"
    bool_1 = True
    dict_0 = {}
    none_type_1 = None
    float_0 = 2515.28653
    link_1 = module_0.Link(dict_0, none_type_1, float_0, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_4 = var_3.__eq__(bool_1)
    var_5 = var_4.__hash__()
    float_1 = 5.0
    link_2 = module_0.Link(float_1)
    none_type_2 = None
    link_3 = module_0.Link(none_type_2, link_2)
    var_6 = link_3.__eq__(link_3)
    assert var_6 is True
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    link_5 = module_0.Link(object_0, none_type_2)
    link_6 = module_0.Link(link_4)


def test_case_462():
    int_0 = 401
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_1.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__repr__()
    assert var_3 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_3 = module_0.Link(bytes_1)
    var_4 = var_2.__eq__(bytes_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_1, fragment=bool_2)
    var_5 = link_4.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_0 = None
    link_5 = module_0.Link(link_4, fragment=none_type_0)
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, link_6)
    var_7 = link_7.__eq__(link_7)
    assert var_7 is True
    object_0 = module_1.object()
    link_8 = module_0.Link(object_0, fragment=object_0)
    link_9 = module_0.Link(object_0, none_type_1)
    none_type_2 = None
    link_10 = module_0.Link(none_type_2)
    var_8 = link_10.__hash__()
    assert var_8 == 477042
    var_9 = var_8.__hash__()
    assert var_9 == 477042
    none_type_3 = None
    link_11 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_12 = module_0.Link(tuple_2, fragment=bool_4)
    var_10 = link_12.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__hash__()
    assert var_12 == -552935834187556073
    var_13 = var_10.__hash__()
    assert var_13 == -552935834187556073
    var_14 = var_13.__hash__()
    assert var_14 == -552935834187556073
    var_15 = var_14.__hash__()
    assert var_15 == -552935834187556073


def test_case_463():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_6 = link_2.__hash__()
    assert var_6 == -8753497827991233192
    set_0 = {tuple_1, var_6, bool_3, bool_2}
    var_7 = var_6.__eq__(set_0)
    bool_4 = False
    link_3 = module_0.Link(bool_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_4.__repr__()
    assert (
        var_8
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, link_5)
    int_1 = 3199
    link_7 = module_0.Link(int_1, int_1, nofollow=int_1)
    bytes_2 = b"-5164621852614943975"
    link_8 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_9 = link_8.__repr__()
    assert (
        var_9
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bytes_3 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_3, nofollow=bytes_3)
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_4)
    link_11 = module_0.Link(link_10)
    var_10 = link_11.__hash__()
    assert var_10 == -4606328870177462788
    var_11 = var_3.__hash__()
    assert var_11 == -552935834187556073


def test_case_464():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_2 = module_0.Link(bool_3, fragment=tuple_1)
    var_3 = link_2.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_1, var_3, bool_4, bool_3}
    var_4 = var_3.__eq__(set_0)
    var_5 = link_2.__hash__()
    assert var_5 == -8753497827991233192
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_6 = link_4.__hash__()
    assert var_6 == -4606328870177462788
    bool_5 = True
    link_5 = module_0.Link(bool_5)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_8 = var_6.__eq__(bytes_0)
    link_6 = module_0.Link(var_6)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    float_0 = 5.0
    link_8 = module_0.Link(float_0)
    none_type_0 = None
    bool_6 = True
    link_9 = module_0.Link(bool_6, nofollow=bool_6)
    var_9 = link_9.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_12 = link_3.__repr__()
    assert (
        var_12
        == "Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False)"
    )


def test_case_465():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    none_type_0 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    var_4 = var_2.__repr__()
    assert var_4 == "0"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_5 = link_3.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = link_3.__repr__()
    assert var_7 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1)
    var_8 = link_4.__hash__()
    assert var_8 == 0
    var_9 = var_8.__hash__()
    assert var_9 == 0
    object_0 = module_1.object()
    link_5 = module_0.Link(object_0, fragment=object_0)
    var_10 = link_5.__repr__()
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_7 = module_0.Link(var_11, nofollow=link_6)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    var_12 = link_7.__hash__()
    assert var_12 == 4128530656735687579
    bool_3 = False
    link_8 = module_0.Link(bool_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_13 = link_9.__repr__()
    assert (
        var_13
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_10 = module_0.Link(bool_4)
    var_14 = var_13.__repr__()
    assert (
        var_14
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_11 = module_0.Link(var_13, var_14, nofollow=link_9)
    bool_5 = False
    link_12 = module_0.Link(bool_5)
    var_15 = link_12.__repr__()
    assert var_15 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_13 = module_0.Link(var_15, nofollow=var_15)
    float_0 = 60.0
    var_16 = var_8.__eq__(float_0)


def test_case_466():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = var_0.__eq__(var_0)


def test_case_467():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_1 = None
    none_type_2 = None
    link_2 = module_0.Link(none_type_2)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == 2234852059487564994
    var_5 = var_4.__eq__(none_type_1)
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_4.__repr__()
    assert (
        var_6
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    none_type_3 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_8 = link_6.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_6.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_11 = var_9.__repr__()
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_3)
    link_9 = module_0.Link(link_8)
    var_12 = link_9.__hash__()
    assert var_12 == -4606328870177462788
    bool_4 = True
    link_10 = module_0.Link(bool_4)
    var_13 = link_10.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_14 = var_12.__eq__(bytes_3)
    var_15 = var_14.__hash__()
    link_11 = module_0.Link(none_type_3, none_type_0)


def test_case_468():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_1 = module_0.Link(bool_2, fragment=tuple_1)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    bool_4 = True
    link_2 = module_0.Link(bool_4, nofollow=bool_4)
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_3 = module_0.Link(bytes_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_5 = var_4.__eq__(int_0)
    var_6 = var_5.__repr__()
    bytes_1 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_1, nofollow=bytes_1)
    none_type_0 = None
    bool_5 = True
    link_5 = module_0.Link(bool_5, nofollow=bool_5)
    var_7 = link_5.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_2, bytes_2)
    var_9 = link_5.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_10 = var_8.__repr__()
    bool_6 = False
    bool_7 = False
    tuple_2 = (bool_7,)
    link_7 = module_0.Link(bool_6, fragment=tuple_2)
    var_11 = link_7.__hash__()
    assert var_11 == -8753497827991233192
    set_0 = {tuple_2, var_11, bool_7, bool_6}
    var_12 = var_11.__eq__(set_0)
    none_type_1 = None
    bool_8 = True
    link_8 = module_0.Link(bool_8, nofollow=bool_8)
    var_13 = link_8.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_1)
    var_15 = var_13.__repr__()
    assert var_15 == "0"
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_3, bytes_3)
    bool_9 = True
    link_10 = module_0.Link(bool_9)
    var_16 = link_10.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_11 = module_0.Link(float_0, fragment=var_16)
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_4)
    link_13 = module_0.Link(link_12)
    var_17 = link_13.__hash__()
    assert var_17 == -4606328870177462788
    link_14 = module_0.Link(var_5, fragment=var_3)


def test_case_469():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    link_3 = module_0.Link(var_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_0)
    none_type_0 = None
    bool_3 = True
    link_5 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_5.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    var_8 = var_6.__repr__()
    assert var_8 == "0"
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, nofollow=none_type_1)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_8 = module_0.Link(var_9, nofollow=link_7)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    var_10 = link_8.__hash__()
    assert var_10 == 4128530656735687579
    bool_4 = False
    link_9 = module_0.Link(bool_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_11 = link_10.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_11 = module_0.Link(bool_5)
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    float_0 = 5.0
    link_12 = module_0.Link(float_0)
    none_type_3 = None
    link_13 = module_0.Link(none_type_3, link_12)
    var_13 = link_13.__eq__(link_13)
    assert var_13 is True
    var_14 = link_2.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"


def test_case_470():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bool_2 = False
    none_type_0 = None
    link_2 = module_0.Link(bool_2, fragment=none_type_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_3 = module_0.Link(bool_3, fragment=tuple_1)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_1, var_4, bool_4, bool_3}
    var_5 = var_4.__eq__(set_0)
    var_6 = link_3.__hash__()
    assert var_6 == -8753497827991233192
    bool_5 = False
    link_4 = module_0.Link(bool_5)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_5.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    var_8 = var_3.__eq__(link_0)


def test_case_471():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_2 = link_1.__hash__()
    assert var_2 == -8753497827991233192
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_3 = link_2.__hash__()
    assert var_3 == -8753497827991233192
    link_3 = module_0.Link(var_3, var_3, nofollow=var_3)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_5 = module_0.Link(var_4, nofollow=link_4)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_5 = link_5.__hash__()
    assert var_5 == 4128530656735687579
    var_6 = link_2.__hash__()
    assert var_6 == -8753497827991233192


def test_case_472():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    none_type_1 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_0 = link_2.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = link_2.__hash__()
    assert var_3 == 0
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_2)
    link_5 = module_0.Link(link_4)
    var_4 = link_5.__hash__()
    assert var_4 == -4606328870177462788
    bool_1 = True
    link_6 = module_0.Link(bool_1)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_2 = None
    bool_2 = True
    link_7 = module_0.Link(bool_2, nofollow=bool_2)
    var_6 = link_7.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_2)
    link_8 = module_0.Link(link_7)
    float_0 = 5.0
    link_9 = module_0.Link(float_0)
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    none_type_4 = None
    bool_3 = True
    link_11 = module_0.Link(bool_3, nofollow=bool_3)
    var_8 = link_11.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_4)
    var_10 = var_8.__repr__()
    assert var_10 == "0"
    bool_4 = False
    bool_5 = False
    tuple_0 = (bool_5,)
    link_12 = module_0.Link(bool_4, fragment=tuple_0)
    var_11 = link_12.__hash__()
    assert var_11 == -8753497827991233192
    set_0 = {tuple_0, var_11, bool_5, bool_4}
    var_12 = var_11.__eq__(set_0)
    var_13 = link_12.__hash__()
    assert var_13 == -8753497827991233192
    link_13 = module_0.Link(link_12)


def test_case_473():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__repr__()
    assert var_4 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_2 = module_0.Link(bytes_1)
    var_5 = var_3.__eq__(bytes_0)
    none_type_0 = None
    none_type_1 = None
    link_3 = module_0.Link(none_type_1)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_7 = var_6.__hash__()
    assert var_7 == 2234852059487564994
    var_8 = var_7.__eq__(none_type_0)
    link_4 = module_0.Link(bytes_1, var_8)


def test_case_474():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_3.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    bool_3 = True
    link_4 = module_0.Link(bool_3, nofollow=bool_3)
    var_3 = link_4.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_6 = var_4.__repr__()
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_4 = False
    link_7 = module_0.Link(bool_4)
    var_7 = link_7.__repr__()
    assert var_7 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_8 = module_0.Link(var_7, nofollow=var_7)
    var_8 = var_7.__hash__()
    assert var_8 == -3936900723769714473
    var_9 = var_4.__eq__(link_8)


def test_case_475():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_4, nofollow=var_4)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    complex_0 = -2489 + 3297.83623j
    link_3 = module_0.Link(complex_0)
    var_5 = link_3.__hash__()
    assert var_5 == 1172959022599657258
    none_type_0 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_6 = link_4.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    link_5 = module_0.Link(link_4)
    link_6 = module_0.Link(var_6, fragment=none_type_0)
    none_type_1 = None
    bool_2 = True
    link_7 = module_0.Link(bool_2, nofollow=bool_2)
    var_8 = link_7.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    var_10 = link_7.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_9 = module_0.Link(link_7)
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_11 = module_0.Link(tuple_0, fragment=bool_3)
    var_11 = link_11.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__hash__()
    assert var_13 == -552935834187556073
    none_type_3 = None
    link_12 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_14 = link_12.__repr__()
    assert var_14 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_13 = module_0.Link(var_14, nofollow=link_12)
    var_15 = link_3.__repr__()
    assert (
        var_15 == "Link(url=(-2489+3297.83623j), text='', fragment='', nofollow=False)"
    )


def test_case_476():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    var_3 = link_1.__repr__()
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    link_3 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = link_2.__hash__()
    assert var_5 == -8753497827991233192
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_5 = module_0.Link(var_6, nofollow=link_4)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_7 = link_5.__hash__()
    assert var_7 == 4128530656735687579
    list_0 = [link_5, link_0]
    link_6 = module_0.Link(list_0)


def test_case_477():
    bool_0 = False
    none_type_0 = None
    link_0 = module_0.Link(bool_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_1 = True
    link_1 = module_0.Link(bool_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_2.__hash__()
    assert var_5 == -552935834187556073
    var_6 = var_1.__repr__()
    assert var_6 == "\"Link(url=True, text='', fragment='', nofollow=False)\""


def test_case_478():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_3.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_0, var_1, bool_2, bool_1}
    var_2 = var_1.__eq__(set_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    int_0 = 401
    link_4 = module_0.Link(int_0, int_0)
    bool_3 = True
    dict_0 = {}
    none_type_1 = None
    float_0 = 2515.28653
    link_5 = module_0.Link(dict_0, none_type_1, float_0, none_type_1)
    var_4 = link_5.__repr__()
    var_5 = var_4.__eq__(bool_3)
    var_6 = var_5.__hash__()
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_6 = module_0.Link(tuple_1, fragment=bool_4)
    var_7 = link_6.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_6 = True
    link_8 = module_0.Link(bool_6)
    var_10 = link_8.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_9 = module_0.Link(float_1, fragment=var_10)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_2)
    link_11 = module_0.Link(link_10)
    var_11 = link_11.__hash__()
    assert var_11 == -4606328870177462788
    bool_7 = True
    link_12 = module_0.Link(bool_7)
    var_12 = link_12.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_13 = var_11.__eq__(bytes_2)
    link_13 = module_0.Link(var_13, var_13)
    none_type_2 = None
    none_type_3 = None
    link_14 = module_0.Link(none_type_3)
    var_14 = link_14.__repr__()
    assert var_14 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_15 = var_14.__hash__()
    assert var_15 == 2234852059487564994
    var_16 = var_15.__eq__(none_type_2)
    none_type_4 = None
    link_15 = module_0.Link(none_type_4, fragment=none_type_4, nofollow=none_type_4)
    bool_8 = False
    link_16 = module_0.Link(bool_8)
    var_17 = link_16.__repr__()
    assert var_17 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_17 = module_0.Link(var_17, nofollow=var_17)
    assert f"{type(link_17).__module__}.{type(link_17).__qualname__}" == "link.Link"
    var_18 = var_17.__hash__()
    assert var_18 == -3936900723769714473
    var_19 = var_17.__repr__()
    assert var_19 == "\"Link(url=False, text='', fragment='', nofollow=False)\""


def test_case_479():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"


def test_case_480():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_2 = module_0.Link(bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_3.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__eq__(tuple_0)
    var_4 = var_3.__repr__()
    none_type_0 = None
    bool_3 = True
    link_4 = module_0.Link(bool_3, nofollow=bool_3)
    var_5 = link_4.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    link_5 = module_0.Link(link_4)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_7 = link_7.__hash__()
    assert var_7 == -4606328870177462788
    bool_4 = True
    link_8 = module_0.Link(bool_4)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_1)
    var_10 = var_9.__hash__()
    bool_5 = False
    link_9 = module_0.Link(bool_5)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_11 = link_10.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_6 = False
    link_11 = module_0.Link(bool_6)
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_12 = module_0.Link(var_11, var_12, nofollow=link_10)
    bool_7 = True
    bool_8 = False
    tuple_1 = (bool_7, bool_8)
    link_13 = module_0.Link(tuple_1, fragment=bool_7)
    var_13 = link_13.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = link_13.__repr__()
    assert var_15 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bool_9 = False
    bool_10 = False
    tuple_2 = (bool_10,)
    link_14 = module_0.Link(bool_9, fragment=tuple_2)
    var_16 = link_14.__hash__()
    assert var_16 == -8753497827991233192
    set_0 = {tuple_2, var_16, bool_10, bool_9}
    var_17 = var_16.__eq__(set_0)
    var_18 = link_14.__hash__()
    assert var_18 == -8753497827991233192
    var_19 = link_14.__hash__()
    assert var_19 == -8753497827991233192
    object_0 = module_1.object()
    link_15 = module_0.Link(object_0, fragment=object_0)
    float_0 = 5.0
    link_16 = module_0.Link(float_0)
    var_20 = link_0.__hash__()
    assert var_20 == 0


def test_case_481():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_1, nofollow=link_2)
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_4.__hash__()
    assert var_2 == 0
    var_3 = var_2.__repr__()
    assert var_3 == "0"
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_6 = module_0.Link(var_4, nofollow=link_5)
    var_5 = var_4.__eq__(var_4)
    link_7 = module_0.Link(var_0, fragment=link_4)


def test_case_482():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=False, text='', fragment=(False,), nofollow=False)"


def test_case_483():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    bool_2 = False
    none_type_0 = None
    link_1 = module_0.Link(bool_2, fragment=none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=False, text='', fragment=None, nofollow=False)"
    none_type_1 = None
    bool_3 = True
    link_2 = module_0.Link(bool_3, nofollow=bool_3)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_6 = var_4.__repr__()
    none_type_2 = None
    link_4 = module_0.Link(none_type_2, nofollow=none_type_2)
    bool_4 = False
    link_5 = module_0.Link(bool_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_6.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_7 = module_0.Link(bool_5)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_8 = module_0.Link(var_7, bytes_1)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    none_type_3 = None
    bool_6 = True
    link_9 = module_0.Link(bool_6, nofollow=bool_6)
    var_9 = link_9.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_3)
    link_10 = module_0.Link(link_9)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    bool_7 = True
    link_12 = module_0.Link(bool_7)
    var_11 = link_12.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_13 = module_0.Link(float_0, fragment=var_11)
    link_14 = module_0.Link(float_0, fragment=link_12)
    bytes_3 = b"-5164621852614943975"
    link_15 = module_0.Link(bytes_3, nofollow=bytes_3)
    object_0 = module_1.object()
    link_16 = module_0.Link(object_0, fragment=set_0)


def test_case_484():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 3199


def test_case_485():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )


def test_case_486():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_3 = module_0.Link(bool_2, fragment=tuple_1)
    var_1 = link_3.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_1, var_1, bool_3, bool_2}
    var_2 = var_1.__eq__(set_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_4 = module_0.Link(bytes_0)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_6 = var_5.__eq__(int_0)
    var_7 = var_6.__repr__()
    var_8 = var_7.__eq__(int_0)
    none_type_1 = None
    bool_4 = True
    link_5 = module_0.Link(bool_4, nofollow=bool_4)
    var_9 = link_5.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_1)
    link_6 = module_0.Link(link_5)
    link_7 = module_0.Link(var_9, fragment=none_type_1)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_8 = module_0.Link(tuple_2, fragment=bool_5)
    var_11 = link_8.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_9 = module_0.Link(bytes_1)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_2)
    link_11 = module_0.Link(link_10)
    var_13 = link_11.__hash__()
    assert var_13 == -4606328870177462788
    bool_7 = True
    link_12 = module_0.Link(bool_7)
    var_14 = link_12.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_15 = var_13.__eq__(bytes_2)
    var_16 = var_15.__hash__()
    var_17 = var_15.__hash__()


def test_case_487():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    link_2 = module_0.Link(var_0, fragment=none_type_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1)
    var_2 = link_3.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__hash__()
    assert var_3 == 477042
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_4 = link_5.__hash__()
    assert var_4 == -4606328870177462788
    bool_1 = True
    link_6 = module_0.Link(bool_1)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_0)
    var_7 = var_6.__hash__()
    int_0 = 3199
    link_7 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_1)
    link_9 = module_0.Link(link_8)
    var_9 = link_9.__hash__()
    assert var_9 == -4606328870177462788
    bool_2 = True
    link_10 = module_0.Link(bool_2)
    var_10 = link_10.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_11 = var_9.__eq__(bytes_1)
    link_11 = module_0.Link(var_11, var_11)
    none_type_2 = None
    bool_3 = True
    link_12 = module_0.Link(bool_3, nofollow=bool_3)
    var_12 = link_12.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_2, bytes_2)
    var_14 = link_12.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_15 = link_6.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=False)"


def test_case_488():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, bool_1)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_3 = link_4.__hash__()
    assert var_3 == -4606328870177462788
    bool_2 = True
    link_5 = module_0.Link(bool_2)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_0)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_1, fragment=bool_3)
    var_6 = link_7.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__hash__()
    assert var_8 == -552935834187556073
    var_9 = var_0.__repr__()
    assert var_9 == "-5164621852614943975"


def test_case_489():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    none_type_1 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    link_4 = module_0.Link(link_3)
    link_5 = module_0.Link(var_3, fragment=none_type_1)
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, link_6)
    var_5 = link_7.__eq__(link_7)
    assert var_5 is True
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_8 = module_0.Link(bool_2, fragment=tuple_0)
    var_6 = link_8.__hash__()
    assert var_6 == -8753497827991233192
    link_9 = module_0.Link(var_6, var_6, nofollow=var_6)
    var_7 = link_9.__repr__()
    assert (
        var_7
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_10 = module_0.Link(bool_4, fragment=tuple_1)
    var_9 = link_10.__hash__()
    assert var_9 == -8753497827991233192
    set_0 = {tuple_1, var_9, bool_5, bool_4}
    var_10 = var_9.__eq__(set_0)
    var_11 = link_10.__hash__()
    assert var_11 == -8753497827991233192
    link_11 = module_0.Link(set_0, nofollow=float_0)


def test_case_490():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_1 = link_4.__repr__()
    assert (
        var_1
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_6 = module_0.Link(var_1, var_2, nofollow=link_4)
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_7 = module_0.Link(bool_3, fragment=tuple_0)
    var_3 = link_7.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_0, var_3, bool_4, bool_3}
    var_4 = var_3.__eq__(set_0)
    var_5 = link_7.__hash__()
    assert var_5 == -8753497827991233192
    var_6 = link_7.__hash__()
    assert var_6 == -8753497827991233192
    float_0 = 5.0
    link_8 = module_0.Link(float_0)
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, link_8)
    int_0 = 3199
    link_10 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_1 = b"-5164621852614943975"
    link_11 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_7 = link_11.__repr__()
    assert (
        var_7
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_5 = False
    none_type_2 = None
    link_12 = module_0.Link(bool_5, fragment=none_type_2)
    var_8 = link_12.__repr__()
    assert var_8 == "Link(url=False, text='', fragment=None, nofollow=False)"
    link_13 = module_0.Link(var_1, nofollow=none_type_0)


def test_case_491():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_0 = False
    none_type_2 = None
    link_5 = module_0.Link(bool_0, fragment=none_type_2)
    var_1 = link_5.__repr__()
    assert var_1 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_0)
    link_7 = module_0.Link(link_6)
    var_2 = link_7.__hash__()
    assert var_2 == -4606328870177462788
    var_3 = link_7.__repr__()
    assert (
        var_3
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_1)
    link_9 = module_0.Link(link_8)
    var_4 = link_9.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    bool_1 = False
    link_10 = module_0.Link(bool_1)
    var_6 = link_10.__repr__()
    assert var_6 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_11 = module_0.Link(var_6, nofollow=var_6)
    assert f"{type(link_11).__module__}.{type(link_11).__qualname__}" == "link.Link"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(url=False, text='', fragment='', nofollow=False)\""


def test_case_492():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_1 = module_0.Link(bool_2, fragment=tuple_1)
    var_2 = link_1.__hash__()
    assert var_2 == -8753497827991233192
    link_2 = module_0.Link(var_2, var_2, nofollow=var_2)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    bool_4 = True
    link_5 = module_0.Link(bool_4)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_6 = module_0.Link(float_0, fragment=var_4)
    link_7 = module_0.Link(float_0, fragment=link_5)
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_8 = module_0.Link(bool_5, fragment=tuple_2)
    var_5 = link_8.__hash__()
    assert var_5 == -8753497827991233192
    set_1 = {tuple_2, var_5, bool_6, bool_5}
    var_6 = var_5.__eq__(set_1)
    var_7 = link_8.__hash__()
    assert var_7 == -8753497827991233192
    var_8 = var_3.__repr__()
    assert var_8 == "-8753497827991233192"


def test_case_493():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )


def test_case_494():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bytes_1 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_1, nofollow=bytes_1)
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_4 = module_0.Link(bytes_2)
    var_3 = link_4.__eq__(link_4)
    assert var_3 is True


def test_case_495():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, link_3)
    int_0 = 3199
    link_5 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_1 = b"-5164621852614943975"
    link_6 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_3 = link_6.__repr__()
    assert (
        var_3
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_2)
    link_8 = module_0.Link(link_7)
    var_4 = link_8.__hash__()
    assert var_4 == -4606328870177462788
    bool_1 = True
    link_9 = module_0.Link(bool_1)
    var_5 = link_9.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_2)
    link_10 = module_0.Link(var_4)
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_3)
    link_12 = module_0.Link(link_11)
    var_7 = link_12.__hash__()
    assert var_7 == -4606328870177462788
    var_8 = var_7.__hash__()
    assert var_8 == -2300485860963768837
    bool_2 = False
    link_13 = module_0.Link(bool_2)
    var_9 = link_13.__repr__()
    assert var_9 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_14 = module_0.Link(tuple_0, fragment=bool_3)
    var_10 = link_14.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_0)
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_15 = module_0.Link(tuple_1, fragment=bool_5)
    var_13 = link_15.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__eq__(tuple_1)
    var_16 = var_15.__repr__()
    object_0 = module_1.object()
    link_16 = module_0.Link(object_0, fragment=object_0)
    bytes_4 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_17 = module_0.Link(bytes_4)
    int_1 = 3199
    link_18 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_17 = link_14.__hash__()
    assert var_17 == -5164621852614943975


def test_case_496():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_2, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_3 = var_2.__eq__(var_2)
    none_type_1 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_4 = link_4.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_6 = module_0.Link(link_4)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_8 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_8.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__hash__()
    assert var_9 == -552935834187556073
    float_0 = 5.0
    link_9 = module_0.Link(float_0)
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, link_9)
    var_10 = link_10.__eq__(link_10)
    assert var_10 is True
    var_11 = var_6.__hash__()
    assert var_11 == 5710265117276615615


def test_case_497():
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_1 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, link_2)
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_2 = b"-5164621852614943975"
    link_5 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_1 = link_5.__repr__()
    assert (
        var_1
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bytes_3 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_6 = module_0.Link(bytes_3, bytes_3)
    var_2 = link_6.__hash__()
    assert var_2 == 0
    var_3 = var_2.__repr__()
    assert var_3 == "0"
    bytes_4 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_7 = module_0.Link(bytes_4)
    var_4 = var_2.__eq__(bytes_3)
    int_1 = 3199
    link_8 = module_0.Link(int_1, int_1, nofollow=int_1)
    bytes_5 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_5, bytes_5)
    bool_0 = True
    link_10 = module_0.Link(bool_0)
    var_5 = link_10.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_11 = module_0.Link(float_1, fragment=var_5)
    link_12 = module_0.Link(float_1, fragment=link_10)
    object_0 = module_1.object()
    link_13 = module_0.Link(object_0, fragment=object_0)
    var_6 = link_13.__repr__()
    var_7 = link_13.__hash__()
    assert var_7 == 0
    link_14 = module_0.Link(var_3, nofollow=link_6)
    assert f"{type(link_14).__module__}.{type(link_14).__qualname__}" == "link.Link"


def test_case_498():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_2 = link_2.__hash__()
    assert var_2 == -8753497827991233192
    link_3 = module_0.Link(var_2, var_2, nofollow=var_2)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_4 = module_0.Link(bool_4, fragment=tuple_2)
    var_5 = link_4.__hash__()
    assert var_5 == -8753497827991233192
    link_5 = module_0.Link(var_5, var_5, nofollow=var_5)
    var_6 = link_4.__hash__()
    assert var_6 == -8753497827991233192
    bool_6 = False
    none_type_1 = None
    link_6 = module_0.Link(bool_6, fragment=none_type_1)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_0)
    link_8 = module_0.Link(link_7)
    var_8 = link_8.__hash__()
    assert var_8 == -4606328870177462788
    bool_7 = True
    link_9 = module_0.Link(bool_7)
    var_9 = link_9.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_10 = var_8.__eq__(bytes_0)
    link_10 = module_0.Link(var_10, var_10)
    bool_8 = False
    link_11 = module_0.Link(bool_8)
    var_11 = link_5.__repr__()
    assert (
        var_11
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )


def test_case_499():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_4.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_6 = module_0.Link(var_3, var_4, nofollow=link_4)
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_7 = module_0.Link(bool_3, fragment=tuple_0)
    var_5 = link_7.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_0, var_5, bool_4, bool_3}
    var_6 = var_5.__eq__(set_0)
    bool_5 = False
    link_8 = module_0.Link(bool_5)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_7 = link_9.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_6 = False
    link_10 = module_0.Link(bool_6)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_11 = module_0.Link(var_7, bytes_2)
    var_9 = var_8.__repr__()
    assert (
        var_9
        == "'\"Link(url=b\\'\\\\\\\\xd1\\\\\\\\x04\\\\\\\\x83\\\\\\\\xb7\\\\\\\\x84\\\\\\\\x19<2\\\\\\\\xe6<\\\\\\\\xc4\\\\\\\\x19\\\\\\\\xaeE\\\\\\\\xfb:J4\\\\\\\\xdd\\', text=b\\'\\\\\\\\xd1\\\\\\\\x04\\\\\\\\x83\\\\\\\\xb7\\\\\\\\x84\\\\\\\\x19<2\\\\\\\\xe6<\\\\\\\\xc4\\\\\\\\x19\\\\\\\\xaeE\\\\\\\\xfb:J4\\\\\\\\xdd\\', fragment=\\'\\', nofollow=False)\"'"
    )


def test_case_500():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_1 = module_0.Link(bool_2, fragment=tuple_1)
    var_2 = link_1.__hash__()
    assert var_2 == -8753497827991233192
    link_2 = module_0.Link(var_2, var_2, nofollow=var_2)
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, link_3)
    var_3 = link_4.__eq__(link_4)
    assert var_3 is True
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_2, fragment=bool_4)
    var_4 = link_5.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, bool_5)
    bool_6 = False
    link_7 = module_0.Link(bool_6)
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_8 = module_0.Link(tuple_3, fragment=bool_7)
    var_7 = link_8.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_3)
    var_10 = var_9.__repr__()
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_10 = module_0.Link(var_11, nofollow=link_9)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    var_12 = link_10.__hash__()
    assert var_12 == 4128530656735687579
    link_11 = module_0.Link(var_7)


def test_case_501():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    none_type_2 = None
    link_1 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_2 = module_0.Link(var_3, nofollow=link_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_4 = link_2.__hash__()
    assert var_4 == 4128530656735687579
    var_5 = link_2.__repr__()
    assert (
        var_5
        == "Link(url=b\"Link(url=None, text=None, fragment='', nofollow=None)\", text='', fragment='', nofollow=Link(url=None, text=None, fragment='', nofollow=None))"
    )


def test_case_502():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_1 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_1 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_1 = link_1.__repr__()
    var_2 = var_1.__eq__(bool_1)
    var_3 = var_2.__hash__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_4 = link_3.__hash__()
    assert var_4 == -4606328870177462788
    bool_2 = True
    link_4 = module_0.Link(bool_2)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_0)
    link_5 = module_0.Link(var_6, var_6)
    bytes_1 = b"-5164621852614943975"
    link_6 = module_0.Link(bytes_1, nofollow=bytes_1)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_2)
    link_8 = module_0.Link(link_7)
    var_7 = link_8.__hash__()
    assert var_7 == -4606328870177462788
    bool_3 = True
    link_9 = module_0.Link(bool_3)
    var_8 = link_9.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_2)
    var_10 = var_9.__hash__()
    none_type_1 = None
    link_10 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_11 = link_10.__repr__()
    assert var_11 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_11 = module_0.Link(var_11, nofollow=link_10)
    assert f"{type(link_11).__module__}.{type(link_11).__qualname__}" == "link.Link"
    var_12 = link_11.__hash__()
    assert var_12 == 4128530656735687579
    bool_4 = True
    link_12 = module_0.Link(bool_4, nofollow=bool_4)
    var_13 = var_5.__repr__()
    assert var_13 == "\"Link(url=True, text='', fragment='', nofollow=False)\""


def test_case_503():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    bytes_1 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_1, nofollow=bytes_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_2, bytes_2)
    bool_1 = True
    link_6 = module_0.Link(bool_1, bool_1, nofollow=bool_1)
    var_1 = link_6.__hash__()
    assert var_1 == 1
    float_1 = 5.0
    link_7 = module_0.Link(float_1)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_3, bytes_3)
    bool_2 = True
    link_9 = module_0.Link(bool_2)
    var_2 = link_9.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_2 = 3106.326
    link_10 = module_0.Link(float_2, fragment=var_2)
    bool_3 = False
    none_type_0 = None
    link_11 = module_0.Link(bool_3, fragment=none_type_0)
    var_3 = link_11.__repr__()
    assert var_3 == "Link(url=False, text='', fragment=None, nofollow=False)"
    none_type_1 = None
    bool_4 = True
    link_12 = module_0.Link(bool_4, nofollow=bool_4)
    var_4 = link_12.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_4, bytes_4)
    var_6 = link_12.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_14 = module_0.Link(link_12)
    var_7 = link_4.__eq__(link_3)
    assert var_7 is False


def test_case_504():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    none_type_1 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_4 = link_2.__hash__()
    assert var_4 == 0
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    bool_1 = True
    link_5 = module_0.Link(bool_1)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_6 = module_0.Link(float_0, fragment=var_5)
    link_7 = module_0.Link(float_0, fragment=link_5)
    bool_2 = False
    link_8 = module_0.Link(bool_2)
    var_6 = link_8.__repr__()
    assert var_6 == "Link(url=False, text='', fragment='', nofollow=False)"
    object_0 = module_1.object()
    link_9 = module_0.Link(object_0, fragment=object_0)
    var_7 = link_9.__repr__()
    link_10 = module_0.Link(var_5, nofollow=none_type_1)


def test_case_505():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    var_2 = link_1.__repr__()
    none_type_0 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    link_3 = module_0.Link(link_2)
    link_4 = module_0.Link(var_3, fragment=none_type_0)
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_5 = module_0.Link(bytes_0)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_6 = var_5.__eq__(int_0)
    var_7 = var_6.__repr__()
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_1, fragment=bool_3)
    var_8 = link_6.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_8.__hash__()
    assert var_11 == -552935834187556073
    bool_5 = True
    link_7 = module_0.Link(bool_5)
    var_12 = link_7.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_8 = module_0.Link(tuple_2, fragment=bool_6)
    var_13 = link_8.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__eq__(tuple_2)
    var_16 = var_15.__repr__()
    none_type_1 = None
    link_9 = module_0.Link(none_type_1)
    var_17 = link_9.__hash__()
    assert var_17 == 477042
    var_18 = var_17.__hash__()
    assert var_18 == 477042
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_19 = link_10.__hash__()
    assert var_19 == 0
    var_20 = var_19.__repr__()
    assert var_20 == "0"
    bool_8 = False
    bool_9 = False
    tuple_3 = (bool_9,)
    link_11 = module_0.Link(bool_8, fragment=tuple_3)
    var_21 = link_11.__hash__()
    assert var_21 == -8753497827991233192
    link_12 = module_0.Link(var_21, var_21, nofollow=var_21)
    link_13 = module_0.Link(var_8, link_0, nofollow=var_7)


def test_case_506():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_0)
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_1 = link_3.__repr__()
    assert (
        var_1
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_5 = module_0.Link(var_1, var_2, nofollow=link_3)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_3 = False
    link_7 = module_0.Link(bool_3)
    var_3 = link_7.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_8 = module_0.Link(var_3, nofollow=var_3)
    var_4 = var_3.__hash__()
    assert var_4 == -3936900723769714473
    bool_4 = False
    bool_5 = False
    tuple_0 = (bool_5,)
    link_9 = module_0.Link(bool_4, fragment=tuple_0)
    var_5 = link_9.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_0, var_5, bool_5, bool_4}
    var_6 = var_5.__eq__(set_0)
    bool_6 = True
    bool_7 = False
    tuple_1 = (bool_6, bool_7)
    link_10 = module_0.Link(tuple_1, fragment=bool_6)
    var_7 = link_10.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    none_type_1 = None
    link_11 = module_0.Link(none_type_1, bool_7)
    none_type_2 = None
    link_12 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    int_0 = 36
    bytes_2 = b"\xeb\xdc\xa3"
    link_13 = module_0.Link(bytes_2)
    var_10 = link_13.__repr__()
    assert (
        var_10 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_11 = var_10.__eq__(int_0)
    var_12 = var_11.__repr__()
    complex_0 = -2489 + 3297.83623j
    link_14 = module_0.Link(complex_0)
    var_13 = link_14.__hash__()
    assert var_13 == 1172959022599657258
    var_14 = link_8.__repr__()
    assert (
        var_14
        == "Link(url=b\"Link(url=False, text='', fragment='', nofollow=False)\", text='', fragment='', nofollow=\"Link(url=False, text='', fragment='', nofollow=False)\")"
    )


def test_case_507():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=None, text='', fragment=None, nofollow=False)"


def test_case_508():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_3 = module_0.Link(bytes_0)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_2 = var_1.__eq__(int_0)
    var_3 = var_2.__repr__()
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_4 = link_4.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, link_5)
    int_1 = 3199
    link_7 = module_0.Link(int_1, int_1, nofollow=int_1)
    bytes_1 = b"-5164621852614943975"
    link_8 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_7 = link_8.__repr__()
    assert (
        var_7
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    float_1 = 5.0
    link_9 = module_0.Link(float_1)
    none_type_1 = None
    link_10 = module_0.Link(none_type_1, link_9)
    var_8 = link_10.__eq__(link_10)
    assert var_8 is True
    none_type_2 = None
    bool_3 = True
    link_11 = module_0.Link(bool_3, nofollow=bool_3)
    var_9 = link_11.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_2, bytes_2)
    var_11 = link_11.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_12 = var_10.__repr__()
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_3, bytes_3)
    var_13 = link_4.__repr__()
    assert var_13 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"


def test_case_509():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_2 = module_0.Link(var_1, nofollow=link_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_2 = var_1.__eq__(var_1)
    int_0 = 3199
    link_3 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_4 = module_0.Link(tuple_0, fragment=bool_0)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, bool_1)
    var_6 = link_2.__hash__()
    assert var_6 == 4128530656735687579


def test_case_510():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0


def test_case_511():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_1 = var_0.__hash__()
    assert var_1 == -3203539594471298528


def test_case_512():
    int_0 = 2105
    none_type_0 = None
    link_0 = module_0.Link(int_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, int_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == -1122340555193368221
    var_2 = var_1.__repr__()
    assert var_2 == "-1122340555193368221"


def test_case_513():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_1)
    var_2 = var_0.__eq__(bytes_0)
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_2, bytes_2)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, link_4)
    var_4 = link_5.__eq__(link_5)
    assert var_4 is True
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    link_7 = module_0.Link(object_0, none_type_0)
    float_1 = 5.0
    link_8 = module_0.Link(float_1)
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, link_8)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_10 = module_0.Link(tuple_0, fragment=bool_1)
    var_5 = link_10.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_2 = None
    link_11 = module_0.Link(link_10, fragment=none_type_2)
    none_type_3 = None
    none_type_4 = None
    link_12 = module_0.Link(none_type_4)
    var_7 = link_12.__repr__()
    assert var_7 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == 2234852059487564994
    var_9 = var_8.__eq__(none_type_3)
    int_0 = 3199
    link_13 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_10 = link_13.__repr__()
    assert var_10 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_3 = False
    link_14 = module_0.Link(bool_3)
    var_11 = link_14.__repr__()
    assert var_11 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_15 = module_0.Link(var_11, nofollow=var_11)
    assert f"{type(link_15).__module__}.{type(link_15).__qualname__}" == "link.Link"
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_16 = module_0.Link(tuple_1, fragment=bool_4)
    var_12 = link_16.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__repr__()
    assert var_14 == "-5164621852614943975"
    bytes_3 = b"-5164621852614943975"
    link_17 = module_0.Link(bytes_3, nofollow=bytes_3)
    var_15 = link_17.__repr__()
    assert (
        var_15
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    var_16 = var_12.__hash__()
    assert var_16 == -552935834187556073


def test_case_514():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    none_type_1 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_0 = link_2.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_1)
    link_3 = module_0.Link(link_2)
    none_type_2 = None
    link_4 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_5 = module_0.Link(var_2, nofollow=link_4)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_6 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_6.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_0)
    int_0 = 3199
    link_7 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_6 = link_7.__repr__()
    assert var_6 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_7 = var_6.__hash__()
    assert var_7 == -3203539594471298528
    none_type_3 = None
    link_8 = module_0.Link(none_type_3)
    var_8 = link_8.__hash__()
    assert var_8 == 477042
    var_9 = var_8.__hash__()
    assert var_9 == 477042
    var_10 = var_3.__eq__(var_6)


def test_case_515():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_2 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__repr__()
    assert var_4 == "0"
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_3 = module_0.Link(bytes_2)
    var_5 = var_3.__eq__(bytes_1)
    var_6 = var_4.__hash__()
    assert var_6 == -2160177414882843650


def test_case_516():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__hash__()
    assert var_1 == 477042
    bool_0 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_1 = module_0.Link(var_1, fragment=bool_0, nofollow=complex_0)


def test_case_517():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 5


def test_case_518():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=None, text='', fragment=None, nofollow=False)"
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_3 = link_1.__repr__()
    assert (
        var_3
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, link_3)
    bytes_1 = b"-5164621852614943975"
    link_5 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_7 = link_5.__hash__()
    assert var_7 == 0
    bool_2 = True
    link_6 = module_0.Link(bool_2)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_2 = None
    none_type_3 = None
    link_7 = module_0.Link(none_type_3)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_10 = var_9.__hash__()
    assert var_10 == 2234852059487564994
    var_11 = var_10.__eq__(none_type_2)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_2)
    link_9 = module_0.Link(link_8)
    var_12 = link_9.__hash__()
    assert var_12 == -4606328870177462788
    var_13 = var_12.__hash__()
    assert var_13 == -2300485860963768837
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_3)
    link_11 = module_0.Link(link_10)
    var_14 = link_11.__hash__()
    assert var_14 == -4606328870177462788
    bool_3 = True
    link_12 = module_0.Link(bool_3)
    var_15 = link_12.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_16 = var_14.__eq__(bytes_3)
    var_17 = var_16.__hash__()
    bytes_4 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_13 = module_0.Link(bytes_4, bytes_4)
    var_18 = link_13.__hash__()
    assert var_18 == 0
    var_19 = var_18.__repr__()
    assert var_19 == "0"
    bytes_5 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_14 = module_0.Link(bytes_5)
    var_20 = var_18.__eq__(bytes_4)
    var_21 = link_2.__hash__()
    assert var_21 == -5164621852614943975


def test_case_519():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_1.__hash__()
    assert var_1 == -1835968800350151339
    var_2 = var_1.__hash__()
    assert var_2 == -1835968800350151339


def test_case_520():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    var_1 = link_0.__hash__()
    assert var_1 == 0
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_4 = module_0.Link(var_2, var_3, nofollow=link_2)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_5 = module_0.Link(bytes_1)
    var_4 = link_4.__hash__()
    assert var_4 == -458611915536994964


def test_case_521():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_1 = link_3.__hash__()
    assert var_1 == -4606328870177462788
    bool_0 = True
    link_4 = module_0.Link(bool_0)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_3 = var_1.__eq__(bytes_0)
    link_5 = module_0.Link(var_3, var_3)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_6 = module_0.Link(tuple_0, fragment=bool_1)
    var_4 = link_6.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_4.__hash__()
    assert var_7 == -552935834187556073
    bool_3 = True
    link_7 = module_0.Link(var_3, bool_3)


def test_case_522():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    var_3 = link_3.__repr__()
    var_4 = link_3.__hash__()
    assert var_4 == 0
    bytes_1 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_1, nofollow=bytes_1)
    none_type_1 = None
    bool_1 = True
    link_5 = module_0.Link(bool_1, nofollow=bool_1)
    var_5 = link_5.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    none_type_2 = None
    link_6 = module_0.Link(none_type_2)
    var_7 = link_6.__hash__()
    assert var_7 == 477042
    var_8 = var_7.__hash__()
    assert var_8 == 477042
    bool_2 = False
    link_7 = module_0.Link(bool_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_2, bytes_2)
    var_9 = link_8.__repr__()
    assert (
        var_9
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_9 = module_0.Link(bool_3)
    var_10 = var_9.__repr__()
    assert (
        var_10
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_10 = module_0.Link(var_9, var_10, nofollow=link_8)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_3, bytes_3)
    bool_4 = True
    link_12 = module_0.Link(bool_4)
    var_11 = link_12.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_13 = module_0.Link(float_0, fragment=var_11)
    link_14 = module_0.Link(float_0, fragment=link_12)
    none_type_3 = None
    link_15 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_12 = link_15.__repr__()
    assert var_12 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_16 = module_0.Link(var_12, nofollow=link_15)
    var_13 = link_16.__hash__()
    assert var_13 == 4128530656735687579
    var_14 = var_3.__eq__(object_0)


def test_case_523():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    int_0 = 2105
    none_type_0 = None
    link_1 = module_0.Link(int_0, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, int_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_1 = link_2.__hash__()
    assert var_1 == -1122340555193368221
    var_2 = var_1.__repr__()
    assert var_2 == "-1122340555193368221"
    var_3 = link_1.__hash__()
    assert var_3 == 479051


def test_case_524():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_4 = link_1.__hash__()
    assert var_4 == -8753497827991233192
    link_2 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = link_1.__hash__()
    assert var_5 == -8753497827991233192
    var_6 = var_3.__hash__()


def test_case_525():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, bool_2)
    bytes_1 = b"-5164621852614943975"
    link_5 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_6 = link_5.__repr__()
    assert (
        var_6
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, link_6)
    var_7 = link_7.__eq__(link_7)
    assert var_7 is True
    object_0 = module_1.object()
    link_8 = module_0.Link(object_0, fragment=object_0)
    link_9 = module_0.Link(object_0, none_type_2)
    bool_3 = False
    link_10 = module_0.Link(bool_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    var_8 = link_11.__repr__()
    assert (
        var_8
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_12 = module_0.Link(bool_4)
    var_9 = var_8.__repr__()
    assert (
        var_9
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_13 = module_0.Link(var_8, bytes_2)
    bytes_3 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_14 = module_0.Link(bytes_3, bytes_3)
    var_10 = link_14.__hash__()
    assert var_10 == 0
    var_11 = var_10.__repr__()
    assert var_11 == "0"
    bytes_4 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_15 = module_0.Link(bytes_4)
    var_12 = var_10.__eq__(bytes_3)
    none_type_3 = None
    bool_5 = True
    link_16 = module_0.Link(bool_5, nofollow=bool_5)
    var_13 = link_16.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_3)
    bytes_5 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_17 = module_0.Link(bytes_5, bytes_5)
    var_15 = link_16.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_16 = link_16.__hash__()
    assert var_16 == 0
    none_type_4 = None
    link_18 = module_0.Link(none_type_4, none_type_4, nofollow=none_type_4)
    var_17 = link_18.__repr__()
    assert var_17 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_19 = module_0.Link(var_17, nofollow=link_18)
    none_type_5 = None
    link_20 = module_0.Link(none_type_5, fragment=none_type_5)
    var_18 = link_20.__hash__()
    assert var_18 == 0
    var_19 = var_18.__hash__()
    assert var_19 == 0
    var_20 = link_20.__repr__()
    assert var_20 == "Link(url=None, text='', fragment=None, nofollow=False)"
    object_1 = module_1.object()
    link_21 = module_0.Link(object_1, fragment=object_1)
    var_21 = link_21.__repr__()
    link_22 = module_0.Link(bytes_2, fragment=bytes_3)


def test_case_526():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = var_0.__eq__(var_0)


def test_case_527():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_1 = link_3.__repr__()
    assert (
        var_1
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    none_type_1 = None
    bool_2 = True
    link_5 = module_0.Link(bool_2, nofollow=bool_2)
    var_2 = link_5.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_7 = module_0.Link(link_5)
    bool_3 = True
    dict_0 = {}
    none_type_2 = None
    float_1 = 2515.28653
    link_8 = module_0.Link(dict_0, none_type_2, float_1, none_type_2)
    var_5 = link_8.__repr__()
    var_6 = var_5.__eq__(bool_3)
    var_7 = var_6.__hash__()
    var_8 = link_7.__hash__()


def test_case_528():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_0)
    var_5 = var_4.__repr__()
    link_3 = module_0.Link(tuple_0, var_4, bool_0, var_0)


def test_case_529():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    none_type_0 = None
    bool_1 = True
    link_2 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_2.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_4 = link_2.__hash__()
    assert var_4 == 0
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_5 = link_4.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_8 = link_7.__hash__()
    assert var_8 == -4606328870177462788
    var_9 = link_7.__repr__()
    assert (
        var_9
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    none_type_2 = None
    bool_4 = True
    link_8 = module_0.Link(bool_4, nofollow=bool_4)
    var_10 = link_8.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_13 = var_11.__repr__()
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, fragment=none_type_3)
    var_14 = link_10.__hash__()
    assert var_14 == 0
    var_15 = var_14.__hash__()
    assert var_15 == 0
    var_16 = var_14.__eq__(var_14)
    bool_5 = False
    link_11 = module_0.Link(bool_5)
    var_17 = link_11.__repr__()
    assert var_17 == "Link(url=False, text='', fragment='', nofollow=False)"
    none_type_4 = None
    link_12 = module_0.Link(none_type_4, fragment=none_type_4)
    var_18 = link_12.__hash__()
    assert var_18 == 0
    var_19 = var_18.__hash__()
    assert var_19 == 0
    var_20 = link_9.__repr__()
    assert (
        var_20
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )


def test_case_530():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bool_2 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_2 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_2 = link_2.__repr__()
    var_3 = var_2.__eq__(bool_2)
    var_4 = var_3.__hash__()
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_3 = module_0.Link(bool_3, fragment=tuple_1)
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_1, var_5, bool_4, bool_3}
    var_6 = var_5.__eq__(set_0)
    var_7 = link_3.__hash__()
    assert var_7 == -8753497827991233192
    var_8 = var_6.__hash__()


def test_case_531():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0


def test_case_532():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__hash__()
    assert var_2 == -552935834187556073
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_3 = link_2.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_1, var_3, bool_3, bool_2}
    var_4 = var_3.__eq__(set_0)
    bool_4 = False
    link_3 = module_0.Link(bool_4)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_5 = module_0.Link(bool_5, fragment=tuple_2)
    var_6 = link_5.__hash__()
    assert var_6 == -8753497827991233192
    link_6 = module_0.Link(var_6, var_6, nofollow=var_6)
    var_7 = link_6.__repr__()
    assert (
        var_7
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_8 = var_3.__repr__()
    assert var_8 == "-8753497827991233192"


def test_case_533():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    bool_2 = True
    link_3 = module_0.Link(bool_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_0)
    var_6 = var_5.__hash__()
    bytes_1 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_7 = link_4.__hash__()
    assert var_7 == 0
    none_type_0 = None
    bool_3 = True
    link_5 = module_0.Link(bool_3, nofollow=bool_3)
    var_8 = link_5.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_5.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_11 = link_5.__hash__()
    assert var_11 == 0
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_3)
    link_8 = module_0.Link(link_7)
    var_12 = link_8.__hash__()
    assert var_12 == -4606328870177462788
    bool_4 = True
    link_9 = module_0.Link(bool_4)
    var_13 = link_9.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_14 = var_12.__eq__(bytes_3)
    link_10 = module_0.Link(var_14, var_14)
    bytes_4 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_11 = module_0.Link(bytes_4, bytes_4)
    var_15 = link_11.__hash__()
    assert var_15 == 0
    var_16 = var_15.__repr__()
    assert var_16 == "0"
    var_17 = var_0.__hash__()
    assert var_17 == -552935834187556073


def test_case_534():
    bool_0 = False
    none_type_0 = None
    link_0 = module_0.Link(bool_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"
    int_0 = 401
    link_1 = module_0.Link(int_0, int_0)
    none_type_1 = None
    bool_1 = True
    link_2 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_2.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_4 = module_0.Link(link_2)
    none_type_2 = None
    link_5 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_6 = module_0.Link(tuple_0, fragment=bool_2)
    var_4 = link_6.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__hash__()
    assert var_6 == -552935834187556073
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_7 = link_8.__hash__()
    assert var_7 == -4606328870177462788
    bool_4 = True
    link_9 = module_0.Link(bool_4)
    var_8 = link_9.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_1)
    link_10 = module_0.Link(var_9, var_9)
    bool_5 = True
    link_11 = module_0.Link(bool_5, bool_5, nofollow=bool_5)
    var_10 = link_11.__hash__()
    assert var_10 == 1
    none_type_3 = None
    bool_6 = True
    link_12 = module_0.Link(bool_6, nofollow=bool_6)
    var_11 = link_12.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_3)
    link_13 = module_0.Link(link_12)
    link_14 = module_0.Link(var_11, fragment=none_type_3)
    bool_7 = True
    bool_8 = False
    tuple_1 = (bool_7, bool_8)
    link_15 = module_0.Link(tuple_1, fragment=bool_7)
    var_13 = link_15.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_16 = module_0.Link(bytes_2)
    link_17 = module_0.Link(link_16)
    var_15 = link_17.__hash__()
    assert var_15 == -4606328870177462788
    var_16 = var_15.__hash__()
    assert var_16 == -2300485860963768837
    object_0 = module_1.object()
    link_18 = module_0.Link(object_0, fragment=object_0)
    var_17 = link_6.__repr__()
    assert var_17 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    link_19 = module_0.Link(none_type_1, fragment=var_17)


def test_case_535():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_2 = True
    link_3 = module_0.Link(bool_2, nofollow=bool_2)
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    var_4 = link_4.__repr__()
    int_1 = 3199
    link_5 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_6 = var_5.__hash__()
    assert var_6 == -3203539594471298528
    var_7 = var_2.__repr__()
    assert var_7 == "'-5164621852614943975'"


def test_case_536():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    none_type_1 = None
    bool_0 = True
    link_4 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_1)
    link_5 = module_0.Link(link_4)
    link_6 = module_0.Link(var_1, fragment=none_type_1)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_7 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_7.__hash__()
    assert var_3 == -8753497827991233192
    link_8 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_7.__hash__()
    assert var_4 == -8753497827991233192
    none_type_2 = None
    bool_3 = True
    link_9 = module_0.Link(bool_3, nofollow=bool_3)
    var_5 = link_9.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_9.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_11 = module_0.Link(link_9)
    bool_4 = True
    link_12 = module_0.Link(bool_4, bool_4, nofollow=bool_4)
    var_8 = link_12.__hash__()
    assert var_8 == 1
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_13 = module_0.Link(bytes_1)
    link_14 = module_0.Link(link_13)
    bytes_2 = b"-5164621852614943975"
    link_15 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_9 = link_15.__hash__()
    assert var_9 == 0
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_16 = module_0.Link(bool_5, fragment=tuple_1)
    var_10 = link_16.__hash__()
    assert var_10 == -8753497827991233192
    link_17 = module_0.Link(var_10, var_10, nofollow=var_10)
    var_11 = link_17.__repr__()
    assert (
        var_11
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_12 = link_16.__repr__()
    assert var_12 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_18 = module_0.Link(bytes_3)
    link_19 = module_0.Link(link_18)
    var_13 = link_19.__hash__()
    assert var_13 == -4606328870177462788
    var_14 = var_13.__hash__()
    assert var_14 == -2300485860963768837
    var_15 = var_10.__hash__()
    assert var_15 == -1835968800350151339


def test_case_537():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 5
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_3 = module_0.Link(bool_2, fragment=tuple_1)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_4 = module_0.Link(bool_4, fragment=tuple_2)
    var_5 = link_4.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_2, var_5, bool_5, bool_4}
    var_6 = var_5.__eq__(set_0)
    var_7 = link_4.__hash__()
    assert var_7 == -8753497827991233192
    none_type_1 = None
    link_5 = module_0.Link(none_type_1)
    var_8 = link_5.__hash__()
    assert var_8 == 477042
    var_9 = var_8.__hash__()
    assert var_9 == 477042
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2)
    var_10 = link_6.__hash__()
    assert var_10 == 0
    var_11 = var_10.__hash__()
    assert var_11 == 0
    var_12 = var_10.__eq__(var_10)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_0, bytes_0)
    var_13 = link_2.__hash__()
    assert var_13 == -5164621852614943975


def test_case_538():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_1 = link_2.__hash__()
    assert var_1 == 0
    var_2 = var_1.__repr__()
    assert var_2 == "0"
    var_3 = var_1.__hash__()
    assert var_3 == 0
    bool_0 = True
    dict_0 = {}
    none_type_1 = None
    float_1 = 2515.28653
    link_3 = module_0.Link(dict_0, none_type_1, float_1, none_type_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_5 = var_4.__eq__(bool_0)
    var_6 = var_5.__hash__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_7 = link_5.__hash__()
    assert var_7 == -4606328870177462788
    var_8 = link_5.__repr__()
    assert (
        var_8
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_6 = module_0.Link(tuple_0, fragment=bool_1)
    var_9 = link_6.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__eq__(tuple_0)
    var_12 = var_11.__repr__()
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    bytes_3 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_8 = module_0.Link(bytes_3, bytes_3)
    var_13 = link_8.__hash__()
    assert var_13 == 0
    var_14 = var_13.__repr__()
    assert var_14 == "0"
    bytes_4 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_9 = module_0.Link(bytes_4)
    var_15 = var_13.__eq__(bytes_3)
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_11 = module_0.Link(tuple_1, fragment=bool_3)
    var_16 = link_11.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    var_18 = var_16.__hash__()
    assert var_18 == -552935834187556073
    var_19 = var_12.__hash__()


def test_case_539():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 5
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_3 = module_0.Link(var_3, nofollow=var_3)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    none_type_1 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_4.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_2)
    link_7 = module_0.Link(link_6)
    var_7 = link_7.__hash__()
    assert var_7 == -4606328870177462788
    var_8 = link_7.__repr__()
    assert (
        var_8
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_3, bytes_3)
    bool_2 = True
    link_9 = module_0.Link(bool_2)
    var_9 = link_9.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_10 = module_0.Link(float_1, fragment=var_9)
    none_type_2 = None
    bool_3 = True
    link_11 = module_0.Link(bool_3, nofollow=bool_3)
    var_10 = link_11.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_2)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_4, bytes_4)
    var_12 = link_11.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_13 = module_0.Link(link_11)
    bool_4 = True
    bool_5 = False
    tuple_0 = (bool_4, bool_5)
    link_14 = module_0.Link(tuple_0, fragment=bool_4)
    var_13 = link_14.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__eq__(tuple_0)
    object_0 = module_1.object()
    link_15 = module_0.Link(object_0, fragment=object_0)
    var_16 = link_15.__repr__()
    var_17 = link_15.__hash__()
    assert var_17 == 0
    none_type_3 = None
    link_16 = module_0.Link(none_type_3)
    var_18 = link_16.__hash__()
    assert var_18 == 477042
    var_19 = var_18.__hash__()
    assert var_19 == 477042
    bool_6 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_17 = module_0.Link(var_19, fragment=bool_6, nofollow=complex_0)
    bool_7 = False
    link_18 = module_0.Link(bool_7)
    bytes_5 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_19 = module_0.Link(bytes_5, bytes_5)
    var_20 = link_19.__repr__()
    assert (
        var_20
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_8 = False
    link_20 = module_0.Link(bool_8)
    var_21 = var_20.__repr__()
    assert (
        var_21
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    float_2 = 3106.326
    bool_9 = True
    link_21 = module_0.Link(link_1, fragment=float_2, nofollow=bool_9)


def test_case_540():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0)
    var_0 = link_2.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_4.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__hash__()
    assert var_4 == -552935834187556073
    object_0 = module_1.object()
    link_5 = module_0.Link(object_0, fragment=object_0)
    var_5 = link_5.__repr__()
    var_6 = link_5.__hash__()
    assert var_6 == 0
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_6.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_7.__hash__()
    assert var_10 == -552935834187556073
    bool_5 = False
    link_7 = module_0.Link(bool_5)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_0, bytes_0)
    var_11 = link_8.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_6 = False
    link_9 = module_0.Link(bool_6)
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_10 = module_0.Link(var_11, bytes_0)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_11 = module_0.Link(bytes_1, bytes_1)
    var_13 = link_11.__hash__()
    assert var_13 == 0
    var_14 = var_13.__repr__()
    assert var_14 == "0"
    var_15 = var_13.__hash__()
    assert var_15 == 0
    var_16 = link_0.__eq__(link_8)
    assert var_16 is False


def test_case_541():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    none_type_1 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_3.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_1)
    link_4 = module_0.Link(link_3)
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, link_5)
    var_3 = link_6.__eq__(link_6)
    assert var_3 is True
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    link_8 = module_0.Link(object_0, none_type_2)
    bool_2 = True
    link_9 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_4 = link_9.__hash__()
    assert var_4 == 1
    none_type_3 = None
    bool_3 = True
    link_10 = module_0.Link(bool_3, nofollow=bool_3)
    var_5 = link_10.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_3)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_10.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_8 = link_10.__hash__()
    assert var_8 == 0
    none_type_4 = None
    link_12 = module_0.Link(none_type_4, fragment=none_type_4, nofollow=none_type_4)
    bool_4 = False
    link_13 = module_0.Link(bool_4)
    var_9 = link_13.__repr__()
    assert var_9 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_14 = module_0.Link(var_9, nofollow=var_9)
    var_10 = var_9.__hash__()
    assert var_10 == -3936900723769714473
    bool_5 = True
    bool_6 = False
    tuple_0 = (bool_5, bool_6)
    link_15 = module_0.Link(tuple_0, fragment=bool_5)
    var_11 = link_15.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    none_type_5 = None
    link_16 = module_0.Link(none_type_5)
    var_13 = link_16.__hash__()
    assert var_13 == 477042
    var_14 = var_13.__hash__()
    assert var_14 == 477042
    bool_7 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_17 = module_0.Link(var_14, fragment=bool_7, nofollow=complex_0)
    bool_8 = True
    link_18 = module_0.Link(bool_3, nofollow=bool_8)


def test_case_542():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    none_type_0 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_5 = module_0.Link(var_5, nofollow=link_4)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_6 = var_5.__eq__(var_5)
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, link_6)
    var_7 = link_7.__eq__(link_7)
    assert var_7 is True
    object_0 = module_1.object()
    link_8 = module_0.Link(object_0, fragment=object_0)
    link_9 = module_0.Link(object_0, none_type_2)
    none_type_3 = None
    bool_3 = True
    link_10 = module_0.Link(bool_3, nofollow=bool_3)
    var_8 = link_10.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_1, bytes_1)
    var_10 = link_10.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_12 = module_0.Link(var_10, nofollow=var_10)
    bool_4 = False
    link_13 = module_0.Link(bool_4)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_14 = module_0.Link(bytes_2, bytes_2)
    var_11 = link_14.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_15 = module_0.Link(bool_5)
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_16 = module_0.Link(var_11, bytes_2)
    none_type_4 = None
    link_17 = module_0.Link(none_type_4, none_type_4, nofollow=none_type_4)
    var_13 = link_17.__repr__()
    assert var_13 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_18 = module_0.Link(var_13, nofollow=link_17)
    var_14 = link_18.__hash__()
    assert var_14 == 4128530656735687579
    bool_6 = False
    bool_7 = False
    tuple_1 = (bool_7,)
    link_19 = module_0.Link(bool_6, fragment=tuple_1)
    var_15 = link_19.__hash__()
    assert var_15 == -8753497827991233192
    link_20 = module_0.Link(var_15, var_15, nofollow=var_15)
    var_16 = link_20.__repr__()
    assert (
        var_16
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_17 = link_19.__repr__()
    assert var_17 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    var_18 = link_8.__hash__()
    assert var_18 == 0


def test_case_543():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__hash__()
    assert var_3 == 0
    none_type_1 = None
    bool_0 = True
    link_3 = module_0.Link(bool_0, nofollow=bool_0)
    var_4 = link_3.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    var_6 = var_4.__repr__()
    assert var_6 == "0"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_4 = module_0.Link(bool_1, fragment=tuple_0)
    var_7 = link_4.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_0, var_7, bool_2, bool_1}
    var_8 = var_7.__eq__(set_0)
    var_9 = link_4.__hash__()
    assert var_9 == -8753497827991233192
    bool_3 = True
    link_5 = module_0.Link(bool_3, bool_3, nofollow=bool_3)
    var_10 = link_5.__hash__()
    assert var_10 == 1
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_11 = link_7.__repr__()
    assert var_11 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_8 = module_0.Link(var_11, nofollow=link_7)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    var_12 = var_11.__eq__(var_11)
    complex_0 = -2489 + 3297.83623j
    link_9 = module_0.Link(complex_0)
    var_13 = link_9.__hash__()
    assert var_13 == 1172959022599657258
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, fragment=none_type_3)
    var_14 = link_10.__hash__()
    assert var_14 == 0
    var_15 = var_14.__hash__()
    assert var_15 == 0
    var_16 = var_14.__eq__(var_14)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_11 = module_0.Link(bytes_1, bytes_1)
    var_17 = link_11.__hash__()
    assert var_17 == 0
    var_18 = var_17.__repr__()
    assert var_18 == "0"
    var_19 = var_17.__hash__()
    assert var_19 == 0
    var_20 = var_2.__repr__()
    assert var_20 == "0"


def test_case_544():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__repr__()
    assert var_4 == "0"
    var_5 = var_3.__hash__()
    assert var_5 == 0
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_2 = module_0.Link(bool_0, fragment=tuple_0)
    var_6 = link_2.__hash__()
    assert var_6 == -8753497827991233192
    link_3 = module_0.Link(var_6, var_6, nofollow=var_6)
    var_7 = link_3.__hash__()
    assert var_7 == -1835968800350151339
    var_8 = var_7.__hash__()
    assert var_8 == -1835968800350151339
    int_1 = 401
    link_4 = module_0.Link(int_1, int_1)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_5 = module_0.Link(bool_2, fragment=tuple_1)
    var_9 = link_5.__hash__()
    assert var_9 == -8753497827991233192
    link_6 = module_0.Link(var_9, var_9, nofollow=var_9)
    float_0 = 5.0
    link_7 = module_0.Link(float_0)
    var_10 = link_7.__hash__()
    assert var_10 == 5
    float_1 = 5.0
    link_8 = module_0.Link(float_1)
    none_type_0 = None
    link_9 = module_0.Link(none_type_0, link_8)
    var_11 = link_9.__eq__(link_9)
    assert var_11 is True
    object_0 = module_1.object()
    link_10 = module_0.Link(object_0, fragment=object_0)
    link_11 = module_0.Link(object_0, none_type_0)
    bool_4 = False
    link_12 = module_0.Link(bool_4)
    var_12 = link_12.__repr__()
    assert var_12 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_5 = False
    link_13 = module_0.Link(bool_5)
    link_14 = module_0.Link(link_7)


def test_case_545():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    var_2 = link_1.__repr__()
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_1, bytes_1)
    bool_0 = True
    link_3 = module_0.Link(bool_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_4 = module_0.Link(float_0, fragment=var_3)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_5 = module_0.Link(tuple_0, fragment=bool_1)
    var_4 = link_5.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, bool_2)
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_7 = link_7.__repr__()
    assert var_7 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_8 = module_0.Link(var_7, nofollow=link_7)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    var_8 = var_7.__eq__(var_7)
    var_9 = link_1.__eq__(link_1)
    assert var_9 is True


def test_case_546():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_0 = link_3.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_4 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_4.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__eq__(tuple_0)
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_5 = module_0.Link(bytes_1)
    bool_2 = False
    link_6 = module_0.Link(bool_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    var_4 = link_7.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_8 = module_0.Link(bool_3)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_9 = module_0.Link(var_4, var_5, nofollow=link_7)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_10 = module_0.Link(tuple_1, fragment=bool_4)
    var_6 = link_10.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__eq__(tuple_1)
    var_9 = var_8.__repr__()
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_11 = module_0.Link(tuple_2, fragment=bool_6)
    var_10 = link_11.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    none_type_1 = None
    link_12 = module_0.Link(none_type_1, bool_7)
    bool_8 = False
    bool_9 = False
    tuple_3 = (bool_9,)
    link_13 = module_0.Link(bool_8, fragment=tuple_3)
    var_13 = link_13.__hash__()
    assert var_13 == -8753497827991233192
    link_14 = module_0.Link(var_13, var_13, nofollow=var_13)
    var_14 = link_14.__hash__()
    assert var_14 == -1835968800350151339
    var_15 = var_14.__hash__()
    assert var_15 == -1835968800350151339
    bool_10 = True
    bool_11 = False
    tuple_4 = (bool_10, bool_11)
    link_15 = module_0.Link(tuple_4, fragment=bool_10)
    var_16 = link_15.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    var_18 = var_16.__repr__()
    assert var_18 == "-5164621852614943975"
    var_19 = var_16.__hash__()
    assert var_19 == -552935834187556073
    var_20 = var_19.__eq__(link_2)


def test_case_547():
    bool_0 = False
    none_type_0 = None
    link_0 = module_0.Link(bool_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_1 = False
    link_1 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_1 = link_2.__repr__()
    assert (
        var_1
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_3 = module_0.Link(bool_2)
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_4 = module_0.Link(bool_3, fragment=tuple_0)
    var_3 = link_4.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_0, var_3, bool_4, bool_3}
    var_4 = var_3.__eq__(set_0)
    var_5 = link_4.__hash__()
    assert var_5 == -8753497827991233192
    var_6 = link_4.__hash__()
    assert var_6 == -8753497827991233192
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_5 = module_0.Link(tuple_1, fragment=bool_5)
    var_7 = link_5.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_7.__hash__()
    assert var_10 == -552935834187556073
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_11 = link_7.__hash__()
    assert var_11 == -4606328870177462788
    var_12 = var_11.__hash__()
    assert var_12 == -2300485860963768837
    bool_7 = True
    link_8 = module_0.Link(bool_7)
    var_13 = link_8.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_1 = None
    link_9 = module_0.Link(none_type_1)
    var_14 = link_9.__hash__()
    assert var_14 == 477042
    var_15 = var_14.__hash__()
    assert var_15 == 477042
    bool_8 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_10 = module_0.Link(var_15, fragment=bool_8, nofollow=complex_0)
    int_0 = 3199
    link_11 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_16 = link_11.__repr__()
    assert var_16 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_17 = var_16.__hash__()
    assert var_17 == -3203539594471298528
    float_0 = 5.0
    link_12 = module_0.Link(float_0)
    none_type_2 = None
    link_13 = module_0.Link(none_type_2, link_12)
    link_14 = module_0.Link(var_6, fragment=none_type_2, nofollow=link_0)


def test_case_548():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    int_0 = 2105
    none_type_1 = None
    link_2 = module_0.Link(int_0, none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_3 = module_0.Link(var_3, int_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_4 = link_3.__hash__()
    assert var_4 == -1122340555193368221
    var_5 = var_4.__repr__()
    assert var_5 == "-1122340555193368221"
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_4.__hash__()
    assert var_6 == 0
    var_7 = var_6.__repr__()
    assert var_7 == "0"
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_2)
    link_6 = module_0.Link(link_5)
    var_8 = link_6.__hash__()
    assert var_8 == -4606328870177462788
    bool_1 = True
    link_7 = module_0.Link(bool_1)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_10 = var_8.__eq__(bytes_2)
    link_8 = module_0.Link(var_8)
    bytes_3 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_9 = module_0.Link(bytes_3, bytes_3)
    var_11 = link_9.__hash__()
    assert var_11 == 0
    var_12 = var_11.__repr__()
    assert var_12 == "0"
    bytes_4 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_10 = module_0.Link(bytes_4)
    var_13 = var_11.__eq__(bytes_3)
    var_14 = var_8.__hash__()
    assert var_14 == -2300485860963768837


def test_case_549():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_2 = None
    link_2 = module_0.Link(none_type_2, link_1)
    var_3 = link_2.__eq__(link_2)
    assert var_3 is True
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_3 = module_0.Link(tuple_0, fragment=bool_0)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    none_type_3 = None
    link_4 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_5 = module_0.Link(tuple_1, fragment=bool_2)
    var_6 = link_5.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__hash__()
    assert var_8 == -552935834187556073
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_6 = module_0.Link(bool_4, fragment=tuple_2)
    var_9 = link_6.__hash__()
    assert var_9 == -8753497827991233192
    link_7 = module_0.Link(var_9, var_9, nofollow=var_9)
    var_10 = link_7.__repr__()
    assert (
        var_10
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    float_1 = 5.0
    link_8 = module_0.Link(float_1)
    tuple_3 = (tuple_1, var_6, var_9)
    link_9 = module_0.Link(tuple_3, fragment=bool_3)


def test_case_550():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_3 = module_0.Link(bool_3, fragment=tuple_1)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_4 = module_0.Link(tuple_2, fragment=bool_5)
    var_4 = link_4.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_4.__hash__()
    assert var_7 == -552935834187556073
    bool_7 = False
    link_5 = module_0.Link(bool_7)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_6 = module_0.Link(tuple_3, fragment=bool_8)
    var_9 = link_6.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__eq__(tuple_3)
    var_12 = var_11.__repr__()
    none_type_0 = None
    bool_10 = True
    link_7 = module_0.Link(bool_10, nofollow=bool_10)
    var_13 = link_7.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_0)
    link_8 = module_0.Link(link_7)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_0, bytes_0)
    bool_11 = False
    link_10 = module_0.Link(bool_11)
    var_15 = var_7.__hash__()
    assert var_15 == -552935834187556073
    var_16 = var_15.__hash__()
    assert var_16 == -552935834187556073
    var_17 = var_16.__repr__()
    assert var_17 == "-552935834187556073"


def test_case_551():
    complex_0 = -2489 + 3297.83623j
    link_0 = module_0.Link(complex_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1172959022599657258
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_1.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, bool_1)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    var_6 = link_4.__hash__()
    assert var_6 == 5
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_5 = module_0.Link(bool_4, fragment=tuple_2)
    var_7 = link_5.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_2, var_7, bool_5, bool_4}
    var_8 = var_7.__eq__(set_0)
    var_9 = link_5.__hash__()
    assert var_9 == -8753497827991233192
    var_10 = link_5.__hash__()
    assert var_10 == -8753497827991233192
    bool_6 = False
    link_6 = module_0.Link(bool_6)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_7 = module_0.Link(var_11, nofollow=var_11)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_8 = module_0.Link(bytes_0)
    var_12 = link_8.__repr__()
    assert (
        var_12 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_13 = var_12.__eq__(int_0)
    var_14 = var_13.__repr__()
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, fragment=none_type_1)
    var_15 = link_9.__hash__()
    assert var_15 == 0
    var_16 = var_15.__hash__()
    assert var_16 == 0
    link_10 = module_0.Link(set_0, var_0)


def test_case_552():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    link_2 = module_0.Link(var_1, var_1, nofollow=var_1)
    var_2 = link_1.__hash__()
    assert var_2 == -8753497827991233192
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_4 = module_0.Link(var_3, nofollow=link_3)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    var_4 = link_4.__hash__()
    assert var_4 == 4128530656735687579
    var_5 = var_2.__hash__()
    assert var_5 == -1835968800350151339


def test_case_553():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_1.__hash__()
    assert var_1 == -1835968800350151339
    var_2 = var_1.__hash__()
    assert var_2 == -1835968800350151339
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_3, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_4 = var_3.__eq__(var_3)
    link_4 = module_0.Link(tuple_0)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=(False,), text='', fragment='', nofollow=False)"


def test_case_554():
    bool_0 = False
    none_type_0 = None
    link_0 = module_0.Link(bool_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    var_1 = link_1.__hash__()
    assert var_1 == 0


def test_case_555():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    var_3 = link_0.__hash__()
    assert var_3 == -8753497827991233192
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    none_type_0 = None
    bool_4 = True
    link_2 = module_0.Link(bool_4, nofollow=bool_4)
    var_6 = link_2.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_4 = module_0.Link(tuple_2, fragment=bool_5)
    var_8 = link_4.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    bool_7 = True
    link_6 = module_0.Link(bool_7)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_7 = module_0.Link(float_0, fragment=var_11)
    link_8 = module_0.Link(float_0, fragment=link_6)
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, fragment=none_type_2)
    var_12 = link_9.__hash__()
    assert var_12 == 0
    var_13 = var_12.__hash__()
    assert var_13 == 0
    link_10 = module_0.Link(var_9)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"


def test_case_556():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    complex_0 = -2489 + 3297.83623j
    link_2 = module_0.Link(complex_0)
    var_5 = link_2.__hash__()
    assert var_5 == 1172959022599657258
    int_0 = 3199
    link_3 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_6 = link_5.__hash__()
    assert var_6 == -4606328870177462788
    var_7 = var_6.__hash__()
    assert var_7 == -2300485860963768837
    bool_4 = False
    link_6 = module_0.Link(bool_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_7.__repr__()
    assert (
        var_8
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_8 = module_0.Link(bool_5)
    var_9 = var_8.__repr__()
    assert (
        var_9
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_9 = module_0.Link(var_8, var_9, nofollow=link_7)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    link_10 = module_0.Link(object_0, fragment=object_0)
    var_10 = link_10.__repr__()
    var_11 = link_10.__hash__()
    assert var_11 == 0
    link_11 = module_0.Link(var_5, fragment=link_9)


def test_case_557():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    none_type_1 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_4 = link_4.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_7 = link_4.__hash__()
    assert var_7 == 0
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    none_type_3 = None
    link_7 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_8 = module_0.Link(tuple_0, fragment=bool_3)
    var_8 = link_8.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__hash__()
    assert var_10 == -552935834187556073
    bool_5 = False
    link_9 = module_0.Link(bool_5)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_11 = link_10.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_6 = False
    link_11 = module_0.Link(bool_6)
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    none_type_4 = None
    link_12 = module_0.Link(none_type_4, fragment=none_type_4)
    var_13 = link_12.__hash__()
    assert var_13 == 0
    var_14 = var_13.__hash__()
    assert var_14 == 0
    var_15 = var_13.__eq__(var_13)
    bool_7 = False
    link_13 = module_0.Link(bool_7)
    var_16 = link_13.__repr__()
    assert var_16 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_14 = module_0.Link(var_16, nofollow=var_16)
    assert f"{type(link_14).__module__}.{type(link_14).__qualname__}" == "link.Link"
    bool_8 = True
    bool_9 = False
    tuple_1 = (bool_8, bool_9)
    link_15 = module_0.Link(tuple_1, fragment=bool_8)
    var_17 = link_15.__hash__()
    assert var_17 == -5164621852614943975
    var_18 = var_17.__repr__()
    assert var_18 == "-5164621852614943975"
    var_19 = var_17.__repr__()
    assert var_19 == "-5164621852614943975"
    none_type_5 = None
    link_16 = module_0.Link(none_type_5, bool_9)
    bool_10 = False
    bool_11 = False
    tuple_2 = (bool_11,)
    link_17 = module_0.Link(bool_10, fragment=tuple_2)
    var_20 = link_17.__hash__()
    assert var_20 == -8753497827991233192
    link_18 = module_0.Link(var_20, var_20, nofollow=var_20)
    var_21 = link_18.__repr__()
    assert (
        var_21
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bool_12 = False
    link_19 = module_0.Link(bool_12, nofollow=none_type_5)


def test_case_558():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = False
    link_1 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_3 = module_0.Link(bool_3)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_4 = module_0.Link(var_3, var_4, nofollow=link_2)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    var_5 = var_1.__hash__()
    assert var_5 == -8716866087637373422


def test_case_559():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0)
    var_4 = link_2.__hash__()
    assert var_4 == 477042
    var_5 = var_4.__hash__()
    assert var_5 == 477042
    var_6 = var_1.__repr__()
    assert var_6 == "'-5164621852614943975'"


def test_case_560():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_3 = link_1.__hash__()
    assert var_3 == 3199
    bytes_0 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_4 = module_0.Link(var_5, nofollow=link_3)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    var_6 = link_4.__hash__()
    assert var_6 == 4128530656735687579
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_5 = module_0.Link(bool_2, fragment=tuple_1)
    var_7 = link_5.__hash__()
    assert var_7 == -8753497827991233192
    link_6 = module_0.Link(var_7, var_7, nofollow=var_7)
    var_8 = var_6.__eq__(link_2)


def test_case_561():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, link_2)
    int_0 = 2105
    none_type_1 = None
    link_4 = module_0.Link(int_0, none_type_1)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_5 = module_0.Link(var_1, int_0)
    var_2 = link_5.__hash__()
    assert var_2 == -1122340555193368221
    var_3 = var_2.__repr__()
    assert var_3 == "-1122340555193368221"
    var_4 = link_1.__repr__()
    assert (
        var_4
        == "Link(url=b\"Link(url=False, text='', fragment='', nofollow=False)\", text='', fragment='', nofollow=\"Link(url=False, text='', fragment='', nofollow=False)\")"
    )


def test_case_562():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    var_6 = var_5.__repr__()
    assert var_6 == "'0'"


def test_case_563():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=None, text='', fragment=None, nofollow=False)"
    none_type_1 = None
    link_1 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_3 = module_0.Link(var_3, nofollow=var_3)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_4 = var_3.__hash__()
    assert var_4 == -3936900723769714473
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_0)
    link_6 = module_0.Link(link_5)
    var_5 = link_6.__hash__()
    assert var_5 == -4606328870177462788
    bool_2 = True
    link_7 = module_0.Link(bool_2)
    var_6 = link_7.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_0)
    link_8 = module_0.Link(var_5)
    bool_3 = False
    link_9 = module_0.Link(bool_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_10.__repr__()
    assert (
        var_8
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_11 = module_0.Link(bool_4)
    var_9 = var_8.__repr__()
    assert (
        var_9
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_12 = module_0.Link(var_8, bytes_1)
    bool_5 = True
    bool_6 = False
    tuple_0 = (bool_5, bool_6)
    link_13 = module_0.Link(tuple_0, fragment=bool_5)
    var_10 = link_13.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    none_type_2 = None
    link_14 = module_0.Link(none_type_2, bool_6)
    none_type_3 = None
    link_15 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_13 = link_15.__repr__()
    assert var_13 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_16 = module_0.Link(var_13, nofollow=link_15)
    var_14 = link_16.__hash__()
    assert var_14 == 4128530656735687579
    int_0 = 3199
    link_17 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_15 = link_17.__repr__()
    assert var_15 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_16 = var_3.__repr__()
    assert var_16 == "\"Link(url=False, text='', fragment='', nofollow=False)\""


def test_case_564():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    var_3 = link_0.__hash__()
    assert var_3 == -8753497827991233192
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_4 = link_2.__hash__()
    assert var_4 == -4606328870177462788
    bool_2 = True
    link_3 = module_0.Link(bool_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_0)
    link_4 = module_0.Link(var_4)
    bool_3 = False
    link_5 = module_0.Link(bool_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_6.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_7 = module_0.Link(bool_4)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_8 = module_0.Link(var_7, var_8, nofollow=link_6)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    none_type_0 = None
    link_9 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_9 = link_9.__repr__()
    assert var_9 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_10 = module_0.Link(var_9, nofollow=link_9)
    link_11 = module_0.Link(set_0, link_3)


def test_case_565():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    int_0 = 401
    link_1 = module_0.Link(int_0, int_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    int_1 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_4 = module_0.Link(bytes_0)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_6 = var_5.__eq__(int_1)
    var_7 = var_6.__repr__()
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_5 = module_0.Link(bool_3, fragment=tuple_1)
    var_8 = link_5.__hash__()
    assert var_8 == -8753497827991233192
    set_0 = {tuple_1, var_8, bool_4, bool_3}
    var_9 = var_8.__eq__(set_0)
    var_10 = link_5.__hash__()
    assert var_10 == -8753497827991233192
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_7 = module_0.Link(var_11, nofollow=link_6)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    var_12 = link_7.__hash__()
    assert var_12 == 4128530656735687579
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_8 = module_0.Link(bool_5, fragment=tuple_2)
    var_13 = link_8.__hash__()
    assert var_13 == -8753497827991233192
    link_9 = module_0.Link(var_13, var_13, nofollow=var_13)
    var_14 = link_8.__hash__()
    assert var_14 == -8753497827991233192
    bool_7 = False
    bool_8 = False
    tuple_3 = (bool_8,)
    link_10 = module_0.Link(bool_7, fragment=tuple_3)
    var_15 = link_10.__hash__()
    assert var_15 == -8753497827991233192
    link_11 = module_0.Link(var_15, var_15, nofollow=var_15)
    var_16 = link_11.__repr__()
    assert (
        var_16
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_17 = link_10.__repr__()
    assert var_17 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    bool_9 = False
    link_12 = module_0.Link(bool_9)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_1, bytes_1)
    var_18 = link_13.__repr__()
    assert (
        var_18
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_10 = False
    link_14 = module_0.Link(bool_10)
    var_19 = var_18.__repr__()
    assert (
        var_19
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    var_20 = link_0.__repr__()
    assert var_20 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_21 = var_20.__repr__()
    assert var_21 == "\"Link(url=True, text='', fragment='', nofollow=True)\""


def test_case_566():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_1 = link_2.__hash__()
    assert var_1 == -4606328870177462788
    var_2 = var_1.__hash__()
    assert var_2 == -2300485860963768837
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    var_7 = link_4.__repr__()
    var_8 = link_4.__hash__()
    assert var_8 == 0
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_1, fragment=bool_3)
    var_9 = link_6.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__hash__()
    assert var_11 == -552935834187556073
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_12 = link_8.__hash__()
    assert var_12 == -4606328870177462788
    var_13 = link_8.__repr__()
    assert (
        var_13
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, fragment=none_type_1)
    var_14 = link_9.__hash__()
    assert var_14 == 0
    var_15 = var_14.__hash__()
    assert var_15 == 0
    var_16 = link_9.__repr__()
    assert var_16 == "Link(url=None, text='', fragment=None, nofollow=False)"
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_11 = module_0.Link(bool_5, fragment=tuple_2)
    var_17 = link_11.__hash__()
    assert var_17 == -8753497827991233192
    link_12 = module_0.Link(var_17, var_17, nofollow=var_17)
    var_18 = link_12.__hash__()
    assert var_18 == -1835968800350151339
    var_19 = var_18.__hash__()
    assert var_19 == -1835968800350151339
    bytes_2 = b"-5164621852614943975"
    link_13 = module_0.Link(bytes_2, nofollow=bytes_2)
    link_14 = module_0.Link(var_4, object_0)
    assert f"{type(link_14).__module__}.{type(link_14).__qualname__}" == "link.Link"


def test_case_567():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_1 = link_4.__repr__()
    assert (
        var_1
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = True
    link_5 = module_0.Link(bool_2)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_0, fragment=bool_3)
    var_3 = link_6.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_0)
    link_7 = module_0.Link(var_5)
    var_6 = link_7.__hash__()
    assert var_6 == 477043


def test_case_568():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    link_3 = module_0.Link(var_0)
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    var_3 = link_4.__repr__()
    int_0 = 3199
    link_5 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_4 = link_5.__hash__()
    assert var_4 == 3199
    none_type_0 = None
    bool_1 = True
    link_6 = module_0.Link(bool_1, nofollow=bool_1)
    var_5 = link_6.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_8 = module_0.Link(var_7, nofollow=var_7)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_9 = module_0.Link(float_0)
    none_type_1 = None
    link_10 = module_0.Link(none_type_1, link_9)
    var_8 = link_10.__eq__(link_10)
    assert var_8 is True
    float_1 = 5.0
    link_11 = module_0.Link(float_1)
    var_9 = link_11.__hash__()
    assert var_9 == 5
    bool_2 = True
    link_12 = module_0.Link(bool_2)
    var_10 = link_12.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_13 = module_0.Link(bool_3, fragment=tuple_0)
    var_11 = link_13.__hash__()
    assert var_11 == -8753497827991233192
    link_14 = module_0.Link(var_11, var_11, nofollow=var_11)
    var_12 = link_13.__hash__()
    assert var_12 == -8753497827991233192
    float_2 = 5.0
    link_15 = module_0.Link(float_2)
    none_type_2 = None
    link_16 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_13 = link_16.__repr__()
    assert var_13 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_17 = module_0.Link(var_13, nofollow=link_16)
    var_14 = link_17.__hash__()
    assert var_14 == 4128530656735687579
    var_15 = var_9.__eq__(none_type_1)


def test_case_569():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_2 = module_0.Link(bytes_1)
    bool_0 = False
    link_3 = module_0.Link(bool_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_2, bytes_2)
    var_2 = link_4.__repr__()
    assert (
        var_2
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bytes_3 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_5 = module_0.Link(bytes_3, bytes_3)
    var_3 = link_5.__hash__()
    assert var_3 == 0
    var_4 = var_3.__repr__()
    assert var_4 == "0"
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    none_type_1 = None
    bool_1 = True
    link_7 = module_0.Link(bool_1, nofollow=bool_1)
    var_5 = link_7.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    link_8 = module_0.Link(link_7)
    var_7 = var_3.__repr__()
    assert var_7 == "0"
    var_8 = var_7.__eq__(var_5)


def test_case_570():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    var_3 = var_2.__repr__()


def test_case_571():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    bool_1 = True
    link_4 = module_0.Link(bool_1)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_5 = module_0.Link(float_0, fragment=var_2)
    link_6 = module_0.Link(float_0, fragment=link_4)
    bytes_1 = b"-5164621852614943975"
    link_7 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_3 = link_1.__hash__()
    assert var_3 == 4128530656735687579


def test_case_572():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    var_1 = link_0.__hash__()
    assert var_1 == 5


def test_case_573():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    var_3 = link_0.__hash__()
    assert var_3 == -8753497827991233192
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    link_2 = module_0.Link(link_1)
    link_3 = module_0.Link(var_4, fragment=none_type_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1)
    var_6 = link_4.__hash__()
    assert var_6 == 0
    var_7 = var_6.__hash__()
    assert var_7 == 0
    var_8 = var_6.__eq__(var_6)
    link_5 = module_0.Link(var_6)


def test_case_574():
    complex_0 = -2489 + 3297.83623j
    link_0 = module_0.Link(complex_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1172959022599657258
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    var_1 = link_1.__repr__()
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_2 = link_2.__hash__()
    assert var_2 == 3199
    int_1 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_3 = module_0.Link(bytes_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_4 = var_3.__eq__(int_1)
    var_5 = var_4.__repr__()
    var_6 = var_5.__eq__(int_1)
    link_4 = module_0.Link(link_0)


def test_case_575():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__hash__()
    assert var_4 == 0
    var_5 = var_3.__eq__(var_3)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_6 = link_2.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, bool_1)
    var_9 = link_3.__hash__()
    assert var_9 == 477042


def test_case_576():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    var_3 = link_1.__repr__()
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_3.__repr__()


def test_case_577():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"


def test_case_578():
    float_0 = 5.0
    bool_0 = True
    int_0 = -506
    link_0 = module_0.Link(int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -506
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    var_3 = var_2.__repr__()
    var_4 = var_3.__eq__(float_0)
    var_5 = var_4.__repr__()


def test_case_579():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    complex_0 = -2489 + 3297.83623j
    link_1 = module_0.Link(complex_0)
    var_1 = link_1.__hash__()
    assert var_1 == 1172959022599657258
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    var_2 = link_3.__repr__()
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"


def test_case_580():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__hash__()
    assert var_2 == -552935834187556073
    none_type_1 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    bool_3 = True
    link_6 = module_0.Link(bool_3)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_7 = module_0.Link(float_0, fragment=var_5)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_2 = b"-5164621852614943975"
    link_8 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_7 = link_8.__repr__()
    assert (
        var_7
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_4 = False
    link_9 = module_0.Link(bool_4)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_3, bytes_3)
    var_8 = link_10.__repr__()
    assert (
        var_8
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_11 = module_0.Link(bool_5)
    var_9 = var_8.__repr__()
    assert (
        var_9
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_12 = module_0.Link(var_8, var_9, nofollow=link_10)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"
    bool_6 = True
    link_13 = module_0.Link(bool_6, nofollow=bool_6)
    none_type_2 = None
    link_14 = module_0.Link(none_type_2)
    var_10 = link_14.__hash__()
    assert var_10 == 477042
    var_11 = var_10.__hash__()
    assert var_11 == 477042
    link_15 = module_0.Link(var_4)


def test_case_581():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    bool_2 = True
    link_3 = module_0.Link(bool_2)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_4 = module_0.Link(float_0, fragment=var_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_5 = module_0.Link(bytes_1)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_4 = var_3.__eq__(int_0)
    var_5 = var_4.__repr__()
    var_6 = var_5.__eq__(int_0)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_2)
    link_7 = module_0.Link(link_6)
    var_7 = link_7.__hash__()
    assert var_7 == -4606328870177462788
    bool_3 = True
    link_8 = module_0.Link(bool_3)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_2)
    link_9 = module_0.Link(var_9, var_9)
    float_1 = 5.0
    link_10 = module_0.Link(float_1)
    none_type_0 = None
    link_11 = module_0.Link(none_type_0, link_10)
    int_1 = 3199
    link_12 = module_0.Link(int_1, int_1, nofollow=int_1)
    bytes_3 = b"-5164621852614943975"
    link_13 = module_0.Link(bytes_3, nofollow=bytes_3)
    var_10 = link_13.__repr__()
    assert (
        var_10
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bytes_4 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_14 = module_0.Link(bytes_4, bytes_4)
    var_11 = link_14.__hash__()
    assert var_11 == 0
    var_12 = var_11.__repr__()
    assert var_12 == "0"
    var_13 = var_11.__hash__()
    assert var_13 == 0
    link_15 = module_0.Link(var_6)


def test_case_582():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_0 = False
    link_5 = module_0.Link(bool_0)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_6 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    var_3 = var_2.__hash__()
    assert var_3 == -3936900723769714473
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_8 = module_0.Link(var_4, nofollow=link_7)
    var_5 = link_8.__hash__()
    assert var_5 == 4128530656735687579
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_2)
    link_10 = module_0.Link(link_9)
    var_6 = link_10.__hash__()
    assert var_6 == -4606328870177462788
    bool_1 = True
    link_11 = module_0.Link(bool_1)
    var_7 = link_11.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_8 = var_6.__eq__(bytes_2)
    link_12 = module_0.Link(var_6)
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_13 = module_0.Link(bool_2, fragment=tuple_0)
    var_9 = link_13.__hash__()
    assert var_9 == -8753497827991233192
    link_14 = module_0.Link(var_9, var_9, nofollow=var_9)
    var_10 = link_14.__repr__()
    assert (
        var_10
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    float_0 = 5.0
    link_15 = module_0.Link(float_0)
    none_type_2 = None
    link_16 = module_0.Link(none_type_2, link_15)
    var_11 = var_3.__hash__()
    assert var_11 == -1631057714556020522


def test_case_583():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_2 = module_0.Link(var_4, nofollow=link_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_5 = var_4.__eq__(var_4)
    list_0 = [link_0, var_4]
    link_3 = module_0.Link(var_3, nofollow=list_0)


def test_case_584():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_1 = module_0.Link(bool_2, fragment=tuple_1)
    var_4 = link_1.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_1, var_4, bool_3, bool_2}
    var_5 = var_4.__eq__(set_0)
    var_6 = link_1.__hash__()
    assert var_6 == -8753497827991233192
    var_7 = var_2.__repr__()
    assert var_7 == "'-5164621852614943975'"


def test_case_585():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_3.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    bool_3 = True
    link_5 = module_0.Link(bool_3)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_1 = None
    bool_4 = True
    link_6 = module_0.Link(bool_4, nofollow=bool_4)
    var_5 = link_6.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_7 = module_0.Link(bool_5, fragment=tuple_1)
    var_7 = link_7.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_1, var_7, bool_6, bool_5}
    var_8 = var_7.__eq__(set_0)
    var_9 = link_7.__hash__()
    assert var_9 == -8753497827991233192
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_10 = link_8.__repr__()
    assert var_10 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_9 = module_0.Link(var_10, nofollow=link_8)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    var_11 = var_10.__eq__(var_10)
    var_12 = link_2.__hash__()
    assert var_12 == 477047


def test_case_586():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    var_0 = link_2.__eq__(link_2)
    assert var_0 is True
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    link_4 = module_0.Link(object_0, none_type_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_5 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_5.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, bool_1)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_7 = module_0.Link(bool_2, fragment=tuple_1)
    var_4 = link_7.__hash__()
    assert var_4 == -8753497827991233192
    link_8 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = link_8.__repr__()
    assert (
        var_5
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_6 = link_7.__repr__()
    assert var_6 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    int_0 = 2105
    none_type_2 = None
    link_9 = module_0.Link(int_0, none_type_2)
    var_7 = link_9.__repr__()
    assert var_7 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_10 = module_0.Link(var_7, int_0)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    var_8 = link_10.__hash__()
    assert var_8 == -1122340555193368221
    var_9 = var_8.__repr__()
    assert var_9 == "-1122340555193368221"
    bool_4 = False
    none_type_3 = None
    link_11 = module_0.Link(bool_4, fragment=none_type_3)
    var_10 = link_11.__repr__()
    assert var_10 == "Link(url=False, text='', fragment=None, nofollow=False)"
    none_type_4 = None
    link_12 = module_0.Link(none_type_4)
    var_11 = link_12.__hash__()
    assert var_11 == 477042
    var_12 = var_11.__hash__()
    assert var_12 == 477042
    var_13 = link_2.__repr__()
    assert (
        var_13
        == "Link(url=None, text=Link(url=5.0, text='', fragment='', nofollow=False), fragment='', nofollow=False)"
    )


def test_case_587():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_5 = module_0.Link(var_3, var_4, nofollow=link_3)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    bool_3 = False
    none_type_1 = None
    link_6 = module_0.Link(bool_3, fragment=none_type_1)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    complex_0 = -2489 + 3297.83623j
    link_8 = module_0.Link(complex_0)
    var_6 = link_8.__hash__()
    assert var_6 == 1172959022599657258
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=False, text='', fragment='', nofollow=False)"


def test_case_588():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_1 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_1, nofollow=bytes_1)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_2)
    link_5 = module_0.Link(link_4)
    var_2 = link_5.__hash__()
    assert var_2 == -4606328870177462788
    var_3 = link_5.__repr__()
    assert (
        var_3
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_3)
    link_7 = module_0.Link(link_6)
    var_4 = link_7.__hash__()
    assert var_4 == -4606328870177462788
    bool_1 = True
    link_8 = module_0.Link(bool_1)
    var_5 = link_8.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_3)
    none_type_0 = None
    link_9 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_7 = link_9.__repr__()
    assert var_7 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_10 = module_0.Link(var_7, nofollow=link_9)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    var_8 = link_10.__hash__()
    assert var_8 == 4128530656735687579
    var_9 = link_1.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"


def test_case_589():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0


def test_case_590():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    link_1 = module_0.Link(var_0, var_1, var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"


def test_case_591():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    none_type_0 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    var_3 = var_1.__eq__(link_2)


def test_case_592():
    int_0 = 1870
    link_0 = module_0.Link(int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    dict_0 = {link_0: link_0}
    link_1 = module_0.Link(dict_0, fragment=dict_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )


def test_case_593():
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    int_0 = 1870
    link_2 = module_0.Link(int_0)
    dict_0 = {link_2: link_2}
    link_3 = module_0.Link(dict_0, fragment=dict_0)
    var_0 = link_3.__repr__()
    assert (
        var_0
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "'\"Link(url={Link(url=1870, text=\\'\\', fragment=\\'\\', nofollow=False): Link(url=1870, text=\\'\\', fragment=\\'\\', nofollow=False)}, text=\\'\\', fragment={Link(url=1870, text=\\'\\', fragment=\\'\\', nofollow=False): Link(url=1870, text=\\'\\', fragment=\\'\\', nofollow=False)}, nofollow=False)\"'"
    )


def test_case_594():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_3.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_4 = module_0.Link(link_3, fragment=none_type_0)
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, link_5)
    var_3 = link_6.__eq__(link_6)
    assert var_3 is True
    var_4 = link_5.__hash__()
    assert var_4 == 5
    float_1 = 5.0
    link_7 = module_0.Link(float_1)
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, link_7)
    int_1 = 3199
    link_9 = module_0.Link(int_1, int_1, nofollow=int_1)
    bytes_0 = b"-5164621852614943975"
    link_10 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_5 = link_10.__repr__()
    assert (
        var_5
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_3 = False
    link_11 = module_0.Link(bool_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_12.__repr__()
    assert (
        var_6
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_13 = module_0.Link(bool_4)
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_14 = module_0.Link(var_6, var_7, nofollow=link_12)
    none_type_3 = None
    link_15 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_16 = module_0.Link(tuple_1, fragment=bool_5)
    var_8 = link_16.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__hash__()
    assert var_10 == -552935834187556073
    none_type_4 = None
    link_17 = module_0.Link(none_type_4, fragment=none_type_4)
    var_11 = link_17.__hash__()
    assert var_11 == 0
    var_12 = var_11.__hash__()
    assert var_12 == 0
    var_13 = var_11.__eq__(var_11)
    bytes_2 = b"-5164621852614943975"
    link_18 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_14 = var_12.__eq__(var_4)
    assert var_14 is False


def test_case_595():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__hash__()
    assert var_1 == 477042
    bool_0 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_1 = module_0.Link(var_1, fragment=bool_0, nofollow=complex_0)
    none_type_1 = None
    bool_1 = True
    link_2 = module_0.Link(bool_1, nofollow=bool_1)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_5 = var_3.__repr__()
    var_6 = var_4.__hash__()
    assert var_6 == 5710265117276615615


def test_case_596():
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_0 = link_3.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_4 = module_0.Link(bool_0)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_1)
    var_3 = var_2.__hash__()
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, link_5)
    var_4 = link_6.__eq__(link_6)
    assert var_4 is True
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_7 = module_0.Link(bool_1, fragment=tuple_0)
    var_5 = link_7.__hash__()
    assert var_5 == -8753497827991233192
    link_8 = module_0.Link(var_5, var_5, nofollow=var_5)
    none_type_1 = None
    bool_3 = True
    link_9 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_9.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_1)
    link_10 = module_0.Link(link_9)
    bool_4 = False
    link_11 = module_0.Link(bool_4)
    object_0 = module_1.object()
    link_12 = module_0.Link(object_0, fragment=object_0)
    int_0 = 3199
    link_13 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_14 = module_0.Link(tuple_1, fragment=bool_5)
    var_8 = link_14.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_1)
    var_11 = var_10.__repr__()
    bytes_2 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_15 = module_0.Link(bytes_2, bytes_2)
    var_12 = link_15.__hash__()
    assert var_12 == 0
    var_13 = var_12.__repr__()
    assert var_13 == "0"
    bytes_3 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_16 = module_0.Link(bytes_3)
    var_14 = var_12.__eq__(bytes_2)
    var_15 = var_2.__repr__()


def test_case_597():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = link_0.__hash__()
    assert var_3 == 0
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1)
    var_7 = link_3.__hash__()
    assert var_7 == 0
    var_8 = var_7.__hash__()
    assert var_8 == 0
    var_9 = link_3.__repr__()
    assert var_9 == "Link(url=None, text='', fragment=None, nofollow=False)"
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_4 = module_0.Link(bytes_1)
    var_10 = link_4.__repr__()
    assert (
        var_10 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_11 = var_10.__eq__(int_0)
    var_12 = var_11.__repr__()
    var_13 = var_12.__eq__(int_0)
    var_14 = var_4.__repr__()
    assert var_14 == "-5164621852614943975"


def test_case_598():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_1.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_4 = module_0.Link(bool_3)
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_5 = module_0.Link(var_2, var_3, nofollow=link_3)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_4 = link_5.__hash__()
    assert var_4 == -458611915536994964


def test_case_599():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    none_type_0 = None
    link_1 = module_0.Link(none_type_0)
    var_3 = link_1.__hash__()
    assert var_3 == 477042
    var_4 = var_3.__hash__()
    assert var_4 == 477042
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_2 = module_0.Link(bytes_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_6 = var_5.__eq__(int_0)
    var_7 = var_6.__repr__()
    var_8 = var_7.__eq__(int_0)
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1)
    var_9 = link_4.__hash__()
    assert var_9 == 477042
    var_10 = var_9.__hash__()
    assert var_10 == 477042
    bool_2 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_5 = module_0.Link(var_10, fragment=bool_2, nofollow=complex_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_11 = link_7.__hash__()
    assert var_11 == -4606328870177462788
    bool_3 = True
    link_8 = module_0.Link(bool_3)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_13 = var_11.__eq__(bytes_1)
    object_0 = module_1.object()
    link_9 = module_0.Link(object_0, fragment=object_0)
    var_14 = link_9.__repr__()
    int_1 = 3199
    link_10 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_15 = var_14.__repr__()
    var_16 = var_15.__eq__(var_7)


def test_case_600():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0


def test_case_601():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_4 = link_1.__hash__()
    assert var_4 == -8753497827991233192
    link_2 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = link_2.__hash__()
    assert var_5 == -1835968800350151339
    var_6 = var_5.__hash__()
    assert var_6 == -1835968800350151339
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_7 = link_3.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    none_type_0 = None
    link_4 = module_0.Link(link_3, fragment=none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    bool_4 = True
    link_6 = module_0.Link(bool_4)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_7 = module_0.Link(float_0, fragment=var_9)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_2, bytes_2)
    bool_5 = True
    link_9 = module_0.Link(bool_5)
    var_10 = link_9.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_10 = module_0.Link(float_1, fragment=var_10)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_12 = var_7.__hash__()
    assert var_12 == -552935834187556073


def test_case_602():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__hash__()
    assert var_1 == 477042
    complex_0 = -2489 + 3297.83623j
    link_1 = module_0.Link(complex_0)
    var_2 = link_1.__hash__()
    assert var_2 == 1172959022599657258
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_3, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_4 = module_0.Link(bool_0, fragment=tuple_0)
    var_4 = link_4.__hash__()
    assert var_4 == -8753497827991233192
    link_5 = module_0.Link(var_4, var_4, nofollow=var_4)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_6 = module_0.Link(tuple_1, fragment=bool_2)
    var_5 = link_6.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    var_8 = link_7.__hash__()
    assert var_8 == 0
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_8 = module_0.Link(bool_4, fragment=tuple_2)
    var_9 = link_8.__hash__()
    assert var_9 == -8753497827991233192
    link_9 = module_0.Link(var_9, var_9, nofollow=var_9)
    var_10 = link_9.__repr__()
    assert (
        var_10
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_11 = link_8.__repr__()
    assert var_11 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    var_12 = link_0.__hash__()
    assert var_12 == 477042


def test_case_603():
    str_0 = "Dmfv; iJ001\n"
    none_type_0 = None
    link_0 = module_0.Link(str_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_604():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_0 = link_2.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_3 = module_0.Link(bool_0)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    var_3 = var_2.__hash__()
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_4.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    int_0 = 3199
    link_5 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_7 = var_6.__hash__()
    assert var_7 == -3203539594471298528
    link_6 = module_0.Link(var_5, link_0)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"


def test_case_605():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_1 = True
    link_2 = module_0.Link(bool_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_3 = module_0.Link(float_1, fragment=var_3)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    link_4 = module_0.Link(var_2, fragment=float_1)


def test_case_606():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_1 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_4 = module_0.Link(bytes_2)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_5 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_5.__hash__()
    assert var_3 == -8753497827991233192
    link_6 = module_0.Link(var_3, var_3, nofollow=var_3)
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_7 = module_0.Link(bool_3, fragment=tuple_1)
    var_4 = link_7.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_1, var_4, bool_4, bool_3}
    var_5 = var_4.__eq__(set_0)
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_3)
    link_9 = module_0.Link(link_8)
    var_6 = link_9.__hash__()
    assert var_6 == -4606328870177462788
    var_7 = link_9.__repr__()
    assert (
        var_7
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    link_10 = module_0.Link(link_5)
    var_8 = link_10.__hash__()
    assert var_8 == -8753497827991233192
    var_9 = var_8.__hash__()
    assert var_9 == -1835968800350151339


def test_case_607():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, nofollow=none_type_1)
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    none_type_2 = None
    link_4 = module_0.Link(none_type_2)
    var_0 = link_4.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__hash__()
    assert var_1 == 477042
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_5.__hash__()
    assert var_2 == 0
    var_3 = var_2.__repr__()
    assert var_3 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_6 = module_0.Link(bytes_1)
    var_4 = var_2.__eq__(bytes_0)
    link_7 = module_0.Link(link_6)


def test_case_608():
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_0 = module_0.Link(list_0, str_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)


def test_case_609():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_1 = module_0.Link(list_0, str_0)
    link_2 = module_0.Link(link_1)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_3.__hash__()
    assert var_1 == -8753497827991233192
    link_4 = module_0.Link(var_1, var_1, nofollow=var_1)
    var_2 = link_4.__repr__()
    assert (
        var_2
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, link_5)
    var_4 = link_6.__eq__(link_6)
    assert var_4 is True
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_8 = module_0.Link(var_5, nofollow=link_7)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    var_6 = link_8.__hash__()
    assert var_6 == 4128530656735687579
    float_1 = 5.0
    link_9 = module_0.Link(float_1)
    var_7 = link_9.__hash__()
    assert var_7 == 5
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_10 = module_0.Link(tuple_1, fragment=bool_3)
    var_8 = link_10.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_0, bytes_0)
    bool_5 = True
    link_12 = module_0.Link(bool_5)
    var_10 = link_12.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_2 = 3106.326
    link_13 = module_0.Link(float_2, fragment=var_10)
    var_11 = link_12.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    link_14 = module_0.Link(link_0)


def test_case_610():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    bytes_1 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_1, nofollow=bytes_1)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_6 = link_3.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = link_3.__repr__()
    assert var_8 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bytes_2 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_9 = link_4.__repr__()
    assert (
        var_9
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    var_10 = var_2.__hash__()


def test_case_611():
    int_0 = 1870
    link_0 = module_0.Link(int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    dict_0 = {link_0: link_0}
    link_1 = module_0.Link(dict_0, fragment=dict_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    none_type_0 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    link_3 = module_0.Link(link_2)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1)
    var_4 = link_4.__hash__()
    assert var_4 == 477042
    var_5 = var_4.__hash__()
    assert var_5 == 477042
    bool_1 = False
    link_5 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    var_6 = link_6.__repr__()
    assert (
        var_6
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_7 = module_0.Link(bool_2)
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_8 = module_0.Link(var_6, var_7, nofollow=link_6)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_8 = link_9.__repr__()
    assert var_8 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_10 = module_0.Link(var_8, nofollow=link_9)
    var_9 = link_10.__hash__()
    assert var_9 == 4128530656735687579
    var_10 = link_5.__hash__()
    assert var_10 == 0


def test_case_612():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_1 = var_0.__hash__()
    assert var_1 == -3936900723769714473
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_4.__hash__()
    assert var_2 == 0
    var_3 = var_2.__repr__()
    assert var_3 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_5 = module_0.Link(bytes_1)
    var_4 = var_2.__eq__(bytes_0)
    none_type_1 = None
    bool_1 = True
    link_6 = module_0.Link(bool_1, nofollow=bool_1)
    var_5 = link_6.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_8 = module_0.Link(link_6)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_9 = module_0.Link(tuple_0, fragment=bool_2)
    var_8 = link_9.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = link_9.__repr__()
    assert var_10 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    int_0 = 1870
    link_10 = module_0.Link(int_0)
    dict_0 = {link_10: link_10}
    link_11 = module_0.Link(dict_0, fragment=dict_0)
    var_11 = link_11.__repr__()
    assert (
        var_11
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    none_type_2 = None
    link_12 = module_0.Link(none_type_2, fragment=none_type_2)
    var_13 = link_12.__hash__()
    assert var_13 == 0
    var_14 = var_13.__hash__()
    assert var_14 == 0
    bool_4 = False
    var_15 = var_1.__eq__(bool_4)


def test_case_613():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_0.__repr__()
    assert var_2 == "0"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_1 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    link_2 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_1.__hash__()
    assert var_4 == -8753497827991233192
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_3 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_3.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = link_3.__repr__()
    assert var_7 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_4 = module_0.Link(bool_5, fragment=tuple_2)
    var_8 = link_4.__hash__()
    assert var_8 == -8753497827991233192
    link_5 = module_0.Link(var_8, var_8, nofollow=var_8)
    var_9 = link_5.__repr__()
    assert (
        var_9
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_10 = var_8.__repr__()
    assert var_10 == "-8753497827991233192"


def test_case_614():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__hash__()
    assert var_1 == 477042
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_2 = link_1.__hash__()
    assert var_2 == -8753497827991233192
    link_2 = module_0.Link(var_2, var_2, nofollow=var_2)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_4 = link_1.__repr__()
    assert var_4 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    none_type_1 = None
    bool_2 = True
    link_3 = module_0.Link(bool_2, nofollow=bool_2)
    var_5 = link_3.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    var_7 = var_5.__repr__()
    assert var_7 == "0"
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_8 = link_4.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__repr__()
    assert var_10 == "-5164621852614943975"
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_11 = link_5.__hash__()
    assert var_11 == 0
    var_12 = var_11.__repr__()
    assert var_12 == "0"
    var_13 = var_10.__hash__()
    assert var_13 == -8716866087637373422


def test_case_615():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__eq__(link_0)
    assert var_0 is True


def test_case_616():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1)
    var_4 = link_3.__hash__()
    assert var_4 == 477042
    var_5 = var_4.__hash__()
    assert var_5 == 477042
    bool_1 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_4 = module_0.Link(var_5, fragment=bool_1, nofollow=complex_0)
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_6.__repr__()
    assert (
        var_6
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_7 = module_0.Link(bool_3)
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_8 = module_0.Link(var_6, bytes_1)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    none_type_2 = None
    bool_4 = True
    link_9 = module_0.Link(bool_4, nofollow=bool_4)
    var_8 = link_9.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_2)
    link_10 = module_0.Link(link_9)
    bool_5 = True
    bool_6 = False
    tuple_0 = (bool_5, bool_6)
    link_11 = module_0.Link(tuple_0, fragment=bool_5)
    var_10 = link_11.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = link_11.__repr__()
    assert var_12 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_2, bytes_2)
    bool_7 = True
    link_13 = module_0.Link(bool_7)
    var_13 = link_13.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_14 = module_0.Link(float_1, fragment=var_13)
    var_14 = link_13.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_8 = False
    bool_9 = False
    tuple_1 = (bool_9,)
    link_15 = module_0.Link(bool_8, fragment=tuple_1)
    var_15 = link_15.__hash__()
    assert var_15 == -8753497827991233192
    link_16 = module_0.Link(var_15, var_15, nofollow=var_15)
    var_16 = link_15.__hash__()
    assert var_16 == -8753497827991233192
    var_17 = var_9.__repr__()


def test_case_617():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = var_0.__eq__(var_0)
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    none_type_2 = None
    link_3 = module_0.Link(none_type_2, fragment=none_type_2)
    var_2 = link_3.__hash__()
    assert var_2 == 0
    var_3 = var_2.__hash__()
    assert var_3 == 0
    var_4 = var_2.__eq__(var_2)
    bool_0 = False
    link_4 = module_0.Link(bool_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_5.__repr__()
    assert (
        var_5
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    link_6 = module_0.Link(link_4)


def test_case_618():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bytes_0 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_4 = link_2.__hash__()
    assert var_4 == 0
    complex_0 = -2489 + 3297.83623j
    link_3 = module_0.Link(complex_0)
    var_5 = link_3.__hash__()
    assert var_5 == 1172959022599657258
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_2 = True
    link_5 = module_0.Link(bool_2, nofollow=bool_2)
    var_6 = link_5.__eq__(link_5)
    assert var_6 is True
    bool_3 = False
    link_6 = module_0.Link(bool_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_7.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_8 = module_0.Link(bool_4)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_8 = link_9.__repr__()
    assert (
        var_8
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_10 = module_0.Link(bool_5)
    var_9 = var_8.__repr__()
    assert (
        var_9
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_11 = module_0.Link(var_8, bytes_2)
    assert f"{type(link_11).__module__}.{type(link_11).__qualname__}" == "link.Link"
    var_10 = link_1.__hash__()
    assert var_10 == -5164621852614943975


def test_case_619():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    bool_0 = True
    link_1 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    var_3 = link_1.__hash__()
    assert var_3 == 1
    none_type_0 = None
    bool_1 = True
    link_2 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_2.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    link_3 = module_0.Link(link_2)
    link_4 = module_0.Link(var_4, fragment=none_type_0)
    var_6 = link_3.__repr__()
    assert (
        var_6
        == "Link(url=Link(url=True, text='', fragment='', nofollow=True), text='', fragment='', nofollow=False)"
    )


def test_case_620():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_1, bytes_1)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_2 = module_0.Link(list_0, str_0)
    link_3 = module_0.Link(link_2)
    int_0 = 2105
    none_type_0 = None
    link_4 = module_0.Link(int_0, none_type_0)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_5 = module_0.Link(var_2, int_0)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_3 = link_5.__hash__()
    assert var_3 == -1122340555193368221
    var_4 = var_3.__repr__()
    assert var_4 == "-1122340555193368221"
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_6 = module_0.Link(bytes_2)
    link_7 = module_0.Link(link_6)
    int_1 = 401
    link_8 = module_0.Link(int_1, int_1)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_9 = module_0.Link(tuple_0, fragment=bool_0)
    var_5 = link_9.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    link_10 = module_0.Link(link_2, var_5)


def test_case_621():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(link_1, fragment=none_type_0)
    none_type_1 = None
    bool_3 = True
    link_3 = module_0.Link(bool_3, nofollow=bool_3)
    var_2 = link_3.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_5 = link_3.__hash__()
    assert var_5 == 0
    none_type_2 = None
    link_5 = module_0.Link(none_type_2, fragment=none_type_2)
    var_6 = link_5.__hash__()
    assert var_6 == 0
    var_7 = var_6.__hash__()
    assert var_7 == 0
    var_8 = var_6.__eq__(var_6)
    int_0 = 3199
    link_6 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_10 = var_9.__hash__()
    assert var_10 == -3203539594471298528
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_11 = var_5.__hash__()
    assert var_11 == 0


def test_case_622():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_0.__hash__()
    assert var_1 == -8753497827991233192
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, bool_3)
    int_0 = 401
    link_4 = module_0.Link(int_0, int_0)
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_5 = module_0.Link(list_0, str_0)
    link_6 = module_0.Link(link_5)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_7 = module_0.Link(tuple_2, fragment=bool_4)
    var_5 = link_7.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = link_7.__repr__()
    assert var_7 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_0, bytes_0)
    bool_6 = True
    link_9 = module_0.Link(bool_6)
    var_8 = link_9.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_10 = module_0.Link(float_0, fragment=var_8)
    link_11 = module_0.Link(float_0, fragment=link_9)
    object_0 = module_1.object()
    link_12 = module_0.Link(object_0, fragment=object_0)
    var_9 = link_12.__repr__()
    var_10 = link_12.__hash__()
    assert var_10 == 0
    bool_7 = False
    link_13 = module_0.Link(bool_7)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_14 = module_0.Link(bytes_1, bytes_1)
    var_11 = link_14.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_8 = False
    link_15 = module_0.Link(bool_8)
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    var_13 = link_8.__repr__()
    assert (
        var_13
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )


def test_case_623():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    var_3 = link_0.__hash__()
    assert var_3 == -8753497827991233192
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_4 = link_1.__hash__()
    assert var_4 == 3199
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_5 = link_2.__hash__()
    assert var_5 == -8753497827991233192
    link_3 = module_0.Link(var_5, var_5, nofollow=var_5)
    var_6 = link_2.__hash__()
    assert var_6 == -8753497827991233192
    bool_4 = True
    link_4 = module_0.Link(bool_4)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_5 = False
    none_type_0 = None
    link_5 = module_0.Link(bool_5, fragment=none_type_0)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    var_9 = link_6.__hash__()
    assert var_9 == 0
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_0)
    link_8 = module_0.Link(link_7)
    var_10 = link_8.__hash__()
    assert var_10 == -4606328870177462788
    bool_6 = True
    link_9 = module_0.Link(bool_6)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_12 = var_10.__eq__(bytes_0)
    bool_7 = False
    bool_8 = False
    tuple_2 = (bool_8,)
    link_10 = module_0.Link(bool_7, fragment=tuple_2)
    var_13 = link_10.__hash__()
    assert var_13 == -8753497827991233192
    link_11 = module_0.Link(var_13, var_13, nofollow=var_13)
    var_14 = link_11.__hash__()
    assert var_14 == -1835968800350151339
    var_15 = var_14.__hash__()
    assert var_15 == -1835968800350151339
    var_16 = var_7.__repr__()
    assert var_16 == "\"Link(url=True, text='', fragment='', nofollow=False)\""


def test_case_624():
    bool_0 = False
    none_type_0 = None
    link_0 = module_0.Link(bool_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"
    none_type_1 = None
    link_1 = module_0.Link(none_type_1, fragment=none_type_1)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__hash__()
    assert var_2 == 0
    var_3 = var_1.__eq__(var_1)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_0)
    var_7 = var_6.__repr__()
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    bool_3 = True
    link_4 = module_0.Link(bool_3)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_5 = module_0.Link(float_0, fragment=var_8)
    var_9 = link_4.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_6 = module_0.Link(bool_4, fragment=tuple_1)
    var_10 = link_6.__hash__()
    assert var_10 == -8753497827991233192
    set_0 = {tuple_1, var_10, bool_5, bool_4}
    var_11 = var_10.__eq__(set_0)
    var_12 = link_6.__hash__()
    assert var_12 == -8753497827991233192
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    float_1 = 5.0
    link_8 = module_0.Link(float_1)
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, link_8)
    var_13 = link_9.__eq__(link_9)
    assert var_13 is True
    object_0 = module_1.object()
    link_10 = module_0.Link(object_0, fragment=object_0)
    bytes_2 = b"-5164621852614943975"
    link_11 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_14 = link_11.__hash__()
    assert var_14 == 0
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_3)
    link_13 = module_0.Link(link_12)
    var_15 = link_13.__hash__()
    assert var_15 == -4606328870177462788
    var_16 = link_4.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=False)"


def test_case_625():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_4.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__hash__()
    assert var_3 == -552935834187556073
    none_type_1 = None
    bool_3 = True
    link_5 = module_0.Link(bool_3, nofollow=bool_3)
    var_4 = link_5.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    var_6 = var_4.__repr__()
    assert var_6 == "0"
    float_1 = 5.0
    link_6 = module_0.Link(float_1)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, link_6)
    int_0 = 3199
    link_8 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_1 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_7 = link_9.__repr__()
    assert (
        var_7
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    link_10 = module_0.Link(link_9)


def test_case_626():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__hash__()
    assert var_4 == 0
    var_5 = link_1.__repr__()
    assert var_5 == "Link(url=None, text='', fragment=None, nofollow=False)"
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, link_2)
    bool_0 = False
    link_4 = module_0.Link(bool_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_5.__repr__()
    assert (
        var_6
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_6 = module_0.Link(bool_1)
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, fragment=none_type_2)
    var_8 = link_7.__hash__()
    assert var_8 == 0
    var_9 = var_8.__hash__()
    assert var_9 == 0
    var_10 = var_8.__eq__(var_8)
    var_11 = var_8.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(int_0)


def test_case_627():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    float_1 = 5.0
    link_4 = module_0.Link(float_1)
    var_1 = link_4.__hash__()
    assert var_1 == 5
    none_type_0 = None
    bool_1 = True
    link_5 = module_0.Link(bool_1, nofollow=bool_1)
    var_2 = link_5.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    link_6 = module_0.Link(link_5)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_628():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_0 = link_3.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    int_1 = 2105
    none_type_1 = None
    link_4 = module_0.Link(int_1, none_type_1)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_5 = module_0.Link(var_1, int_1)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_2 = link_5.__hash__()
    assert var_2 == -1122340555193368221
    var_3 = var_2.__repr__()
    assert var_3 == "-1122340555193368221"
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_6.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    bool_0 = False
    link_7 = module_0.Link(bool_0)
    var_6 = link_7.__hash__()
    assert var_6 == 0
    bool_1 = False
    link_8 = module_0.Link(bool_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_7 = link_9.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_10 = module_0.Link(bool_2)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_11 = module_0.Link(tuple_0, fragment=bool_3)
    var_9 = link_11.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_9.__hash__()
    assert var_12 == -552935834187556073
    bool_5 = True
    link_12 = module_0.Link(bool_5, nofollow=bool_5)
    bool_6 = True
    dict_0 = {}
    none_type_2 = None
    float_1 = 2515.28653
    link_13 = module_0.Link(dict_0, none_type_2, float_1, none_type_2)
    var_13 = link_13.__repr__()
    var_14 = var_13.__eq__(bool_6)
    var_15 = var_14.__hash__()
    var_16 = link_1.__hash__()
    assert var_16 == 477047


def test_case_629():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_630():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    bool_1 = True
    dict_0 = {}
    none_type_1 = None
    float_0 = 2515.28653
    link_3 = module_0.Link(dict_0, none_type_1, float_0, none_type_1)
    var_3 = link_3.__repr__()
    var_4 = var_3.__eq__(bool_1)
    var_5 = var_4.__hash__()
    var_6 = var_5.__repr__()
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_7 = link_4.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_5 = module_0.Link(bool_4, fragment=tuple_1)
    var_10 = link_5.__hash__()
    assert var_10 == -8753497827991233192
    link_6 = module_0.Link(var_10, var_10, nofollow=var_10)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_7 = module_0.Link(tuple_2, fragment=bool_6)
    var_11 = link_7.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    none_type_2 = None
    link_8 = module_0.Link(link_7, fragment=none_type_2)
    float_1 = 5.0
    link_9 = module_0.Link(float_1)
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, link_9)
    int_0 = 3199
    link_11 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_1 = b"-5164621852614943975"
    link_12 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_13 = link_12.__repr__()
    assert (
        var_13
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_4 = None
    link_13 = module_0.Link(none_type_4)
    var_14 = link_13.__hash__()
    assert var_14 == 477042
    var_15 = var_14.__hash__()
    assert var_15 == 477042
    bool_8 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_14 = module_0.Link(var_15, fragment=bool_8, nofollow=complex_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_15 = module_0.Link(bytes_2, bytes_2)
    object_0 = module_1.object()
    link_16 = module_0.Link(object_0, fragment=object_0)
    var_16 = link_16.__hash__()
    assert var_16 == 0
    var_17 = link_8.__repr__()
    assert (
        var_17
        == "Link(url=Link(url=(True, False), text='', fragment=True, nofollow=False), text='', fragment=None, nofollow=False)"
    )


def test_case_631():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    var_1 = link_0.__hash__()
    assert var_1 == 0
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    var_2 = link_2.__eq__(link_2)
    assert var_2 is True
    var_3 = link_1.__hash__()
    assert var_3 == 5
    bool_0 = True
    link_3 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    var_4 = link_3.__hash__()
    assert var_4 == 1
    none_type_1 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_5 = link_4.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_6 = module_0.Link(link_4)
    int_0 = 3199
    link_7 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_8 = link_7.__hash__()
    assert var_8 == 3199
    var_9 = var_2.__hash__()
    assert var_9 == 1


def test_case_632():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    float_1 = 5.0
    link_4 = module_0.Link(float_1)
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, link_4)
    var_1 = link_5.__eq__(link_5)
    assert var_1 is True
    var_2 = link_4.__hash__()
    assert var_2 == 5
    int_0 = 3199
    link_6 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_3 = link_6.__repr__()
    assert var_3 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    none_type_1 = None
    none_type_2 = None
    link_7 = module_0.Link(none_type_2)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_5 = var_4.__hash__()
    assert var_5 == 2234852059487564994
    var_6 = var_5.__eq__(none_type_1)
    link_8 = module_0.Link(var_4, var_5, var_4)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_9 = module_0.Link(bytes_1)
    link_10 = module_0.Link(link_9)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_2)
    link_12 = module_0.Link(link_11)
    var_7 = link_12.__hash__()
    assert var_7 == -4606328870177462788
    bool_1 = True
    link_13 = module_0.Link(bool_1)
    var_8 = link_13.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_2)
    link_14 = module_0.Link(var_7)
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_15 = module_0.Link(bool_2, fragment=tuple_0)
    var_10 = link_15.__hash__()
    assert var_10 == -8753497827991233192
    link_16 = module_0.Link(var_10, var_10, nofollow=var_10)
    var_11 = link_16.__hash__()
    assert var_11 == -1835968800350151339
    var_12 = var_11.__hash__()
    assert var_12 == -1835968800350151339
    int_1 = 2105
    none_type_3 = None
    link_17 = module_0.Link(int_1, none_type_3)
    var_13 = link_17.__repr__()
    assert var_13 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_18 = module_0.Link(var_13, int_1)
    var_14 = link_18.__hash__()
    assert var_14 == -1122340555193368221
    var_15 = var_14.__repr__()
    assert var_15 == "-1122340555193368221"
    none_type_4 = None
    bool_4 = True
    link_19 = module_0.Link(bool_4, nofollow=bool_4)
    var_16 = link_19.__hash__()
    assert var_16 == 0
    var_17 = var_16.__eq__(none_type_4)
    var_18 = var_16.__repr__()
    assert var_18 == "0"
    var_19 = var_11.__eq__(link_1)


def test_case_633():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=None)"


def test_case_634():
    int_0 = 1870
    link_0 = module_0.Link(int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    dict_0 = {link_0: link_0}
    link_1 = module_0.Link(dict_0, fragment=dict_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_2 = var_0.__eq__(var_0)
    var_3 = var_2.__hash__()


def test_case_635():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    bool_1 = False
    none_type_1 = None
    link_4 = module_0.Link(bool_1, fragment=none_type_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_1 = module_1.object()
    link_5 = module_0.Link(object_1, fragment=object_1)
    var_4 = link_5.__hash__()
    assert var_4 == 0
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    complex_0 = -2489 + 3297.83623j
    link_7 = module_0.Link(complex_0)
    var_5 = link_7.__hash__()
    assert var_5 == 1172959022599657258
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_8 = module_0.Link(tuple_0, fragment=bool_2)
    var_6 = link_8.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_6.__hash__()
    assert var_9 == -552935834187556073
    bool_4 = False
    link_9 = module_0.Link(bool_4)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_10.__repr__()
    assert (
        var_10
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_11 = module_0.Link(bool_5)
    var_11 = link_11.__repr__()
    assert var_11 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_6 = True
    dict_0 = {}
    none_type_2 = None
    float_0 = 2515.28653
    link_12 = module_0.Link(dict_0, none_type_2, float_0, none_type_2)
    var_12 = link_12.__repr__()
    var_13 = var_12.__eq__(bool_6)
    var_14 = var_13.__hash__()
    var_15 = var_14.__repr__()
    bytes_3 = b"-5164621852614943975"
    link_13 = module_0.Link(bytes_3, nofollow=bytes_3)
    var_16 = link_13.__hash__()
    assert var_16 == 0
    var_17 = var_11.__eq__(link_6)


def test_case_636():
    none_type_0 = None
    bool_0 = False
    link_0 = module_0.Link(none_type_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == -5509142826951788791
    var_2 = var_1.__repr__()
    assert var_2 == "-5509142826951788791"
    var_3 = var_2.__repr__()
    assert var_3 == "'-5509142826951788791'"


def test_case_637():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_2.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_0, var_1, bool_2, bool_1}
    var_2 = var_1.__eq__(set_0)
    var_3 = link_2.__hash__()
    assert var_3 == -8753497827991233192
    none_type_0 = None
    bool_3 = True
    link_3 = module_0.Link(bool_3, nofollow=bool_3)
    var_4 = link_3.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    link_4 = module_0.Link(link_3)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_1, fragment=bool_4)
    var_6 = link_5.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_1 = None
    link_6 = module_0.Link(link_5, fragment=none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_6 = True
    link_8 = module_0.Link(bool_6)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_9 = module_0.Link(float_0, fragment=var_8)
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    complex_0 = -2489 + 3297.83623j
    link_11 = module_0.Link(complex_0)
    var_9 = link_11.__hash__()
    assert var_9 == 1172959022599657258
    object_0 = module_1.object()
    link_12 = module_0.Link(object_0, fragment=object_0)
    var_10 = link_12.__hash__()
    assert var_10 == 0
    var_11 = link_11.__repr__()
    assert (
        var_11 == "Link(url=(-2489+3297.83623j), text='', fragment='', nofollow=False)"
    )


def test_case_638():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_1, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    link_4 = module_0.Link(bytes_0, link_1)


def test_case_639():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 3199
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_2 = module_0.Link(bool_0, fragment=tuple_0)
    var_1 = link_2.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_0, var_1, bool_1, bool_0}
    var_2 = var_1.__eq__(set_0)
    var_3 = link_2.__hash__()
    assert var_3 == -8753497827991233192
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    none_type_0 = None
    bool_2 = True
    link_3 = module_0.Link(bool_2, nofollow=bool_2)
    var_5 = link_3.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    link_4 = module_0.Link(link_3)
    link_5 = module_0.Link(set_0, link_3)


def test_case_640():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = False
    link_1 = module_0.Link(bool_2)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_4, nofollow=var_4)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, link_3)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_0)
    link_6 = module_0.Link(link_5)
    var_5 = link_6.__hash__()
    assert var_5 == -4606328870177462788
    bool_3 = True
    link_7 = module_0.Link(bool_3)
    var_6 = link_7.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_0)
    link_8 = module_0.Link(var_7, var_7)
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    none_type_2 = None
    bool_4 = True
    link_10 = module_0.Link(bool_4, nofollow=bool_4)
    var_8 = link_10.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_1, bytes_1)
    var_10 = link_10.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_12 = module_0.Link(link_10)
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_13 = module_0.Link(bool_5, fragment=tuple_1)
    var_11 = link_13.__hash__()
    assert var_11 == -8753497827991233192
    link_14 = module_0.Link(var_11, var_11, nofollow=var_11)
    var_12 = link_13.__hash__()
    assert var_12 == -8753497827991233192
    var_13 = var_12.__eq__(var_8)


def test_case_641():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    none_type_1 = None
    link_1 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_3 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_3 = var_2.__hash__()
    assert var_3 == -3936900723769714473
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_4 = link_4.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_0)
    var_7 = var_6.__repr__()
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, link_5)
    var_8 = link_6.__eq__(link_6)
    assert var_8 is True
    var_9 = link_5.__hash__()
    assert var_9 == 5
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_1, fragment=bool_3)
    var_10 = link_7.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    none_type_3 = None
    link_8 = module_0.Link(none_type_3, bool_4)
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_9 = module_0.Link(bool_5, fragment=tuple_2)
    var_13 = link_9.__hash__()
    assert var_13 == -8753497827991233192
    set_0 = {tuple_2, var_13, bool_6, bool_5}
    var_14 = var_13.__eq__(set_0)
    var_15 = link_9.__hash__()
    assert var_15 == -8753497827991233192
    bool_7 = False
    link_10 = module_0.Link(bool_7)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_0, bytes_0)
    var_16 = link_11.__repr__()
    assert (
        var_16
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    none_type_4 = None
    none_type_5 = None
    link_12 = module_0.Link(none_type_5)
    var_17 = link_12.__repr__()
    assert var_17 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_18 = var_17.__hash__()
    assert var_18 == 2234852059487564994
    var_19 = var_18.__eq__(none_type_4)
    var_20 = link_2.__hash__()
    assert var_20 == 0


def test_case_642():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = var_0.__eq__(var_0)
    var_3 = var_1.__hash__()
    assert var_3 == 0


def test_case_643():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    link_2 = module_0.Link(var_0, fragment=none_type_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    none_type_1 = None
    link_4 = module_0.Link(link_3, fragment=none_type_1)
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_5 = module_0.Link(bytes_0)
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_3 = False
    link_7 = module_0.Link(bool_3)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_8 = module_0.Link(var_4, nofollow=var_4)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    var_5 = var_4.__hash__()
    assert var_5 == -3936900723769714473
    float_0 = 5.0
    link_9 = module_0.Link(float_0)
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, link_9)
    var_6 = link_10.__eq__(link_10)
    assert var_6 is True
    int_0 = 1870
    link_11 = module_0.Link(int_0)
    dict_0 = {link_11: link_11}
    link_12 = module_0.Link(dict_0, fragment=dict_0)
    var_7 = link_12.__repr__()
    assert (
        var_7
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_13 = module_0.Link(bool_4, fragment=tuple_1)
    var_9 = link_13.__hash__()
    assert var_9 == -8753497827991233192
    link_14 = module_0.Link(var_9, var_9, nofollow=var_9)
    bytes_1 = b"-5164621852614943975"
    link_15 = module_0.Link(bytes_1, nofollow=bytes_1)
    none_type_4 = None
    bool_6 = True
    link_16 = module_0.Link(bool_6, nofollow=bool_6)
    var_10 = link_16.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_4)
    bool_7 = True
    bool_8 = False
    tuple_2 = (bool_7, bool_8)
    link_17 = module_0.Link(tuple_2, fragment=bool_7)
    var_12 = link_17.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = link_17.__repr__()
    assert var_14 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    var_15 = var_5.__hash__()
    assert var_15 == -1631057714556020522
    var_16 = var_15.__eq__(none_type_2)


def test_case_644():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_645():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    int_0 = 2105
    none_type_0 = None
    link_1 = module_0.Link(int_0, none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_2 = module_0.Link(var_3, int_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_4 = link_2.__hash__()
    assert var_4 == -1122340555193368221
    var_5 = var_4.__repr__()
    assert var_5 == "-1122340555193368221"
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_3 = module_0.Link(tuple_0, fragment=bool_0)
    var_6 = link_3.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_1 = None
    link_4 = module_0.Link(link_3, fragment=none_type_1)
    bool_2 = False
    none_type_2 = None
    link_5 = module_0.Link(bool_2, fragment=none_type_2)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    var_9 = link_6.__hash__()
    assert var_9 == 0
    var_10 = link_1.__repr__()
    assert var_10 == "Link(url=2105, text=None, fragment='', nofollow=False)"


def test_case_646():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=None)"
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    var_1 = link_1.__hash__()
    assert var_1 == 5
    int_0 = 1870
    link_2 = module_0.Link(int_0)
    dict_0 = {link_2: link_2}
    link_3 = module_0.Link(dict_0, fragment=dict_0)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_4 = var_2.__eq__(var_2)
    var_5 = var_4.__hash__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_6 = link_5.__hash__()
    assert var_6 == -4606328870177462788
    bool_0 = True
    link_6 = module_0.Link(bool_0)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_8 = var_6.__eq__(bytes_0)
    link_7 = module_0.Link(var_6)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_1)
    link_9 = module_0.Link(link_8)
    var_9 = link_9.__hash__()
    assert var_9 == -4606328870177462788
    var_10 = link_9.__repr__()
    assert (
        var_10
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    var_11 = var_9.__repr__()
    assert var_11 == "-4606328870177462788"
    var_12 = var_11.__hash__()
    assert var_12 == 2571893331081720833


def test_case_647():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    int_0 = 1870
    link_2 = module_0.Link(int_0)
    dict_0 = {link_2: link_2}
    link_3 = module_0.Link(dict_0, fragment=dict_0)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_6 = var_4.__eq__(var_4)
    var_7 = var_6.__hash__()
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_8 = link_4.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_0)
    int_1 = 3199
    link_5 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_11 = link_5.__repr__()
    assert var_11 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_12 = var_11.__hash__()
    assert var_12 == -3203539594471298528
    bool_3 = False
    link_6 = module_0.Link(bool_3)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_7 = module_0.Link(tuple_1, fragment=bool_4)
    var_13 = link_7.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__repr__()
    assert var_15 == "-5164621852614943975"
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, bool_5)
    bool_6 = False
    link_9 = module_0.Link(bool_6)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_16 = link_10.__repr__()
    assert (
        var_16
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_7 = False
    link_11 = module_0.Link(bool_7)
    var_17 = var_16.__repr__()
    assert (
        var_17
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_12 = module_0.Link(var_16, bytes_1)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"
    link_13 = module_0.Link(link_0, fragment=link_6, nofollow=var_16)


def test_case_648():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    var_2 = link_2.__repr__()
    var_3 = link_2.__hash__()
    assert var_3 == 0
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_3 = module_0.Link(bool_0, fragment=tuple_0)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_0, var_4, bool_1, bool_0}
    var_5 = var_4.__eq__(set_0)
    var_6 = link_3.__hash__()
    assert var_6 == -8753497827991233192
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    var_7 = link_4.__hash__()
    assert var_7 == 5
    bool_2 = True
    link_5 = module_0.Link(bool_2, nofollow=bool_2)
    var_8 = link_5.__eq__(link_5)
    assert var_8 is True
    none_type_0 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_9 = link_6.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_0)
    link_7 = module_0.Link(link_6)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_9 = module_0.Link(tuple_1, fragment=bool_4)
    var_11 = link_9.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_11.__hash__()
    assert var_14 == -552935834187556073
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_1)
    link_11 = module_0.Link(link_10)
    var_15 = link_11.__hash__()
    assert var_15 == -4606328870177462788
    bool_6 = True
    link_12 = module_0.Link(bool_6)
    var_16 = link_12.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_17 = var_15.__eq__(bytes_1)
    var_18 = var_17.__hash__()
    set_1 = set()
    link_13 = module_0.Link(link_2, var_15, nofollow=set_1)


def test_case_649():
    int_0 = 1870
    link_0 = module_0.Link(int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    dict_0 = {link_0: link_0}
    link_1 = module_0.Link(dict_0, fragment=dict_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_3 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_0)
    var_6 = var_5.__repr__()
    none_type_0 = None
    bool_3 = True
    link_5 = module_0.Link(bool_3, nofollow=bool_3)
    var_7 = link_5.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_0)
    link_6 = module_0.Link(link_5)
    link_7 = module_0.Link(var_7, fragment=none_type_0)
    none_type_1 = None
    bool_4 = True
    link_8 = module_0.Link(bool_4, nofollow=bool_4)
    var_9 = link_8.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_1)
    float_0 = 5.0
    link_9 = module_0.Link(float_0)
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, link_9)
    var_11 = var_1.__hash__()
    assert var_11 == -1363353910757302521
    var_12 = var_11.__hash__()
    assert var_12 == -1363353910757302521


def test_case_650():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = var_0.__eq__(var_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    bool_0 = True
    link_3 = module_0.Link(bool_0)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_4 = module_0.Link(float_0, fragment=var_2)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, none_type_1)
    none_type_2 = None
    bool_1 = True
    link_6 = module_0.Link(bool_1, nofollow=bool_1)
    var_3 = link_6.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_8 = module_0.Link(link_6)
    none_type_3 = None
    link_9 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_10 = module_0.Link(tuple_0, fragment=bool_2)
    var_6 = link_10.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__hash__()
    assert var_8 == -552935834187556073
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    object_0 = module_1.object()
    link_12 = module_0.Link(object_0, fragment=object_0)
    bool_4 = False
    link_13 = module_0.Link(bool_4)
    var_9 = link_13.__repr__()
    assert var_9 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_5 = True
    link_14 = module_0.Link(tuple_0, nofollow=bool_5)


def test_case_651():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_0.__eq__(var_1)


def test_case_652():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=None, text='', fragment='', nofollow=None)"
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, bool_1)
    none_type_2 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_7 = link_4.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_2)
    var_9 = var_7.__repr__()
    assert var_9 == "0"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_10 = link_6.__hash__()
    assert var_10 == -4606328870177462788
    var_11 = var_10.__hash__()
    assert var_11 == -2300485860963768837
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_1, fragment=bool_3)
    var_12 = link_7.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__repr__()
    assert var_14 == "-5164621852614943975"
    bool_5 = True
    link_8 = module_0.Link(bool_5, nofollow=bool_5)
    var_15 = link_8.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_6 = True
    link_9 = module_0.Link(bool_6, bool_6, nofollow=bool_6)
    var_16 = link_9.__hash__()
    assert var_16 == 1
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    bool_7 = True
    link_11 = module_0.Link(bool_7)
    var_17 = link_11.__repr__()
    assert var_17 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_12 = module_0.Link(float_0, fragment=var_17)
    int_0 = 1870
    link_13 = module_0.Link(int_0)
    dict_0 = {link_13: link_13}
    link_14 = module_0.Link(dict_0, fragment=dict_0)
    var_18 = link_14.__repr__()
    assert (
        var_18
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_19 = var_18.__repr__()
    assert (
        var_19
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_20 = var_18.__eq__(var_18)
    var_21 = var_20.__hash__()
    var_22 = link_8.__hash__()
    assert var_22 == 0
    var_23 = var_22.__hash__()
    assert var_23 == 0


def test_case_653():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__repr__()
    assert var_2 == "0"
    var_3 = var_1.__hash__()
    assert var_3 == 0
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    link_3 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = link_3.__repr__()
    assert (
        var_5
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_6 = link_2.__repr__()
    assert var_6 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    none_type_0 = None
    bool_3 = True
    link_4 = module_0.Link(bool_3, nofollow=bool_3)
    var_7 = link_4.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_4.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_6 = module_0.Link(var_9, nofollow=var_9)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    int_0 = 3199
    link_7 = module_0.Link(int_0, int_0, nofollow=int_0)
    float_0 = 5.0
    link_8 = module_0.Link(float_0)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_2)
    link_10 = module_0.Link(link_9)
    var_10 = link_10.__hash__()
    assert var_10 == -4606328870177462788
    bool_4 = True
    link_11 = module_0.Link(bool_4, bool_4, nofollow=bool_4)
    var_11 = link_11.__hash__()
    assert var_11 == 1
    var_12 = var_4.__hash__()
    assert var_12 == -1835968800350151339


def test_case_654():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    none_type_0 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    var_3 = var_1.__repr__()
    assert var_3 == "0"
    var_4 = link_0.__hash__()
    assert var_4 == -4606328870177462788


def test_case_655():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    var_0 = link_2.__hash__()
    assert var_0 == 5
    object_1 = module_1.object()
    link_3 = module_0.Link(object_1, fragment=object_1)
    var_1 = link_3.__repr__()
    var_2 = link_3.__hash__()
    assert var_2 == 0
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_3 = link_5.__hash__()
    assert var_3 == -4606328870177462788
    bool_0 = True
    link_6 = module_0.Link(bool_0)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_1)
    link_7 = module_0.Link(var_5, var_5)
    object_2 = module_1.object()
    link_8 = module_0.Link(object_2, fragment=object_2)
    var_6 = link_8.__repr__()
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    bool_1 = True
    link_10 = module_0.Link(bool_1)
    var_7 = link_10.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_11 = module_0.Link(float_1, fragment=var_7)
    link_12 = module_0.Link(float_1, fragment=link_10)
    var_8 = var_1.__repr__()


def test_case_656():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, var_1, nofollow=link_1)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    link_4 = module_0.Link(bool_1, link_0)


def test_case_657():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_5 = module_0.Link(var_4, nofollow=link_4)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, link_6)
    int_0 = 3199
    link_8 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_1 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_5 = link_9.__repr__()
    assert (
        var_5
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_10 = module_0.Link(bool_3, fragment=tuple_1)
    var_6 = link_10.__hash__()
    assert var_6 == -8753497827991233192
    link_11 = module_0.Link(var_6, var_6, nofollow=var_6)
    var_7 = link_11.__repr__()
    assert (
        var_7
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_8 = link_10.__repr__()
    assert var_8 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    object_1 = module_1.object()
    link_12 = module_0.Link(object_1, fragment=object_1)
    var_9 = link_12.__repr__()
    var_10 = link_12.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(link_4)


def test_case_658():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    int_0 = 1870
    link_1 = module_0.Link(int_0)
    dict_0 = {link_1: link_1}
    link_2 = module_0.Link(dict_0, fragment=dict_0)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_5 = var_3.__eq__(var_3)
    var_6 = var_5.__hash__()
    var_7 = link_1.__repr__()
    assert var_7 == "Link(url=1870, text='', fragment='', nofollow=False)"


def test_case_659():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_1 = var_0.__hash__()
    assert var_1 == -3203539594471298528
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_3 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_2 = link_3.__repr__()
    var_3 = var_2.__eq__(bool_0)
    var_4 = var_3.__hash__()
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    float_1 = 5.0
    link_5 = module_0.Link(float_1)
    var_5 = link_5.__hash__()
    assert var_5 == 5
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_6 = module_0.Link(bool_1, fragment=tuple_0)
    var_6 = link_6.__hash__()
    assert var_6 == -8753497827991233192
    link_7 = module_0.Link(var_6, var_6, nofollow=var_6)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_8 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_8.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    float_2 = 5.0
    link_9 = module_0.Link(float_2)
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, link_9)
    var_9 = link_10.__eq__(link_10)
    assert var_9 is True
    object_0 = module_1.object()
    link_11 = module_0.Link(object_0, fragment=object_0)
    link_12 = module_0.Link(object_0, none_type_2)
    var_10 = link_1.__hash__()
    assert var_10 == -3421725075186203833


def test_case_660():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    bytes_0 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    var_4 = link_2.__hash__()
    assert var_4 == 0


def test_case_661():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    str_0 = "Dmfv; iJ001\n"
    none_type_0 = None
    link_1 = module_0.Link(str_0, fragment=none_type_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_2.__hash__()
    assert var_1 == -8753497827991233192
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_2 = link_4.__hash__()
    assert var_2 == -4606328870177462788
    bool_3 = True
    link_5 = module_0.Link(bool_3)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_0)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, fragment=none_type_1)
    var_5 = link_6.__hash__()
    assert var_5 == 0
    var_6 = var_5.__hash__()
    assert var_6 == 0
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_8 = link_1.__repr__()
    assert (
        var_8 == "Link(url=b'Dmfv; iJ001\\n', text='', fragment=None, nofollow=False)"
    )


def test_case_662():
    object_0 = module_1.object()
    none_type_0 = None
    link_0 = module_0.Link(object_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()


def test_case_663():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_4 = link_3.__hash__()
    assert var_4 == -4606328870177462788
    bool_2 = True
    link_4 = module_0.Link(bool_2)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_0)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, fragment=none_type_1)
    var_7 = link_5.__hash__()
    assert var_7 == 0
    var_8 = var_7.__hash__()
    assert var_8 == 0
    none_type_2 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_9 = link_6.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_8 = module_0.Link(link_6)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_2)
    link_10 = module_0.Link(link_9)
    var_12 = link_10.__hash__()
    assert var_12 == -4606328870177462788
    bool_4 = True
    link_11 = module_0.Link(bool_4)
    var_13 = link_11.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_14 = var_12.__eq__(bytes_2)
    link_12 = module_0.Link(var_12)
    bool_5 = False
    link_13 = module_0.Link(bool_5)
    var_15 = link_13.__hash__()
    assert var_15 == 0
    int_0 = 36
    bytes_3 = b"\xeb\xdc\xa3"
    link_14 = module_0.Link(bytes_3)
    var_16 = link_14.__repr__()
    assert (
        var_16 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_17 = var_16.__eq__(int_0)
    var_18 = var_17.__repr__()
    bool_6 = True
    dict_0 = {}
    none_type_3 = None
    float_0 = 2515.28653
    link_15 = module_0.Link(dict_0, none_type_3, float_0, none_type_3)
    var_19 = link_15.__repr__()
    var_20 = var_19.__eq__(bool_6)
    var_21 = var_20.__hash__()
    link_16 = module_0.Link(bool_2, nofollow=var_10)


def test_case_664():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    int_1 = 1870
    link_2 = module_0.Link(int_1)
    dict_0 = {link_2: link_2}
    link_3 = module_0.Link(dict_0, fragment=dict_0)
    var_6 = link_3.__repr__()
    assert (
        var_6
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    int_2 = 1870
    link_4 = module_0.Link(int_2)
    dict_1 = {link_4: link_4}
    link_5 = module_0.Link(dict_1, fragment=dict_1)
    var_8 = link_5.__repr__()
    assert (
        var_8
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_9 = var_8.__repr__()
    assert (
        var_9
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_10 = var_8.__eq__(var_8)
    var_11 = var_10.__hash__()
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_7 = module_0.Link(tuple_0, fragment=bool_0)
    var_12 = link_7.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__hash__()
    assert var_14 == -552935834187556073
    var_15 = var_7.__hash__()
    assert var_15 == -1363353910757302521


def test_case_665():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    var_3 = link_2.__eq__(link_2)
    assert var_3 is True
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_3.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    int_0 = 1870
    link_4 = module_0.Link(int_0)
    dict_0 = {link_4: link_4}
    link_5 = module_0.Link(dict_0, fragment=dict_0)
    var_6 = link_5.__repr__()
    assert (
        var_6
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_8 = var_6.__eq__(var_6)
    var_9 = var_8.__hash__()
    link_6 = module_0.Link(link_0, var_4, var_2)


def test_case_666():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    var_1 = link_0.__hash__()
    assert var_1 == 0
    none_type_0 = None
    link_1 = module_0.Link(none_type_0)
    var_2 = link_1.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__hash__()
    assert var_3 == 477042
    bool_0 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_2 = module_0.Link(var_3, fragment=bool_0, nofollow=complex_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_0, var_4, bool_2, bool_1}
    var_5 = var_4.__eq__(set_0)
    var_6 = link_3.__hash__()
    assert var_6 == -8753497827991233192
    var_7 = link_3.__hash__()
    assert var_7 == -8753497827991233192
    var_8 = link_3.__repr__()
    assert var_8 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == -848109543115463696


def test_case_667():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    int_0 = 401
    link_3 = module_0.Link(int_0, int_0)
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_4 = module_0.Link(bool_4, fragment=tuple_2)
    var_5 = link_4.__hash__()
    assert var_5 == -8753497827991233192
    link_5 = module_0.Link(var_5, var_5, nofollow=var_5)
    var_6 = link_4.__hash__()
    assert var_6 == -8753497827991233192
    none_type_1 = None
    bool_6 = True
    link_6 = module_0.Link(bool_6, nofollow=bool_6)
    var_7 = link_6.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    link_7 = module_0.Link(link_6)
    link_8 = module_0.Link(var_7, fragment=none_type_1)
    bool_7 = True
    link_9 = module_0.Link(bool_7, nofollow=bool_7)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_0)
    link_11 = module_0.Link(link_10)
    var_9 = link_11.__hash__()
    assert var_9 == -4606328870177462788
    int_1 = 1870
    link_12 = module_0.Link(int_1)
    dict_0 = {link_12: link_12}
    link_13 = module_0.Link(dict_0, fragment=dict_0)
    var_10 = link_13.__repr__()
    assert (
        var_10
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_11 = var_10.__repr__()
    assert (
        var_11
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_14 = module_0.Link(bytes_1)
    link_15 = module_0.Link(link_14)
    var_12 = link_11.__hash__()
    assert var_12 == -4606328870177462788


def test_case_668():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, nofollow=none_type_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=None, text='', fragment='', nofollow=None)"
    int_0 = 1870
    link_3 = module_0.Link(int_0)
    dict_0 = {link_3: link_3}
    link_4 = module_0.Link(dict_0, fragment=dict_0)
    var_4 = link_4.__repr__()
    assert (
        var_4
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_6 = var_4.__eq__(var_4)
    var_7 = var_6.__hash__()
    none_type_1 = None
    link_5 = module_0.Link(none_type_1)
    var_8 = link_5.__hash__()
    assert var_8 == 477042
    var_9 = var_8.__hash__()
    assert var_9 == 477042
    bool_2 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_6 = module_0.Link(var_9, fragment=bool_2, nofollow=complex_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_1, fragment=bool_3)
    var_10 = link_7.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = link_7.__repr__()
    assert var_12 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    link_8 = module_0.Link(var_1, link_1)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"


def test_case_669():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_1 = False
    link_1 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_2.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_3 = module_0.Link(bool_2)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_4 = module_0.Link(bool_3, fragment=tuple_0)
    var_2 = link_4.__hash__()
    assert var_2 == -8753497827991233192
    link_5 = module_0.Link(var_2, var_2, nofollow=var_2)
    var_3 = link_5.__hash__()
    assert var_3 == -1835968800350151339
    var_4 = var_3.__hash__()
    assert var_4 == -1835968800350151339
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_6 = module_0.Link(bool_5, fragment=tuple_1)
    var_5 = link_6.__hash__()
    assert var_5 == -8753497827991233192
    link_7 = module_0.Link(var_5, var_5, nofollow=var_5)
    var_6 = link_7.__repr__()
    assert (
        var_6
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    object_0 = module_1.object()
    link_8 = module_0.Link(object_0, fragment=object_0)
    var_8 = link_8.__hash__()
    assert var_8 == 0
    none_type_0 = None
    bool_7 = True
    link_9 = module_0.Link(bool_7, nofollow=bool_7)
    var_9 = link_9.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_11 = module_0.Link(var_11, nofollow=var_11)
    assert f"{type(link_11).__module__}.{type(link_11).__qualname__}" == "link.Link"
    object_1 = module_1.object()
    link_12 = module_0.Link(object_1, fragment=object_1)
    float_0 = 5.0
    link_13 = module_0.Link(float_0)
    none_type_1 = None
    link_14 = module_0.Link(none_type_1, link_13)
    int_0 = 36
    bytes_2 = b"\xeb\xdc\xa3"
    link_15 = module_0.Link(bytes_2)
    var_12 = link_15.__repr__()
    assert (
        var_12 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_13 = var_12.__eq__(int_0)
    var_14 = var_13.__repr__()
    var_15 = var_5.__repr__()
    assert var_15 == "-8753497827991233192"


def test_case_670():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_1.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_3 = module_0.Link(link_1)
    none_type_1 = None
    bool_1 = False
    link_4 = module_0.Link(none_type_1, fragment=bool_1)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == -5509142826951788791
    var_9 = var_8.__repr__()
    assert var_9 == "-5509142826951788791"
    var_10 = var_9.__repr__()
    assert var_10 == "'-5509142826951788791'"
    none_type_2 = None
    bool_2 = True
    link_5 = module_0.Link(bool_2, nofollow=bool_2)
    var_11 = link_5.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_2, bytes_2)
    var_13 = link_5.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_7 = module_0.Link(var_13, nofollow=var_13)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_8 = module_0.Link(bool_3, fragment=tuple_0)
    var_14 = link_8.__hash__()
    assert var_14 == -8753497827991233192
    link_9 = module_0.Link(var_14, var_14, nofollow=var_14)
    var_15 = link_9.__hash__()
    assert var_15 == -1835968800350151339
    var_16 = var_15.__hash__()
    assert var_16 == -1835968800350151339
    var_17 = var_3.__repr__()


def test_case_671():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, nofollow=none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=None, text='', fragment='', nofollow=None)"
    none_type_2 = None
    link_3 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_4 = module_0.Link(var_4, nofollow=link_3)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    none_type_3 = None
    none_type_4 = None
    link_5 = module_0.Link(none_type_4)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == 2234852059487564994
    var_7 = var_6.__eq__(none_type_3)
    var_8 = var_5.__eq__(none_type_0)


def test_case_672():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    link_3 = module_0.Link(var_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_3 = link_5.__hash__()
    assert var_3 == -4606328870177462788
    bool_1 = True
    link_6 = module_0.Link(bool_1)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_1)
    var_6 = var_5.__hash__()
    int_0 = 1870
    link_7 = module_0.Link(int_0)
    dict_0 = {link_7: link_7}
    link_8 = module_0.Link(dict_0, fragment=dict_0)
    var_7 = link_8.__repr__()
    assert (
        var_7
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_9 = var_7.__eq__(var_7)
    var_10 = var_9.__hash__()
    none_type_0 = None
    link_9 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_2 = False
    link_10 = module_0.Link(bool_2)
    var_11 = link_10.__repr__()
    assert var_11 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_11 = module_0.Link(var_11, nofollow=var_11)
    assert f"{type(link_11).__module__}.{type(link_11).__qualname__}" == "link.Link"
    var_12 = var_11.__hash__()
    assert var_12 == -3936900723769714473
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_2)
    link_13 = module_0.Link(link_12)
    var_13 = link_13.__hash__()
    assert var_13 == -4606328870177462788
    var_14 = link_13.__repr__()
    assert (
        var_14
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_14 = module_0.Link(list_0, str_0)
    link_15 = module_0.Link(link_14)
    bool_3 = True
    link_16 = module_0.Link(bool_3)
    var_15 = link_16.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=False)"
    link_17 = module_0.Link(link_15, nofollow=link_11)


def test_case_673():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0)
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__hash__()
    assert var_6 == -552935834187556073
    none_type_2 = None
    none_type_3 = None
    link_4 = module_0.Link(none_type_3)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == 2234852059487564994
    var_9 = var_8.__eq__(none_type_2)
    none_type_4 = None
    link_5 = module_0.Link(none_type_4, nofollow=none_type_4)
    var_10 = link_5.__repr__()
    assert var_10 == "Link(url=None, text='', fragment='', nofollow=None)"
    var_11 = link_3.__repr__()
    assert var_11 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"


def test_case_674():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_1)
    var_2 = var_0.__eq__(bytes_0)
    bytes_2 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_3 = module_0.Link(tuple_0, fragment=bool_0)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    none_type_0 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_6 = link_4.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_3, bytes_3)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_4 = b"Z\x8c"
    bool_3 = True
    tuple_1 = (var_5, var_6, bytes_4, bool_3)
    link_6 = module_0.Link(var_6, tuple_1, nofollow=link_3)


def test_case_675():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_1.__hash__()
    assert var_0 == -8753497827991233192
    none_type_0 = None
    bool_2 = False
    link_2 = module_0.Link(none_type_0, fragment=bool_2)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_2 = var_1.__hash__()
    assert var_2 == -5509142826951788791
    var_3 = var_2.__repr__()
    assert var_3 == "-5509142826951788791"
    var_4 = var_3.__repr__()
    assert var_4 == "'-5509142826951788791'"
    none_type_1 = None
    bool_3 = True
    link_3 = module_0.Link(bool_3, nofollow=bool_3)
    var_5 = link_3.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_8 = link_3.__hash__()
    assert var_8 == 0
    none_type_2 = None
    link_5 = module_0.Link(none_type_2, fragment=none_type_2)
    var_9 = link_5.__hash__()
    assert var_9 == 0
    var_10 = var_9.__hash__()
    assert var_10 == 0
    var_11 = link_5.__repr__()
    assert var_11 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_12 = var_6.__repr__()


def test_case_676():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_1.__hash__()
    assert var_0 == -8753497827991233192
    link_2 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_2.__repr__()
    assert (
        var_1
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_3 = module_0.Link(bool_2, fragment=tuple_1)
    var_2 = link_3.__hash__()
    assert var_2 == -8753497827991233192
    set_0 = {tuple_1, var_2, bool_3, bool_2}
    var_3 = var_2.__eq__(set_0)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_4 = module_0.Link(bool_4, fragment=tuple_2)
    var_6 = link_4.__hash__()
    assert var_6 == -8753497827991233192
    set_1 = {tuple_2, var_6, bool_5, bool_4}
    var_7 = var_6.__eq__(set_1)
    bool_6 = True
    link_5 = module_0.Link(bool_6)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_7 = False
    bool_8 = False
    tuple_3 = (bool_8,)
    link_6 = module_0.Link(bool_7, fragment=tuple_3)
    var_9 = link_6.__hash__()
    assert var_9 == -8753497827991233192
    link_7 = module_0.Link(var_9, var_9, nofollow=var_9)
    int_0 = 3199
    link_8 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_10 = link_8.__repr__()
    assert var_10 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_9 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_9 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_11 = link_9.__repr__()
    var_12 = var_11.__eq__(bool_9)
    var_13 = var_12.__hash__()
    var_14 = var_1.__eq__(link_0)


def test_case_677():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    none_type_1 = None
    link_1 = module_0.Link(none_type_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    link_2 = module_0.Link(var_0, var_1, var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    bool_1 = True
    link_4 = module_0.Link(bool_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_5 = module_0.Link(float_0, fragment=var_3)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_2 = True
    dict_0 = {}
    none_type_2 = None
    float_1 = 2515.28653
    link_6 = module_0.Link(dict_0, none_type_2, float_1, none_type_2)
    var_5 = link_6.__repr__()
    var_6 = var_5.__eq__(bool_2)
    var_7 = var_6.__hash__()
    var_8 = var_7.__repr__()
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    var_9 = link_7.__repr__()
    var_10 = link_7.__hash__()
    assert var_10 == 0
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_8 = module_0.Link(bool_3, fragment=tuple_0)
    var_11 = link_8.__hash__()
    assert var_11 == -8753497827991233192
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_1)
    link_10 = module_0.Link(link_9)
    var_12 = link_10.__hash__()
    assert var_12 == -4606328870177462788
    bool_5 = True
    link_11 = module_0.Link(bool_5)
    var_13 = link_11.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_14 = var_12.__eq__(bytes_1)
    link_12 = module_0.Link(var_12)
    none_type_3 = None
    link_13 = module_0.Link(none_type_3, nofollow=none_type_3)
    var_15 = link_13.__repr__()
    assert var_15 == "Link(url=None, text='', fragment='', nofollow=None)"
    float_2 = 5.0
    link_14 = module_0.Link(float_2)
    none_type_4 = None
    link_15 = module_0.Link(none_type_4, link_14)
    var_16 = link_12.__eq__(link_14)
    assert var_16 is False


def test_case_678():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    complex_0 = -2489 + 3297.83623j
    link_1 = module_0.Link(complex_0)
    var_4 = link_1.__hash__()
    assert var_4 == 1172959022599657258
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_5, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_6 = link_3.__hash__()
    assert var_6 == 4128530656735687579
    bytes_1 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_7 = link_4.__repr__()
    assert (
        var_7
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    var_8 = var_0.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xeb\\\\xdc\\\\xa3', text='', fragment='', nofollow=False)\""
    )


def test_case_679():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = var_0.__eq__(var_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_2 = link_3.__hash__()
    assert var_2 == -4606328870177462788
    bool_0 = True
    link_4 = module_0.Link(bool_0)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_0)
    var_5 = var_4.__hash__()
    int_0 = 3199
    link_5 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_7 = var_6.__hash__()
    assert var_7 == -3203539594471298528
    link_6 = module_0.Link(var_7)


def test_case_680():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_1.__hash__()
    assert var_1 == -1835968800350151339
    var_2 = var_1.__hash__()
    assert var_2 == -1835968800350151339
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__hash__()
    assert var_4 == 0
    var_5 = var_3.__eq__(var_3)
    var_6 = var_4.__hash__()
    assert var_6 == 0
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_5.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    bool_3 = True
    link_8 = module_0.Link(bool_3)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_9 = module_0.Link(float_1, fragment=var_8)
    none_type_1 = None
    bool_4 = True
    link_10 = module_0.Link(bool_4, nofollow=bool_4)
    var_9 = link_10.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_1)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_3, bytes_3)
    var_11 = link_10.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_12 = link_10.__hash__()
    assert var_12 == 0
    none_type_2 = None
    link_12 = module_0.Link(none_type_2, fragment=none_type_2)
    var_13 = link_12.__hash__()
    assert var_13 == 0
    var_14 = var_13.__hash__()
    assert var_14 == 0
    bool_5 = True
    link_13 = module_0.Link(bool_5, fragment=link_9)


def test_case_681():
    float_0 = 40.24
    link_0 = module_0.Link(float_0, fragment=float_0, nofollow=float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 553402322211291176
    var_1 = var_0.__hash__()
    assert var_1 == 553402322211291176
    dict_0 = {float_0: float_0, float_0: var_1, var_0: var_0, float_0: float_0}
    tuple_0 = (float_0, dict_0)
    link_1 = module_0.Link(tuple_0)
    var_2 = link_1.__repr__()
    assert (
        var_2
        == "Link(url=(40.24, {40.24: 40.24, 553402322211291176: 553402322211291176}), text='', fragment='', nofollow=False)"
    )
    str_0 = "*"
    link_2 = module_0.Link(var_2, fragment=str_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"


def test_case_682():
    complex_0 = 2717.25865 + 279.6823j
    bytes_0 = b"xC(\xd2O"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    link_0 = module_0.Link(set_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == -2938861455928792573
    var_2 = var_1.__hash__()
    assert var_2 == -633018446715098622
    var_3 = var_2.__eq__(complex_0)


def test_case_683():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    none_type_0 = None
    link_2 = module_0.Link(bool_1, fragment=none_type_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=False, text='', fragment=None, nofollow=False)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(url=False, text='', fragment=None, nofollow=False)\""
    var_3 = var_2.__eq__(var_1)


def test_case_684():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_0 = link_2.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_3 = module_0.Link(bool_0)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    var_3 = var_2.__hash__()
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_4.__eq__(link_4)
    assert var_4 is True
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_5 = module_0.Link(bool_2, fragment=tuple_0)
    var_5 = link_5.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_0, var_5, bool_3, bool_2}
    var_6 = var_5.__eq__(set_0)
    var_7 = link_5.__hash__()
    assert var_7 == -8753497827991233192
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, fragment=none_type_0)
    var_8 = link_6.__hash__()
    assert var_8 == 0
    var_9 = var_8.__hash__()
    assert var_9 == 0
    var_10 = var_8.__eq__(var_8)
    var_11 = var_9.__hash__()
    assert var_11 == 0
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_4 = True
    link_8 = module_0.Link(bool_4)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_9 = module_0.Link(float_1, fragment=var_12)
    bool_5 = False
    link_10 = module_0.Link(bool_5)
    var_13 = link_10.__hash__()
    assert var_13 == 0
    none_type_1 = None
    link_11 = module_0.Link(none_type_1, fragment=none_type_1)
    var_14 = link_11.__hash__()
    assert var_14 == 0
    var_15 = var_14.__hash__()
    assert var_15 == 0
    var_16 = var_14.__eq__(var_14)
    bool_6 = True
    link_12 = module_0.Link(bool_6, nofollow=bool_6)
    var_17 = link_12.__repr__()
    assert var_17 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_18 = var_15.__hash__()
    assert var_18 == 0


def test_case_685():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    var_0 = link_2.__eq__(link_2)
    assert var_0 is True
    var_1 = link_1.__hash__()
    assert var_1 == 5
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_2 = link_3.__hash__()
    assert var_2 == -8753497827991233192
    link_4 = module_0.Link(var_2, var_2, nofollow=var_2)
    var_3 = link_4.__repr__()
    assert (
        var_3
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    none_type_1 = None
    none_type_2 = None
    link_5 = module_0.Link(none_type_2)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_5 = var_4.__hash__()
    assert var_5 == 2234852059487564994
    var_6 = var_5.__eq__(none_type_1)
    var_7 = link_0.__eq__(link_0)
    assert var_7 is True


def test_case_686():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    int_0 = 1870
    link_1 = module_0.Link(int_0)
    dict_0 = {link_1: link_1}
    link_2 = module_0.Link(dict_0, fragment=dict_0)
    var_0 = link_2.__repr__()
    assert (
        var_0
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_2 = var_0.__eq__(var_0)
    var_3 = var_2.__hash__()
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_4.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_6 = module_0.Link(var_4, var_5, nofollow=link_4)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    none_type_0 = None
    none_type_1 = None
    link_7 = module_0.Link(none_type_1)
    var_6 = link_7.__repr__()
    assert var_6 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_7 = var_6.__hash__()
    assert var_7 == 2234852059487564994
    var_8 = var_7.__eq__(none_type_0)
    link_8 = module_0.Link(var_6, var_7, var_6)
    int_1 = 2105
    none_type_2 = None
    link_9 = module_0.Link(int_1, none_type_2)
    var_9 = link_9.__repr__()
    assert var_9 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_10 = module_0.Link(var_9, int_1)
    var_10 = link_10.__hash__()
    assert var_10 == -1122340555193368221
    var_11 = var_10.__repr__()
    assert var_11 == "-1122340555193368221"
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_11 = module_0.Link(tuple_0, fragment=bool_3)
    var_12 = link_11.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__eq__(tuple_0)
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_12 = module_0.Link(bool_5, fragment=tuple_1)
    var_15 = link_12.__hash__()
    assert var_15 == -8753497827991233192
    link_13 = module_0.Link(var_15, var_15, nofollow=var_15)
    var_16 = link_13.__repr__()
    assert (
        var_16
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_17 = link_12.__repr__()
    assert var_17 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    float_0 = 5.0
    link_14 = module_0.Link(float_0)
    none_type_3 = None
    link_15 = module_0.Link(none_type_3, link_14)
    int_2 = 3199
    link_16 = module_0.Link(int_2, int_2, nofollow=int_2)
    bytes_1 = b"-5164621852614943975"
    link_17 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_18 = link_17.__repr__()
    assert (
        var_18
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    int_3 = 3199
    link_18 = module_0.Link(int_3, int_3, nofollow=int_3)
    var_19 = link_18.__hash__()
    assert var_19 == 3199
    bool_7 = False
    bool_8 = False
    tuple_2 = (bool_8,)
    link_19 = module_0.Link(bool_7, fragment=tuple_2)
    var_20 = link_19.__hash__()
    assert var_20 == -8753497827991233192
    link_20 = module_0.Link(var_20, var_20, nofollow=var_20)
    var_21 = link_19.__hash__()
    assert var_21 == -8753497827991233192
    var_22 = var_3.__repr__()


def test_case_687():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_3 = var_0.__repr__()
    assert var_3 == "-5164621852614943975"


def test_case_688():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    str_0 = "Dmfv; iJ001\n"
    none_type_1 = None
    link_2 = module_0.Link(str_0, fragment=none_type_1)
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_3 = module_0.Link(bytes_0)
    int_0 = 1870
    link_4 = module_0.Link(int_0)
    dict_0 = {link_4: link_4}
    link_5 = module_0.Link(dict_0, fragment=dict_0)
    var_1 = link_5.__repr__()
    assert (
        var_1
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_3 = var_1.__eq__(var_1)
    var_4 = var_3.__hash__()
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=1870, text='', fragment='', nofollow=False)"


def test_case_689():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_2 = module_0.Link(var_3, nofollow=link_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_4 = link_2.__hash__()
    assert var_4 == 4128530656735687579
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, link_3)
    var_5 = link_4.__eq__(link_4)
    assert var_5 is True
    var_6 = link_3.__hash__()
    assert var_6 == 5
    link_5 = module_0.Link(var_5)


def test_case_690():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_1 = link_2.__hash__()
    assert var_1 == -4606328870177462788
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    none_type_0 = None
    link_3 = module_0.Link(none_type_0)
    var_3 = link_3.__hash__()
    assert var_3 == 477042
    var_4 = var_3.__hash__()
    assert var_4 == 477042
    var_5 = var_1.__repr__()
    assert var_5 == "-4606328870177462788"


def test_case_691():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == 4128530656735687579
    int_0 = 401
    link_2 = module_0.Link(int_0, int_0)
    bool_0 = True
    link_3 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_3.__eq__(link_3)
    assert var_2 is True
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_4 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_4.__hash__()
    assert var_3 == -8753497827991233192
    link_5 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_4.__hash__()
    assert var_4 == -8753497827991233192
    int_1 = 3199
    link_6 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_5 = link_6.__hash__()
    assert var_5 == 3199
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_0)
    link_8 = module_0.Link(link_7)
    var_6 = link_8.__hash__()
    assert var_6 == -4606328870177462788
    bool_3 = True
    link_9 = module_0.Link(bool_3)
    var_7 = link_9.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_8 = var_6.__eq__(bytes_0)
    var_9 = link_5.__hash__()
    assert var_9 == -1835968800350151339


def test_case_692():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_1 = var_0.__hash__()
    assert var_1 == -3936900723769714473
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, nofollow=none_type_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=None, text='', fragment='', nofollow=None)"
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(url=b\"Link(url=False, text='', fragment='', nofollow=False)\", text='', fragment='', nofollow=\"Link(url=False, text='', fragment='', nofollow=False)\")"
    )


def test_case_693():
    object_0 = module_1.object()
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 7957018345684386684
    var_2 = var_1.__repr__()
    assert var_2 == "7957018345684386684"
    link_1 = module_0.Link(object_0, var_2)
    var_3 = link_1.__repr__()


def test_case_694():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    none_type_0 = None
    bool_1 = True
    link_1 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    var_3 = var_1.__repr__()
    assert var_3 == "0"
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_0)
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    none_type_1 = None
    bool_4 = True
    link_3 = module_0.Link(bool_4, nofollow=bool_4)
    var_5 = link_3.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_5 = module_0.Link(link_3)
    bool_5 = False
    link_6 = module_0.Link(bool_5)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_6 = True
    link_8 = module_0.Link(bool_6)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_9 = module_0.Link(float_0, fragment=var_8)
    bool_7 = True
    bool_8 = False
    tuple_1 = (bool_7, bool_8)
    link_10 = module_0.Link(tuple_1, fragment=bool_7)
    var_9 = link_10.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = link_10.__repr__()
    assert var_11 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    var_12 = var_3.__eq__(link_7)
    var_13 = var_12.__repr__()


def test_case_695():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_0.__repr__()
    assert var_2 == "0"
    bool_1 = True
    dict_0 = {}
    none_type_1 = None
    float_0 = 2515.28653
    link_1 = module_0.Link(dict_0, none_type_1, float_0, none_type_1)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_4 = var_3.__eq__(bool_1)
    var_5 = var_4.__hash__()
    var_6 = var_5.__repr__()
    int_0 = 2105
    none_type_2 = None
    link_2 = module_0.Link(int_0, none_type_2)
    var_7 = link_2.__repr__()
    assert var_7 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_3 = module_0.Link(var_7, int_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_8 = link_3.__hash__()
    assert var_8 == -1122340555193368221
    var_9 = var_8.__repr__()
    assert var_9 == "-1122340555193368221"
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    var_10 = link_4.__repr__()
    assert var_10 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_5 = module_0.Link(var_10, nofollow=var_10)
    none_type_3 = None
    link_6 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_7 = module_0.Link(var_11, nofollow=link_6)
    var_12 = link_7.__hash__()
    assert var_12 == 4128530656735687579
    object_0 = module_1.object()
    link_8 = module_0.Link(object_0, fragment=object_0)
    var_13 = link_8.__hash__()
    assert var_13 == 0
    float_1 = 5.0
    link_9 = module_0.Link(float_1)
    none_type_4 = None
    link_10 = module_0.Link(none_type_4, link_9)
    var_14 = link_7.__repr__()
    assert (
        var_14
        == "Link(url=b\"Link(url=None, text=None, fragment='', nofollow=None)\", text='', fragment='', nofollow=Link(url=None, text=None, fragment='', nofollow=None))"
    )


def test_case_696():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    none_type_0 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_4 = module_0.Link(var_3, nofollow=var_3)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    int_0 = 3199
    link_5 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_4 = link_5.__hash__()
    assert var_4 == 3199
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_2)
    link_7 = module_0.Link(link_6)
    var_5 = link_7.__hash__()
    assert var_5 == -4606328870177462788
    bool_1 = True
    link_8 = module_0.Link(bool_1)
    var_6 = link_8.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_2)
    var_8 = var_7.__hash__()
    object_0 = module_1.object()
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, fragment=none_type_1)
    var_9 = link_9.__repr__()
    assert var_9 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_10 = var_9.__hash__()
    assert var_10 == 7957018345684386684
    var_11 = var_10.__repr__()
    assert var_11 == "7957018345684386684"
    link_10 = module_0.Link(object_0, var_11)
    var_12 = link_10.__repr__()
    object_1 = module_1.object()
    link_11 = module_0.Link(object_1, fragment=object_1)
    var_13 = link_11.__repr__()
    var_14 = link_11.__hash__()
    assert var_14 == 0
    float_0 = 5.0
    link_12 = module_0.Link(float_0)
    none_type_2 = None
    link_13 = module_0.Link(none_type_2, link_12)
    var_15 = link_13.__eq__(link_13)
    assert var_15 is True
    object_2 = module_1.object()
    link_14 = module_0.Link(object_2, fragment=object_2)
    link_15 = module_0.Link(object_2, none_type_2)
    link_16 = module_0.Link(link_9)


def test_case_697():
    complex_0 = 2717.25865 + 279.6823j
    bytes_0 = b"xC(\xd2O"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    link_0 = module_0.Link(set_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == -2938861455928792573
    var_2 = var_1.__hash__()
    assert var_2 == -633018446715098622
    var_3 = var_2.__eq__(complex_0)
    none_type_1 = None
    link_1 = module_0.Link(none_type_1, nofollow=none_type_1)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(url=None, text='', fragment='', nofollow=None)"
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_2 = None
    link_3 = module_0.Link(none_type_2, link_2)
    var_5 = link_3.__eq__(link_3)
    assert var_5 is True
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    link_5 = module_0.Link(object_0, none_type_2)
    float_1 = 5.0
    link_6 = module_0.Link(float_1)
    none_type_3 = None
    link_7 = module_0.Link(none_type_3, link_6)
    var_6 = link_7.__eq__(link_7)
    assert var_6 is True
    var_7 = link_6.__hash__()
    assert var_7 == 5
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_8 = module_0.Link(list_0, str_0)
    link_9 = module_0.Link(link_8)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_1)
    link_11 = module_0.Link(link_10)
    var_8 = link_11.__hash__()
    assert var_8 == -4606328870177462788
    bool_0 = True
    link_12 = module_0.Link(bool_0)
    var_9 = link_12.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_10 = var_8.__eq__(bytes_1)
    link_13 = module_0.Link(var_8)
    bool_1 = False
    link_14 = module_0.Link(bool_1)
    bool_2 = False
    link_15 = module_0.Link(bool_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_16 = module_0.Link(bytes_2, bytes_2)
    var_11 = link_16.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_17 = module_0.Link(bool_3, fragment=tuple_0)
    var_12 = link_17.__hash__()
    assert var_12 == -8753497827991233192
    link_18 = module_0.Link(var_12, var_12, nofollow=var_12)
    var_13 = link_18.__repr__()
    assert (
        var_13
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_14 = link_17.__repr__()
    assert var_14 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    var_15 = link_1.__hash__()
    assert var_15 == 0


def test_case_698():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_3 = module_0.Link(link_1)
    var_6 = link_1.__hash__()
    assert var_6 == 0


def test_case_699():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    object_1 = module_1.object()
    link_4 = module_0.Link(object_1, fragment=object_1)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_5 = module_0.Link(bytes_0)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_3 = var_2.__eq__(int_0)
    var_4 = var_3.__repr__()
    int_1 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_6 = module_0.Link(bytes_1)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_6 = var_5.__eq__(int_1)
    var_7 = var_6.__repr__()
    var_8 = var_7.__eq__(int_1)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_2)
    link_8 = module_0.Link(link_7)
    var_9 = link_8.__hash__()
    assert var_9 == -4606328870177462788
    bool_0 = True
    link_9 = module_0.Link(bool_0)
    var_10 = link_9.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_11 = var_9.__eq__(bytes_2)
    complex_0 = -2489 + 3297.83623j
    link_10 = module_0.Link(complex_0)
    var_12 = link_10.__hash__()
    assert var_12 == 1172959022599657258
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_3)
    link_12 = module_0.Link(link_11)
    var_13 = link_12.__hash__()
    assert var_13 == -4606328870177462788
    bool_1 = True
    link_13 = module_0.Link(bool_1)
    var_14 = link_13.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_15 = var_13.__eq__(bytes_3)
    link_14 = module_0.Link(var_15, var_15)
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_15 = module_0.Link(bool_2, fragment=tuple_0)
    var_16 = link_15.__hash__()
    assert var_16 == -8753497827991233192
    set_0 = {tuple_0, var_16, bool_3, bool_2}
    var_17 = var_16.__eq__(set_0)
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_16 = module_0.Link(bool_4, fragment=tuple_1)
    var_18 = link_16.__hash__()
    assert var_18 == -8753497827991233192
    link_17 = module_0.Link(var_18, var_18, nofollow=var_18)
    var_19 = link_17.__repr__()
    assert (
        var_19
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    float_1 = 5.0
    link_18 = module_0.Link(float_1)
    none_type_1 = None
    link_19 = module_0.Link(none_type_1, link_18)
    var_20 = link_19.__eq__(link_19)
    assert var_20 is True
    var_21 = var_7.__repr__()


def test_case_700():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    var_3 = var_2.__hash__()
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_0, var_4, bool_2, bool_1}
    var_5 = var_4.__eq__(set_0)
    bytes_1 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_6 = var_1.__eq__(var_4)


def test_case_701():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    bytes_0 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_0, nofollow=bytes_0)
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    var_2 = link_3.__hash__()
    assert var_2 == 0
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_2)
    link_6 = module_0.Link(link_5)
    var_3 = link_6.__hash__()
    assert var_3 == -4606328870177462788
    bool_1 = True
    link_7 = module_0.Link(bool_1)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_2)
    link_8 = module_0.Link(var_3)
    bool_2 = False
    link_9 = module_0.Link(bool_2)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_3, bytes_3)
    var_6 = link_10.__repr__()
    assert (
        var_6
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_11 = module_0.Link(bool_3)
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_12 = module_0.Link(var_6, bytes_3)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_4, bytes_4)
    bool_4 = True
    link_14 = module_0.Link(bool_4)
    var_8 = link_14.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_15 = module_0.Link(float_0, fragment=var_8)
    var_9 = link_14.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_5 = True
    link_16 = module_0.Link(bool_5, nofollow=bool_5)
    var_10 = link_16.__eq__(link_16)
    assert var_10 is True
    bool_6 = True
    bool_7 = False
    tuple_0 = (bool_6, bool_7)
    link_17 = module_0.Link(tuple_0, fragment=bool_6)
    var_11 = link_17.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    link_18 = module_0.Link(link_4, fragment=var_5, nofollow=var_5)


def test_case_702():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_2 = True
    link_2 = module_0.Link(bool_2)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_3 = module_0.Link(float_0, fragment=var_3)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0)
    var_5 = link_4.__hash__()
    assert var_5 == 0
    var_6 = var_5.__hash__()
    assert var_6 == 0
    var_7 = var_5.__eq__(var_5)
    bool_3 = True
    dict_0 = {}
    none_type_1 = None
    float_1 = 2515.28653
    link_5 = module_0.Link(dict_0, none_type_1, float_1, none_type_1)
    var_8 = link_5.__repr__()
    var_9 = var_8.__eq__(bool_3)
    var_10 = var_9.__hash__()
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_6 = module_0.Link(bytes_1)
    bool_4 = False
    link_7 = module_0.Link(bool_4)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_2, bytes_2)
    var_11 = link_8.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, fragment=none_type_2)
    var_12 = link_9.__hash__()
    assert var_12 == 0
    var_13 = var_12.__hash__()
    assert var_13 == 0
    var_14 = link_9.__repr__()
    assert var_14 == "Link(url=None, text='', fragment=None, nofollow=False)"
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_3)
    link_11 = module_0.Link(link_10)
    var_15 = link_11.__hash__()
    assert var_15 == -4606328870177462788
    var_16 = link_11.__repr__()
    assert (
        var_16
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_12 = module_0.Link(bool_5, fragment=tuple_1)
    var_17 = link_12.__hash__()
    assert var_17 == -8753497827991233192
    link_13 = module_0.Link(var_17, var_17, nofollow=var_17)
    var_18 = link_13.__repr__()
    assert (
        var_18
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_19 = link_12.__repr__()
    assert var_19 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    link_14 = module_0.Link(bytes_2)


def test_case_703():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__hash__()
    assert var_4 == 0
    var_5 = var_3.__eq__(var_3)
    none_type_1 = None
    none_type_2 = None
    link_2 = module_0.Link(none_type_2)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_7 = var_6.__hash__()
    assert var_7 == 2234852059487564994
    var_8 = var_7.__eq__(none_type_1)
    link_3 = module_0.Link(var_6, var_7, var_6)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    int_0 = 1870
    link_5 = module_0.Link(int_0)
    dict_0 = {link_5: link_5}
    link_6 = module_0.Link(dict_0, fragment=dict_0)
    var_9 = link_6.__repr__()
    assert (
        var_9
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_10 = var_9.__repr__()
    assert (
        var_10
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    none_type_3 = None
    bool_3 = False
    link_7 = module_0.Link(none_type_3, fragment=bool_3)
    var_11 = link_7.__repr__()
    assert var_11 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_12 = var_11.__hash__()
    assert var_12 == -5509142826951788791
    var_13 = var_12.__repr__()
    assert var_13 == "-5509142826951788791"
    var_14 = var_13.__repr__()
    assert var_14 == "'-5509142826951788791'"
    int_1 = 3199
    link_8 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_15 = link_8.__repr__()
    assert var_15 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_4 = False
    link_9 = module_0.Link(bool_4)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_0, bytes_0)
    var_16 = link_10.__repr__()
    assert (
        var_16
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_11 = module_0.Link(bool_5)
    var_17 = var_16.__repr__()
    assert (
        var_17
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    int_2 = 2105
    none_type_4 = None
    link_12 = module_0.Link(int_2, none_type_4)
    var_18 = link_12.__repr__()
    assert var_18 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_13 = module_0.Link(var_18, int_2)
    var_19 = link_13.__hash__()
    assert var_19 == -1122340555193368221
    var_20 = var_19.__repr__()
    assert var_20 == "-1122340555193368221"
    int_3 = 3199
    link_14 = module_0.Link(int_3, int_3, nofollow=int_3)
    var_21 = var_16.__hash__()
    assert var_21 == -8635037249155231917


def test_case_704():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_2 = link_3.__hash__()
    assert var_2 == 0
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_6 = module_0.Link(tuple_0, fragment=bool_2)
    var_3 = link_6.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    bool_4 = True
    link_8 = module_0.Link(bool_4)
    var_5 = link_8.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_9 = module_0.Link(float_1, fragment=var_5)
    none_type_0 = None
    bool_5 = True
    link_10 = module_0.Link(bool_5, nofollow=bool_5)
    var_6 = link_10.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    var_8 = var_6.__repr__()
    assert var_8 == "0"


def test_case_705():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = var_0.__eq__(var_0)
    none_type_1 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    link_3 = module_0.Link(link_2)
    none_type_2 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_4.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_7 = var_5.__repr__()
    var_8 = var_1.__eq__(var_0)
    link_6 = module_0.Link(var_6, fragment=var_6, nofollow=var_8)


def test_case_706():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    int_1 = 1870
    link_1 = module_0.Link(int_1)
    dict_0 = {link_1: link_1}
    link_2 = module_0.Link(dict_0, fragment=dict_0)
    var_0 = link_2.__repr__()
    assert (
        var_0
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_2 = var_0.__eq__(var_0)
    var_3 = var_2.__hash__()
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, link_3)
    int_2 = 3199
    link_5 = module_0.Link(int_2, int_2, nofollow=int_2)
    bytes_0 = b"-5164621852614943975"
    link_6 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_4 = link_6.__repr__()
    assert (
        var_4
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, fragment=none_type_1)
    var_5 = link_7.__hash__()
    assert var_5 == 0
    var_6 = var_5.__hash__()
    assert var_6 == 0
    var_7 = var_5.__eq__(var_5)
    var_8 = var_6.__hash__()
    assert var_8 == 0
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_8 = module_0.Link(bool_0, fragment=tuple_0)
    var_9 = link_8.__hash__()
    assert var_9 == -8753497827991233192
    complex_0 = 2717.25865 + 279.6823j
    bytes_1 = b"xC(\xd2O"
    set_0 = {bytes_1, bytes_1, bytes_1}
    none_type_2 = None
    link_9 = module_0.Link(set_0, none_type_2)
    var_10 = link_9.__repr__()
    assert var_10 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_11 = var_10.__hash__()
    assert var_11 == -2938861455928792573
    var_12 = var_11.__hash__()
    assert var_12 == -633018446715098622
    var_13 = var_12.__eq__(complex_0)
    float_1 = 5.0
    link_10 = module_0.Link(float_1)
    none_type_3 = None
    link_11 = module_0.Link(none_type_3, link_10)
    var_14 = link_11.__eq__(link_11)
    assert var_14 is True
    var_15 = link_10.__hash__()
    assert var_15 == 5
    int_3 = 1870
    link_12 = module_0.Link(int_3)
    dict_1 = {link_12: link_12}
    link_13 = module_0.Link(dict_1, fragment=dict_1)
    var_16 = link_13.__repr__()
    assert (
        var_16
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_17 = var_16.__repr__()
    assert (
        var_17
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    int_4 = 3199
    link_14 = module_0.Link(int_4, int_4, nofollow=int_4)
    var_18 = link_14.__repr__()
    assert var_18 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_2 = False
    link_15 = module_0.Link(none_type_3, fragment=bool_2)


def test_case_707():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = var_0.__eq__(var_0)
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    bool_0 = False
    link_3 = module_0.Link(bool_0)
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_4 = module_0.Link(bytes_0)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_3 = var_2.__eq__(int_0)
    var_4 = var_3.__repr__()
    var_5 = var_4.__eq__(int_0)
    var_6 = link_4.__hash__()
    assert var_6 == -6137318460250169149


def test_case_708():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_2 = link_2.__hash__()
    assert var_2 == -4606328870177462788
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_0)
    link_4 = module_0.Link(var_2)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_5 = link_6.__hash__()
    assert var_5 == -4606328870177462788
    bool_2 = True
    link_7 = module_0.Link(bool_2)
    var_6 = link_7.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_2, bytes_2)
    bool_3 = True
    link_9 = module_0.Link(bool_3)
    var_8 = link_9.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_10 = module_0.Link(float_0, fragment=var_8)
    var_9 = link_9.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_1 = None
    link_11 = module_0.Link(none_type_1, fragment=none_type_1)
    var_10 = link_11.__hash__()
    assert var_10 == 0
    var_11 = var_10.__hash__()
    assert var_11 == 0
    bool_4 = False
    link_12 = module_0.Link(bool_4)
    var_12 = link_12.__repr__()
    assert var_12 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_5 = False
    bool_6 = False
    tuple_0 = (bool_6,)
    link_13 = module_0.Link(bool_5, fragment=tuple_0)
    var_13 = link_13.__hash__()
    assert var_13 == -8753497827991233192
    link_14 = module_0.Link(var_13, var_13, nofollow=var_13)
    var_14 = link_14.__hash__()
    assert var_14 == -1835968800350151339
    var_15 = var_14.__hash__()
    assert var_15 == -1835968800350151339
    float_1 = 5.0
    link_15 = module_0.Link(float_1)
    none_type_2 = None
    link_16 = module_0.Link(none_type_2, link_15)
    var_16 = link_16.__eq__(link_16)
    assert var_16 is True
    bool_7 = False
    link_17 = module_0.Link(bool_7)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_18 = module_0.Link(bytes_3, bytes_3)
    var_17 = link_18.__repr__()
    assert (
        var_17
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_8 = False
    link_19 = module_0.Link(bool_8)
    var_18 = var_17.__repr__()
    assert (
        var_18
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_20 = module_0.Link(var_17, bytes_3)
    assert f"{type(link_20).__module__}.{type(link_20).__qualname__}" == "link.Link"
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_21 = module_0.Link(bytes_4, bytes_4)
    bool_9 = True
    link_22 = module_0.Link(bool_9)
    var_19 = link_22.__repr__()
    assert var_19 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_2 = 3106.326
    link_23 = module_0.Link(float_2, fragment=var_19)
    link_24 = module_0.Link(float_2, fragment=link_22)
    bool_10 = True
    dict_0 = {var_19: link_10, var_13: bool_10, link_13: link_17}
    var_20 = var_6.__eq__(dict_0)


def test_case_709():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=None)"
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, link_1)
    var_1 = link_2.__eq__(link_2)
    assert var_1 is True
    var_2 = link_1.__hash__()
    assert var_2 == 5
    none_type_2 = None
    bool_0 = True
    link_3 = module_0.Link(bool_0, nofollow=bool_0)
    var_3 = link_3.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_2)
    complex_0 = -2489 + 3297.83623j
    link_4 = module_0.Link(complex_0)
    var_5 = link_4.__hash__()
    assert var_5 == 1172959022599657258
    none_type_3 = None
    link_5 = module_0.Link(none_type_3, fragment=none_type_3)
    var_6 = link_5.__hash__()
    assert var_6 == 0
    var_7 = var_6.__hash__()
    assert var_7 == 0
    var_8 = var_6.__eq__(var_6)
    none_type_4 = None
    none_type_5 = None
    link_6 = module_0.Link(none_type_5)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_10 = var_9.__hash__()
    assert var_10 == 2234852059487564994
    var_11 = var_10.__eq__(none_type_4)
    link_7 = module_0.Link(var_9, var_10, var_9)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    int_0 = 3199
    link_8 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_13 = var_12.__hash__()
    assert var_13 == -3203539594471298528
    var_14 = var_8.__hash__()


def test_case_710():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_1 = module_0.Link(bool_2, fragment=tuple_1)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    link_2 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_5 = link_1.__repr__()
    assert var_5 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_4 = module_0.Link(var_6, nofollow=link_3)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    var_7 = var_6.__eq__(var_6)
    none_type_1 = None
    bool_4 = False
    link_5 = module_0.Link(none_type_1, fragment=bool_4)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == -5509142826951788791
    var_10 = var_9.__repr__()
    assert var_10 == "-5509142826951788791"
    var_11 = var_10.__repr__()
    assert var_11 == "'-5509142826951788791'"
    bool_5 = False
    link_6 = module_0.Link(bool_5)
    none_type_2 = None
    bool_6 = True
    link_7 = module_0.Link(bool_6, nofollow=bool_6)
    var_12 = link_7.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_0, bytes_0)
    var_14 = link_7.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_15 = link_7.__hash__()
    assert var_15 == 0
    int_0 = 1870
    link_9 = module_0.Link(int_0)
    dict_0 = {link_9: link_9}
    link_10 = module_0.Link(dict_0, fragment=dict_0)
    var_16 = link_10.__repr__()
    assert (
        var_16
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_17 = var_16.__repr__()
    assert (
        var_17
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_18 = var_16.__eq__(var_16)
    var_19 = var_18.__hash__()
    link_11 = module_0.Link(var_10, nofollow=link_8)


def test_case_711():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    var_3 = var_2.__hash__()
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_0)
    int_0 = 2105
    none_type_0 = None
    link_4 = module_0.Link(int_0, none_type_0)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_5 = module_0.Link(var_7, int_0)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_8 = link_5.__hash__()
    assert var_8 == -1122340555193368221
    var_9 = var_8.__repr__()
    assert var_9 == "-1122340555193368221"
    var_10 = var_2.__hash__()


def test_case_712():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=None)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_1 = link_2.__hash__()
    assert var_1 == -4606328870177462788
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_4 = module_0.Link(tuple_0, fragment=bool_0)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__hash__()
    assert var_5 == -552935834187556073
    var_6 = var_2.__repr__()
    assert (
        var_6
        == "'Link(url=Link(url=b\"\\\\xb3\\\\xa6L\\'#\\\\xe0\\\\x91\\\\t\", text=\\'\\', fragment=\\'\\', nofollow=False), text=\\'\\', fragment=\\'\\', nofollow=False)'"
    )


def test_case_713():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_1 = link_2.__hash__()
    assert var_1 == -4606328870177462788
    bool_0 = True
    link_3 = module_0.Link(bool_0)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_3 = var_1.__eq__(bytes_0)
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_5.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_6 = module_0.Link(bool_2)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_7 = module_0.Link(var_4, bytes_1)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    none_type_0 = None
    bool_3 = True
    link_8 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_8.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    link_9 = module_0.Link(link_8)
    link_10 = module_0.Link(var_6, fragment=none_type_0)
    none_type_1 = None
    bool_4 = True
    link_11 = module_0.Link(bool_4, nofollow=bool_4)
    var_8 = link_11.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_1)
    link_12 = module_0.Link(link_11)
    complex_0 = 2717.25865 + 279.6823j
    bytes_2 = b"xC(\xd2O"
    set_0 = {bytes_2, bytes_2, bytes_2}
    none_type_2 = None
    link_13 = module_0.Link(set_0, none_type_2)
    var_10 = link_13.__repr__()
    assert var_10 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_11 = var_10.__hash__()
    assert var_11 == -2938861455928792573
    var_12 = var_11.__hash__()
    assert var_12 == -633018446715098622
    var_13 = var_12.__eq__(complex_0)
    none_type_3 = None
    link_14 = module_0.Link(none_type_3, nofollow=none_type_3)
    var_14 = link_14.__repr__()
    assert var_14 == "Link(url=None, text='', fragment='', nofollow=None)"
    none_type_4 = None
    link_15 = module_0.Link(none_type_4, fragment=none_type_4, nofollow=none_type_4)
    bool_5 = False
    link_16 = module_0.Link(bool_5)
    var_15 = link_16.__repr__()
    assert var_15 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_17 = module_0.Link(var_15, nofollow=var_15)
    var_16 = var_15.__hash__()
    assert var_16 == -3936900723769714473
    var_17 = var_1.__hash__()
    assert var_17 == -2300485860963768837


def test_case_714():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    none_type_1 = None
    bool_1 = True
    link_2 = module_0.Link(bool_1, nofollow=bool_1)
    var_5 = link_2.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_2.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_8 = var_6.__repr__()
    var_9 = var_4.__eq__(none_type_0)
    var_10 = var_9.__eq__(var_4)
    var_11 = var_10.__eq__(link_3)


def test_case_715():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_1.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, link_2)
    object_1 = module_1.object()
    none_type_1 = None
    link_4 = module_0.Link(object_1, fragment=none_type_1)
    var_2 = link_4.__hash__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_0)
    link_6 = module_0.Link(link_5)
    var_3 = link_6.__hash__()
    assert var_3 == -4606328870177462788
    var_4 = link_6.__repr__()
    assert (
        var_4
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, fragment=none_type_2)
    var_5 = link_7.__hash__()
    assert var_5 == 0
    var_6 = var_5.__hash__()
    assert var_6 == 0
    none_type_3 = None
    bool_2 = True
    link_8 = module_0.Link(bool_2, nofollow=bool_2)
    var_7 = link_8.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_8.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_10 = module_0.Link(var_1)


def test_case_716():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    var_3 = var_2.__hash__()
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    var_4 = link_3.__repr__()
    var_5 = link_3.__hash__()
    assert var_5 == 0
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_6 = link_5.__hash__()
    assert var_6 == -4606328870177462788
    bool_1 = True
    link_6 = module_0.Link(bool_1)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_8 = var_6.__eq__(bytes_1)
    link_7 = module_0.Link(var_6)
    none_type_0 = None
    link_8 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_9 = link_8.__repr__()
    assert var_9 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_9 = module_0.Link(var_9, nofollow=link_8)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_10 = module_0.Link(float_0)
    none_type_1 = None
    link_11 = module_0.Link(none_type_1, link_10)
    int_0 = 3199
    link_12 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_2 = b"-5164621852614943975"
    link_13 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_10 = link_13.__repr__()
    assert (
        var_10
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    int_1 = 3199
    link_14 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_11 = link_14.__repr__()
    assert var_11 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    none_type_2 = None
    link_15 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_12 = link_15.__repr__()
    assert var_12 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_16 = module_0.Link(var_12, nofollow=link_15)
    var_13 = var_12.__eq__(var_12)
    link_17 = module_0.Link(link_9, link_7, nofollow=var_0)


def test_case_717():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 5
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__eq__(tuple_0)
    var_4 = var_3.__repr__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_5 = link_4.__hash__()
    assert var_5 == -4606328870177462788
    bool_3 = True
    link_5 = module_0.Link(bool_3)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_0)
    bool_4 = False
    link_6 = module_0.Link(bool_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_7.__repr__()
    assert (
        var_8
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_8 = module_0.Link(bool_5)
    var_9 = var_8.__repr__()
    assert (
        var_9
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_9 = module_0.Link(var_8, var_9, nofollow=link_7)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    var_10 = var_4.__repr__()


def test_case_718():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    var_1 = link_0.__hash__()
    assert var_1 == 5
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_1 = None
    none_type_2 = None
    link_3 = module_0.Link(none_type_2)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == 2234852059487564994
    var_5 = var_4.__eq__(none_type_1)
    link_4 = module_0.Link(var_3, var_4, var_3)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    var_6 = link_3.__hash__()
    assert var_6 == 477042


def test_case_719():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    var_0 = link_1.__hash__()
    assert var_0 == 5
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_1, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_2 = var_1.__eq__(var_1)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_4 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_4.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_0, var_3, bool_2, bool_1}
    var_4 = var_3.__eq__(set_0)
    link_5 = module_0.Link(set_0, fragment=var_3)


def test_case_720():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__hash__()
    assert var_3 == 0
    var_4 = var_2.__eq__(var_2)
    var_5 = var_3.__hash__()
    assert var_5 == 0
    var_6 = link_1.__eq__(link_0)
    assert var_6 is False


def test_case_721():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_0.__repr__()
    assert var_2 == "0"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_1 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_0, var_3, bool_2, bool_1}
    var_4 = var_3.__eq__(set_0)
    var_5 = link_1.__hash__()
    assert var_5 == -8753497827991233192
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    bool_3 = True
    link_3 = module_0.Link(bool_3)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_4 = module_0.Link(float_0, fragment=var_6)
    var_7 = link_3.__hash__()
    assert var_7 == 1


def test_case_722():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 5
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_1.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_2 = module_0.Link(bytes_0)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_5 = var_4.__eq__(int_0)
    var_6 = var_5.__repr__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_7 = link_4.__hash__()
    assert var_7 == -4606328870177462788
    bool_2 = True
    link_5 = module_0.Link(bool_2)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_1)
    float_1 = 5.0
    link_6 = module_0.Link(float_1)
    none_type_0 = None
    link_7 = module_0.Link(none_type_0, link_6)
    int_1 = 3199
    link_8 = module_0.Link(int_1, int_1, nofollow=int_1)
    bytes_2 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_10 = link_9.__repr__()
    assert (
        var_10
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_3)
    link_11 = module_0.Link(link_10)
    var_11 = link_11.__hash__()
    assert var_11 == -4606328870177462788
    var_12 = link_11.__repr__()
    assert (
        var_12
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    link_12 = module_0.Link(var_4, fragment=none_type_0)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"


def test_case_723():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_0.__hash__()
    assert var_1 == -8753497827991233192
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_4 = module_0.Link(var_2, nofollow=link_3)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_6.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_7 = module_0.Link(bool_3)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_8 = module_0.Link(var_3, var_4, nofollow=link_6)
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, fragment=none_type_1)
    var_5 = link_9.__hash__()
    assert var_5 == 0
    var_6 = var_5.__hash__()
    assert var_6 == 0
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2)
    var_7 = link_10.__hash__()
    assert var_7 == 0
    var_8 = var_7.__hash__()
    assert var_8 == 0
    var_9 = var_7.__eq__(var_7)
    var_10 = var_8.__hash__()
    assert var_10 == 0
    none_type_3 = None
    bool_4 = True
    link_11 = module_0.Link(bool_4, nofollow=bool_4)
    var_11 = link_11.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_2, bytes_2)
    var_13 = link_11.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_13 = module_0.Link(link_11)
    var_14 = var_8.__eq__(var_7)


def test_case_724():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, fragment=none_type_0)
    var_3 = link_3.__hash__()
    assert var_3 == 0
    var_4 = var_3.__hash__()
    assert var_4 == 0
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_1 = True
    link_5 = module_0.Link(bool_1, nofollow=bool_1)
    none_type_2 = None
    bool_2 = False
    link_6 = module_0.Link(none_type_2, fragment=bool_2)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == -5509142826951788791
    var_7 = var_6.__repr__()
    assert var_7 == "-5509142826951788791"
    var_8 = var_7.__repr__()
    assert var_8 == "'-5509142826951788791'"
    none_type_3 = None
    link_7 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_8 = module_0.Link(var_9, nofollow=link_7)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    var_10 = link_8.__hash__()
    assert var_10 == 4128530656735687579
    link_9 = module_0.Link(var_6)
    var_11 = link_9.__hash__()
    assert var_11 == -897456808524400889


def test_case_725():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = link_0.__repr__()
    assert (
        var_1
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )


def test_case_726():
    int_0 = 2105
    none_type_0 = None
    link_0 = module_0.Link(int_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, int_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == -1122340555193368221
    var_2 = var_1.__repr__()
    assert var_2 == "-1122340555193368221"
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__hash__()
    assert var_4 == 0
    bool_0 = True
    dict_0 = {}
    none_type_2 = None
    float_0 = 2515.28653
    link_3 = module_0.Link(dict_0, none_type_2, float_0, none_type_2)
    var_5 = link_3.__repr__()
    var_6 = var_5.__eq__(bool_0)
    var_7 = var_6.__hash__()
    var_8 = var_7.__repr__()
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_9 = link_4.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_5 = module_0.Link(bool_2, fragment=tuple_0)
    var_10 = link_5.__hash__()
    assert var_10 == -8753497827991233192
    link_6 = module_0.Link(var_10, var_10, nofollow=var_10)
    var_11 = link_6.__repr__()
    assert (
        var_11
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    float_1 = 5.0
    link_7 = module_0.Link(float_1)
    none_type_3 = None
    link_8 = module_0.Link(none_type_3, link_7)
    int_1 = 3199
    link_9 = module_0.Link(int_1, int_1, nofollow=int_1)
    bytes_0 = b"-5164621852614943975"
    link_10 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_12 = link_10.__repr__()
    assert (
        var_12
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_1, bytes_1)
    bool_4 = True
    link_12 = module_0.Link(bool_4)
    var_13 = link_12.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_2 = 3106.326
    link_13 = module_0.Link(float_2, fragment=var_13)
    link_14 = module_0.Link(float_2, fragment=link_12)
    float_3 = 5.0
    link_15 = module_0.Link(float_3)
    var_14 = var_3.__hash__()
    assert var_14 == 0


def test_case_727():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    var_3 = var_2.__repr__()
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    int_0 = 3199
    link_3 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_5 = var_4.__hash__()
    assert var_5 == -3203539594471298528
    var_6 = var_2.__hash__()


def test_case_728():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_3 = var_1.__repr__()
    assert var_3 == "'0'"


def test_case_729():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    var_1 = link_0.__hash__()
    assert var_1 == 0
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_1 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_2 = link_1.__repr__()
    var_3 = var_2.__eq__(bool_0)
    var_4 = var_3.__hash__()
    none_type_1 = None
    none_type_2 = None
    link_2 = module_0.Link(none_type_2)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == 2234852059487564994
    var_7 = var_6.__eq__(none_type_1)
    none_type_3 = None
    link_3 = module_0.Link(none_type_3)
    var_8 = link_3.__hash__()
    assert var_8 == 477042
    var_9 = var_8.__hash__()
    assert var_9 == 477042
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_10 = link_5.__repr__()
    assert (
        var_10
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_6 = module_0.Link(bool_2)
    var_11 = var_10.__repr__()
    assert (
        var_11
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_7 = module_0.Link(var_10, var_11, nofollow=link_5)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    int_0 = 3199
    link_8 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_9 = module_0.Link(bool_3, fragment=tuple_0)
    var_13 = link_9.__hash__()
    assert var_13 == -8753497827991233192
    link_10 = module_0.Link(var_13, var_13, nofollow=var_13)
    var_14 = link_9.__hash__()
    assert var_14 == -8753497827991233192
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_11 = module_0.Link(bool_5, fragment=tuple_1)
    var_15 = link_11.__hash__()
    assert var_15 == -8753497827991233192
    var_16 = link_11.__hash__()
    assert var_16 == -8753497827991233192


def test_case_730():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    var_1 = link_0.__hash__()
    assert var_1 == 5
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    none_type_1 = None
    link_3 = module_0.Link(link_2, fragment=none_type_1)
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    var_4 = link_4.__repr__()
    var_5 = link_4.__hash__()
    assert var_5 == 0
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    bool_2 = True
    link_6 = module_0.Link(bool_2)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_7 = module_0.Link(float_1, fragment=var_6)
    link_8 = module_0.Link(float_1, fragment=link_6)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_1)
    link_10 = module_0.Link(link_9)
    var_7 = link_10.__hash__()
    assert var_7 == -4606328870177462788
    bool_3 = True
    link_11 = module_0.Link(bool_3)
    var_8 = link_11.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_1)
    link_12 = module_0.Link(var_9, var_9)
    int_0 = 401
    link_13 = module_0.Link(int_0, int_0)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_14 = module_0.Link(tuple_1, fragment=bool_4)
    var_10 = link_14.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = link_14.__repr__()
    assert var_12 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bool_6 = True
    link_15 = module_0.Link(bool_6, nofollow=bool_6)
    var_13 = var_3.__hash__()
    assert var_13 == -8716866087637373422


def test_case_731():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_3 = var_1.__repr__()
    assert var_3 == "'0'"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    none_type_0 = None
    bool_3 = True
    link_3 = module_0.Link(bool_3, nofollow=bool_3)
    var_5 = link_3.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    link_4 = module_0.Link(link_3)
    link_5 = module_0.Link(var_5, fragment=none_type_0)
    none_type_1 = None
    bool_4 = True
    link_6 = module_0.Link(bool_4, nofollow=bool_4)
    var_7 = link_6.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_8 = module_0.Link(var_9, nofollow=var_9)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_9 = module_0.Link(tuple_1, fragment=bool_5)
    var_10 = link_9.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_1)
    var_13 = link_9.__hash__()
    assert var_13 == -5164621852614943975


def test_case_732():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_2 = module_0.Link(bytes_0)
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_3 = module_0.Link(bytes_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_4 = var_3.__eq__(int_0)
    var_5 = var_4.__repr__()
    var_6 = var_5.__eq__(int_0)
    bytes_2 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_2, nofollow=bytes_2)
    bytes_3 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_5 = module_0.Link(bytes_3, bytes_3)
    var_7 = link_5.__hash__()
    assert var_7 == 0
    var_8 = var_7.__repr__()
    assert var_8 == "0"
    var_9 = var_7.__hash__()
    assert var_9 == 0
    bool_2 = False
    link_6 = module_0.Link(bool_2)
    var_10 = var_8.__repr__()
    assert var_10 == "'0'"
    complex_0 = -2489 + 3297.83623j
    link_7 = module_0.Link(complex_0)
    var_11 = link_7.__hash__()
    assert var_11 == 1172959022599657258
    link_8 = module_0.Link(var_10, link_7, bool_1)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"


def test_case_733():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_0 = link_3.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    complex_0 = -2489 + 3297.83623j
    link_4 = module_0.Link(complex_0)
    var_1 = link_4.__hash__()
    assert var_1 == 1172959022599657258
    none_type_1 = None
    bool_0 = True
    link_5 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_5.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    link_6 = module_0.Link(link_5)
    link_7 = module_0.Link(var_2, fragment=none_type_1)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_8 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_8.__hash__()
    assert var_4 == -8753497827991233192
    link_9 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = link_9.__hash__()
    assert var_5 == -1835968800350151339
    var_6 = var_5.__hash__()
    assert var_6 == -1835968800350151339
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_10 = module_0.Link(tuple_1, fragment=bool_3)
    var_7 = link_10.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = link_10.__repr__()
    assert var_9 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    var_10 = link_2.__hash__()
    assert var_10 == 3199


def test_case_734():
    bool_0 = True
    link_0 = module_0.Link(bool_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 4729962515010671871
    var_2 = var_1.__repr__()
    assert var_2 == "4729962515010671871"
    link_1 = module_0.Link(var_2)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_3 = link_1.__hash__()
    assert var_3 == -6813877331771076914


def test_case_735():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    float_1 = 5.0
    link_4 = module_0.Link(float_1)
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, link_4)
    var_1 = link_5.__eq__(link_5)
    assert var_1 is True
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_6 = module_0.Link(bool_1, fragment=tuple_0)
    var_2 = link_6.__hash__()
    assert var_2 == -8753497827991233192
    link_7 = module_0.Link(var_2, var_2, nofollow=var_2)
    var_3 = link_7.__repr__()
    assert (
        var_3
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_4 = link_6.__repr__()
    assert var_4 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_1)
    link_9 = module_0.Link(link_8)
    var_5 = link_9.__hash__()
    assert var_5 == -4606328870177462788
    bool_3 = True
    link_10 = module_0.Link(bool_3)
    var_6 = link_10.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_1)
    var_8 = var_7.__hash__()
    var_9 = link_5.__repr__()
    assert (
        var_9
        == "Link(url=None, text=Link(url=5.0, text='', fragment='', nofollow=False), fragment='', nofollow=False)"
    )


def test_case_736():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__hash__()
    assert var_1 == 477042
    bool_0 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_1 = module_0.Link(var_1, fragment=bool_0, nofollow=complex_0)
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_2 = module_0.Link(bytes_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_3 = var_2.__eq__(int_0)
    var_4 = var_3.__repr__()
    bytes_1 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_5 = link_3.__hash__()
    assert var_5 == 0
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    complex_1 = 2717.25865 + 279.6823j
    bytes_2 = b"xC(\xd2O"
    set_0 = {bytes_2, bytes_2, bytes_2}
    none_type_2 = None
    link_5 = module_0.Link(set_0, none_type_2)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_7 = var_6.__hash__()
    assert var_7 == -2938861455928792573
    var_8 = var_7.__hash__()
    assert var_8 == -633018446715098622
    var_9 = var_8.__eq__(complex_1)
    link_6 = module_0.Link(var_3, nofollow=var_3)


def test_case_737():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_3 = module_0.Link(bool_4, fragment=tuple_2)
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    link_4 = module_0.Link(var_5, var_5, nofollow=var_5)
    var_6 = link_3.__hash__()
    assert var_6 == -8753497827991233192
    bool_6 = False
    bool_7 = False
    tuple_3 = (bool_7,)
    link_5 = module_0.Link(bool_6, fragment=tuple_3)
    var_7 = link_5.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_3, var_7, bool_7, bool_6}
    var_8 = var_7.__eq__(set_0)
    var_9 = link_5.__hash__()
    assert var_9 == -8753497827991233192
    var_10 = link_5.__hash__()
    assert var_10 == -8753497827991233192
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_0)
    link_7 = module_0.Link(link_6)
    var_11 = link_7.__hash__()
    assert var_11 == -4606328870177462788
    var_12 = var_11.__hash__()
    assert var_12 == -2300485860963768837
    int_0 = 3199
    link_8 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_13 = var_1.__repr__()
    assert var_13 == "'-5164621852614943975'"
    var_14 = var_13.__eq__(tuple_1)


def test_case_738():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_3 = module_0.Link(bytes_0)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_2 = var_1.__eq__(int_0)
    var_3 = var_2.__repr__()
    var_4 = var_3.__eq__(int_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_4 = module_0.Link(bool_1, fragment=tuple_0)
    var_5 = link_4.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_0, var_5, bool_2, bool_1}
    var_6 = var_5.__eq__(set_0)
    bool_3 = False
    link_5 = module_0.Link(bool_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_6.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_7 = module_0.Link(bool_4)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    var_9 = var_0.__repr__()
    assert var_9 == "\"Link(url=True, text='', fragment='', nofollow=False)\""


def test_case_739():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_0)
    var_7 = var_6.__repr__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_8 = link_4.__hash__()
    assert var_8 == -4606328870177462788
    bool_3 = True
    link_5 = module_0.Link(bool_3)
    var_9 = link_5.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_10 = var_8.__eq__(bytes_1)
    link_6 = module_0.Link(var_10, var_10)
    none_type_1 = None
    bool_4 = True
    link_7 = module_0.Link(bool_4, nofollow=bool_4)
    var_11 = link_7.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_2, bytes_2)
    var_13 = link_7.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_9 = module_0.Link(link_7)
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_10 = module_0.Link(bool_5, fragment=tuple_1)
    var_14 = link_10.__hash__()
    assert var_14 == -8753497827991233192
    link_11 = module_0.Link(var_14, var_14, nofollow=var_14)
    var_15 = link_10.__hash__()
    assert var_15 == -8753497827991233192
    bool_7 = False
    link_12 = module_0.Link(bool_7)
    none_type_2 = None
    link_13 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_8 = True
    bool_9 = False
    tuple_2 = (bool_8, bool_9)
    link_14 = module_0.Link(tuple_2, fragment=bool_8)
    var_16 = link_14.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    var_18 = var_16.__hash__()
    assert var_18 == -552935834187556073
    int_0 = 1870
    link_15 = module_0.Link(int_0)
    dict_1 = {link_15: link_15}
    link_16 = module_0.Link(dict_1, fragment=dict_1)
    var_19 = link_16.__repr__()
    assert (
        var_19
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_20 = var_19.__repr__()
    assert (
        var_20
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_17 = module_0.Link(bytes_3, bytes_3)
    bool_10 = True
    link_18 = module_0.Link(bool_10)
    var_21 = link_18.__repr__()
    assert var_21 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_19 = module_0.Link(float_1, fragment=var_21)
    var_22 = var_2.__repr__()


def test_case_740():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    link_0 = module_0.Link(list_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_741():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == 4128530656735687579
    none_type_1 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_5 = link_2.__hash__()
    assert var_5 == 0
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    object_0 = module_1.object()
    none_type_2 = None
    link_5 = module_0.Link(none_type_2, fragment=none_type_2)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_7 = var_6.__hash__()
    assert var_7 == 7957018345684386684
    var_8 = var_7.__repr__()
    assert var_8 == "7957018345684386684"
    link_6 = module_0.Link(object_0, var_8)
    var_9 = link_6.__repr__()
    int_0 = 3199
    link_7 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_10 = link_7.__repr__()
    assert var_10 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_11 = var_10.__hash__()
    assert var_11 == -3203539594471298528
    bytes_1 = b"-5164621852614943975"
    link_8 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_12 = link_8.__repr__()
    assert (
        var_12
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_9 = module_0.Link(bool_2, fragment=tuple_0)
    var_13 = link_9.__hash__()
    assert var_13 == -8753497827991233192
    link_10 = module_0.Link(var_13, var_13, nofollow=var_13)
    float_0 = 5.0
    link_11 = module_0.Link(float_0)
    var_14 = link_11.__hash__()
    assert var_14 == 5
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_2)
    link_13 = module_0.Link(link_12)
    var_15 = link_13.__hash__()
    assert var_15 == -4606328870177462788
    var_16 = var_15.__hash__()
    assert var_16 == -2300485860963768837
    none_type_3 = None
    link_14 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_17 = link_14.__repr__()
    assert var_17 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_15 = module_0.Link(var_17, nofollow=link_14)
    var_18 = link_4.__hash__()
    assert var_18 == 0


def test_case_742():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_4 = module_0.Link(bool_3)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_1, fragment=bool_4)
    var_5 = link_5.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__eq__(tuple_1)
    var_8 = var_7.__repr__()
    bool_6 = False
    bool_7 = False
    tuple_2 = (bool_7,)
    link_6 = module_0.Link(bool_6, fragment=tuple_2)
    var_9 = link_6.__hash__()
    assert var_9 == -8753497827991233192
    link_7 = module_0.Link(var_9, var_9, nofollow=var_9)
    var_10 = var_9.__hash__()
    assert var_10 == -1835968800350151339


def test_case_743():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__hash__()
    assert var_2 == 0
    var_3 = var_1.__eq__(var_1)
    var_4 = var_2.__hash__()
    assert var_4 == 0
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, nofollow=none_type_1)
    var_5 = var_1.__repr__()
    assert var_5 == "0"


def test_case_744():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_3 = var_1.__repr__()
    assert var_3 == "'0'"
    link_2 = module_0.Link(bool_0, var_2, var_0)


def test_case_745():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    var_3 = link_3.__repr__()
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_5 = module_0.Link(var_4, nofollow=var_4)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_7 = module_0.Link(var_5, nofollow=link_6)
    var_6 = var_5.__eq__(var_5)
    bool_2 = True
    link_8 = module_0.Link(bool_2, nofollow=bool_2)
    var_7 = link_8.__eq__(link_8)
    assert var_7 is True
    link_9 = module_0.Link(bytes_0, fragment=bool_2, nofollow=none_type_0)


def test_case_746():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_1)
    var_2 = var_0.__eq__(bytes_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_3 = module_0.Link(tuple_0, fragment=bool_0)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__hash__()
    assert var_5 == -552935834187556073
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_4 = module_0.Link(bool_2, fragment=tuple_1)
    var_6 = link_4.__hash__()
    assert var_6 == -8753497827991233192
    link_5 = module_0.Link(var_6, var_6, nofollow=var_6)
    var_7 = link_5.__repr__()
    assert (
        var_7
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_8 = link_4.__repr__()
    assert var_8 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, fragment=none_type_1)
    var_9 = link_6.__hash__()
    assert var_9 == 0
    var_10 = var_9.__hash__()
    assert var_10 == 0
    var_11 = var_9.__eq__(var_9)
    var_12 = var_10.__hash__()
    assert var_12 == 0
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_7 = module_0.Link(bytes_2)
    link_8 = module_0.Link(link_7)
    int_0 = 2105
    none_type_2 = None
    link_9 = module_0.Link(int_0, none_type_2)
    var_13 = link_9.__repr__()
    assert var_13 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_10 = module_0.Link(var_13, int_0)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    var_14 = link_10.__hash__()
    assert var_14 == -1122340555193368221
    var_15 = var_14.__repr__()
    assert var_15 == "-1122340555193368221"
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_11 = module_0.Link(bool_4, fragment=tuple_2)
    var_16 = link_11.__hash__()
    assert var_16 == -8753497827991233192
    set_0 = {tuple_2, var_16, bool_5, bool_4}
    var_17 = var_16.__eq__(set_0)
    none_type_3 = None
    link_12 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_18 = link_12.__repr__()
    assert var_18 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_13 = module_0.Link(var_18, nofollow=link_12)
    var_19 = link_13.__hash__()
    assert var_19 == 4128530656735687579
    bytes_3 = b"-5164621852614943975"
    link_14 = module_0.Link(bytes_3, nofollow=bytes_3)
    var_20 = link_14.__hash__()
    assert var_20 == 0
    var_21 = link_14.__repr__()
    assert (
        var_21
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_6 = True
    bool_7 = False
    tuple_3 = (bool_6, bool_7)
    link_15 = module_0.Link(tuple_3, fragment=bool_6)
    var_22 = link_15.__hash__()
    assert var_22 == -5164621852614943975
    var_23 = var_22.__repr__()
    assert var_23 == "-5164621852614943975"
    var_24 = var_22.__repr__()
    assert var_24 == "-5164621852614943975"
    none_type_4 = None
    link_16 = module_0.Link(none_type_4, bool_7)
    link_17 = module_0.Link(var_19, fragment=bool_2)


def test_case_747():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    complex_0 = -2489 + 3297.83623j
    link_2 = module_0.Link(complex_0)
    var_1 = link_2.__hash__()
    assert var_1 == 1172959022599657258
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_4 = module_0.Link(bool_2, fragment=tuple_1)
    var_2 = link_4.__hash__()
    assert var_2 == -8753497827991233192
    link_5 = module_0.Link(var_2, var_2, nofollow=var_2)
    var_3 = link_5.__hash__()
    assert var_3 == -1835968800350151339
    var_4 = var_3.__hash__()
    assert var_4 == -1835968800350151339
    var_5 = link_0.__hash__()
    assert var_5 == -8753497827991233192


def test_case_748():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_1 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_5 = module_0.Link(var_4, nofollow=var_4)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_5 = var_4.__hash__()
    assert var_5 == -3936900723769714473
    var_6 = var_3.__repr__()
    assert var_6 == "0"
    var_7 = var_6.__repr__()
    assert var_7 == "'0'"


def test_case_749():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_750():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_1 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_0, var_1, bool_2, bool_1}
    var_2 = var_1.__eq__(set_0)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    var_4 = var_2.__repr__()


def test_case_751():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_1 = link_3.__hash__()
    assert var_1 == -4606328870177462788
    var_2 = var_1.__hash__()
    assert var_2 == -2300485860963768837
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )


def test_case_752():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    link_2 = module_0.Link(link_0)


def test_case_753():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, nofollow=none_type_0)
    none_type_1 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_3.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_4 = link_3.__hash__()
    assert var_4 == 0
    object_0 = module_1.object()
    none_type_2 = None
    link_5 = module_0.Link(object_0, fragment=none_type_2)
    var_5 = link_5.__hash__()
    none_type_3 = None
    bool_2 = True
    link_6 = module_0.Link(bool_2, nofollow=bool_2)
    var_6 = link_6.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_3)
    link_7 = module_0.Link(link_6)
    link_8 = module_0.Link(var_6, fragment=none_type_3)
    bool_3 = True
    list_0 = [bool_3, bool_3, bool_3]
    link_9 = module_0.Link(list_0)
    none_type_4 = None
    link_10 = module_0.Link(none_type_4, nofollow=none_type_4)
    var_8 = link_10.__repr__()
    assert var_8 == "Link(url=None, text='', fragment='', nofollow=None)"
    complex_0 = 2717.25865 + 279.6823j
    bytes_2 = b"xC(\xd2O"
    set_0 = {bytes_2, bytes_2, bytes_2}
    none_type_5 = None
    link_11 = module_0.Link(set_0, none_type_5)
    var_9 = link_11.__repr__()
    assert var_9 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_10 = var_9.__hash__()
    assert var_10 == -2938861455928792573
    var_11 = var_10.__hash__()
    assert var_11 == -633018446715098622
    var_12 = var_11.__eq__(complex_0)
    link_12 = module_0.Link(link_5)


def test_case_754():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0, link_0)


def test_case_755():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    link_2 = module_0.Link(var_0, fragment=none_type_0)
    int_0 = 1870
    link_3 = module_0.Link(int_0)
    dict_0 = {link_3: link_3}
    link_4 = module_0.Link(dict_0, fragment=dict_0)
    var_2 = link_4.__repr__()
    assert (
        var_2
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_4 = var_2.__eq__(var_2)
    var_5 = var_4.__hash__()
    none_type_1 = None
    bool_1 = True
    link_5 = module_0.Link(bool_1, nofollow=bool_1)
    var_6 = link_5.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_1)
    var_8 = var_6.__repr__()
    assert var_8 == "0"
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    var_9 = link_6.__hash__()
    assert var_9 == 5
    var_10 = link_5.__hash__()
    assert var_10 == 0


def test_case_756():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_3.__eq__(link_3)
    assert var_4 is True
    object_0 = module_1.object()
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == 7957018345684386684
    var_7 = var_6.__repr__()
    assert var_7 == "7957018345684386684"
    link_5 = module_0.Link(object_0, var_7)
    var_8 = link_5.__repr__()
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_6.__hash__()
    assert var_9 == 0
    var_10 = var_9.__repr__()
    assert var_10 == "0"
    var_11 = var_9.__hash__()
    assert var_11 == 0
    bool_2 = False
    link_7 = module_0.Link(bool_2)
    var_12 = link_7.__repr__()
    assert var_12 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_13 = link_6.__repr__()
    assert (
        var_13
        == "Link(url=b'T.\\xf7\\xc9\\x14\\xb1\\xcb\\xfd\\xaf', text=b'T.\\xf7\\xc9\\x14\\xb1\\xcb\\xfd\\xaf', fragment='', nofollow=False)"
    )


def test_case_757():
    bool_0 = True
    link_0 = module_0.Link(bool_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 4729962515010671871
    var_2 = var_1.__repr__()
    assert var_2 == "4729962515010671871"
    link_1 = module_0.Link(var_2)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_3 = link_1.__hash__()
    assert var_3 == -6813877331771076914
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    none_type_0 = None
    bool_3 = True
    link_5 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_5.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_9 = link_5.__hash__()
    assert var_9 == 0
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, nofollow=none_type_1)
    var_10 = link_7.__repr__()
    assert var_10 == "Link(url=None, text='', fragment='', nofollow=None)"
    bool_4 = False
    link_8 = module_0.Link(bool_4)
    var_11 = link_8.__hash__()
    assert var_11 == 0
    var_12 = var_9.__repr__()
    assert var_12 == "0"


def test_case_758():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    link_3 = module_0.Link(var_0, nofollow=link_2)


def test_case_759():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0)
    var_1 = var_0.__eq__(var_0)


def test_case_760():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    none_type_0 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    link_5 = module_0.Link(link_4)
    int_0 = 1870
    link_6 = module_0.Link(int_0)
    dict_0 = {link_6: link_6}
    link_7 = module_0.Link(dict_0, fragment=dict_0)
    var_3 = link_7.__repr__()
    assert (
        var_3
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_5 = var_3.__eq__(var_3)
    var_6 = var_5.__hash__()
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    bytes_2 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_7 = link_9.__repr__()
    assert (
        var_7
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_10 = module_0.Link(bool_2, fragment=tuple_0)
    var_8 = link_10.__hash__()
    assert var_8 == -8753497827991233192
    link_11 = module_0.Link(var_8, var_8, nofollow=var_8)
    int_1 = 36
    bytes_3 = b"\xeb\xdc\xa3"
    link_12 = module_0.Link(bytes_3)
    var_9 = link_12.__repr__()
    assert var_9 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_10 = var_9.__eq__(int_1)
    var_11 = var_10.__repr__()
    bytes_4 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_13 = module_0.Link(bytes_4)
    object_0 = module_1.object()
    link_14 = module_0.Link(object_0, fragment=object_0)
    var_12 = link_14.__hash__()
    assert var_12 == 0
    none_type_1 = None
    bool_4 = True
    link_15 = module_0.Link(bool_4, nofollow=bool_4)
    var_13 = link_15.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_1)
    var_15 = var_13.__repr__()
    assert var_15 == "0"
    var_16 = link_9.__hash__()
    assert var_16 == 0


def test_case_761():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__hash__()
    assert var_1 == 477042
    bool_0 = True
    link_1 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    var_2 = link_1.__hash__()
    assert var_2 == 1
    none_type_1 = None
    link_2 = module_0.Link(none_type_1)
    var_3 = link_2.__hash__()
    assert var_3 == 477042
    var_4 = var_3.__hash__()
    assert var_4 == 477042
    bool_1 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_3 = module_0.Link(var_4, fragment=bool_1, nofollow=complex_0)
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_5 = module_0.Link(var_5, nofollow=var_5)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_6 = module_0.Link(bytes_0)
    link_7 = module_0.Link(link_6)
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, fragment=none_type_2)
    var_6 = link_8.__hash__()
    assert var_6 == 0
    var_7 = var_6.__hash__()
    assert var_7 == 0
    none_type_3 = None
    link_9 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    bool_3 = False
    link_10 = module_0.Link(bool_3)
    var_8 = link_10.__repr__()
    assert var_8 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_11 = module_0.Link(var_8, nofollow=var_8)
    var_9 = var_8.__hash__()
    assert var_9 == -3936900723769714473
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_1)
    link_13 = module_0.Link(link_12)
    var_10 = link_13.__hash__()
    assert var_10 == -4606328870177462788
    bool_4 = True
    link_14 = module_0.Link(bool_4)
    var_11 = link_14.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_12 = var_10.__eq__(bytes_1)
    link_15 = module_0.Link(var_12, var_12)
    none_type_4 = None
    link_16 = module_0.Link(none_type_4, none_type_4, nofollow=none_type_4)
    var_13 = link_16.__repr__()
    assert var_13 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_17 = module_0.Link(var_13, nofollow=link_16)
    var_14 = var_13.__eq__(var_13)
    var_15 = link_2.__eq__(link_6)
    assert var_15 is False


def test_case_762():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_3 = var_0.__repr__()
    assert var_3 == "-4606328870177462788"


def test_case_763():
    bool_0 = True
    bool_1 = True
    bytes_0 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -6712542186422229073
    var_1 = var_0.__repr__()
    assert var_1 == "-6712542186422229073"
    var_2 = var_1.__eq__(bool_1)
    var_3 = var_2.__hash__()
    var_4 = var_3.__eq__(bool_0)


def test_case_764():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_2.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=False, text='', fragment='', nofollow=False)"
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, link_4)
    var_2 = link_5.__eq__(link_5)
    assert var_2 is True
    bytes_1 = b"-5164621852614943975"
    link_6 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_3 = link_6.__repr__()
    assert (
        var_3
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    int_0 = 2105
    none_type_1 = None
    link_7 = module_0.Link(int_0, none_type_1)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_8 = module_0.Link(var_4, int_0)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    var_5 = link_8.__hash__()
    assert var_5 == -1122340555193368221
    var_6 = var_5.__repr__()
    assert var_6 == "-1122340555193368221"
    link_9 = module_0.Link(var_3)


def test_case_765():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_2 = True
    link_2 = module_0.Link(bool_2)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_3 = module_0.Link(float_0, fragment=var_3)
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_4 = link_4.__hash__()
    assert var_4 == 3199
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_5 = link_6.__hash__()
    assert var_5 == -4606328870177462788
    var_6 = var_5.__hash__()
    assert var_6 == -2300485860963768837
    bool_3 = False
    link_7 = module_0.Link(bool_3)
    var_7 = link_7.__repr__()
    assert var_7 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_8 = var_5.__repr__()
    assert var_8 == "-4606328870177462788"
    var_9 = link_1.__repr__()
    assert (
        var_9
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )


def test_case_766():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, bool_1)
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_2 = None
    link_4 = module_0.Link(none_type_2, link_3)
    var_3 = link_4.__eq__(link_4)
    assert var_3 is True
    var_4 = link_3.__hash__()
    assert var_4 == 5
    none_type_3 = None
    bool_2 = True
    link_5 = module_0.Link(bool_2, nofollow=bool_2)
    var_5 = link_5.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_3)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_8 = var_6.__repr__()
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_1, fragment=bool_3)
    var_9 = link_7.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__repr__()
    assert var_11 == "-5164621852614943975"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_1)
    link_9 = module_0.Link(link_8)
    var_12 = link_9.__hash__()
    assert var_12 == -4606328870177462788
    bool_5 = True
    link_10 = module_0.Link(bool_5)
    var_13 = link_10.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_14 = var_12.__eq__(bytes_1)
    var_15 = var_14.__hash__()
    none_type_4 = None
    bool_6 = True
    link_11 = module_0.Link(bool_6, nofollow=bool_6)
    var_16 = link_11.__hash__()
    assert var_16 == 0
    var_17 = var_16.__eq__(none_type_4)
    var_18 = var_16.__repr__()
    assert var_18 == "0"
    bool_7 = True
    list_0 = [bool_7, bool_7, bool_7]
    link_12 = module_0.Link(list_0)
    none_type_5 = None
    bool_8 = True
    link_13 = module_0.Link(bool_8, nofollow=bool_8)
    var_19 = link_13.__hash__()
    assert var_19 == 0
    var_20 = var_19.__eq__(none_type_5)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_14 = module_0.Link(bytes_2, bytes_2)
    var_21 = link_13.__repr__()
    assert var_21 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_22 = link_13.__hash__()
    assert var_22 == 0
    var_23 = var_14.__eq__(none_type_2)
    var_24 = var_23.__eq__(var_9)


def test_case_767():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 3199
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_0, var_1, bool_1, bool_0}
    var_2 = var_1.__eq__(set_0)
    none_type_0 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    none_type_1 = None
    none_type_2 = None
    link_3 = module_0.Link(none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == 2234852059487564994
    var_7 = var_6.__eq__(none_type_1)
    link_4 = module_0.Link(var_5, var_6, var_5)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    none_type_3 = None
    link_5 = module_0.Link(none_type_3, fragment=none_type_3)
    var_8 = link_5.__hash__()
    assert var_8 == 0
    var_9 = var_8.__hash__()
    assert var_9 == 0
    var_10 = var_8.__eq__(var_8)
    bool_3 = False
    link_6 = module_0.Link(bool_3)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_0, bytes_0)
    var_11 = link_7.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_8 = module_0.Link(bool_4)
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_9 = module_0.Link(var_11, var_12, nofollow=link_7)
    none_type_4 = None
    bool_5 = True
    link_10 = module_0.Link(bool_5, nofollow=bool_5)
    var_13 = link_10.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_1, bytes_1)
    var_15 = link_10.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_12 = module_0.Link(var_15, nofollow=var_15)
    bool_6 = True
    bool_7 = False
    tuple_1 = (bool_6, bool_7)
    link_13 = module_0.Link(tuple_1, fragment=bool_6)
    var_16 = link_13.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    var_18 = link_13.__repr__()
    assert var_18 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    var_19 = link_10.__repr__()
    assert var_19 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_768():
    str_0 = "Dmfv; iJ001\n"
    none_type_0 = None
    link_0 = module_0.Link(str_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_1 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_1)
    var_2 = var_0.__repr__()
    assert var_2 == "0"
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_4 = var_3.__hash__()
    assert var_4 == -3203539594471298528
    none_type_2 = None
    none_type_3 = None
    link_3 = module_0.Link(none_type_3)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == 2234852059487564994
    var_7 = var_6.__eq__(none_type_2)
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_4 = None
    link_5 = module_0.Link(none_type_4, link_4)
    var_8 = link_5.__eq__(link_5)
    assert var_8 is True
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    link_7 = module_0.Link(object_0, none_type_4)
    none_type_5 = None
    bool_1 = True
    link_8 = module_0.Link(bool_1, nofollow=bool_1)
    var_9 = link_8.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_5)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_0, bytes_0)
    var_11 = link_8.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_12 = link_8.__hash__()
    assert var_12 == 0
    none_type_6 = None
    bool_2 = True
    link_10 = module_0.Link(bool_2, nofollow=bool_2)
    var_13 = link_10.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_6)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_1, bytes_1)
    var_15 = link_10.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_12 = module_0.Link(link_10)
    int_1 = 3199
    link_13 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_16 = link_13.__repr__()
    assert var_16 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_14 = module_0.Link(bytes_2)
    link_15 = module_0.Link(link_14)
    var_17 = link_15.__hash__()
    assert var_17 == -4606328870177462788
    var_18 = link_15.__repr__()
    assert (
        var_18
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    var_19 = var_3.__repr__()
    assert var_19 == "\"Link(url=3199, text=3199, fragment='', nofollow=3199)\""


def test_case_769():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    none_type_0 = None
    none_type_1 = None
    link_1 = module_0.Link(none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_3 = var_2.__hash__()
    assert var_3 == 2234852059487564994
    var_4 = var_3.__eq__(none_type_0)
    var_5 = var_0.__hash__()
    assert var_5 == 0
    var_6 = var_5.__repr__()
    assert var_6 == "0"


def test_case_770():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_1)
    var_2 = var_0.__eq__(bytes_0)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_3 = link_2.__hash__()
    assert var_3 == 3199
    bytes_2 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_0 = False
    link_5 = module_0.Link(bool_0)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_6 = module_0.Link(var_5, nofollow=var_5)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    var_6 = var_5.__hash__()
    assert var_6 == -3936900723769714473
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_3)
    link_8 = module_0.Link(link_7)
    var_7 = link_8.__hash__()
    assert var_7 == -4606328870177462788
    var_8 = var_7.__hash__()
    assert var_8 == -2300485860963768837
    var_9 = var_4.__repr__()
    assert (
        var_9
        == "\"Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')\""
    )


def test_case_771():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_1 = module_0.Link(var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"


def test_case_772():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_0 = link_3.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_1 = None
    bool_0 = True
    link_4 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_6 = module_0.Link(link_4)
    none_type_2 = None
    none_type_3 = None
    link_7 = module_0.Link(none_type_3)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_5 = var_4.__hash__()
    assert var_5 == 2234852059487564994
    var_6 = var_5.__eq__(none_type_2)
    link_8 = module_0.Link(var_4, var_5, var_4)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    var_7 = var_1.__eq__(link_0)


def test_case_773():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_1.__hash__()
    assert var_0 == -8753497827991233192
    link_2 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    bool_2 = True
    bool_3 = True
    bytes_0 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_3 = module_0.Link(bytes_0)
    var_2 = link_3.__hash__()
    assert var_2 == -6712542186422229073
    var_3 = var_2.__repr__()
    assert var_3 == "-6712542186422229073"
    var_4 = var_3.__eq__(bool_3)
    var_5 = var_4.__hash__()
    var_6 = var_5.__eq__(bool_2)
    var_7 = link_2.__eq__(link_3)
    assert var_7 is False


def test_case_774():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == 4128530656735687579
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_0 = False
    link_4 = module_0.Link(bool_0)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_5 = module_0.Link(var_2, nofollow=var_2)
    link_6 = module_0.Link(var_2, nofollow=link_5)
    bool_1 = False
    link_7 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_8.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    object_0 = module_1.object()
    none_type_2 = None
    link_9 = module_0.Link(object_0, fragment=none_type_2)
    var_4 = link_9.__hash__()
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    bool_2 = True
    link_11 = module_0.Link(bool_2)
    var_5 = link_11.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_12 = module_0.Link(float_0, fragment=var_5)
    link_13 = module_0.Link(float_0, fragment=link_11)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_14 = module_0.Link(tuple_0, fragment=bool_3)
    var_6 = link_14.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    none_type_3 = None
    link_15 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    var_9 = var_6.__hash__()
    assert var_9 == -552935834187556073


def test_case_775():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    int_0 = 1870
    link_2 = module_0.Link(int_0)
    dict_0 = {link_2: link_2}
    link_3 = module_0.Link(dict_0, fragment=dict_0)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_4 = module_0.Link(bool_2, fragment=tuple_1)
    var_4 = link_4.__hash__()
    assert var_4 == -8753497827991233192
    link_5 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = var_2.__hash__()
    assert var_5 == -1330032713739969745


def test_case_776():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    bool_0 = True
    link_4 = module_0.Link(bool_0, nofollow=bool_0)
    complex_0 = -2489 + 3297.83623j
    link_5 = module_0.Link(complex_0)
    var_1 = link_5.__hash__()
    assert var_1 == 1172959022599657258
    object_1 = module_1.object()
    link_6 = module_0.Link(object_1, fragment=object_1)
    var_2 = link_6.__hash__()
    assert var_2 == 0
    none_type_1 = None
    bool_1 = True
    link_7 = module_0.Link(bool_1, nofollow=bool_1)
    var_3 = link_7.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    link_8 = module_0.Link(link_7)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_9 = module_0.Link(tuple_0, fragment=bool_2)
    var_5 = link_9.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, bool_3)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_11 = module_0.Link(tuple_1, fragment=bool_4)
    var_8 = link_11.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_1)
    var_11 = var_6.__repr__()
    assert var_11 == "'-5164621852614943975'"


def test_case_777():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = var_0.__eq__(var_0)
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    var_2 = link_2.__repr__()
    var_3 = link_2.__hash__()
    assert var_3 == 0
    int_0 = 3199
    link_3 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_4 = module_0.Link(tuple_0, fragment=bool_0)
    var_5 = link_4.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_5.__hash__()
    assert var_8 == -552935834187556073
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    bool_2 = True
    link_6 = module_0.Link(bool_2)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_7 = module_0.Link(float_0, fragment=var_9)
    object_1 = module_1.object()
    none_type_1 = None
    link_8 = module_0.Link(object_1, fragment=none_type_1)
    var_10 = link_8.__hash__()
    var_11 = var_3.__repr__()
    assert var_11 == "0"


def test_case_778():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    link_3 = module_0.Link(var_0, nofollow=link_2)
    none_type_1 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_1)
    var_3 = var_1.__repr__()
    assert var_3 == "0"
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_5 = module_0.Link(bool_2, fragment=tuple_0)
    var_4 = link_5.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_0, var_4, bool_3, bool_2}
    var_5 = var_4.__eq__(set_0)
    var_6 = link_5.__hash__()
    assert var_6 == -8753497827991233192
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    var_7 = link_6.__repr__()
    bool_4 = False
    none_type_2 = None
    link_7 = module_0.Link(bool_4, fragment=none_type_2)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_1 = module_1.object()
    link_8 = module_0.Link(object_1, fragment=object_1)
    var_9 = link_8.__hash__()
    assert var_9 == 0
    bytes_0 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_10 = link_9.__hash__()
    assert var_10 == 0
    bool_5 = True
    dict_0 = {}
    none_type_3 = None
    float_0 = 2515.28653
    link_10 = module_0.Link(dict_0, none_type_3, float_0, none_type_3)
    var_11 = link_10.__repr__()
    var_12 = var_11.__eq__(bool_5)
    var_13 = var_12.__hash__()
    none_type_4 = None
    link_11 = module_0.Link(none_type_4, fragment=none_type_4)
    var_14 = link_11.__hash__()
    assert var_14 == 0
    var_15 = var_14.__hash__()
    assert var_15 == 0
    var_16 = link_11.__repr__()
    assert var_16 == "Link(url=None, text='', fragment=None, nofollow=False)"
    bool_6 = True
    link_12 = module_0.Link(bool_6, nofollow=bool_6)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_13 = module_0.Link(bytes_1, bytes_1)
    var_17 = link_13.__hash__()
    assert var_17 == 0
    var_18 = var_17.__repr__()
    assert var_18 == "0"
    link_14 = module_0.Link(bool_5)


def test_case_779():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    var_4 = var_1.__hash__()


def test_case_780():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0)
    var_1 = link_2.__hash__()
    assert var_1 == 477042
    var_2 = var_1.__hash__()
    assert var_2 == 477042
    bool_2 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_3 = module_0.Link(var_2, fragment=bool_2, nofollow=complex_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    bool_3 = True
    link_5 = module_0.Link(bool_3)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_6 = module_0.Link(float_0, fragment=var_3)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    int_0 = 3199
    link_7 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_8 = module_0.Link(var_5)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    bool_4 = True
    link_9 = module_0.Link(bool_4, nofollow=bool_4)
    link_10 = module_0.Link(link_9, link_9)
    complex_1 = -2489 + 3297.83623j
    link_11 = module_0.Link(complex_1)
    var_6 = link_11.__hash__()
    assert var_6 == 1172959022599657258
    var_7 = link_3.__hash__()
    assert var_7 == 1507136043364631478
    var_8 = var_7.__eq__(float_0)
    var_9 = var_8.__repr__()


def test_case_781():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    var_2 = link_0.__hash__()
    assert var_2 == 0


def test_case_782():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    complex_0 = 2717.25865 + 279.6823j
    bytes_1 = b"xC(\xd2O"
    set_0 = {bytes_1, bytes_1, bytes_1}
    none_type_0 = None
    link_2 = module_0.Link(set_0, none_type_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_3 = var_2.__hash__()
    assert var_3 == -2938861455928792573
    var_4 = var_3.__hash__()
    assert var_4 == -633018446715098622
    var_5 = var_4.__eq__(complex_0)
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, link_3)
    var_6 = link_4.__eq__(link_4)
    assert var_6 is True
    object_0 = module_1.object()
    link_5 = module_0.Link(object_0, fragment=object_0)
    link_6 = module_0.Link(object_0, none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    bool_0 = True
    link_8 = module_0.Link(bool_0)
    var_7 = link_8.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_9 = module_0.Link(float_1, fragment=var_7)
    link_10 = module_0.Link(float_1, fragment=link_8)
    object_1 = module_1.object()
    link_11 = module_0.Link(object_1, fragment=object_1)
    var_8 = link_11.__repr__()
    var_9 = link_11.__hash__()
    assert var_9 == 0
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_12 = module_0.Link(tuple_0, fragment=bool_1)
    var_10 = link_12.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_0)
    link_13 = module_0.Link(complex_0)


def test_case_783():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_1 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    var_3 = var_2.__repr__()
    var_4 = var_1.__repr__()


def test_case_784():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    link_4 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_4.__repr__()
    assert (
        var_4
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    none_type_1 = None
    bool_3 = True
    link_5 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_5.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_1)
    var_8 = var_6.__repr__()
    assert var_8 == "0"
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_6 = module_0.Link(tuple_1, fragment=bool_4)
    var_9 = link_6.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__eq__(tuple_1)
    var_12 = var_11.__repr__()
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, nofollow=none_type_2)
    var_13 = link_7.__repr__()
    assert var_13 == "Link(url=None, text='', fragment='', nofollow=None)"
    var_14 = var_3.__repr__()
    assert var_14 == "-8753497827991233192"


def test_case_785():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    none_type_1 = None
    link_1 = module_0.Link(none_type_1, none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    none_type_2 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_2 = link_3.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_5 = module_0.Link(var_4, nofollow=var_4)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_6 = module_0.Link(tuple_0, fragment=bool_2)
    var_5 = link_6.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_3 = None
    link_7 = module_0.Link(none_type_3, bool_3)
    none_type_4 = None
    bool_4 = True
    link_8 = module_0.Link(bool_4, nofollow=bool_4)
    var_8 = link_8.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_4)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_8.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_10 = module_0.Link(link_8)
    none_type_5 = None
    bool_5 = True
    link_11 = module_0.Link(bool_5, nofollow=bool_5)
    var_11 = link_11.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_5)
    link_12 = module_0.Link(link_11)
    link_13 = module_0.Link(var_11, fragment=none_type_5)
    bytes_3 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_14 = module_0.Link(bytes_3)
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_15 = module_0.Link(bytes_4)
    link_16 = module_0.Link(link_15)
    var_13 = link_16.__hash__()
    assert var_13 == -4606328870177462788
    bool_6 = True
    link_17 = module_0.Link(bool_6)
    var_14 = link_17.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_15 = var_13.__eq__(bytes_4)
    var_16 = var_15.__hash__()
    link_18 = module_0.Link(bytes_3, fragment=var_9)


def test_case_786():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_2 = link_3.__hash__()
    assert var_2 == -8753497827991233192
    set_0 = {tuple_0, var_2, bool_2, bool_1}
    var_3 = var_2.__eq__(set_0)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_4.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    bool_5 = False
    link_5 = module_0.Link(bool_5)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_6 = module_0.Link(tuple_2, fragment=bool_6)
    var_8 = link_6.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = link_6.__repr__()
    assert var_10 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bool_8 = False
    bool_9 = False
    tuple_3 = (bool_9,)
    link_7 = module_0.Link(bool_8, fragment=tuple_3)
    var_11 = link_7.__hash__()
    assert var_11 == -8753497827991233192
    link_8 = module_0.Link(var_11, var_11, nofollow=var_11)
    var_12 = link_7.__hash__()
    assert var_12 == -8753497827991233192
    bytes_1 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_1, nofollow=bytes_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    bool_10 = True
    link_11 = module_0.Link(bool_10)
    var_13 = link_11.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_12 = module_0.Link(float_1, fragment=var_13)
    link_13 = module_0.Link(float_1, fragment=link_11)
    link_14 = module_0.Link(var_5, fragment=bool_3)


def test_case_787():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_1.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    none_type_0 = None
    bool_3 = True
    link_2 = module_0.Link(bool_3, nofollow=bool_3)
    var_4 = link_2.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_4 = module_0.Link(var_6, nofollow=var_6)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    var_7 = var_0.__eq__(tuple_0)


def test_case_788():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_0 = link_3.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    var_1 = link_1.__hash__()
    assert var_1 == 477047


def test_case_789():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    none_type_1 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_4 = link_2.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_4 = module_0.Link(var_6, nofollow=var_6)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, link_5)
    var_7 = link_6.__eq__(link_6)
    assert var_7 is True
    var_8 = link_5.__hash__()
    assert var_8 == 5
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_7 = module_0.Link(bool_3, fragment=tuple_1)
    var_9 = link_7.__hash__()
    assert var_9 == -8753497827991233192
    link_8 = module_0.Link(var_9, var_9, nofollow=var_9)
    var_10 = link_7.__hash__()
    assert var_10 == -8753497827991233192
    none_type_3 = None
    bool_5 = True
    link_9 = module_0.Link(bool_5, nofollow=bool_5)
    var_11 = link_9.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_3)
    var_13 = link_9.__hash__()
    assert var_13 == 0
    bool_6 = True
    link_10 = module_0.Link(bool_6, nofollow=bool_6)
    var_14 = link_10.__eq__(link_10)
    assert var_14 is True
    float_1 = 5.0
    link_11 = module_0.Link(float_1)
    bool_7 = False
    bool_8 = False
    tuple_2 = (bool_8,)
    link_12 = module_0.Link(bool_7, fragment=tuple_2)
    var_15 = link_12.__hash__()
    assert var_15 == -8753497827991233192
    link_13 = module_0.Link(var_15, var_15, nofollow=var_15)
    var_16 = link_10.__hash__()
    assert var_16 == 0


def test_case_790():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    none_type_1 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_3 = module_0.Link(var_4, nofollow=var_4)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bytes_1 = b"W\xd7\xd4i\x94\x7f\xbd\t\xd7\x94vUT\xdds"
    link_4 = module_0.Link(link_1, fragment=bytes_1)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(url=Link(url=True, text='', fragment='', nofollow=True), text='', fragment=b'W\\xd7\\xd4i\\x94\\x7f\\xbd\\t\\xd7\\x94vUT\\xdds', nofollow=False)"
    )


def test_case_791():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_792():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__hash__()
    assert var_5 == 0
    var_6 = var_4.__eq__(var_4)
    var_7 = var_5.__hash__()
    assert var_7 == 0
    bool_2 = True
    link_2 = module_0.Link(bool_2, fragment=bool_2)
    var_8 = link_2.__repr__()
    assert var_8 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == 4729962515010671871
    var_10 = var_9.__repr__()
    assert var_10 == "4729962515010671871"
    link_3 = module_0.Link(var_10)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_11 = link_3.__hash__()
    assert var_11 == -6813877331771076914
    bool_3 = True
    dict_0 = {}
    none_type_1 = None
    float_0 = 2515.28653
    link_4 = module_0.Link(dict_0, none_type_1, float_0, none_type_1)
    var_12 = link_4.__repr__()
    var_13 = var_12.__eq__(bool_3)
    var_14 = var_13.__hash__()
    none_type_2 = None
    bool_4 = True
    link_5 = module_0.Link(bool_4, nofollow=bool_4)
    var_15 = link_5.__hash__()
    assert var_15 == 0
    var_16 = var_15.__eq__(none_type_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    var_17 = link_5.__repr__()
    assert var_17 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_7 = module_0.Link(var_17, nofollow=var_17)
    none_type_3 = None
    bool_5 = True
    link_8 = module_0.Link(bool_5, nofollow=bool_5)
    var_18 = link_8.__hash__()
    assert var_18 == 0
    var_19 = var_18.__eq__(none_type_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_20 = link_8.__repr__()
    assert var_20 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_21 = var_19.__repr__()
    none_type_4 = None
    link_10 = module_0.Link(none_type_4, none_type_4)
    object_0 = module_1.object()
    link_11 = module_0.Link(object_0, fragment=object_0)
    var_22 = link_11.__hash__()
    assert var_22 == 0
    var_23 = link_2.__repr__()
    assert var_23 == "Link(url=True, text='', fragment=True, nofollow=False)"


def test_case_793():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment=None, nofollow=False)"
    link_1 = module_0.Link(var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=b\"Link(url=None, text='', fragment=None, nofollow=False)\", text='', fragment='', nofollow=False)"
    )


def test_case_794():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"


def test_case_795():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__repr__()
    assert var_2 == "0"
    bool_1 = False
    none_type_0 = None
    link_2 = module_0.Link(bool_1, fragment=none_type_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    var_4 = link_3.__hash__()
    assert var_4 == 0
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_6 = var_5.__hash__()
    assert var_6 == -3203539594471298528
    var_7 = link_0.__hash__()
    assert var_7 == 1


def test_case_796():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_0 = True
    link_5 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    var_1 = link_5.__hash__()
    assert var_1 == 1
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_6 = module_0.Link(bytes_0)
    link_7 = module_0.Link(link_6)
    var_2 = var_1.__eq__(var_0)
    assert var_2 is True


def test_case_797():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_2 = module_0.Link(bool_0, fragment=tuple_0)
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    set_0 = {tuple_0, var_4, bool_1, bool_0}
    var_5 = var_4.__eq__(set_0)
    var_6 = link_2.__hash__()
    assert var_6 == -8753497827991233192
    var_7 = link_2.__hash__()
    assert var_7 == -8753497827991233192
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, link_3)
    int_1 = 3199
    link_5 = module_0.Link(int_1, int_1, nofollow=int_1)
    bytes_1 = b"-5164621852614943975"
    link_6 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_8 = link_6.__repr__()
    assert (
        var_8
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    int_2 = 401
    link_7 = module_0.Link(int_2, int_2)
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, fragment=none_type_2)
    var_9 = link_8.__hash__()
    assert var_9 == 0
    var_10 = var_9.__hash__()
    assert var_10 == 0
    var_11 = link_8.__repr__()
    assert var_11 == "Link(url=None, text='', fragment=None, nofollow=False)"
    bool_2 = True
    link_9 = module_0.Link(bool_2, fragment=bool_2)
    var_12 = link_9.__repr__()
    assert var_12 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_13 = var_12.__hash__()
    assert var_13 == 4729962515010671871
    var_14 = var_13.__repr__()
    assert var_14 == "4729962515010671871"
    link_10 = module_0.Link(var_14)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    var_15 = link_10.__hash__()
    assert var_15 == -6813877331771076914
    none_type_3 = None
    link_11 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_16 = link_11.__repr__()
    assert var_16 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_12 = module_0.Link(var_16, nofollow=link_11)
    var_17 = link_12.__hash__()
    assert var_17 == 4128530656735687579
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_13 = module_0.Link(bool_3, fragment=tuple_1)
    var_18 = link_13.__hash__()
    assert var_18 == -8753497827991233192
    set_1 = {tuple_1, var_18, bool_4, bool_3}
    var_19 = var_18.__eq__(set_1)
    none_type_4 = None
    link_14 = module_0.Link(none_type_4, none_type_4)
    var_20 = link_0.__repr__()
    assert (
        var_20 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )


def test_case_798():
    int_0 = 1870
    link_0 = module_0.Link(int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    dict_0 = {link_0: link_0}
    link_1 = module_0.Link(dict_0, fragment=dict_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    bool_0 = False
    none_type_0 = None
    link_2 = module_0.Link(bool_0, fragment=none_type_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_0)
    var_6 = var_5.__repr__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_7 = link_5.__hash__()
    assert var_7 == -4606328870177462788
    none_type_1 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_8 = link_6.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_10 = link_6.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_11 = var_6.__repr__()


def test_case_799():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__repr__()
    assert var_2 == "0"
    var_3 = var_1.__hash__()
    assert var_3 == 0
    none_type_1 = None
    bool_0 = True
    link_5 = module_0.Link(bool_0, nofollow=bool_0)
    var_4 = link_5.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_7 = module_0.Link(tuple_0, fragment=bool_1)
    var_7 = link_7.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    none_type_2 = None
    link_8 = module_0.Link(link_7, fragment=none_type_2)
    int_0 = 3199
    link_9 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_9 = link_9.__hash__()
    assert var_9 == 3199
    var_10 = var_6.__eq__(link_1)


def test_case_800():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_1, bytes_1)
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_3 = module_0.Link(float_0, fragment=var_4)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_2)
    link_5 = module_0.Link(link_4)
    var_6 = link_5.__hash__()
    assert var_6 == -4606328870177462788
    var_7 = link_5.__repr__()
    assert (
        var_7
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, fragment=none_type_0)
    var_8 = link_6.__hash__()
    assert var_8 == 0
    var_9 = var_8.__hash__()
    assert var_9 == 0
    var_10 = var_8.__eq__(var_8)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_7 = module_0.Link(bool_1, fragment=tuple_0)
    var_11 = link_7.__hash__()
    assert var_11 == -8753497827991233192
    var_12 = link_7.__repr__()
    assert var_12 == "Link(url=False, text='', fragment=(False,), nofollow=False)"


def test_case_801():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_1 = link_3.__repr__()
    assert (
        var_1
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_4 = module_0.Link(bool_3)
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_5 = module_0.Link(var_1, var_2, nofollow=link_3)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    bool_4 = False
    link_6 = module_0.Link(bool_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_7.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_8 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_4 = link_8.__repr__()
    var_5 = var_4.__eq__(bool_5)
    var_6 = var_5.__hash__()
    var_7 = var_6.__repr__()
    int_0 = 1870
    link_9 = module_0.Link(int_0)
    dict_1 = {link_9: link_9}
    link_10 = module_0.Link(dict_1, fragment=dict_1)
    var_8 = link_10.__repr__()
    assert (
        var_8
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_9 = var_8.__repr__()
    assert (
        var_9
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_10 = var_8.__eq__(var_8)
    var_11 = var_10.__hash__()
    var_12 = var_11.__hash__()


def test_case_802():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_3 = var_1.__repr__()
    assert var_3 == "'0'"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    var_5 = link_4.__repr__()
    var_6 = link_4.__hash__()
    assert var_6 == 0
    bool_3 = True
    link_5 = module_0.Link(bool_3, nofollow=bool_3)
    link_6 = module_0.Link(link_5, link_5)
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_7 = module_0.Link(list_0, str_0)
    link_8 = module_0.Link(link_7)
    var_7 = var_2.__eq__(bool_2)
    assert var_7 is True


def test_case_803():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 3199
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    link_2 = module_0.Link(var_1, var_1, nofollow=var_1)
    var_2 = link_2.__hash__()
    assert var_2 == -1835968800350151339
    var_3 = var_2.__hash__()
    assert var_3 == -1835968800350151339
    var_4 = link_0.__hash__()
    assert var_4 == 3199


def test_case_804():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    object_0 = module_1.object()
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 7957018345684386684
    var_2 = var_1.__repr__()
    assert var_2 == "7957018345684386684"
    link_2 = module_0.Link(object_0, var_2)
    var_3 = link_2.__repr__()
    bool_0 = False
    link_3 = module_0.Link(bool_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_4.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_5 = module_0.Link(bool_1)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    object_1 = module_1.object()
    link_6 = module_0.Link(object_1, fragment=object_1)
    link_7 = module_0.Link(bytes_0, var_0)


def test_case_805():
    bool_0 = True
    link_0 = module_0.Link(bool_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 4729962515010671871
    var_2 = var_1.__repr__()
    assert var_2 == "4729962515010671871"
    link_1 = module_0.Link(var_2)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_3 = link_1.__hash__()
    assert var_3 == -6813877331771076914
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_4 = link_2.__hash__()
    assert var_4 == 3199
    int_1 = 2105
    none_type_0 = None
    link_3 = module_0.Link(int_1, none_type_0)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_4 = module_0.Link(var_5, int_1)
    var_6 = link_4.__hash__()
    assert var_6 == -1122340555193368221
    var_7 = var_6.__repr__()
    assert var_7 == "-1122340555193368221"
    bytes_0 = b"-5164621852614943975"
    link_5 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_8 = link_5.__hash__()
    assert var_8 == 0
    var_9 = link_5.__repr__()
    assert (
        var_9
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_1 = None
    bool_1 = True
    link_6 = module_0.Link(bool_1, nofollow=bool_1)
    var_10 = link_6.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_1)
    var_12 = var_10.__repr__()
    assert var_12 == "0"
    none_type_2 = None
    bool_2 = True
    link_7 = module_0.Link(bool_2, nofollow=bool_2)
    var_13 = link_7.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    var_15 = link_7.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_16 = link_7.__hash__()
    assert var_16 == 0
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_9 = module_0.Link(tuple_0, fragment=bool_3)
    var_17 = link_9.__hash__()
    assert var_17 == -5164621852614943975
    var_18 = var_17.__repr__()
    assert var_18 == "-5164621852614943975"
    var_19 = var_17.__repr__()
    assert var_19 == "-5164621852614943975"
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, bool_4)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_2)
    link_12 = module_0.Link(link_11)
    var_20 = link_12.__hash__()
    assert var_20 == -4606328870177462788
    bool_5 = True
    link_13 = module_0.Link(bool_5)
    var_21 = link_13.__repr__()
    assert var_21 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_22 = var_20.__eq__(bytes_2)
    link_14 = module_0.Link(var_22, var_22)
    var_23 = var_22.__hash__()


def test_case_806():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = link_0.__hash__()
    assert var_3 == 0
    int_0 = 1870
    link_2 = module_0.Link(int_0)
    dict_0 = {link_2: link_2}
    link_3 = module_0.Link(dict_0, fragment=dict_0)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_6 = var_4.__eq__(var_4)
    var_7 = var_6.__hash__()
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_4.__hash__()
    assert var_8 == 0
    var_9 = var_8.__repr__()
    assert var_9 == "0"
    var_10 = var_8.__hash__()
    assert var_10 == 0
    int_1 = 3199
    link_5 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_11 = link_5.__repr__()
    assert var_11 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_6 = module_0.Link(var_11)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_8 = module_0.Link(tuple_0, fragment=bool_1)
    var_12 = link_8.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__eq__(tuple_0)
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_9 = module_0.Link(bool_3, fragment=tuple_1)
    var_15 = link_9.__hash__()
    assert var_15 == -8753497827991233192
    set_0 = {tuple_1, var_15, bool_4, bool_3}
    var_16 = var_15.__eq__(set_0)
    var_17 = link_9.__hash__()
    assert var_17 == -8753497827991233192
    none_type_1 = None
    bool_5 = True
    link_10 = module_0.Link(bool_5, nofollow=bool_5)
    var_18 = link_10.__hash__()
    assert var_18 == 0
    var_19 = var_18.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    var_20 = link_10.__repr__()
    assert var_20 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_12 = module_0.Link(var_20, nofollow=var_20)
    var_21 = var_20.__repr__()
    assert var_21 == "\"Link(url=True, text='', fragment='', nofollow=True)\""


def test_case_807():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = var_0.__eq__(var_0)
    var_3 = var_1.__hash__()
    assert var_3 == 0
    none_type_1 = None
    none_type_2 = None
    link_2 = module_0.Link(none_type_2)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_5 = var_4.__hash__()
    assert var_5 == 2234852059487564994
    var_6 = var_5.__eq__(none_type_1)
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_3 = module_0.Link(bool_0, fragment=tuple_0)
    var_7 = link_3.__hash__()
    assert var_7 == -8753497827991233192
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_4 = module_0.Link(bool_2, fragment=tuple_1)
    var_8 = link_4.__hash__()
    assert var_8 == -8753497827991233192
    set_0 = {tuple_1, var_8, bool_3, bool_2}
    var_9 = var_8.__eq__(set_0)
    var_10 = link_4.__hash__()
    assert var_10 == -8753497827991233192
    var_11 = link_4.__hash__()
    assert var_11 == -8753497827991233192
    object_0 = module_1.object()
    link_5 = module_0.Link(object_0, fragment=object_0)
    var_12 = link_5.__repr__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_13 = link_7.__hash__()
    assert var_13 == -4606328870177462788
    bool_4 = True
    link_8 = module_0.Link(bool_4)
    var_14 = link_8.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_15 = var_13.__eq__(bytes_1)
    link_9 = module_0.Link(var_13)
    link_10 = module_0.Link(bytes_1)


def test_case_808():
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_0 = module_0.Link(list_0, str_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, list_0)


def test_case_809():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=None, text='', fragment=None, nofollow=False)"
    link_2 = module_0.Link(var_3)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(url=b\"Link(url=None, text='', fragment=None, nofollow=False)\", text='', fragment='', nofollow=False)"
    )
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_5 = link_3.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_1 = None
    link_4 = module_0.Link(link_3, fragment=none_type_1)
    bool_4 = False
    link_5 = module_0.Link(bool_4)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_6.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    str_0 = "Dmfv; iJ001\n"
    none_type_2 = None
    link_7 = module_0.Link(str_0, fragment=none_type_2)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=False, text='', fragment='', nofollow=False)"


def test_case_810():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, link_1)
    none_type_2 = None
    link_3 = module_0.Link(none_type_2, nofollow=none_type_2)
    var_0 = link_3.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=None)"
    bool_0 = False
    link_4 = module_0.Link(bool_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_1 = link_5.__repr__()
    assert (
        var_1
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_6 = module_0.Link(bool_1)
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    complex_0 = -2489 + 3297.83623j
    link_7 = module_0.Link(complex_0)
    var_3 = link_7.__hash__()
    assert var_3 == 1172959022599657258
    var_4 = link_0.__repr__()
    assert var_4 == "Link(url=None, text=None, fragment='', nofollow=False)"


def test_case_811():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    link_3 = module_0.Link(var_0, nofollow=link_2)
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_1 = link_5.__repr__()
    assert (
        var_1
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_6 = module_0.Link(bool_2)
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "'\"Link(url=b\\'\\\\\\\\xd1\\\\\\\\x04\\\\\\\\x83\\\\\\\\xb7\\\\\\\\x84\\\\\\\\x19<2\\\\\\\\xe6<\\\\\\\\xc4\\\\\\\\x19\\\\\\\\xaeE\\\\\\\\xfb:J4\\\\\\\\xdd\\', text=b\\'\\\\\\\\xd1\\\\\\\\x04\\\\\\\\x83\\\\\\\\xb7\\\\\\\\x84\\\\\\\\x19<2\\\\\\\\xe6<\\\\\\\\xc4\\\\\\\\x19\\\\\\\\xaeE\\\\\\\\xfb:J4\\\\\\\\xdd\\', fragment=\\'\\', nofollow=False)\"'"
    )
    var_4 = var_3.__eq__(bool_2)
    var_5 = var_4.__repr__()


def test_case_812():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__hash__()
    assert var_5 == -552935834187556073
    none_type_1 = None
    bool_4 = True
    link_3 = module_0.Link(bool_4, nofollow=bool_4)
    var_6 = link_3.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_5 = module_0.Link(bool_5, fragment=tuple_2)
    var_9 = link_5.__hash__()
    assert var_9 == -8753497827991233192
    link_6 = module_0.Link(var_9, var_9, nofollow=var_9)
    var_10 = link_6.__repr__()
    assert (
        var_10
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_11 = link_5.__repr__()
    assert var_11 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    var_12 = var_2.__hash__()
    assert var_12 == -1835968800350151339


def test_case_813():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__eq__(link_0)
    assert var_0 is True
    bool_1 = True
    link_1 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0)
    var_2 = var_1.__eq__(var_1)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_0, fragment=bool_2)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_0)
    bool_4 = True
    bool_5 = True
    bytes_0 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_4 = module_0.Link(bytes_0)
    var_6 = link_4.__hash__()
    assert var_6 == -6712542186422229073
    var_7 = var_6.__repr__()
    assert var_7 == "-6712542186422229073"
    var_8 = var_7.__eq__(bool_5)
    var_9 = var_8.__hash__()
    var_10 = var_9.__eq__(bool_4)
    bool_6 = False
    bool_7 = False
    tuple_1 = (bool_7,)
    link_5 = module_0.Link(bool_6, fragment=tuple_1)
    var_11 = link_5.__hash__()
    assert var_11 == -8753497827991233192
    set_0 = {tuple_1, var_11, bool_7, bool_6}
    var_12 = var_11.__eq__(set_0)
    var_13 = link_5.__hash__()
    assert var_13 == -8753497827991233192
    var_14 = link_5.__hash__()
    assert var_14 == -8753497827991233192
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    bool_8 = True
    link_7 = module_0.Link(bool_8)
    var_15 = link_7.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_8 = module_0.Link(float_0, fragment=var_15)
    link_9 = module_0.Link(float_0, fragment=link_7)
    var_16 = link_8.__repr__()
    assert (
        var_16
        == "Link(url=3106.326, text='', fragment=\"Link(url=True, text='', fragment='', nofollow=False)\", nofollow=False)"
    )


def test_case_814():
    str_0 = "Dmfv; iJ001\n"
    none_type_0 = None
    link_0 = module_0.Link(str_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    object_0 = module_1.object()
    none_type_1 = None
    link_1 = module_0.Link(object_0, fragment=none_type_1)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_0 = link_1.__hash__()
    none_type_2 = None
    none_type_3 = None
    link_2 = module_0.Link(none_type_3)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_2 = var_1.__hash__()
    assert var_2 == 2234852059487564994
    var_3 = var_2.__eq__(none_type_2)
    link_3 = module_0.Link(var_1, var_2, var_1)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_4 = module_0.Link(tuple_0, fragment=bool_0)
    var_4 = link_4.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    complex_0 = 2717.25865 + 279.6823j
    bytes_0 = b"xC(\xd2O"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_4 = None
    link_5 = module_0.Link(set_0, none_type_4)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == -2938861455928792573
    var_9 = var_8.__hash__()
    assert var_9 == -633018446715098622
    var_10 = var_9.__eq__(complex_0)
    object_1 = module_1.object()
    link_6 = module_0.Link(object_1, fragment=object_1)
    var_11 = link_6.__hash__()
    assert var_11 == 0
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_7 = module_0.Link(bool_2, fragment=tuple_1)
    var_12 = link_7.__hash__()
    assert var_12 == -8753497827991233192
    link_8 = module_0.Link(var_12, var_12, nofollow=var_12)
    var_13 = link_8.__repr__()
    assert (
        var_13
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_14 = link_7.__repr__()
    assert var_14 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    var_15 = var_8.__repr__()
    assert var_15 == "-2938861455928792573"


def test_case_815():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, none_type_0)
    var_2 = var_1.__eq__(var_1)
    object_0 = module_1.object()
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == 7957018345684386684
    var_5 = var_4.__repr__()
    assert var_5 == "7957018345684386684"
    link_5 = module_0.Link(object_0, var_5)
    var_6 = link_5.__repr__()
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_6 = module_0.Link(tuple_0, fragment=bool_1)
    var_7 = link_6.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, bool_2)
    bool_3 = False
    link_8 = module_0.Link(bool_3)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_9 = module_0.Link(tuple_1, fragment=bool_4)
    var_10 = link_9.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    float_0 = 5.0
    link_10 = module_0.Link(float_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_1)
    link_12 = module_0.Link(link_11)
    var_12 = link_12.__hash__()
    assert var_12 == -4606328870177462788
    var_13 = var_12.__hash__()
    assert var_13 == -2300485860963768837
    var_14 = var_9.__repr__()
    assert var_14 == "'-5164621852614943975'"


def test_case_816():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_2.__hash__()
    assert var_1 == -8753497827991233192
    bool_3 = False
    link_3 = module_0.Link(bool_3)
    var_2 = link_3.__hash__()
    assert var_2 == 0
    link_4 = module_0.Link(link_2, nofollow=link_0)
    var_3 = link_4.__repr__()
    assert (
        var_3
        == "Link(url=Link(url=False, text='', fragment=(False,), nofollow=False), text='', fragment='', nofollow=Link(url=False, text='', fragment='', nofollow=False))"
    )


def test_case_817():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_3 = module_0.Link(float_0, fragment=var_3)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_5 = link_5.__hash__()
    assert var_5 == -4606328870177462788
    bool_1 = True
    link_6 = module_0.Link(bool_1)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_1)
    link_7 = module_0.Link(var_5)
    complex_0 = 2717.25865 + 279.6823j
    bytes_2 = b"xC(\xd2O"
    set_0 = {bytes_2, bytes_2, bytes_2}
    none_type_2 = None
    link_8 = module_0.Link(set_0, none_type_2)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == -2938861455928792573
    var_10 = var_9.__hash__()
    assert var_10 == -633018446715098622
    var_11 = var_10.__eq__(complex_0)
    bool_2 = True
    link_9 = module_0.Link(bool_2, nofollow=bool_2)
    var_12 = link_9.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, none_type_3)
    var_13 = var_12.__eq__(var_12)
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_11 = module_0.Link(bool_3, fragment=tuple_0)
    var_14 = link_11.__hash__()
    assert var_14 == -8753497827991233192
    link_12 = module_0.Link(var_14, var_14, nofollow=var_14)
    var_15 = link_12.__repr__()
    assert (
        var_15
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bool_5 = True
    link_13 = module_0.Link(bool_5)
    var_16 = link_13.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_6 = True
    bool_7 = False
    tuple_1 = (bool_6, bool_7)
    link_14 = module_0.Link(tuple_1, fragment=bool_6)
    var_17 = link_14.__hash__()
    assert var_17 == -5164621852614943975
    var_18 = var_17.__repr__()
    assert var_18 == "-5164621852614943975"
    var_19 = var_17.__repr__()
    assert var_19 == "-5164621852614943975"
    none_type_4 = None
    link_15 = module_0.Link(none_type_4, bool_7)
    var_20 = var_16.__repr__()
    assert var_20 == "\"Link(url=True, text='', fragment='', nofollow=False)\""


def test_case_818():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_1)
    var_2 = var_0.__eq__(bytes_0)
    none_type_0 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_2, bytes_2)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_4 = module_0.Link(link_2)
    complex_0 = -2489 + 3297.83623j
    link_5 = module_0.Link(complex_0)
    var_6 = link_5.__hash__()
    assert var_6 == 1172959022599657258
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_6 = module_0.Link(bool_1, fragment=tuple_0)
    var_7 = link_6.__hash__()
    assert var_7 == -8753497827991233192
    link_7 = module_0.Link(var_7, var_7, nofollow=var_7)
    none_type_1 = None
    bool_3 = True
    link_8 = module_0.Link(bool_3, nofollow=bool_3)
    var_8 = link_8.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_1)
    int_0 = 3199
    link_9 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_4 = False
    link_10 = module_0.Link(bool_4)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_3, bytes_3)
    var_10 = link_11.__repr__()
    assert (
        var_10
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_12 = module_0.Link(bool_5)
    var_11 = var_10.__repr__()
    assert (
        var_11
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_6 = False
    bool_7 = False
    tuple_1 = (bool_7,)
    link_13 = module_0.Link(bool_6, fragment=tuple_1)
    var_12 = link_13.__hash__()
    assert var_12 == -8753497827991233192
    link_14 = module_0.Link(var_12, var_12, nofollow=var_12)
    var_13 = link_13.__hash__()
    assert var_13 == -8753497827991233192
    none_type_2 = None
    bool_8 = True
    link_15 = module_0.Link(bool_8, nofollow=bool_8)
    var_14 = link_15.__hash__()
    assert var_14 == 0
    var_15 = var_14.__eq__(none_type_2)
    link_16 = module_0.Link(link_15)
    link_17 = module_0.Link(var_14, fragment=none_type_2)
    link_18 = module_0.Link(link_1)


def test_case_819():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    var_1 = link_3.__hash__()
    assert var_1 == 0
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_5 = module_0.Link(var_2, nofollow=link_4)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_3 = link_5.__hash__()
    assert var_3 == 4128530656735687579
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_6 = module_0.Link(list_0, str_0)
    link_7 = module_0.Link(link_6)
    bool_1 = False
    none_type_1 = None
    link_8 = module_0.Link(bool_1, fragment=none_type_1)
    var_4 = link_8.__repr__()
    assert var_4 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_1 = module_1.object()
    link_9 = module_0.Link(object_1, fragment=object_1)
    var_5 = link_9.__hash__()
    assert var_5 == 0
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2)
    var_6 = link_10.__hash__()
    assert var_6 == 0
    var_7 = var_6.__hash__()
    assert var_7 == 0
    var_8 = link_10.__repr__()
    assert var_8 == "Link(url=None, text='', fragment=None, nofollow=False)"


def test_case_820():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    var_1 = link_0.__hash__()
    assert var_1 == 5


def test_case_821():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=None, text='', fragment=None, nofollow=False)"
    link_3 = module_0.Link(var_1)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(url=b\"Link(url=None, text='', fragment=None, nofollow=False)\", text='', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_5.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_6 = module_0.Link(bool_3)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_7 = module_0.Link(var_3, bytes_0)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_4 = False
    link_9 = module_0.Link(bool_4)
    var_5 = link_9.__repr__()
    assert var_5 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_10 = module_0.Link(var_5, nofollow=var_5)
    var_6 = var_5.__hash__()
    assert var_6 == -3936900723769714473
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_1, bytes_1)
    bool_5 = True
    link_12 = module_0.Link(bool_5)
    var_7 = link_12.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_13 = module_0.Link(float_0, fragment=var_7)
    link_14 = module_0.Link(float_0, fragment=link_12)
    none_type_2 = None
    bool_6 = True
    link_15 = module_0.Link(bool_6, nofollow=bool_6)
    var_8 = link_15.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_2)
    link_16 = module_0.Link(link_15)
    link_17 = module_0.Link(var_8, fragment=none_type_2)
    none_type_3 = None
    none_type_4 = None
    link_18 = module_0.Link(none_type_4)
    var_10 = link_18.__repr__()
    assert var_10 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_11 = var_10.__hash__()
    assert var_11 == 2234852059487564994
    var_12 = var_11.__eq__(none_type_3)
    none_type_5 = None
    bool_7 = True
    link_19 = module_0.Link(bool_7, nofollow=bool_7)
    var_13 = link_19.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_5)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_20 = module_0.Link(bytes_2, bytes_2)
    var_15 = link_19.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_3 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_21 = module_0.Link(bytes_3, bytes_3)
    var_16 = link_21.__hash__()
    assert var_16 == 0
    var_17 = var_16.__repr__()
    assert var_17 == "0"
    var_18 = var_16.__hash__()
    assert var_18 == 0
    link_22 = module_0.Link(var_6, fragment=none_type_5, nofollow=bool_0)


def test_case_822():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    var_1 = link_0.__hash__()
    assert var_1 == 0
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_1 = module_0.Link(list_0, str_0)
    link_2 = module_0.Link(link_1)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, list_0)
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_4 = module_0.Link(bool_0, fragment=tuple_0)
    var_2 = link_4.__hash__()
    assert var_2 == -8753497827991233192
    link_5 = module_0.Link(var_2, var_2, nofollow=var_2)
    var_3 = link_4.__hash__()
    assert var_3 == -8753497827991233192
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_6 = module_0.Link(bool_2, fragment=tuple_1)
    var_4 = link_6.__hash__()
    assert var_4 == -8753497827991233192
    link_7 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = link_7.__repr__()
    assert (
        var_5
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    float_0 = 5.0
    link_8 = module_0.Link(float_0)
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, link_8)
    var_6 = link_9.__eq__(link_9)
    assert var_6 is True
    object_1 = module_1.object()
    link_10 = module_0.Link(object_1, fragment=object_1)
    link_11 = module_0.Link(object_1, none_type_1)
    var_7 = var_4.__eq__(tuple_1)


def test_case_823():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    var_6 = var_4.__hash__()
    assert var_6 == 0
    none_type_0 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_7 = link_2.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_0)
    bool_3 = True
    dict_0 = {}
    none_type_1 = None
    float_0 = 2515.28653
    link_3 = module_0.Link(dict_0, none_type_1, float_0, none_type_1)
    var_9 = link_3.__repr__()
    assert var_9 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_10 = var_9.__eq__(bool_3)
    var_11 = var_10.__hash__()
    var_12 = var_11.__repr__()
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_4 = module_0.Link(tuple_1, fragment=bool_4)
    var_13 = link_4.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__eq__(tuple_1)
    var_16 = var_15.__repr__()
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_5 = module_0.Link(list_0, str_0)
    link_6 = module_0.Link(link_5)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, list_0)
    var_17 = var_12.__eq__(var_7)


def test_case_824():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    bool_0 = True
    bool_1 = True
    bytes_0 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_2 = module_0.Link(bytes_0)
    var_1 = link_2.__hash__()
    assert var_1 == -6712542186422229073
    var_2 = var_1.__repr__()
    assert var_2 == "-6712542186422229073"
    var_3 = var_2.__eq__(bool_1)
    var_4 = var_3.__hash__()
    var_5 = var_4.__eq__(bool_0)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_3.__hash__()
    assert var_6 == 0
    var_7 = var_6.__repr__()
    assert var_7 == "0"
    var_8 = var_6.__hash__()
    assert var_8 == 0
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_2)
    link_5 = module_0.Link(link_4)
    var_9 = link_5.__hash__()
    assert var_9 == -4606328870177462788
    var_10 = var_9.__hash__()
    assert var_10 == -2300485860963768837
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_6 = module_0.Link(tuple_0, fragment=bool_2)
    var_11 = link_6.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    none_type_1 = None
    link_7 = module_0.Link(link_6, fragment=none_type_1)
    none_type_2 = None
    bool_4 = True
    link_8 = module_0.Link(bool_4, nofollow=bool_4)
    var_13 = link_8.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_2)
    var_15 = link_8.__hash__()
    assert var_15 == 0
    var_16 = link_0.__eq__(link_1)
    assert var_16 is False


def test_case_825():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_2.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_4 = link_4.__hash__()
    assert var_4 == -4606328870177462788
    bool_2 = True
    link_5 = module_0.Link(bool_2)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_0)
    var_7 = var_6.__hash__()
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, fragment=none_type_1)
    var_8 = link_6.__hash__()
    assert var_8 == 0
    var_9 = var_8.__hash__()
    assert var_9 == 0
    link_7 = module_0.Link(var_6, nofollow=var_0)


def test_case_826():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_2 = module_0.Link(list_0, str_0)
    link_3 = module_0.Link(link_2)
    none_type_1 = None
    bool_0 = True
    link_4 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_1)
    link_5 = module_0.Link(link_4)
    link_6 = module_0.Link(var_1, fragment=none_type_1)
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_7 = module_0.Link(bytes_0)
    var_3 = link_7.__repr__()
    assert var_3 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_4 = var_3.__eq__(int_0)
    var_5 = var_4.__repr__()
    var_6 = var_5.__eq__(int_0)
    none_type_2 = None
    bool_1 = True
    link_8 = module_0.Link(bool_1, nofollow=bool_1)
    var_7 = link_8.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_2)
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_9 = module_0.Link(bool_2, fragment=tuple_0)
    var_9 = link_9.__hash__()
    assert var_9 == -8753497827991233192
    link_10 = module_0.Link(var_9, var_9, nofollow=var_9)
    var_10 = link_9.__hash__()
    assert var_10 == -8753497827991233192
    none_type_3 = None
    bool_4 = True
    link_11 = module_0.Link(bool_4, nofollow=bool_4)
    var_11 = link_11.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_1, bytes_1)
    var_13 = link_11.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_13 = module_0.Link(var_13, nofollow=var_13)
    bool_5 = False
    none_type_4 = None
    link_14 = module_0.Link(bool_5, fragment=none_type_4)
    var_14 = link_14.__repr__()
    assert var_14 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_0 = module_1.object()
    link_15 = module_0.Link(object_0, fragment=object_0)
    var_15 = link_15.__hash__()
    assert var_15 == 0
    none_type_5 = None
    bool_6 = False
    link_16 = module_0.Link(none_type_5, fragment=bool_6)
    var_16 = link_16.__repr__()
    assert var_16 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_17 = var_16.__hash__()
    assert var_17 == -5509142826951788791
    var_18 = var_17.__repr__()
    assert var_18 == "-5509142826951788791"
    var_19 = var_18.__repr__()
    assert var_19 == "'-5509142826951788791'"
    bytes_2 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_17 = module_0.Link(bytes_2, bytes_2)
    var_20 = link_17.__hash__()
    assert var_20 == 0
    var_21 = var_20.__repr__()
    assert var_21 == "0"
    var_22 = var_20.__hash__()
    assert var_22 == 0
    bool_7 = False
    link_18 = module_0.Link(bool_7)
    var_23 = var_21.__repr__()
    assert var_23 == "'0'"
    link_19 = module_0.Link(bool_3, fragment=bytes_0)


def test_case_827():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    var_3 = link_2.__eq__(link_2)
    assert var_3 is True
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    link_4 = module_0.Link(object_0, none_type_0)
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_5.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    none_type_1 = None
    none_type_2 = None
    link_6 = module_0.Link(none_type_2)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_7 = var_6.__hash__()
    assert var_7 == 2234852059487564994
    var_8 = var_7.__eq__(none_type_1)
    link_7 = module_0.Link(var_6, var_7, var_6)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_8 = module_0.Link(bool_2, fragment=tuple_1)
    var_9 = link_8.__hash__()
    assert var_9 == -8753497827991233192
    link_9 = module_0.Link(var_9, var_9, nofollow=var_9)
    var_10 = link_9.__repr__()
    assert (
        var_10
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_1)
    link_11 = module_0.Link(link_10)
    var_11 = link_11.__hash__()
    assert var_11 == -4606328870177462788
    bool_4 = True
    link_12 = module_0.Link(bool_4)
    var_12 = link_12.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_13 = var_11.__eq__(bytes_1)
    var_14 = var_13.__hash__()
    bool_5 = False
    link_13 = module_0.Link(bool_5)
    bytes_2 = b"-5164621852614943975"
    link_14 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_15 = link_14.__hash__()
    assert var_15 == 0
    bytes_3 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_15 = module_0.Link(bytes_3, bytes_3)
    var_16 = link_15.__hash__()
    assert var_16 == 0
    var_17 = var_16.__repr__()
    assert var_17 == "0"
    var_18 = var_16.__hash__()
    assert var_18 == 0
    bool_6 = False
    link_16 = module_0.Link(bool_6)
    var_19 = var_17.__repr__()
    assert var_19 == "'0'"
    int_0 = 36
    bytes_4 = b"\xeb\xdc\xa3"
    link_17 = module_0.Link(bytes_4)
    var_20 = link_17.__repr__()
    assert (
        var_20 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_21 = var_20.__eq__(int_0)
    var_22 = var_21.__repr__()
    var_23 = var_22.__eq__(int_0)
    var_24 = var_10.__eq__(bytes_1)


def test_case_828():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    none_type_1 = None
    bool_0 = True
    link_4 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_6 = module_0.Link(link_4)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_7 = module_0.Link(tuple_0, fragment=bool_1)
    var_4 = link_7.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    complex_0 = -2489 + 3297.83623j
    link_8 = module_0.Link(complex_0)
    var_7 = link_8.__hash__()
    assert var_7 == 1172959022599657258
    bool_3 = False
    none_type_2 = None
    link_9 = module_0.Link(bool_3, fragment=none_type_2)
    var_8 = link_9.__repr__()
    assert var_8 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_1 = module_1.object()
    link_10 = module_0.Link(object_1, fragment=object_1)
    var_9 = link_10.__hash__()
    assert var_9 == 0
    int_0 = 3199
    link_11 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_10 = link_11.__repr__()
    assert var_10 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_12 = module_0.Link(var_10)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_13 = module_0.Link(list_0, str_0)
    link_14 = module_0.Link(link_13)
    none_type_3 = None
    link_15 = module_0.Link(none_type_3, list_0)
    float_1 = 5.0
    link_16 = module_0.Link(float_1)
    none_type_4 = None
    link_17 = module_0.Link(none_type_4, link_16)
    var_11 = link_17.__eq__(link_17)
    assert var_11 is True
    object_2 = module_1.object()
    link_18 = module_0.Link(object_2, fragment=object_2)
    link_19 = module_0.Link(object_2, none_type_4)
    var_12 = link_16.__hash__()
    assert var_12 == 5
    str_1 = "kcc#-Y\x0b?P?jv"
    list_1 = [str_1]
    link_20 = module_0.Link(list_1, str_1)
    link_21 = module_0.Link(link_20)
    link_22 = module_0.Link(var_0)


def test_case_829():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    var_0 = link_1.__hash__()
    assert var_0 == 5
    var_1 = var_0.__eq__(float_0)


def test_case_830():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    link_2 = module_0.Link(var_0, fragment=none_type_0)
    var_2 = link_2.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__repr__()
    assert var_3 == "477042"


def test_case_831():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_3 = var_1.__repr__()


def test_case_832():
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_0 = module_0.Link(list_0, str_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, list_0)
    bool_0 = False
    link_3 = module_0.Link(bool_0)
    var_0 = link_3.__hash__()
    assert var_0 == 0
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__hash__()
    assert var_2 == 0
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_0)
    link_6 = module_0.Link(link_5)
    var_3 = link_6.__hash__()
    assert var_3 == -4606328870177462788
    var_4 = link_6.__repr__()
    assert (
        var_4
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    none_type_2 = None
    bool_1 = False
    link_7 = module_0.Link(none_type_2, fragment=bool_1)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == -5509142826951788791
    var_7 = var_6.__repr__()
    assert var_7 == "-5509142826951788791"
    var_8 = var_7.__repr__()
    assert var_8 == "'-5509142826951788791'"
    var_9 = var_7.__eq__(var_6)


def test_case_833():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__repr__()
    assert var_1 == "477042"
    var_2 = var_1.__repr__()
    assert var_2 == "'477042'"
    var_3 = var_2.__hash__()
    assert var_3 == 9175907747363719430
    var_4 = var_3.__hash__()
    assert var_4 == 2258378719722637577


def test_case_834():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_4 = module_0.Link(var_4, nofollow=var_4)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    link_5 = module_0.Link(var_4, nofollow=link_4)
    var_5 = link_0.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_835():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_1 = var_0.__hash__()
    assert var_1 == -3936900723769714473
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_2 = link_5.__repr__()
    assert (
        var_2
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_6 = module_0.Link(bool_2)
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_7 = module_0.Link(var_2, bytes_1)
    link_8 = module_0.Link(link_1)


def test_case_836():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    bool_4 = False
    link_4 = module_0.Link(bool_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_5.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_6 = module_0.Link(bool_5)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_7 = module_0.Link(var_4, var_5, nofollow=link_5)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_8 = module_0.Link(list_0, str_0)
    link_9 = module_0.Link(link_8)
    none_type_0 = None
    link_10 = module_0.Link(none_type_0, list_0)
    bool_6 = True
    link_11 = module_0.Link(bool_6, nofollow=bool_6)
    var_6 = link_11.__eq__(link_11)
    assert var_6 is True
    bool_7 = False
    bool_8 = False
    tuple_1 = (bool_8,)
    link_12 = module_0.Link(bool_7, fragment=tuple_1)
    var_7 = link_12.__hash__()
    assert var_7 == -8753497827991233192
    str_1 = "Dmfv; iJ001\n"
    none_type_1 = None
    link_13 = module_0.Link(str_1, fragment=none_type_1)
    link_14 = module_0.Link(str_1, nofollow=var_7)


def test_case_837():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_3 = var_1.__repr__()
    assert var_3 == "'0'"
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_2 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_2.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    var_6 = var_4.__hash__()
    assert var_6 == 0
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_7 = var_5.__repr__()
    assert var_7 == "'0'"
    link_4 = module_0.Link(bool_1, var_6, var_4)
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_5 = module_0.Link(bool_2, fragment=tuple_0)
    var_8 = link_5.__hash__()
    assert var_8 == -8753497827991233192
    set_0 = {tuple_0, var_8, bool_3, bool_2}
    var_9 = var_8.__eq__(set_0)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_6 = module_0.Link(tuple_1, fragment=bool_4)
    var_10 = link_6.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    bool_6 = True
    link_7 = module_0.Link(bool_6, nofollow=bool_6)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_2)
    link_9 = module_0.Link(link_8)
    var_13 = link_9.__hash__()
    assert var_13 == -4606328870177462788
    var_14 = var_13.__hash__()
    assert var_14 == -2300485860963768837
    bool_7 = False
    link_10 = module_0.Link(bool_7)
    var_15 = link_10.__repr__()
    assert var_15 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_16 = var_13.__repr__()
    assert var_16 == "-4606328870177462788"
    link_11 = module_0.Link(var_4)


def test_case_838():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    bytes_0 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_0, nofollow=bytes_0)
    none_type_1 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_2 = link_3.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_4 = link_5.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = link_5.__repr__()
    assert (
        var_5
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    object_0 = module_1.object()
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_7 = var_6.__hash__()
    assert var_7 == 7957018345684386684
    var_8 = var_7.__repr__()
    assert var_8 == "7957018345684386684"
    link_7 = module_0.Link(object_0, var_8)
    var_9 = link_7.__repr__()
    int_0 = 3199
    link_8 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_10 = link_3.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_839():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(object_0)


def test_case_840():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    int_0 = 1870
    link_2 = module_0.Link(int_0)
    dict_0 = {link_2: link_2}
    link_3 = module_0.Link(dict_0, fragment=dict_0)
    var_1 = link_3.__repr__()
    assert (
        var_1
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_3 = var_1.__eq__(var_1)
    var_4 = var_3.__hash__()
    int_1 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_4 = module_0.Link(bytes_0)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_6 = var_5.__eq__(int_1)
    var_7 = var_6.__repr__()
    var_8 = var_7.__eq__(int_1)
    bool_0 = True
    link_5 = module_0.Link(bool_0, nofollow=bool_0)
    var_9 = link_5.__eq__(link_5)
    assert var_9 is True
    none_type_1 = None
    bool_1 = True
    link_6 = module_0.Link(bool_1, nofollow=bool_1)
    var_10 = link_6.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_1)
    link_7 = module_0.Link(link_6)
    link_8 = module_0.Link(var_10, fragment=none_type_1)
    var_12 = link_8.__hash__()
    assert var_12 == 477042
    var_13 = var_12.__repr__()
    assert var_13 == "477042"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    bool_2 = True
    link_10 = module_0.Link(bool_2)
    var_14 = link_10.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_11 = module_0.Link(float_0, fragment=var_14)
    link_12 = module_0.Link(float_0, fragment=link_10)
    object_0 = module_1.object()
    link_13 = module_0.Link(object_0, fragment=object_0)
    var_15 = link_13.__hash__()
    assert var_15 == 0
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_14 = module_0.Link(bytes_2)
    link_15 = module_0.Link(link_14)
    var_16 = link_15.__hash__()
    assert var_16 == -4606328870177462788
    var_17 = var_16.__hash__()
    assert var_17 == -2300485860963768837
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_16 = module_0.Link(tuple_0, fragment=bool_3)
    var_18 = link_16.__hash__()
    assert var_18 == -5164621852614943975
    var_19 = var_18.__repr__()
    assert var_19 == "-5164621852614943975"
    var_20 = var_18.__repr__()
    assert var_20 == "-5164621852614943975"
    var_21 = link_2.__repr__()
    assert var_21 == "Link(url=1870, text='', fragment='', nofollow=False)"


def test_case_841():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    str_0 = "Dmfv; iJ001\n"
    none_type_1 = None
    link_2 = module_0.Link(str_0, fragment=none_type_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_3 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_3.__hash__()
    assert var_0 == -8753497827991233192
    link_4 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_4.__repr__()
    assert (
        var_1
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_2 = var_1.__eq__(bytes_0)


def test_case_842():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_6 = module_0.Link(var_2, nofollow=var_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_3 = True
    link_8 = module_0.Link(bool_3)
    var_3 = link_8.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_9 = module_0.Link(float_0, fragment=var_3)
    var_4 = link_8.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_2 = b"-5164621852614943975"
    link_10 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_5 = link_10.__repr__()
    assert (
        var_5
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    var_6 = var_1.__hash__()
    assert var_6 == 8180931366657057343


def test_case_843():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == -3936900723769714473


def test_case_844():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__repr__()
    assert var_2 == "0"
    var_3 = var_1.__hash__()
    assert var_3 == 0
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, fragment=none_type_0)
    var_4 = link_5.__hash__()
    assert var_4 == 0
    var_5 = var_4.__hash__()
    assert var_5 == 0
    var_6 = var_4.__eq__(var_4)
    var_7 = var_2.__eq__(var_0)


def test_case_845():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_2 = link_2.__hash__()
    assert var_2 == -4606328870177462788
    bool_2 = True
    link_3 = module_0.Link(bool_2)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_0)
    link_4 = module_0.Link(var_2)
    bool_3 = False
    link_5 = module_0.Link(bool_3)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_6 = module_0.Link(var_5, nofollow=var_5)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    var_6 = link_5.__hash__()
    assert var_6 == 0


def test_case_846():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_1 = None
    link_1 = module_0.Link(none_type_1, fragment=none_type_1)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = var_0.__eq__(var_0)
    none_type_2 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_6 = link_2.__hash__()
    assert var_6 == 0
    var_7 = var_5.__hash__()
    assert var_7 == 5710265117276615615


def test_case_847():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_5 = module_0.Link(var_2, var_3, nofollow=link_3)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, nofollow=none_type_0)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(url=None, text='', fragment='', nofollow=None)"
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_7 = module_0.Link(list_0, str_0)
    link_8 = module_0.Link(link_7)
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, list_0)
    int_0 = 3199
    link_10 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_5 = var_1.__repr__()
    assert (
        var_5
        == "'Link(url=Link(url=b\"\\\\xb3\\\\xa6L\\'#\\\\xe0\\\\x91\\\\t\", text=\\'\\', fragment=\\'\\', nofollow=False), text=\\'\\', fragment=\\'\\', nofollow=False)'"
    )


def test_case_848():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    link_2 = module_0.Link(var_0, fragment=none_type_0)
    var_2 = link_2.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__repr__()
    assert var_3 == "477042"
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_4 = link_4.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__hash__()
    assert var_6 == -552935834187556073
    int_0 = 3199
    link_5 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_3 = False
    link_6 = module_0.Link(bool_3)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=False, text='', fragment='', nofollow=False)"
    none_type_2 = None
    bool_4 = True
    link_7 = module_0.Link(bool_4, nofollow=bool_4)
    var_9 = link_7.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_2)
    link_8 = module_0.Link(bool_1)


def test_case_849():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_1 = link_3.__hash__()
    assert var_1 == -4606328870177462788
    bool_2 = True
    link_4 = module_0.Link(bool_2)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_3 = var_1.__eq__(bytes_0)
    var_4 = var_3.__hash__()
    bool_3 = True
    link_5 = module_0.Link(bool_3, fragment=bool_3)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == 4729962515010671871
    var_7 = var_6.__repr__()
    assert var_7 == "4729962515010671871"
    link_6 = module_0.Link(var_7)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    var_8 = link_6.__hash__()
    assert var_8 == -6813877331771076914
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_7.__hash__()
    assert var_9 == 0
    var_10 = var_9.__repr__()
    assert var_10 == "0"
    var_11 = var_9.__hash__()
    assert var_11 == 0
    bool_4 = False
    link_8 = module_0.Link(bool_4)
    var_12 = var_10.__repr__()
    assert var_12 == "'0'"
    link_9 = module_0.Link(bool_4, var_11, var_9)
    bool_5 = True
    link_10 = module_0.Link(bool_5, bool_5, nofollow=bool_5)
    var_13 = link_10.__hash__()
    assert var_13 == 1
    var_14 = link_4.__hash__()
    assert var_14 == 1


def test_case_850():
    complex_0 = -2489 + 3297.83623j
    link_0 = module_0.Link(complex_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1172959022599657258
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_1.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    int_0 = 3199
    link_3 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_4 = link_3.__hash__()
    assert var_4 == 3199
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_4.__hash__()
    assert var_5 == 0
    var_6 = var_5.__repr__()
    assert var_6 == "0"
    var_7 = var_5.__hash__()
    assert var_7 == 0
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_5.__hash__()
    assert var_8 == 0
    var_9 = var_8.__repr__()
    assert var_9 == "0"
    var_10 = var_8.__hash__()
    assert var_10 == 0
    bool_3 = False
    link_6 = module_0.Link(bool_3)
    var_11 = var_9.__repr__()
    assert var_11 == "'0'"
    link_7 = module_0.Link(bool_3, var_10, var_8)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_8 = module_0.Link(tuple_1, fragment=bool_4)
    var_12 = link_8.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__repr__()
    assert var_14 == "-5164621852614943975"
    none_type_0 = None
    link_9 = module_0.Link(none_type_0, bool_5)
    bytes_2 = b"-5164621852614943975"
    link_10 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_15 = link_10.__hash__()
    assert var_15 == 0
    var_16 = var_15.__repr__()
    assert var_16 == "0"
    link_11 = module_0.Link(bool_5)


def test_case_851():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == 4128530656735687579
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_2 = link_3.__hash__()
    assert var_2 == -4606328870177462788
    bool_0 = True
    link_4 = module_0.Link(bool_0)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_0)
    link_5 = module_0.Link(var_4, var_4)
    str_0 = "Dmfv; iJ001\n"
    none_type_1 = None
    link_6 = module_0.Link(str_0, fragment=none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_1 = True
    link_8 = module_0.Link(bool_1)
    var_5 = link_8.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_9 = module_0.Link(float_0, fragment=var_5)
    var_6 = link_8.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    object_0 = module_1.object()
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2)
    var_7 = link_10.__repr__()
    assert var_7 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == 7957018345684386684
    var_9 = var_8.__repr__()
    assert var_9 == "7957018345684386684"
    link_11 = module_0.Link(object_0, var_9)
    var_10 = link_11.__repr__()
    bool_2 = False
    link_12 = module_0.Link(bool_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_2, bytes_2)
    var_11 = link_13.__repr__()
    assert (
        var_11
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_14 = module_0.Link(bool_3)
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    object_1 = module_1.object()
    link_15 = module_0.Link(object_1, fragment=object_1)
    var_13 = link_15.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(object_1)
    link_16 = module_0.Link(none_type_0, fragment=bool_3)


def test_case_852():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    var_1 = link_1.__eq__(link_0)
    assert var_1 is False
    var_2 = var_1.__eq__(var_0)
    assert var_2 is False


def test_case_853():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    link_2 = module_0.Link(var_0, fragment=none_type_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    none_type_2 = None
    link_4 = module_0.Link(none_type_2, nofollow=none_type_2)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=None, text='', fragment='', nofollow=None)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_5 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_5.__hash__()
    assert var_3 == -8753497827991233192
    link_6 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_5.__hash__()
    assert var_4 == -8753497827991233192
    link_7 = module_0.Link(var_3)


def test_case_854():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    int_0 = 2105
    none_type_1 = None
    link_1 = module_0.Link(int_0, none_type_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, int_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_1 = link_2.__hash__()
    assert var_1 == -1122340555193368221
    var_2 = var_1.__repr__()
    assert var_2 == "-1122340555193368221"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_3 = link_4.__hash__()
    assert var_3 == -4606328870177462788
    none_type_2 = None
    bool_0 = False
    link_5 = module_0.Link(none_type_2, fragment=bool_0)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_5 = var_4.__hash__()
    assert var_5 == -5509142826951788791
    var_6 = var_5.__repr__()
    assert var_6 == "-5509142826951788791"
    var_7 = var_6.__repr__()
    assert var_7 == "'-5509142826951788791'"
    none_type_3 = None
    bool_1 = True
    link_6 = module_0.Link(bool_1, nofollow=bool_1)
    var_8 = link_6.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_10 = link_6.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_8 = module_0.Link(link_6)
    bytes_2 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_11 = link_9.__hash__()
    assert var_11 == 0
    object_0 = module_1.object()
    link_10 = module_0.Link(object_0, fragment=object_0)
    var_12 = link_10.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(object_0)
    var_14 = var_4.__hash__()
    assert var_14 == -5509142826951788791


def test_case_855():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_3 = link_1.__hash__()
    assert var_3 == 3199
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_4 = link_3.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = link_3.__repr__()
    assert (
        var_5
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    bool_0 = True
    link_4 = module_0.Link(bool_0, nofollow=bool_0)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, none_type_0)
    var_7 = var_6.__eq__(var_6)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_1 = False
    link_7 = module_0.Link(bool_1)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_8 = module_0.Link(var_8, nofollow=var_8)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    link_9 = module_0.Link(var_8, nofollow=link_8)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_2)
    link_11 = module_0.Link(link_10)
    var_9 = link_11.__hash__()
    assert var_9 == -4606328870177462788
    bool_2 = True
    link_12 = module_0.Link(bool_2)
    var_10 = link_12.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_11 = var_9.__eq__(bytes_2)
    var_12 = var_11.__hash__()
    var_13 = link_5.__hash__()
    assert var_13 == 0


def test_case_856():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_1 = link_2.__hash__()
    assert var_1 == -4606328870177462788
    var_2 = var_1.__hash__()
    assert var_2 == -2300485860963768837
    int_0 = 3199
    link_3 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, link_4)
    var_4 = link_5.__eq__(link_5)
    assert var_4 is True
    object_1 = module_1.object()
    link_6 = module_0.Link(object_1, fragment=object_1)
    link_7 = module_0.Link(object_1, none_type_0)
    var_5 = var_1.__repr__()
    assert var_5 == "-4606328870177462788"


def test_case_857():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_0.__hash__()
    assert var_1 == -8753497827991233192
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_0 = None
    bool_4 = True
    link_3 = module_0.Link(bool_4, nofollow=bool_4)
    var_5 = link_3.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    link_4 = module_0.Link(link_3)
    link_5 = module_0.Link(var_5, fragment=none_type_0)
    bool_5 = False
    none_type_1 = None
    link_6 = module_0.Link(bool_5, fragment=none_type_1)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_7 = module_0.Link(tuple_2, fragment=bool_6)
    var_8 = link_7.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__repr__()
    assert var_10 == "-5164621852614943975"
    none_type_2 = None
    bool_8 = True
    link_8 = module_0.Link(bool_8, nofollow=bool_8)
    var_11 = link_8.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_2)
    var_13 = var_11.__repr__()
    assert var_13 == "0"
    none_type_3 = None
    link_9 = module_0.Link(none_type_3, fragment=none_type_3)
    var_14 = link_9.__repr__()
    assert var_14 == "Link(url=None, text='', fragment=None, nofollow=False)"
    link_10 = module_0.Link(var_14)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    var_15 = link_10.__repr__()
    assert (
        var_15
        == "Link(url=b\"Link(url=None, text='', fragment=None, nofollow=False)\", text='', fragment='', nofollow=False)"
    )
    none_type_4 = None
    bool_9 = True
    link_11 = module_0.Link(bool_9, nofollow=bool_9)
    var_16 = link_11.__hash__()
    assert var_16 == 0
    var_17 = var_16.__eq__(none_type_4)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_0, bytes_0)
    var_18 = link_11.__repr__()
    assert var_18 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_13 = module_0.Link(var_3)


def test_case_858():
    complex_0 = -1110.69549 - 569.4j
    link_0 = module_0.Link(complex_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xe32\x8d\x1e"
    none_type_0 = None
    link_1 = module_0.Link(link_0, bytes_0, nofollow=none_type_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )


def test_case_859():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_0 = False
    link_5 = module_0.Link(bool_0)
    var_1 = link_5.__repr__()
    assert var_1 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_6 = module_0.Link(var_1, nofollow=var_1)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    link_7 = module_0.Link(var_1, nofollow=link_6)
    link_8 = module_0.Link(link_2, nofollow=none_type_1)
    var_2 = link_8.__hash__()
    assert var_2 == 477042


def test_case_860():
    bytes_0 = b"O\xf3\x8ez\x9cB\xfdi\xa1"
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__repr__()
    assert var_1 == "477042"
    var_2 = var_1.__eq__(bytes_0)


def test_case_861():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    link_4 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_4.__repr__()
    assert (
        var_4
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    none_type_1 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_6.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_1)
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    var_8 = link_7.__repr__()
    var_9 = link_7.__hash__()
    assert var_9 == 0
    bool_4 = True
    link_8 = module_0.Link(bool_4, fragment=bool_4)
    var_10 = link_8.__repr__()
    assert var_10 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_11 = var_10.__hash__()
    assert var_11 == 4729962515010671871
    var_12 = var_11.__repr__()
    assert var_12 == "4729962515010671871"
    link_9 = module_0.Link(var_12)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    var_13 = link_9.__hash__()
    assert var_13 == -6813877331771076914
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    bool_5 = True
    link_11 = module_0.Link(bool_5)
    var_14 = link_11.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_12 = module_0.Link(float_0, fragment=var_14)
    var_15 = link_11.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=False)"
    int_0 = 1870
    link_13 = module_0.Link(int_0)
    dict_0 = {link_13: link_13}
    link_14 = module_0.Link(dict_0, fragment=dict_0)
    var_16 = link_14.__repr__()
    assert (
        var_16
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_17 = var_16.__repr__()
    assert (
        var_17
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    bool_6 = True
    bool_7 = False
    tuple_1 = (bool_6, bool_7)
    link_15 = module_0.Link(tuple_1, fragment=bool_6)
    var_18 = link_15.__hash__()
    assert var_18 == -5164621852614943975
    var_19 = var_18.__repr__()
    assert var_19 == "-5164621852614943975"
    var_20 = link_15.__repr__()
    assert var_20 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    link_16 = module_0.Link(var_3, fragment=var_19, nofollow=bytes_1)


def test_case_862():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_1 = module_0.Link(var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_2 = var_1.__hash__()
    assert var_2 == 7957018345684386684
    var_3 = var_2.__repr__()
    assert var_3 == "7957018345684386684"
    link_3 = module_0.Link(object_0, var_3)
    var_4 = link_3.__repr__()
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, link_4)
    var_5 = link_5.__eq__(link_5)
    assert var_5 is True
    object_1 = module_1.object()
    link_6 = module_0.Link(object_1, fragment=object_1)
    link_7 = module_0.Link(object_1, none_type_1)
    link_8 = module_0.Link(var_4)


def test_case_863():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, bool_2)
    link_3 = module_0.Link(var_4)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"


def test_case_864():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_1)
    var_2 = var_0.__eq__(bytes_0)
    bytes_2 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__repr__()
    assert var_4 == "0"
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_3 = module_0.Link(list_0, str_0)
    link_4 = module_0.Link(link_3)
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, list_0)
    var_5 = link_1.__hash__()
    assert var_5 == -3421725075186203833


def test_case_865():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(none_type_0, bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=True, fragment='', nofollow=False)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(url=None, text=True, fragment='', nofollow=False)\""


def test_case_866():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    link_0 = module_0.Link(object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    var_1 = var_0.__repr__()
    var_2 = var_1.__hash__()


def test_case_867():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_3 = module_0.Link(float_0, fragment=var_0)
    link_4 = module_0.Link(float_0, fragment=link_2)
    bool_1 = True
    link_5 = module_0.Link(bool_1, nofollow=bool_1)
    link_6 = module_0.Link(link_5, link_5)
    none_type_1 = None
    bool_2 = True
    link_7 = module_0.Link(none_type_1, bool_2)
    var_1 = link_7.__repr__()
    assert var_1 == "Link(url=None, text=True, fragment='', nofollow=False)"
    var_2 = var_1.__repr__()
    assert var_2 == "\"Link(url=None, text=True, fragment='', nofollow=False)\""
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, nofollow=none_type_2)
    bool_3 = False
    link_9 = module_0.Link(bool_3)
    var_3 = link_9.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_10 = module_0.Link(var_3, nofollow=var_3)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    link_11 = module_0.Link(var_3, nofollow=link_10)
    bool_4 = False
    bool_5 = False
    tuple_0 = (bool_5,)
    link_12 = module_0.Link(bool_4, fragment=tuple_0)
    var_4 = link_12.__hash__()
    assert var_4 == -8753497827991233192
    link_13 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = link_13.__hash__()
    assert var_5 == -1835968800350151339
    var_6 = var_5.__hash__()
    assert var_6 == -1835968800350151339
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    link_14 = module_0.Link(object_0)
    var_7 = link_14.__repr__()
    var_8 = var_7.__repr__()
    var_9 = var_8.__hash__()
    bool_6 = True
    link_15 = module_0.Link(bool_6, nofollow=bool_6)
    var_10 = link_15.__eq__(link_15)
    assert var_10 is True
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_16 = module_0.Link(bytes_1, bytes_1)
    var_11 = link_16.__hash__()
    assert var_11 == 0
    var_12 = var_11.__repr__()
    assert var_12 == "0"
    var_13 = var_11.__hash__()
    assert var_13 == 0
    bool_7 = False
    link_17 = module_0.Link(bool_7)
    var_14 = var_12.__repr__()
    assert var_14 == "'0'"
    none_type_3 = None
    bool_8 = True
    link_18 = module_0.Link(bool_8, nofollow=bool_8)
    var_15 = link_18.__hash__()
    assert var_15 == 0
    var_16 = var_15.__eq__(none_type_3)
    var_17 = link_18.__repr__()
    assert var_17 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_868():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    var_0 = link_1.__hash__()
    assert var_0 == 5
    var_1 = var_0.__eq__(float_0)
    bytes_1 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_0 = False
    link_3 = module_0.Link(bool_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_4 = module_0.Link(var_3, nofollow=var_3)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    int_0 = 3199
    link_5 = module_0.Link(int_0, int_0, nofollow=int_0)
    link_6 = module_0.Link(int_0, nofollow=link_1)


def test_case_869():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_1 = var_0.__eq__(int_0)


def test_case_870():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_0.__repr__()
    assert var_2 == "0"
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_3 = link_1.__repr__()
    assert (
        var_3
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    var_4 = link_0.__eq__(link_1)
    assert var_4 is False


def test_case_871():
    list_0 = []
    link_0 = module_0.Link(list_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=[], text='', fragment='', nofollow=False)"


def test_case_872():
    bool_0 = False
    none_type_0 = None
    link_0 = module_0.Link(bool_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    var_2 = link_2.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__repr__()
    assert var_3 == "477042"
    var_4 = var_3.__repr__()
    assert var_4 == "'477042'"
    var_5 = var_4.__hash__()
    assert var_5 == 9175907747363719430
    var_6 = var_5.__hash__()
    assert var_6 == 2258378719722637577
    none_type_2 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_7 = link_3.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_2)
    int_0 = 2105
    none_type_3 = None
    link_4 = module_0.Link(int_0, none_type_3)
    var_9 = link_4.__repr__()
    assert var_9 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_5 = module_0.Link(var_9, int_0)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_10 = link_5.__hash__()
    assert var_10 == -1122340555193368221
    var_11 = var_10.__repr__()
    assert var_11 == "-1122340555193368221"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    bool_2 = True
    link_7 = module_0.Link(bool_2)
    var_12 = link_7.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_8 = module_0.Link(float_0, fragment=var_12)
    var_13 = link_0.__hash__()
    assert var_13 == 477042


def test_case_873():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_2.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_3 = module_0.Link(bytes_1)
    var_2 = var_0.__eq__(bytes_0)
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_2, bytes_2)
    bool_0 = True
    link_6 = module_0.Link(bool_0)
    var_3 = link_6.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_7 = module_0.Link(float_1, fragment=var_3)
    var_4 = link_6.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    int_1 = 3199
    link_8 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_5 = link_8.__repr__()
    assert var_5 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_9 = module_0.Link(bool_1, fragment=tuple_0)
    var_6 = link_9.__hash__()
    assert var_6 == -8753497827991233192
    link_10 = module_0.Link(var_6, var_6, nofollow=var_6)
    var_7 = link_10.__repr__()
    assert (
        var_7
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    link_11 = module_0.Link(link_10, link_8)


def test_case_874():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_1.__hash__()
    assert var_0 == -8753497827991233192
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_1 = link_3.__hash__()
    assert var_1 == -4606328870177462788
    bool_2 = True
    link_4 = module_0.Link(bool_2)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_3 = var_1.__eq__(bytes_0)
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_5 = module_0.Link(bytes_1)
    var_4 = var_3.__hash__()


def test_case_875():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_1 = module_0.Link(bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_3 = var_2.__eq__(int_0)
    var_4 = var_3.__repr__()
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_2 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_2.__hash__()
    assert var_5 == 0
    var_6 = var_5.__repr__()
    assert var_6 == "0"
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_3 = module_0.Link(bytes_2)
    var_7 = var_5.__eq__(bytes_1)
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_3)
    link_5 = module_0.Link(link_4)
    var_8 = link_5.__hash__()
    assert var_8 == -4606328870177462788
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_6 = module_0.Link(tuple_1, fragment=bool_2)
    var_9 = link_6.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_9.__hash__()
    assert var_12 == -552935834187556073
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    var_13 = link_7.__repr__()
    var_14 = link_7.__hash__()
    assert var_14 == 0
    none_type_0 = None
    link_8 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_15 = link_8.__repr__()
    assert var_15 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_9 = module_0.Link(var_15, nofollow=link_8)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    var_16 = link_9.__hash__()
    assert var_16 == 4128530656735687579
    bool_4 = True
    link_10 = module_0.Link(bool_4, nofollow=bool_4)
    var_17 = link_10.__eq__(link_10)
    assert var_17 is True
    link_11 = module_0.Link(tuple_0)


def test_case_876():
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_0 = module_0.Link(list_0, str_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, list_0)
    none_type_1 = None
    bool_0 = True
    link_3 = module_0.Link(none_type_1, bool_0)
    var_0 = link_3.__repr__()
    assert var_0 == "Link(url=None, text=True, fragment='', nofollow=False)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(url=None, text=True, fragment='', nofollow=False)\""
    var_2 = link_0.__repr__()
    assert (
        var_2
        == "Link(url=['kcc#-Y\\x0b?P?jv'], text='kcc#-Y\\x0b?P?jv', fragment='', nofollow=False)"
    )


def test_case_877():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    link_1 = module_0.Link(var_0, var_1, var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    link_2 = module_0.Link(none_type_0, var_2, link_0)


def test_case_878():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    bool_0 = True
    link_1 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    var_3 = link_1.__hash__()
    assert var_3 == 1
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_4 = link_2.__hash__()
    assert var_4 == 0
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_3 = module_0.Link(bool_2, fragment=tuple_0)
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_0, var_5, bool_3, bool_2}
    var_6 = var_5.__eq__(set_0)
    none_type_2 = None
    link_4 = module_0.Link(none_type_2, nofollow=none_type_2)
    bool_4 = False
    link_5 = module_0.Link(bool_4)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_6 = module_0.Link(var_7, nofollow=var_7)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    link_7 = module_0.Link(var_7, nofollow=link_6)
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_8 = module_0.Link(list_0, str_0)
    link_9 = module_0.Link(link_8)
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, list_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_0, bytes_0)
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_12 = module_0.Link(tuple_1, fragment=bool_5)
    var_8 = link_12.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = link_12.__repr__()
    assert var_10 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_4 = None
    bool_7 = True
    link_13 = module_0.Link(none_type_4, bool_7)
    var_11 = link_13.__repr__()
    assert var_11 == "Link(url=None, text=True, fragment='', nofollow=False)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(url=None, text=True, fragment='', nofollow=False)\""
    int_0 = 401
    link_14 = module_0.Link(int_0, int_0)
    var_13 = link_6.__repr__()
    assert (
        var_13
        == "Link(url=b\"Link(url=False, text='', fragment='', nofollow=False)\", text='', fragment='', nofollow=\"Link(url=False, text='', fragment='', nofollow=False)\")"
    )


def test_case_879():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = True
    link_1 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == 1
    bool_3 = True
    link_2 = module_0.Link(bool_3, nofollow=bool_3)
    var_5 = link_2.__eq__(link_2)
    assert var_5 is True
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, link_3)
    var_6 = link_4.__eq__(link_4)
    assert var_6 is True
    var_7 = link_3.__hash__()
    assert var_7 == 5
    bool_4 = True
    list_0 = [bool_4, bool_4, bool_4]
    link_5 = module_0.Link(list_0)
    bool_5 = True
    link_6 = module_0.Link(bool_5, nofollow=bool_5)
    link_7 = module_0.Link(link_6, link_6)
    bool_6 = False
    bool_7 = False
    tuple_1 = (bool_7,)
    link_8 = module_0.Link(bool_6, fragment=tuple_1)
    var_8 = link_8.__hash__()
    assert var_8 == -8753497827991233192
    var_9 = var_8.__repr__()
    assert var_9 == "-8753497827991233192"


def test_case_880():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_2 = var_1.__hash__()
    assert var_2 == 7957018345684386684
    var_3 = var_2.__repr__()
    assert var_3 == "7957018345684386684"
    link_3 = module_0.Link(object_0, var_3)
    var_4 = link_3.__repr__()
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_4 = module_0.Link(list_0, str_0)
    link_5 = module_0.Link(link_4)
    bool_0 = False
    none_type_2 = None
    link_6 = module_0.Link(bool_0, fragment=none_type_2)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_7 = module_0.Link(tuple_0, fragment=bool_1)
    var_6 = link_7.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = link_7.__repr__()
    assert var_8 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    complex_0 = -1110.69549 - 569.4j
    link_8 = module_0.Link(complex_0)
    bytes_0 = b"\xe32\x8d\x1e"
    none_type_3 = None
    link_9 = module_0.Link(link_8, bytes_0, nofollow=none_type_3)
    var_9 = link_9.__repr__()
    assert (
        var_9
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_10 = var_9.__repr__()
    assert (
        var_10
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_11 = var_10.__repr__()
    assert (
        var_11
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    var_12 = link_7.__repr__()
    assert var_12 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    var_13 = var_12.__eq__(complex_0)


def test_case_881():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__hash__()
    assert var_4 == 0
    var_5 = var_3.__eq__(var_3)
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, none_type_1)
    var_7 = var_6.__eq__(var_6)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    list_0 = []
    link_5 = module_0.Link(list_0)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=[], text='', fragment='', nofollow=False)"
    var_9 = link_1.__hash__()
    assert var_9 == 0


def test_case_882():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_3 = var_0.__repr__()
    assert var_3 == "-4606328870177462788"
    var_4 = var_2.__repr__()
    assert var_4 == "\"Link(url=False, text='', fragment='', nofollow=False)\""
    var_5 = var_2.__eq__(var_4)


def test_case_883():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = link_0.__repr__()
    assert (
        var_1
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__hash__()
    assert var_3 == 0
    var_4 = link_1.__repr__()
    assert var_4 == "Link(url=None, text='', fragment=None, nofollow=False)"
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_1 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_6 = var_5.__eq__(int_0)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_2)
    link_5 = module_0.Link(link_4)
    var_7 = link_5.__hash__()
    assert var_7 == -4606328870177462788
    bool_0 = True
    link_6 = module_0.Link(bool_0)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_2)
    link_7 = module_0.Link(var_7)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_3, bytes_3)
    bytes_4 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_9 = module_0.Link(bytes_4)
    var_10 = var_1.__hash__()
    assert var_10 == -1649980800540593442


def test_case_884():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bool_2 = True
    link_4 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_2 = link_4.__hash__()
    assert var_2 == 1
    bool_3 = True
    link_5 = module_0.Link(bool_3, fragment=bool_3)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == 4729962515010671871
    var_5 = var_4.__repr__()
    assert var_5 == "4729962515010671871"
    link_6 = module_0.Link(var_5)
    var_6 = link_6.__hash__()
    assert var_6 == -6813877331771076914
    float_0 = 5.0
    link_7 = module_0.Link(float_0)
    none_type_0 = None
    link_8 = module_0.Link(none_type_0, link_7)
    var_7 = link_8.__eq__(link_8)
    assert var_7 is True
    var_8 = link_8.__eq__(link_7)
    assert var_8 is False
    var_9 = var_8.__eq__(var_7)
    assert var_9 is False
    int_0 = 3199
    link_9 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_10 = link_9.__repr__()
    assert var_10 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_10 = module_0.Link(var_10)
    var_11 = var_6.__eq__(link_4)


def test_case_885():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    int_1 = 1870
    link_1 = module_0.Link(int_1)
    dict_0 = {link_1: link_1}
    link_2 = module_0.Link(dict_0, fragment=dict_0)
    var_1 = link_2.__repr__()
    assert (
        var_1
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_3 = module_0.Link(bool_0, fragment=tuple_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    link_4 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_4.__repr__()
    assert (
        var_4
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_5 = module_0.Link(bool_2, fragment=tuple_1)
    var_5 = link_5.__hash__()
    assert var_5 == -8753497827991233192
    link_6 = module_0.Link(var_5, var_5, nofollow=var_5)
    var_6 = link_6.__repr__()
    assert (
        var_6
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_7 = module_0.Link(bytes_0, bytes_0)
    var_8 = link_7.__hash__()
    assert var_8 == 0
    var_9 = var_8.__repr__()
    assert var_9 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_8 = module_0.Link(bytes_1)
    var_10 = var_8.__eq__(bytes_0)
    none_type_0 = None
    bool_4 = True
    link_9 = module_0.Link(bool_4, nofollow=bool_4)
    var_11 = link_9.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_0)
    var_13 = var_1.__hash__()
    assert var_13 == -1330032713739969745


def test_case_886():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042


def test_case_887():
    int_0 = 584
    link_0 = module_0.Link(int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_888():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    var_1 = link_0.__hash__()
    assert var_1 == 1


def test_case_889():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_1 = var_0.__eq__(int_0)
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    bool_0 = False
    link_3 = module_0.Link(bool_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == -3936900723769714473
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, nofollow=none_type_0)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=None, text='', fragment='', nofollow=None)"
    bool_1 = True
    link_5 = module_0.Link(bool_1, nofollow=bool_1)
    link_6 = module_0.Link(link_5, link_5)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_7 = module_0.Link(tuple_0, fragment=bool_2)
    var_6 = link_7.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__eq__(tuple_0)
    var_9 = var_8.__repr__()
    none_type_1 = None
    bool_4 = True
    link_8 = module_0.Link(bool_4, nofollow=bool_4)
    var_10 = link_8.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_5 = False
    link_10 = module_0.Link(bool_5)
    link_11 = module_0.Link(var_10)


def test_case_890():
    complex_0 = -2489 + 3297.83623j
    link_0 = module_0.Link(complex_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1172959022599657258
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=True)"
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_0 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_2 = link_3.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_2 = True
    link_5 = module_0.Link(bool_2, nofollow=bool_2)
    link_6 = module_0.Link(var_0, fragment=link_3)


def test_case_891():
    bool_0 = False
    bytes_0 = b"]\xfe"
    int_0 = 3199
    tuple_0 = (bool_0, bytes_0, int_0, int_0)
    link_0 = module_0.Link(tuple_0, fragment=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0, nofollow=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == 3939945378486638560
    link_2 = module_0.Link(var_0, bytes_0, var_0)


def test_case_892():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 3199
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_2 = module_0.Link(bytes_1, bytes_1)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__repr__()
    assert var_3 == "0"
    bool_0 = True
    link_3 = module_0.Link(bool_0, nofollow=bool_0)
    link_4 = module_0.Link(link_3, link_3)
    none_type_0 = None
    link_5 = module_0.Link(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_2, bytes_2)
    bool_1 = False
    link_7 = module_0.Link(bool_1)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_3, bytes_3)
    var_4 = link_8.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_9 = module_0.Link(bool_2)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_10 = module_0.Link(var_4, var_5, nofollow=link_8)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    bool_3 = True
    link_11 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_11.__eq__(link_11)
    assert var_6 is True
    int_1 = 36
    bytes_4 = b"\xeb\xdc\xa3"
    link_12 = module_0.Link(bytes_4)
    var_7 = link_12.__repr__()
    assert var_7 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_8 = var_7.__eq__(int_1)
    var_9 = var_8.__repr__()
    var_10 = var_9.__eq__(int_1)
    var_11 = var_6.__hash__()
    assert var_11 == 1


def test_case_893():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    int_0 = 584
    link_1 = module_0.Link(int_0)
    none_type_0 = None
    bool_1 = False
    link_2 = module_0.Link(none_type_0, fragment=bool_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_2 = var_1.__hash__()
    assert var_2 == -5509142826951788791
    var_3 = var_2.__repr__()
    assert var_3 == "-5509142826951788791"
    var_4 = var_3.__repr__()
    assert var_4 == "'-5509142826951788791'"
    bytes_0 = b"O\xf3\x8ez\x9cB\xfdi\xa1"
    none_type_1 = None
    link_3 = module_0.Link(none_type_1)
    var_5 = link_3.__hash__()
    assert var_5 == 477042
    var_6 = var_5.__repr__()
    assert var_6 == "477042"
    var_7 = var_6.__eq__(bytes_0)
    none_type_2 = None
    link_4 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_5 = module_0.Link(var_8, nofollow=link_4)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_6 = module_0.Link(tuple_0, fragment=bool_2)
    var_9 = link_6.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = link_6.__repr__()
    assert var_11 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    link_7 = module_0.Link(link_1)
    var_12 = link_7.__repr__()
    assert (
        var_12
        == "Link(url=Link(url=584, text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )


def test_case_894():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_2 = link_5.__hash__()
    assert var_2 == -4606328870177462788
    none_type_0 = None
    link_6 = module_0.Link(none_type_0)
    bytes_2 = b"-5164621852614943975"
    link_7 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_3 = link_7.__hash__()
    assert var_3 == 0
    bool_2 = False
    none_type_1 = None
    link_8 = module_0.Link(bool_2, fragment=none_type_1)
    var_4 = link_8.__repr__()
    assert var_4 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_0 = module_1.object()
    link_9 = module_0.Link(object_0, fragment=object_0)
    var_5 = link_9.__hash__()
    assert var_5 == 0
    none_type_2 = None
    link_10 = module_0.Link(none_type_2)
    var_6 = link_10.__hash__()
    assert var_6 == 477042
    var_7 = var_6.__hash__()
    assert var_7 == 477042
    bool_3 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_11 = module_0.Link(var_7, fragment=bool_3, nofollow=complex_0)
    bool_4 = True
    link_12 = module_0.Link(bool_4, nofollow=bool_4)
    var_8 = link_12.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_3 = None
    link_13 = module_0.Link(none_type_3, none_type_3)
    var_9 = var_8.__eq__(var_8)
    float_0 = 5.0
    link_14 = module_0.Link(float_0)
    none_type_4 = None
    link_15 = module_0.Link(none_type_4, link_14)
    int_0 = 3199
    link_16 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_3 = b"-5164621852614943975"
    link_17 = module_0.Link(bytes_3, nofollow=bytes_3)
    var_10 = link_17.__repr__()
    assert (
        var_10
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_18 = module_0.Link(bytes_4)
    link_19 = module_0.Link(link_18)
    var_11 = link_19.__hash__()
    assert var_11 == -4606328870177462788
    var_12 = var_11.__hash__()
    assert var_12 == -2300485860963768837
    link_20 = module_0.Link(link_19, nofollow=link_2)


def test_case_895():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    var_1 = link_4.__hash__()
    assert var_1 == 477042
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, nofollow=none_type_1)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(url=None, text='', fragment='', nofollow=None)"
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_6.__hash__()
    assert var_3 == 0
    var_4 = var_3.__repr__()
    assert var_4 == "0"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_7 = module_0.Link(tuple_0, fragment=bool_1)
    var_5 = link_7.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    bool_3 = False
    link_8 = module_0.Link(bool_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_7 = link_9.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_10 = module_0.Link(bool_4)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_11 = module_0.Link(bytes_1, nofollow=bool_3)


def test_case_896():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__repr__()
    assert var_1 == "477042"
    var_2 = var_1.__repr__()
    assert var_2 == "'477042'"
    var_3 = var_2.__hash__()
    assert var_3 == 9175907747363719430
    var_4 = var_3.__hash__()
    assert var_4 == 2258378719722637577
    none_type_1 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_5 = link_1.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    link_2 = module_0.Link(link_1)
    link_3 = module_0.Link(var_5, fragment=none_type_1)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_4 = module_0.Link(bool_1, fragment=tuple_0)
    var_7 = link_4.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_0, var_7, bool_2, bool_1}
    var_8 = var_7.__eq__(set_0)
    var_9 = link_4.__hash__()
    assert var_9 == -8753497827991233192
    none_type_2 = None
    bool_3 = True
    link_5 = module_0.Link(bool_3, nofollow=bool_3)
    var_10 = link_5.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_2)
    link_6 = module_0.Link(link_5)
    link_7 = module_0.Link(var_8, nofollow=none_type_1)


def test_case_897():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_1.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__eq__(tuple_0)
    var_4 = var_3.__repr__()
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=False, text='', fragment='', nofollow=False)"
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_6 = link_4.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_1 = None
    link_5 = module_0.Link(link_4, fragment=none_type_1)
    int_1 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_6 = module_0.Link(bytes_0)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_9 = var_8.__eq__(int_1)
    var_10 = var_9.__repr__()
    var_11 = var_10.__eq__(int_1)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_12 = link_7.__hash__()
    assert var_12 == 0
    var_13 = var_12.__repr__()
    assert var_13 == "0"
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_8 = module_0.Link(bytes_2)
    link_9 = module_0.Link(link_8)
    float_0 = 196.4342
    link_10 = module_0.Link(float_0, nofollow=var_13)


def test_case_898():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    link_1 = module_0.Link(var_0, var_1, var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    link_2 = module_0.Link(none_type_0, var_2, link_0)
    complex_0 = -2489 + 3297.83623j
    link_3 = module_0.Link(complex_0)
    var_3 = link_3.__hash__()
    assert var_3 == 1172959022599657258
    var_4 = var_0.__hash__()
    assert var_4 == 2234852059487564994
    var_5 = var_4.__hash__()
    assert var_5 == 2234852059487564994


def test_case_899():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    var_1 = link_1.__eq__(link_0)
    assert var_1 is False
    var_2 = var_1.__eq__(var_0)
    assert var_2 is False
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_1 = None
    link_3 = module_0.Link(link_2, fragment=none_type_1)
    none_type_2 = None
    link_4 = module_0.Link(none_type_2, nofollow=none_type_2)
    bool_2 = True
    list_0 = [bool_2, bool_2, bool_2]
    link_5 = module_0.Link(list_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    bool_3 = True
    link_7 = module_0.Link(bool_3)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_8 = module_0.Link(float_1, fragment=var_5)
    link_9 = module_0.Link(float_1, fragment=link_7)
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_10 = module_0.Link(bool_4, fragment=tuple_1)
    var_6 = link_10.__hash__()
    assert var_6 == -8753497827991233192
    link_11 = module_0.Link(var_6, var_6, nofollow=var_6)
    var_7 = link_11.__repr__()
    assert (
        var_7
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_8 = link_10.__repr__()
    assert var_8 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    none_type_3 = None
    link_12 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    var_9 = link_12.__hash__()
    assert var_9 == 477042
    link_13 = module_0.Link(list_0)


def test_case_900():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__hash__()
    assert var_1 == 477042
    bool_0 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_1 = module_0.Link(var_1, fragment=bool_0, nofollow=complex_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_2 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_1 = None
    none_type_2 = None
    link_3 = module_0.Link(none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == 2234852059487564994
    var_7 = var_6.__eq__(none_type_1)
    link_4 = module_0.Link(var_4, none_type_2, bool_1)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"


def test_case_901():
    bool_0 = True
    bool_1 = True
    bytes_0 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -6712542186422229073
    var_1 = var_0.__repr__()
    assert var_1 == "-6712542186422229073"
    var_2 = var_1.__eq__(bool_1)
    var_3 = var_2.__hash__()
    var_4 = var_3.__eq__(bool_0)
    bool_2 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_1 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_6 = var_5.__eq__(bool_2)
    var_7 = var_6.__hash__()
    var_8 = var_7.__repr__()
    object_0 = module_1.object()
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1)
    var_9 = link_2.__repr__()
    assert var_9 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_10 = var_9.__hash__()
    assert var_10 == 7957018345684386684
    var_11 = var_10.__repr__()
    assert var_11 == "7957018345684386684"
    link_3 = module_0.Link(object_0, var_11)
    var_12 = link_3.__repr__()
    object_1 = module_1.object()
    none_type_2 = None
    link_4 = module_0.Link(object_1, fragment=none_type_2)
    var_13 = link_4.__hash__()
    bool_3 = True
    link_5 = module_0.Link(bool_3, bool_3, nofollow=bool_3)
    var_14 = link_5.__hash__()
    assert var_14 == 1
    var_15 = link_5.__hash__()
    assert var_15 == 1
    bool_4 = False
    link_6 = module_0.Link(bool_4)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_16 = link_7.__repr__()
    assert (
        var_16
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_8 = module_0.Link(bool_5)
    var_17 = var_16.__repr__()
    assert (
        var_17
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_9 = module_0.Link(var_16, var_17, nofollow=link_7)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_10 = module_0.Link(list_0, str_0)
    link_11 = module_0.Link(link_10)
    none_type_3 = None
    link_12 = module_0.Link(none_type_3, list_0)
    link_13 = module_0.Link(list_0, fragment=var_1)


def test_case_902():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    int_0 = 1870
    link_2 = module_0.Link(int_0)
    dict_0 = {link_2: link_2}
    link_3 = module_0.Link(dict_0, fragment=dict_0)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_5 = var_3.__eq__(var_3)
    var_6 = var_5.__hash__()
    bytes_0 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_0, nofollow=bytes_0)
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    var_7 = link_5.__hash__()
    assert var_7 == 5
    var_8 = var_7.__eq__(float_0)
    none_type_1 = None
    bool_2 = True
    link_6 = module_0.Link(bool_2, nofollow=bool_2)
    var_9 = link_6.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_8 = module_0.Link(var_11, nofollow=var_11)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    var_12 = var_1.__repr__()
    assert var_12 == "'-5164621852614943975'"


def test_case_903():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    complex_0 = 2717.25865 + 279.6823j
    bytes_0 = b"xC(\xd2O"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    link_1 = module_0.Link(set_0, none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == -2938861455928792573
    var_5 = var_4.__hash__()
    assert var_5 == -633018446715098622
    var_6 = var_5.__eq__(complex_0)
    list_0 = []
    link_2 = module_0.Link(list_0)
    var_7 = link_2.__repr__()
    assert var_7 == "Link(url=[], text='', fragment='', nofollow=False)"
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    var_8 = link_3.__repr__()
    var_9 = link_3.__hash__()
    assert var_9 == 0
    none_type_1 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_10 = link_4.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_12 = link_4.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_13 = link_4.__hash__()
    assert var_13 == 0
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    var_14 = link_6.__hash__()
    assert var_14 == 477042
    var_15 = var_14.__repr__()
    assert var_15 == "477042"
    var_16 = var_15.__repr__()
    assert var_16 == "'477042'"
    var_17 = var_16.__hash__()
    assert var_17 == 9175907747363719430
    var_18 = var_17.__hash__()
    assert var_18 == 2258378719722637577
    bool_3 = True
    link_7 = module_0.Link(bool_3, bool_3, nofollow=bool_3)
    var_19 = link_7.__hash__()
    assert var_19 == 1
    var_20 = link_7.__hash__()
    assert var_20 == 1
    none_type_3 = None
    link_8 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    bool_4 = False
    link_9 = module_0.Link(bool_4)
    var_21 = var_18.__repr__()
    assert var_21 == "2258378719722637577"


def test_case_904():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    complex_0 = 2717.25865 + 279.6823j
    bytes_1 = b"xC(\xd2O"
    set_0 = {bytes_1, bytes_1, bytes_1}
    none_type_0 = None
    link_3 = module_0.Link(set_0, none_type_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == -2938861455928792573
    var_5 = var_4.__hash__()
    assert var_5 == -633018446715098622
    var_6 = var_5.__eq__(complex_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_5 = module_0.Link(tuple_0, fragment=bool_1)
    var_7 = link_5.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__hash__()
    assert var_9 == -552935834187556073
    bool_3 = True
    link_6 = module_0.Link(bool_3, bool_3, nofollow=bool_3)
    var_10 = link_6.__hash__()
    assert var_10 == 1
    bool_4 = True
    link_7 = module_0.Link(bool_4, nofollow=bool_4)
    link_8 = module_0.Link(link_7, link_7)
    int_0 = 3199
    link_9 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_12 = var_11.__hash__()
    assert var_12 == -3203539594471298528
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_10 = module_0.Link(tuple_1, fragment=bool_5)
    var_13 = link_10.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__repr__()
    assert var_15 == "-5164621852614943975"
    none_type_2 = None
    link_11 = module_0.Link(none_type_2, bool_6)
    bool_7 = False
    bool_8 = False
    tuple_2 = (bool_8,)
    link_12 = module_0.Link(bool_7, fragment=tuple_2)
    var_16 = link_12.__hash__()
    assert var_16 == -8753497827991233192
    set_1 = {tuple_2, var_16, bool_8, bool_7}
    var_17 = var_16.__eq__(set_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_2, bytes_2)
    bool_9 = True
    link_14 = module_0.Link(bool_9)
    var_18 = link_14.__repr__()
    assert var_18 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_15 = module_0.Link(float_0, fragment=var_18)
    bool_10 = True
    link_16 = module_0.Link(bool_10, nofollow=bool_10)
    link_17 = module_0.Link(none_type_1, var_7, nofollow=var_1)


def test_case_905():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_0, var_3, bool_2, bool_1}
    var_4 = var_3.__eq__(set_0)
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    var_6 = link_3.__hash__()
    assert var_6 == -8753497827991233192
    none_type_0 = None
    bool_3 = True
    link_4 = module_0.Link(bool_3, nofollow=bool_3)
    var_7 = link_4.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_0)
    link_5 = module_0.Link(link_4)
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    link_6 = module_0.Link(object_0)
    var_9 = link_6.__repr__()
    var_10 = var_9.__repr__()
    var_11 = var_10.__hash__()
    bool_4 = True
    list_0 = [bool_4, bool_4, bool_4]
    link_7 = module_0.Link(list_0)
    var_12 = link_1.__repr__()
    assert (
        var_12
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )


def test_case_906():
    int_0 = 783
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_907():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_3 = var_1.__repr__()
    assert var_3 == "'0'"
    link_2 = module_0.Link(bool_0, var_2, var_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    link_4 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    object_0 = module_1.object()
    link_5 = module_0.Link(object_0, fragment=object_0)
    var_6 = link_5.__repr__()
    var_7 = link_5.__hash__()
    assert var_7 == 0
    bytes_1 = b"-5164621852614943975"
    link_6 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_8 = link_6.__hash__()
    assert var_8 == 0
    none_type_0 = None
    link_7 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_3 = False
    link_8 = module_0.Link(bool_3)
    var_9 = link_8.__repr__()
    assert var_9 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_9 = module_0.Link(var_9, nofollow=var_9)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    link_10 = module_0.Link(var_9, nofollow=link_9)
    dict_0 = {}
    object_1 = module_1.object(**dict_0)
    link_11 = module_0.Link(object_1)
    var_10 = link_11.__repr__()
    var_11 = var_10.__repr__()
    var_12 = var_11.__hash__()
    none_type_1 = None
    bool_4 = True
    link_12 = module_0.Link(bool_4, nofollow=bool_4)
    var_13 = link_12.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_2, bytes_2)
    var_15 = link_12.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_16 = var_14.__repr__()
    var_17 = var_16.__repr__()


def test_case_908():
    bool_0 = True
    bool_1 = True
    bytes_0 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -6712542186422229073
    var_1 = var_0.__repr__()
    assert var_1 == "-6712542186422229073"
    var_2 = var_1.__eq__(bool_1)
    var_3 = var_2.__hash__()
    var_4 = var_3.__eq__(bool_0)
    bool_2 = True
    list_0 = [bool_2, bool_2, bool_2]
    link_1 = module_0.Link(list_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_5 = link_3.__hash__()
    assert var_5 == -4606328870177462788
    bool_3 = True
    link_4 = module_0.Link(bool_3)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_1)
    link_5 = module_0.Link(var_7, var_7)
    none_type_0 = None
    bool_4 = True
    link_6 = module_0.Link(bool_4, nofollow=bool_4)
    var_8 = link_6.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_6.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_11 = link_6.__hash__()
    assert var_11 == 0
    bool_5 = False
    bool_6 = False
    tuple_0 = (bool_6,)
    link_8 = module_0.Link(bool_5, fragment=tuple_0)
    var_12 = link_8.__hash__()
    assert var_12 == -8753497827991233192
    link_9 = module_0.Link(var_12, var_12, nofollow=var_12)
    var_13 = link_9.__repr__()
    assert (
        var_13
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_14 = link_8.__repr__()
    assert var_14 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    int_0 = 401
    link_10 = module_0.Link(int_0, int_0)
    bool_7 = False
    link_11 = module_0.Link(bool_7)
    str_0 = "kcc#-Y\x0b?P?jv"
    list_1 = [str_0]
    link_12 = module_0.Link(list_1, str_0)
    link_13 = module_0.Link(link_12)
    none_type_1 = None
    link_14 = module_0.Link(none_type_1, list_1)
    float_0 = 5.0
    link_15 = module_0.Link(float_0)
    bytes_3 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_16 = module_0.Link(bytes_3, bytes_3)
    var_15 = link_16.__hash__()
    assert var_15 == 0
    var_16 = var_15.__repr__()
    assert var_16 == "0"
    var_17 = var_16.__repr__()
    assert var_17 == "'0'"
    var_18 = var_17.__hash__()
    assert var_18 == -5735607041429533499


def test_case_909():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bool_2 = False
    link_1 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_2.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_3 = module_0.Link(bool_3)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_4 = module_0.Link(var_3, bytes_0)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_5 = link_6.__hash__()
    assert var_5 == -4606328870177462788
    var_6 = var_5.__hash__()
    assert var_6 == -2300485860963768837
    bool_4 = False
    link_7 = module_0.Link(bool_4)
    var_7 = link_7.__repr__()
    assert var_7 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_8 = var_5.__repr__()
    assert var_8 == "-4606328870177462788"
    none_type_0 = None
    link_8 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_9 = link_8.__repr__()
    assert var_9 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_9 = module_0.Link(var_9, nofollow=link_8)
    var_10 = link_9.__hash__()
    assert var_10 == 4128530656735687579
    none_type_1 = None
    bool_5 = True
    link_10 = module_0.Link(bool_5, nofollow=bool_5)
    var_11 = link_10.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    var_13 = link_10.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_12 = module_0.Link(link_10)
    bytes_3 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_13 = module_0.Link(bytes_3, bytes_3)
    var_14 = link_13.__hash__()
    assert var_14 == 0
    var_15 = var_14.__repr__()
    assert var_15 == "0"
    var_16 = var_14.__hash__()
    assert var_16 == 0
    bool_6 = False
    link_14 = module_0.Link(bool_6)
    var_17 = var_15.__repr__()
    assert var_17 == "'0'"
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_15 = module_0.Link(bytes_4)
    link_16 = module_0.Link(link_15)
    var_18 = link_16.__hash__()
    assert var_18 == -4606328870177462788
    bool_7 = True
    link_17 = module_0.Link(bool_7)
    var_19 = link_17.__repr__()
    assert var_19 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_20 = var_18.__eq__(bytes_4)
    link_18 = module_0.Link(var_20, var_20)
    float_0 = 5.0
    link_19 = module_0.Link(float_0)
    none_type_2 = None
    link_20 = module_0.Link(none_type_2, link_19)
    var_21 = link_20.__eq__(link_20)
    assert var_21 is True
    var_22 = link_20.__eq__(link_19)
    assert var_22 is False
    var_23 = var_22.__eq__(var_21)
    assert var_23 is False
    bool_8 = True
    bool_9 = False
    tuple_1 = (bool_8, bool_9)
    link_21 = module_0.Link(tuple_1, fragment=bool_8)
    var_24 = link_21.__hash__()
    assert var_24 == -5164621852614943975
    var_25 = var_24.__repr__()
    assert var_25 == "-5164621852614943975"
    var_26 = var_24.__eq__(tuple_1)
    var_27 = link_20.__hash__()
    assert var_27 == 477047


def test_case_910():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=None, text='', fragment='', nofollow=None)"
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_3 = module_0.Link(var_3)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    none_type_1 = None
    bool_0 = True
    link_4 = module_0.Link(bool_0, nofollow=bool_0)
    var_4 = link_4.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    link_5 = module_0.Link(link_4)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_6 = link_7.__hash__()
    assert var_6 == -4606328870177462788
    var_7 = var_6.__hash__()
    assert var_7 == -2300485860963768837
    bool_1 = False
    link_8 = module_0.Link(bool_1)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_9 = var_6.__repr__()
    assert var_9 == "-4606328870177462788"
    bytes_2 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_9.__hash__()
    assert var_10 == 0
    var_11 = var_10.__repr__()
    assert var_11 == "0"
    var_12 = var_10.__hash__()
    assert var_12 == 0
    bool_2 = False
    link_10 = module_0.Link(bool_2)
    var_13 = var_11.__repr__()
    assert var_13 == "'0'"
    link_11 = module_0.Link(bool_2, var_12, var_10)
    var_14 = var_6.__eq__(link_1)


def test_case_911():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1)
    var_4 = link_2.__hash__()
    assert var_4 == 0
    var_5 = var_4.__hash__()
    assert var_5 == 0
    var_6 = var_4.__eq__(var_4)
    var_7 = var_5.__hash__()
    assert var_7 == 0
    none_type_2 = None
    none_type_3 = None
    link_3 = module_0.Link(none_type_3)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == 2234852059487564994
    var_10 = var_9.__eq__(none_type_2)
    link_4 = module_0.Link(var_8, var_9, var_8)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    link_5 = module_0.Link(object_0)
    var_11 = link_5.__repr__()
    var_12 = var_11.__repr__()
    var_13 = var_12.__hash__()
    none_type_4 = None
    link_6 = module_0.Link(none_type_4)
    var_14 = link_6.__hash__()
    assert var_14 == 477042
    var_15 = var_14.__hash__()
    assert var_15 == 477042
    bool_1 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_7 = module_0.Link(var_15, fragment=bool_1, nofollow=complex_0)
    int_0 = 3199
    link_8 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_16 = link_8.__hash__()
    assert var_16 == 3199
    link_9 = module_0.Link(var_10, nofollow=link_0)


def test_case_912():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    var_3 = link_0.__hash__()
    assert var_3 == -8753497827991233192
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_6 = link_1.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_3 = module_0.Link(link_1)
    none_type_1 = None
    bool_3 = True
    link_4 = module_0.Link(bool_3, nofollow=bool_3)
    var_7 = link_4.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    link_5 = module_0.Link(link_4)
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2)
    var_9 = link_6.__hash__()
    assert var_9 == 0
    var_10 = var_9.__hash__()
    assert var_10 == 0
    var_11 = link_6.__repr__()
    assert var_11 == "Link(url=None, text='', fragment=None, nofollow=False)"
    int_0 = 1870
    link_7 = module_0.Link(int_0)
    dict_0 = {link_7: link_7}
    link_8 = module_0.Link(dict_0, fragment=dict_0)
    var_12 = link_8.__repr__()
    assert (
        var_12
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_13 = var_12.__repr__()
    assert (
        var_13
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_14 = var_12.__eq__(var_12)
    var_15 = var_14.__hash__()
    bool_4 = True
    link_9 = module_0.Link(bool_4, bool_4, nofollow=bool_4)
    var_16 = link_9.__hash__()
    assert var_16 == 1
    var_17 = link_0.__eq__(link_7)
    assert var_17 is False


def test_case_913():
    complex_0 = -1110.69549 - 569.4j
    link_0 = module_0.Link(complex_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xe32\x8d\x1e"
    none_type_0 = None
    link_1 = module_0.Link(link_0, bytes_0, nofollow=none_type_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, link_2)
    var_3 = link_3.__eq__(link_3)
    assert var_3 is True
    var_4 = link_2.__hash__()
    assert var_4 == 5
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_4.__hash__()
    assert var_5 == 0
    var_6 = var_5.__repr__()
    assert var_6 == "0"
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_5 = module_0.Link(bytes_2)
    var_7 = var_5.__eq__(bytes_1)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_3, bytes_3)
    none_type_2 = None
    bool_0 = True
    link_7 = module_0.Link(bool_0, nofollow=bool_0)
    var_8 = link_7.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_2)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_4, bytes_4)
    var_10 = link_7.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_9 = module_0.Link(var_10, nofollow=var_10)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    bool_1 = False
    link_10 = module_0.Link(bool_1)
    var_11 = link_0.__hash__()
    assert var_11 == -4370702313674656577


def test_case_914():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    link_3 = module_0.Link(var_2, var_2)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_4 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_4.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_0, var_3, bool_2, bool_1}
    var_4 = var_3.__eq__(set_0)
    var_5 = link_4.__hash__()
    assert var_5 == -8753497827991233192
    bytes_1 = b"-5164621852614943975"
    link_5 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_6 = link_5.__repr__()
    assert (
        var_6
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_0 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_7 = link_6.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_0)
    link_7 = module_0.Link(link_6)
    link_8 = module_0.Link(var_7, fragment=none_type_0)
    bytes_2 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_2, nofollow=bytes_2)
    float_0 = 5.0
    link_10 = module_0.Link(float_0)
    var_9 = link_10.__hash__()
    assert var_9 == 5
    var_10 = var_9.__eq__(float_0)
    bool_4 = True
    bool_5 = True
    bytes_3 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_11 = module_0.Link(bytes_3)
    var_11 = link_11.__hash__()
    assert var_11 == -6712542186422229073
    var_12 = var_11.__repr__()
    assert var_12 == "-6712542186422229073"
    var_13 = var_12.__eq__(bool_5)
    var_14 = var_13.__hash__()
    var_15 = var_14.__eq__(bool_4)
    int_0 = 1870
    link_12 = module_0.Link(int_0)
    dict_0 = {link_12: link_12}
    link_13 = module_0.Link(dict_0, fragment=dict_0)
    var_16 = link_13.__repr__()
    assert (
        var_16
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_17 = var_16.__repr__()
    assert (
        var_17
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    object_0 = module_1.object()
    link_14 = module_0.Link(object_0, fragment=object_0)
    var_18 = link_14.__repr__()
    var_19 = link_14.__hash__()
    assert var_19 == 0
    var_20 = var_16.__eq__(var_6)


def test_case_915():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, fragment=none_type_0)
    var_2 = link_3.__hash__()
    assert var_2 == 0
    var_3 = var_2.__hash__()
    assert var_3 == 0
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=None, text='', fragment=None, nofollow=False)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_4 = module_0.Link(bool_1, fragment=tuple_0)
    var_5 = link_4.__hash__()
    assert var_5 == -8753497827991233192
    link_5 = module_0.Link(var_5, var_5, nofollow=var_5)
    var_6 = link_5.__hash__()
    assert var_6 == -1835968800350151339
    var_7 = var_6.__hash__()
    assert var_7 == -1835968800350151339
    none_type_1 = None
    bool_3 = False
    link_6 = module_0.Link(none_type_1, fragment=bool_3)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == -5509142826951788791
    var_10 = var_9.__repr__()
    assert var_10 == "-5509142826951788791"
    var_11 = var_10.__repr__()
    assert var_11 == "'-5509142826951788791'"
    bytes_1 = b"-5164621852614943975"
    link_7 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_12 = link_7.__hash__()
    assert var_12 == 0
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    var_13 = link_8.__hash__()
    assert var_13 == 477042
    complex_0 = -1110.69549 - 569.4j
    link_9 = module_0.Link(complex_0)
    bytes_2 = b"\xe32\x8d\x1e"
    none_type_3 = None
    link_10 = module_0.Link(link_9, bytes_2, nofollow=none_type_3)
    var_14 = link_10.__repr__()
    assert (
        var_14
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_15 = var_14.__repr__()
    assert (
        var_15
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_16 = var_15.__repr__()
    assert (
        var_16
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_3)
    link_12 = module_0.Link(link_11)
    var_17 = link_12.__hash__()
    assert var_17 == -4606328870177462788
    bool_4 = True
    link_13 = module_0.Link(bool_4)
    var_18 = link_13.__repr__()
    assert var_18 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_19 = var_17.__eq__(bytes_3)
    link_14 = module_0.Link(var_17)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_15 = module_0.Link(bytes_4, bytes_4)
    bool_5 = True
    link_16 = module_0.Link(bool_5)
    var_20 = link_16.__repr__()
    assert var_20 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_17 = module_0.Link(float_1, fragment=var_20)
    link_18 = module_0.Link(float_1, fragment=link_16)
    link_19 = module_0.Link(link_2, nofollow=var_5)


def test_case_916():
    int_0 = 783
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0, fragment=link_0)


def test_case_917():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    var_3 = var_2.__hash__()
    bytes_1 = b"O\xf3\x8ez\x9cB\xfdi\xa1"
    none_type_0 = None
    link_3 = module_0.Link(none_type_0)
    var_4 = link_3.__hash__()
    assert var_4 == 477042
    var_5 = var_4.__repr__()
    assert var_5 == "477042"
    var_6 = var_5.__eq__(bytes_1)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1)
    var_7 = link_4.__hash__()
    assert var_7 == 0
    var_8 = var_7.__hash__()
    assert var_8 == 0
    bytes_2 = b"-5164621852614943975"
    link_5 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_9 = link_5.__repr__()
    assert (
        var_9
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_6 = module_0.Link(tuple_0, fragment=bool_1)
    var_10 = link_6.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_10.__hash__()
    assert var_13 == -552935834187556073
    var_14 = link_6.__repr__()
    assert var_14 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"


def test_case_918():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_4 = link_5.__hash__()
    assert var_4 == -4606328870177462788
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_2, bytes_2)
    list_0 = []
    link_7 = module_0.Link(list_0)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(url=[], text='', fragment='', nofollow=False)"
    bool_4 = False
    link_8 = module_0.Link(bool_4)
    var_6 = link_8.__hash__()
    assert var_6 == 0
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_9 = module_0.Link(tuple_1, fragment=bool_5)
    var_7 = link_9.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_1)
    var_10 = var_9.__repr__()
    none_type_0 = None
    bool_7 = True
    link_10 = module_0.Link(bool_7, nofollow=bool_7)
    var_11 = link_10.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_0)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_3, bytes_3)
    var_13 = link_10.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_14 = link_10.__hash__()
    assert var_14 == 0
    none_type_1 = None
    link_12 = module_0.Link(none_type_1, fragment=none_type_1)
    var_15 = link_12.__repr__()
    assert var_15 == "Link(url=None, text='', fragment=None, nofollow=False)"
    link_13 = module_0.Link(var_15)
    assert f"{type(link_13).__module__}.{type(link_13).__qualname__}" == "link.Link"
    var_16 = link_13.__repr__()
    assert (
        var_16
        == "Link(url=b\"Link(url=None, text='', fragment=None, nofollow=False)\", text='', fragment='', nofollow=False)"
    )
    link_14 = module_0.Link(var_9, link_4, var_12)


def test_case_919():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 5
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    int_0 = 783
    link_2 = module_0.Link(int_0, int_0)
    link_3 = module_0.Link(var_0)


def test_case_920():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0)
    var_1 = var_0.__eq__(var_0)
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    var_2 = link_2.__hash__()
    assert var_2 == 5
    int_0 = 1870
    link_3 = module_0.Link(int_0)
    dict_0 = {link_3: link_3}
    link_4 = module_0.Link(dict_0, fragment=dict_0)
    var_3 = link_4.__repr__()
    assert (
        var_3
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_5 = var_3.__eq__(var_3)
    var_6 = var_5.__hash__()
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_5 = module_0.Link(bool_1, fragment=tuple_0)
    var_7 = link_5.__hash__()
    assert var_7 == -8753497827991233192
    link_6 = module_0.Link(var_7, var_7, nofollow=var_7)
    var_8 = link_6.__repr__()
    assert (
        var_8
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bool_3 = False
    link_7 = module_0.Link(bool_3)
    none_type_1 = None
    bool_4 = True
    link_8 = module_0.Link(bool_4, nofollow=bool_4)
    var_9 = link_8.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_0, bytes_0)
    var_11 = link_8.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_12 = link_8.__hash__()
    assert var_12 == 0
    var_13 = link_2.__hash__()
    assert var_13 == 5


def test_case_921():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    var_2 = link_2.__hash__()
    assert var_2 == 5
    var_3 = var_2.__eq__(float_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    int_0 = 1870
    link_4 = module_0.Link(int_0)
    dict_0 = {link_4: link_4}
    link_5 = module_0.Link(dict_0, fragment=dict_0)
    var_7 = link_5.__repr__()
    assert (
        var_7
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_9 = var_7.__eq__(var_7)
    var_10 = var_9.__hash__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_11 = link_7.__hash__()
    assert var_11 == -4606328870177462788
    var_12 = link_7.__repr__()
    assert (
        var_12
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_2)
    link_9 = module_0.Link(link_8)
    var_13 = link_9.__hash__()
    assert var_13 == -4606328870177462788
    bool_4 = True
    link_10 = module_0.Link(bool_4, nofollow=bool_4)
    link_11 = module_0.Link(link_10, link_10)
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_12 = module_0.Link(bool_5, fragment=tuple_2)
    var_14 = link_12.__hash__()
    assert var_14 == -8753497827991233192
    link_13 = module_0.Link(var_14, var_14, nofollow=var_14)
    var_15 = link_13.__repr__()
    assert (
        var_15
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_16 = link_12.__repr__()
    assert var_16 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    var_17 = var_7.__repr__()
    assert (
        var_17
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )


def test_case_922():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_4 = link_2.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    none_type_0 = None
    bool_2 = True
    link_3 = module_0.Link(bool_2, nofollow=bool_2)
    var_6 = link_3.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    link_4 = module_0.Link(link_3)
    link_5 = module_0.Link(var_6, fragment=none_type_0)
    var_8 = link_5.__hash__()
    assert var_8 == 477042
    var_9 = var_8.__repr__()
    assert var_9 == "477042"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_10 = link_7.__hash__()
    assert var_10 == -4606328870177462788
    bool_3 = True
    link_8 = module_0.Link(bool_3)
    var_11 = link_8.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_12 = var_10.__eq__(bytes_1)
    link_9 = module_0.Link(var_12, var_12)
    bytes_2 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_13 = link_10.__hash__()
    assert var_13 == 0
    var_14 = var_13.__repr__()
    assert var_14 == "0"
    none_type_1 = None
    link_11 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_12 = module_0.Link(tuple_1, fragment=bool_4)
    var_15 = link_12.__hash__()
    assert var_15 == -5164621852614943975
    var_16 = var_15.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = var_15.__hash__()
    assert var_17 == -552935834187556073
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_13 = module_0.Link(bytes_3)
    link_14 = module_0.Link(link_13)
    var_18 = link_14.__hash__()
    assert var_18 == -4606328870177462788
    bool_6 = True
    link_15 = module_0.Link(bool_6)
    var_19 = link_15.__repr__()
    assert var_19 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_20 = var_18.__eq__(bytes_3)
    link_16 = module_0.Link(var_18)
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_17 = module_0.Link(bytes_4)
    link_18 = module_0.Link(link_17)
    var_21 = link_18.__hash__()
    assert var_21 == -4606328870177462788
    bool_7 = True
    link_19 = module_0.Link(bool_7)
    var_22 = link_19.__repr__()
    assert var_22 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_23 = var_21.__eq__(bytes_4)
    bool_8 = False
    link_20 = module_0.Link(bool_8)
    bytes_5 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_21 = module_0.Link(bytes_5, bytes_5)
    var_24 = link_21.__repr__()
    assert (
        var_24
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_9 = False
    link_22 = module_0.Link(bool_9)
    var_25 = var_24.__repr__()
    assert (
        var_25
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_23 = module_0.Link(var_24, var_25, nofollow=link_21)
    assert f"{type(link_23).__module__}.{type(link_23).__qualname__}" == "link.Link"
    link_24 = module_0.Link(link_3, var_15)


def test_case_923():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_2 = module_0.Link(list_0, str_0)
    link_3 = module_0.Link(link_2)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, list_0)
    var_4 = var_1.__hash__()


def test_case_924():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bool_1 = False
    link_1 = module_0.Link(bool_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_3 = var_1.__repr__()


def test_case_925():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    link_2 = module_0.Link(var_0, fragment=none_type_0)
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_3 = link_4.__hash__()
    assert var_3 == 3199
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_5.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    var_6 = var_4.__hash__()
    assert var_6 == 0
    bool_1 = False
    link_6 = module_0.Link(bool_1)
    var_7 = var_5.__repr__()
    assert var_7 == "'0'"
    link_7 = module_0.Link(bool_1, var_6, var_4)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1)
    var_8 = link_8.__hash__()
    assert var_8 == 477042
    var_9 = var_8.__hash__()
    assert var_9 == 477042
    bool_2 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_9 = module_0.Link(var_9, fragment=bool_2, nofollow=complex_0)
    var_10 = link_9.__eq__(link_8)
    assert var_10 is False


def test_case_926():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    complex_0 = -2489 + 3297.83623j
    link_2 = module_0.Link(complex_0)
    var_0 = link_2.__hash__()
    assert var_0 == 1172959022599657258
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__repr__()
    assert var_2 == "0"
    var_3 = var_1.__hash__()
    assert var_3 == 0
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_2)
    link_6 = module_0.Link(link_5)
    var_4 = link_6.__hash__()
    assert var_4 == -4606328870177462788
    bool_0 = True
    link_7 = module_0.Link(bool_0)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_2)
    link_8 = module_0.Link(var_4)
    none_type_2 = None
    bool_1 = True
    link_9 = module_0.Link(bool_1, nofollow=bool_1)
    var_7 = link_9.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_2)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_3, bytes_3)
    var_9 = link_9.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_11 = module_0.Link(bool_2, fragment=tuple_0)
    var_10 = link_11.__hash__()
    assert var_10 == -8753497827991233192
    set_0 = {tuple_0, var_10, bool_3, bool_2}
    var_11 = var_10.__eq__(set_0)
    var_12 = link_11.__hash__()
    assert var_12 == -8753497827991233192
    var_13 = var_0.__repr__()
    assert var_13 == "1172959022599657258"


def test_case_927():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_1, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_2 = var_1.__eq__(var_1)
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    var_3 = link_4.__repr__()
    var_4 = link_4.__hash__()
    assert var_4 == 0
    float_1 = 5.0
    link_5 = module_0.Link(float_1)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, link_5)
    var_5 = link_6.__eq__(link_6)
    assert var_5 is True
    float_2 = 5.0
    link_7 = module_0.Link(float_2)
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, link_7)
    none_type_3 = None
    link_9 = module_0.Link(none_type_3, fragment=none_type_3)
    var_6 = link_9.__hash__()
    assert var_6 == 0
    var_7 = var_6.__hash__()
    assert var_7 == 0
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_10 = module_0.Link(bool_1, fragment=tuple_0)
    var_8 = link_10.__hash__()
    assert var_8 == -8753497827991233192
    set_0 = {tuple_0, var_8, bool_2, bool_1}
    var_9 = var_8.__eq__(set_0)
    var_10 = link_10.__hash__()
    assert var_10 == -8753497827991233192
    var_11 = link_10.__hash__()
    assert var_11 == -8753497827991233192
    link_11 = module_0.Link(var_5)


def test_case_928():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_4.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_3 = False
    link_6 = module_0.Link(bool_3)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == -3936900723769714473
    none_type_1 = None
    link_7 = module_0.Link(none_type_1)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_2)
    link_9 = module_0.Link(link_8)
    var_7 = link_9.__hash__()
    assert var_7 == -4606328870177462788
    var_8 = var_7.__hash__()
    assert var_8 == -2300485860963768837
    bytes_3 = b"-5164621852614943975"
    link_10 = module_0.Link(bytes_3, nofollow=bytes_3)
    object_0 = module_1.object()
    none_type_2 = None
    link_11 = module_0.Link(object_0, fragment=none_type_2)
    var_9 = link_11.__hash__()
    link_12 = module_0.Link(var_3, nofollow=link_7)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"


def test_case_929():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__repr__()
    assert var_1 == "477042"
    var_2 = var_1.__repr__()
    assert var_2 == "'477042'"
    var_3 = var_2.__hash__()
    assert var_3 == 9175907747363719430
    var_4 = var_3.__hash__()
    assert var_4 == 2258378719722637577
    bool_0 = False
    bytes_0 = b"]\xfe"
    int_0 = 3199
    tuple_0 = (bool_0, bytes_0, int_0, int_0)
    link_1 = module_0.Link(tuple_0, fragment=bytes_0)
    link_2 = module_0.Link(link_1, nofollow=bool_0)
    var_5 = link_2.__hash__()
    assert var_5 == 3939945378486638560
    link_3 = module_0.Link(var_5, bytes_0, var_5)
    bool_1 = True
    list_0 = [bool_1, bool_1, bool_1]
    link_4 = module_0.Link(list_0)
    var_6 = var_4.__hash__()
    assert var_6 == 2258378719722637577
    var_7 = var_6.__repr__()
    assert var_7 == "2258378719722637577"


def test_case_930():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=None, text='', fragment=None, nofollow=False)"
    list_0 = []
    link_1 = module_0.Link(list_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=[], text='', fragment='', nofollow=False)"
    complex_0 = -2489 + 3297.83623j
    link_2 = module_0.Link(complex_0)
    var_4 = link_2.__hash__()
    assert var_4 == 1172959022599657258
    none_type_1 = None
    none_type_2 = None
    link_3 = module_0.Link(none_type_2)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == 2234852059487564994
    var_7 = var_6.__eq__(none_type_1)
    link_4 = module_0.Link(var_5, var_6, var_5)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    link_5 = module_0.Link(none_type_1, var_7, link_3)
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_6 = module_0.Link(bytes_0)
    link_7 = module_0.Link(link_6)
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_8 = module_0.Link(bytes_1)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_9 = var_8.__eq__(int_0)
    var_10 = var_9.__repr__()
    bool_0 = True
    link_9 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    var_11 = link_9.__hash__()
    assert var_11 == 1
    none_type_3 = None
    bool_1 = True
    link_10 = module_0.Link(bool_1, nofollow=bool_1)
    var_12 = link_10.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    var_14 = link_10.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_12 = module_0.Link(link_10)
    bytes_3 = b"-5164621852614943975"
    link_13 = module_0.Link(bytes_3, nofollow=bytes_3)
    var_15 = link_13.__hash__()
    assert var_15 == 0
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_14 = module_0.Link(tuple_0, fragment=bool_2)
    var_16 = link_14.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    var_18 = var_16.__repr__()
    assert var_18 == "-5164621852614943975"
    var_19 = var_16.__hash__()
    assert var_19 == -552935834187556073
    link_15 = module_0.Link(link_1, link_7, bool_3)


def test_case_931():
    int_0 = 2105
    none_type_0 = None
    link_0 = module_0.Link(int_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, int_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == -1122340555193368221
    var_2 = var_1.__repr__()
    assert var_2 == "-1122340555193368221"
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    link_3 = module_0.Link(link_2, link_2)
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == -3936900723769714473
    none_type_1 = None
    link_5 = module_0.Link(none_type_1)
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_6 = module_0.Link(bytes_0)
    link_7 = module_0.Link(link_6)
    var_5 = var_2.__eq__(var_4)


def test_case_932():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    var_3 = link_0.__hash__()
    assert var_3 == -8753497827991233192
    bool_2 = True
    list_0 = [bool_2, bool_2, bool_2]
    link_1 = module_0.Link(list_0)
    bool_3 = True
    link_2 = module_0.Link(bool_3, nofollow=bool_3)
    var_4 = link_2.__eq__(link_2)
    assert var_4 is True
    int_0 = 1870
    link_3 = module_0.Link(int_0)
    dict_0 = {link_3: link_3}
    link_4 = module_0.Link(dict_0, fragment=dict_0)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_6 = var_5.__repr__()
    assert (
        var_6
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, none_type_0)
    object_0 = module_1.object()
    none_type_1 = None
    link_6 = module_0.Link(object_0, fragment=none_type_1)
    var_7 = link_6.__hash__()
    none_type_2 = None
    none_type_3 = None
    link_7 = module_0.Link(none_type_3)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == 2234852059487564994
    var_10 = var_9.__eq__(none_type_2)
    link_8 = module_0.Link(var_8, var_9, var_8)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    link_9 = module_0.Link(none_type_2, var_10, link_7)
    var_11 = link_2.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_933():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0)
    var_1 = link_2.__hash__()
    assert var_1 == 0
    var_2 = var_1.__hash__()
    assert var_2 == 0
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=None, text='', fragment=None, nofollow=False)"
    dict_0 = {}
    object_1 = module_1.object(**dict_0)
    link_3 = module_0.Link(object_1)
    var_4 = link_3.__repr__()
    var_5 = var_4.__repr__()
    var_6 = var_5.__hash__()
    bytes_0 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_7 = link_4.__hash__()
    assert var_7 == 0
    var_8 = link_4.__repr__()
    assert (
        var_8
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, fragment=none_type_1)
    var_9 = link_5.__hash__()
    assert var_9 == 0
    var_10 = var_9.__hash__()
    assert var_10 == 0
    bool_0 = True
    link_6 = module_0.Link(bool_0, nofollow=bool_0)
    none_type_2 = None
    bool_1 = True
    link_7 = module_0.Link(bool_1, nofollow=bool_1)
    var_11 = link_7.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_2)
    var_13 = link_7.__hash__()
    assert var_13 == 0
    bool_2 = True
    bool_3 = True
    bytes_1 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_8 = module_0.Link(bytes_1)
    var_14 = link_8.__hash__()
    assert var_14 == -6712542186422229073
    var_15 = var_14.__repr__()
    assert var_15 == "-6712542186422229073"
    var_16 = var_15.__eq__(bool_3)
    var_17 = var_16.__hash__()
    var_18 = var_17.__eq__(bool_2)
    var_19 = link_7.__repr__()
    assert var_19 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_934():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=None)"
    none_type_1 = None
    link_1 = module_0.Link(none_type_1, fragment=none_type_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=None, text='', fragment=None, nofollow=False)"
    link_2 = module_0.Link(var_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(url=b\"Link(url=None, text='', fragment=None, nofollow=False)\", text='', fragment='', nofollow=False)"
    )
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    link_3 = module_0.Link(object_0)
    var_3 = link_3.__repr__()
    var_4 = var_3.__repr__()
    var_5 = var_4.__hash__()
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_4 = module_0.Link(tuple_0, fragment=bool_0)
    var_6 = link_4.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    none_type_2 = None
    link_5 = module_0.Link(none_type_2, bool_1)
    var_9 = var_6.__repr__()
    assert var_9 == "-5164621852614943975"


def test_case_935():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    var_1 = link_0.__hash__()
    assert var_1 == 0
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    var_2 = link_2.__hash__()
    assert var_2 == 5
    var_3 = var_2.__eq__(float_0)
    bool_0 = False
    link_3 = module_0.Link(bool_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0)
    var_5 = link_4.__hash__()
    assert var_5 == 0
    var_6 = var_5.__hash__()
    assert var_6 == 0
    var_7 = var_5.__eq__(var_5)
    var_8 = var_6.__hash__()
    assert var_8 == 0
    bool_1 = False
    link_5 = module_0.Link(bool_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_6.__repr__()
    assert (
        var_9
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_7 = module_0.Link(bool_2)
    var_10 = var_9.__repr__()
    assert (
        var_10
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_8 = module_0.Link(var_9, bytes_1)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    var_11 = link_3.__hash__()
    assert var_11 == 0


def test_case_936():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_1 = True
    link_2 = module_0.Link(bool_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_3 = module_0.Link(float_0, fragment=var_0)
    none_type_0 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    link_5 = module_0.Link(link_4)
    link_6 = module_0.Link(var_1, fragment=none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_3 = True
    link_8 = module_0.Link(bool_3)
    var_3 = link_8.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_9 = module_0.Link(float_1, fragment=var_3)
    link_10 = module_0.Link(float_1, fragment=link_8)
    bool_4 = False
    link_11 = module_0.Link(bool_4)
    var_4 = link_11.__hash__()
    assert var_4 == 0
    bool_5 = True
    dict_0 = {}
    none_type_1 = None
    float_2 = 2515.28653
    link_12 = module_0.Link(dict_0, none_type_1, float_2, none_type_1)
    var_5 = link_12.__repr__()
    var_6 = var_5.__eq__(bool_5)
    var_7 = var_6.__hash__()
    var_8 = var_7.__repr__()
    none_type_2 = None
    bool_6 = False
    link_13 = module_0.Link(none_type_2, fragment=bool_6)
    var_9 = link_13.__repr__()
    assert var_9 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_10 = var_9.__hash__()
    assert var_10 == -5509142826951788791
    var_11 = var_10.__repr__()
    assert var_11 == "-5509142826951788791"
    var_12 = var_11.__repr__()
    assert var_12 == "'-5509142826951788791'"
    bool_7 = True
    bool_8 = True
    bytes_2 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_14 = module_0.Link(bytes_2)
    var_13 = link_14.__hash__()
    assert var_13 == -6712542186422229073
    var_14 = var_13.__repr__()
    assert var_14 == "-6712542186422229073"
    var_15 = var_14.__eq__(bool_8)
    var_16 = var_15.__hash__()
    var_17 = var_16.__eq__(bool_7)
    int_0 = 3199
    link_15 = module_0.Link(int_0, int_0, nofollow=int_0)
    float_3 = 5.0
    link_16 = module_0.Link(float_3)
    none_type_3 = None
    link_17 = module_0.Link(none_type_3, link_16)
    int_1 = 3199
    link_18 = module_0.Link(int_1, int_1, nofollow=int_1)
    bytes_3 = b"-5164621852614943975"
    link_19 = module_0.Link(bytes_3, nofollow=bytes_3)
    var_18 = link_19.__repr__()
    assert (
        var_18
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    link_20 = module_0.Link(var_9, fragment=var_9)
    assert f"{type(link_20).__module__}.{type(link_20).__qualname__}" == "link.Link"


def test_case_937():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_4 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_4.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, bool_1)
    str_0 = "Dmfv; iJ001\n"
    none_type_2 = None
    link_6 = module_0.Link(str_0, fragment=none_type_2)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    bytes_0 = b"O\xf3\x8ez\x9cB\xfdi\xa1"
    none_type_3 = None
    link_7 = module_0.Link(none_type_3)
    var_4 = link_7.__hash__()
    assert var_4 == 477042
    var_5 = var_4.__repr__()
    assert var_5 == "477042"
    var_6 = var_5.__eq__(bytes_0)
    link_8 = module_0.Link(none_type_3, str_0, bool_0, var_4)


def test_case_938():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__eq__(link_0)
    assert var_0 is True
    none_type_0 = None
    bool_1 = True
    link_1 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    var_3 = var_1.__repr__()
    assert var_3 == "0"
    var_4 = var_2.__eq__(none_type_0)


def test_case_939():
    int_0 = 584
    link_0 = module_0.Link(int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_2 = module_0.Link(link_1)
    link_3 = module_0.Link(var_0, fragment=none_type_0)
    var_2 = link_3.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__repr__()
    assert var_3 == "477042"
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_4 = module_0.Link(list_0, str_0)
    link_5 = module_0.Link(link_4)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, list_0)
    none_type_2 = None
    bool_1 = True
    link_7 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_7.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_2)
    link_8 = module_0.Link(link_7)
    none_type_3 = None
    link_9 = module_0.Link(none_type_3, nofollow=none_type_3)
    bool_2 = False
    link_10 = module_0.Link(bool_2)
    var_6 = link_10.__repr__()
    assert var_6 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_11 = module_0.Link(var_6, nofollow=var_6)
    assert f"{type(link_11).__module__}.{type(link_11).__qualname__}" == "link.Link"
    link_12 = module_0.Link(var_6, nofollow=link_11)
    var_7 = var_5.__eq__(link_11)


def test_case_940():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_1 = var_0.__eq__(int_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0)
    var_2 = link_2.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__hash__()
    assert var_3 == 477042
    bool_0 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_3 = module_0.Link(var_3, fragment=bool_0, nofollow=complex_0)
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, link_5)
    var_4 = link_6.__eq__(link_6)
    assert var_4 is True
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, fragment=none_type_2)
    var_5 = link_7.__hash__()
    assert var_5 == 0
    var_6 = var_5.__hash__()
    assert var_6 == 0
    var_7 = link_7.__repr__()
    assert var_7 == "Link(url=None, text='', fragment=None, nofollow=False)"
    bool_1 = True
    link_8 = module_0.Link(bool_1, fragment=bool_1)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == 4729962515010671871
    var_10 = var_9.__repr__()
    assert var_10 == "4729962515010671871"
    link_9 = module_0.Link(var_10)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    var_11 = link_9.__hash__()
    assert var_11 == -6813877331771076914
    link_10 = module_0.Link(link_1, bool_0, var_8)


def test_case_941():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    var_2 = link_0.__hash__()
    assert var_2 == 0
    none_type_1 = None
    link_1 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_3 = module_0.Link(var_3, nofollow=var_3)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    link_4 = module_0.Link(var_3, nofollow=link_3)
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    var_4 = link_5.__hash__()
    assert var_4 == 5
    none_type_2 = None
    bool_2 = True
    link_6 = module_0.Link(bool_2, nofollow=bool_2)
    var_5 = link_6.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_8 = module_0.Link(var_7, nofollow=var_7)
    object_0 = module_1.object()
    none_type_3 = None
    link_9 = module_0.Link(none_type_3, fragment=none_type_3)
    var_8 = link_9.__repr__()
    assert var_8 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == 7957018345684386684
    var_10 = var_9.__repr__()
    assert var_10 == "7957018345684386684"
    link_10 = module_0.Link(object_0, var_10)
    var_11 = link_10.__repr__()
    none_type_4 = None
    link_11 = module_0.Link(none_type_4, fragment=none_type_4, nofollow=none_type_4)
    bool_3 = False
    link_12 = module_0.Link(bool_3)
    var_12 = link_12.__repr__()
    assert var_12 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_13 = module_0.Link(var_12, nofollow=var_12)
    var_13 = var_12.__hash__()
    assert var_13 == -3936900723769714473
    var_14 = var_5.__eq__(link_7)
    var_15 = var_14.__hash__()


def test_case_942():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_0 = link_3.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_0 = True
    link_4 = module_0.Link(bool_0)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_5 = module_0.Link(link_2, fragment=float_1)


def test_case_943():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_1.__hash__()
    assert var_1 == -1835968800350151339
    var_2 = var_1.__hash__()
    assert var_2 == -1835968800350151339
    bool_2 = True
    link_2 = module_0.Link(bool_2)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_3 = module_0.Link(bool_3, fragment=tuple_1)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    link_4 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    object_0 = module_1.object()
    link_5 = module_0.Link(object_0, fragment=object_0)
    var_6 = link_5.__repr__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_0)
    link_7 = module_0.Link(link_6)
    var_7 = link_7.__hash__()
    assert var_7 == -4606328870177462788
    bool_5 = True
    link_8 = module_0.Link(bool_5)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_0)
    link_9 = module_0.Link(var_9, var_9)
    link_10 = module_0.Link(bool_3, link_5)


def test_case_944():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__hash__()
    assert var_2 == -552935834187556073
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_3, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_4 = var_3.__eq__(var_3)
    var_5 = var_3.__repr__()
    assert var_5 == "\"Link(url=None, text=None, fragment='', nofollow=None)\""


def test_case_945():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=None, text='', fragment=None, nofollow=False)"
    int_0 = 783
    link_1 = module_0.Link(int_0, int_0)
    link_2 = module_0.Link(link_1, fragment=link_1)
    int_1 = 3199
    link_3 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_4 = var_3.__hash__()
    assert var_4 == -3203539594471298528
    bool_0 = False
    link_4 = module_0.Link(bool_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_5.__repr__()
    assert (
        var_5
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_6 = module_0.Link(bool_1)
    var_6 = var_5.__repr__()
    assert (
        var_6
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_7 = module_0.Link(var_5, bytes_0)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    none_type_1 = None
    link_8 = module_0.Link(none_type_1)
    var_7 = link_1.__repr__()
    assert var_7 == "Link(url=783, text=783, fragment='', nofollow=False)"


def test_case_946():
    bool_0 = True
    link_0 = module_0.Link(bool_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 4729962515010671871
    var_2 = var_1.__repr__()
    assert var_2 == "4729962515010671871"
    link_1 = module_0.Link(var_2)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_3 = link_1.__hash__()
    assert var_3 == -6813877331771076914
    bytes_0 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_0, nofollow=bytes_0)
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    var_4 = link_3.__hash__()
    assert var_4 == 5
    var_5 = var_4.__eq__(float_0)
    int_0 = 584
    link_4 = module_0.Link(int_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_5 = module_0.Link(bool_1, fragment=tuple_0)
    var_6 = link_5.__hash__()
    assert var_6 == -8753497827991233192
    link_6 = module_0.Link(var_6, var_6, nofollow=var_6)
    var_7 = link_6.__repr__()
    assert (
        var_7
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bool_3 = False
    link_7 = module_0.Link(bool_3)


def test_case_947():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    var_1 = link_1.__hash__()
    assert var_1 == 477042
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__hash__()
    assert var_3 == 0
    var_4 = var_2.__eq__(var_2)
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_2 = None
    link_4 = module_0.Link(none_type_2, link_3)
    var_5 = link_4.__eq__(link_4)
    assert var_5 is True
    var_6 = link_3.__hash__()
    assert var_6 == 5
    bool_1 = True
    dict_0 = {}
    none_type_3 = None
    float_1 = 2515.28653
    link_5 = module_0.Link(dict_0, none_type_3, float_1, none_type_3)
    var_7 = link_5.__repr__()
    var_8 = var_7.__eq__(bool_1)
    var_9 = var_8.__hash__()
    var_10 = var_9.__repr__()
    none_type_4 = None
    link_6 = module_0.Link(none_type_4, fragment=none_type_4, nofollow=none_type_4)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_7 = module_0.Link(tuple_0, fragment=bool_2)
    var_11 = link_7.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__hash__()
    assert var_13 == -552935834187556073
    none_type_5 = None
    link_8 = module_0.Link(none_type_5, none_type_5)
    float_2 = 5.0
    link_9 = module_0.Link(float_2)
    var_14 = link_9.__hash__()
    assert var_14 == 5
    var_15 = var_8.__eq__(var_8)


def test_case_948():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    bool_2 = False
    none_type_0 = None
    link_1 = module_0.Link(bool_2, fragment=none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=False, text='', fragment=None, nofollow=False)"
    none_type_1 = None
    link_2 = module_0.Link(none_type_1)
    var_2 = link_2.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__hash__()
    assert var_3 == 477042
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_2 = None
    link_4 = module_0.Link(none_type_2, link_3)
    var_4 = link_4.__eq__(link_4)
    assert var_4 is True
    object_0 = module_1.object()
    link_5 = module_0.Link(object_0, fragment=object_0)
    link_6 = module_0.Link(object_0, none_type_2)
    var_5 = link_3.__hash__()
    assert var_5 == 5
    bool_3 = True
    dict_0 = {}
    none_type_3 = None
    float_1 = 2515.28653
    link_7 = module_0.Link(dict_0, none_type_3, float_1, none_type_3)
    var_6 = link_7.__repr__()
    var_7 = var_6.__eq__(bool_3)
    var_8 = var_7.__hash__()
    none_type_4 = None
    link_8 = module_0.Link(none_type_4, fragment=none_type_4, nofollow=none_type_4)
    var_9 = link_8.__hash__()
    assert var_9 == 477042
    var_10 = var_9.__repr__()
    assert var_10 == "477042"
    var_11 = var_10.__repr__()
    assert var_11 == "'477042'"
    var_12 = var_11.__hash__()
    assert var_12 == 9175907747363719430
    var_13 = var_12.__hash__()
    assert var_13 == 2258378719722637577
    link_9 = module_0.Link(none_type_3)
    var_14 = link_9.__repr__()
    assert var_14 == "Link(url=None, text='', fragment='', nofollow=False)"


def test_case_949():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    var_3 = link_0.__hash__()
    assert var_3 == -8753497827991233192
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, bool_3)
    bool_4 = False
    link_3 = module_0.Link(bool_4)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_4.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_5 = module_0.Link(bool_5)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_6 = True
    link_6 = module_0.Link(bool_6, bool_6, nofollow=bool_6)
    var_9 = link_6.__hash__()
    assert var_9 == 1
    var_10 = link_2.__repr__()
    assert var_10 == "Link(url=None, text=False, fragment='', nofollow=False)"


def test_case_950():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = var_0.__eq__(var_0)
    var_3 = var_1.__hash__()
    assert var_3 == 0
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_0 = True
    bool_1 = True
    bytes_0 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_3 = module_0.Link(bytes_0)
    var_5 = link_3.__hash__()
    assert var_5 == -6712542186422229073
    var_6 = var_5.__repr__()
    assert var_6 == "-6712542186422229073"
    var_7 = var_6.__eq__(bool_1)
    var_8 = var_7.__hash__()
    var_9 = var_8.__eq__(bool_0)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_10 = link_4.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__eq__(tuple_0)
    none_type_1 = None
    none_type_2 = None
    link_5 = module_0.Link(none_type_2)
    var_13 = link_5.__repr__()
    assert var_13 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_14 = var_13.__hash__()
    assert var_14 == 2234852059487564994
    var_15 = var_14.__eq__(none_type_1)
    link_6 = module_0.Link(var_13, var_14, var_13)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    none_type_3 = None
    link_7 = module_0.Link(none_type_3, fragment=none_type_3)
    var_16 = link_7.__hash__()
    assert var_16 == 0
    var_17 = var_16.__hash__()
    assert var_17 == 0
    var_18 = var_16.__eq__(var_16)
    bool_4 = False
    bytes_1 = b"]\xfe"
    int_1 = 3199
    tuple_1 = (bool_4, bytes_1, int_1, int_1)
    link_8 = module_0.Link(tuple_1, fragment=bytes_1)
    link_9 = module_0.Link(link_8, nofollow=bool_4)
    var_19 = link_9.__hash__()
    assert var_19 == 3939945378486638560
    link_10 = module_0.Link(var_19, bytes_1, var_19)
    var_20 = link_4.__hash__()
    assert var_20 == -5164621852614943975


def test_case_951():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    bool_2 = True
    link_2 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_1 = link_2.__hash__()
    assert var_1 == 1
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_3 = True
    link_4 = module_0.Link(bool_3, nofollow=bool_3)
    link_5 = module_0.Link(link_4, link_4)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_0)
    link_7 = module_0.Link(link_6)
    var_2 = link_7.__hash__()
    assert var_2 == -4606328870177462788
    bool_4 = True
    link_8 = module_0.Link(bool_4)
    var_3 = link_8.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_0)
    bool_5 = True
    link_9 = module_0.Link(bool_5, nofollow=bool_5)
    var_5 = link_9.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_10 = module_0.Link(bytes_1)
    var_6 = link_10.__repr__()
    assert var_6 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_7 = var_6.__eq__(int_0)
    var_8 = var_7.__repr__()
    none_type_1 = None
    none_type_2 = None
    link_11 = module_0.Link(none_type_2)
    var_9 = link_11.__repr__()
    assert var_9 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_10 = var_9.__hash__()
    assert var_10 == 2234852059487564994
    var_11 = var_10.__eq__(none_type_1)
    link_12 = module_0.Link(var_9, var_10, var_9)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"
    link_13 = module_0.Link(none_type_1, var_11, link_11)
    list_0 = [bool_5]
    link_14 = module_0.Link(list_0)


def test_case_952():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(none_type_0, bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=True, fragment='', nofollow=False)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(url=None, text=True, fragment='', nofollow=False)\""
    link_1 = module_0.Link(var_0, nofollow=var_1)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"


def test_case_953():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    link_1 = module_0.Link(var_0, var_1, var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    link_2 = module_0.Link(none_type_0, var_2, link_0)
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_3.__hash__()
    assert var_3 == 0
    var_4 = var_3.__repr__()
    assert var_4 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_4 = module_0.Link(bytes_1)
    var_5 = var_3.__eq__(bytes_0)
    bool_0 = True
    link_5 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    var_6 = link_5.__hash__()
    assert var_6 == 1
    bytes_2 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_6 = module_0.Link(bytes_2, bytes_2)
    var_7 = link_6.__hash__()
    assert var_7 == 0
    var_8 = var_7.__repr__()
    assert var_8 == "0"
    bytes_3 = b"-5164621852614943975"
    link_7 = module_0.Link(bytes_3, nofollow=bytes_3)
    var_9 = link_7.__repr__()
    assert (
        var_9
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    link_8 = module_0.Link(var_4)


def test_case_954():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    link_2 = module_0.Link(var_0, fragment=none_type_0)
    var_2 = link_2.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__repr__()
    assert var_3 == "477042"
    var_4 = link_0.__hash__()
    assert var_4 == 0


def test_case_955():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__repr__()
    assert var_1 == "477042"
    var_2 = var_1.__repr__()
    assert var_2 == "'477042'"
    var_3 = var_2.__hash__()
    assert var_3 == 9175907747363719430
    var_4 = var_3.__hash__()
    assert var_4 == 2258378719722637577
    complex_0 = -601 - 2782j
    link_1 = module_0.Link(complex_0)


def test_case_956():
    int_0 = 2495
    list_0 = [int_0, int_0]
    str_0 = ""
    link_0 = module_0.Link(str_0, nofollow=str_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'', text='', fragment='', nofollow='')"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(url=b'', text='', fragment='', nofollow='')\""
    link_1 = module_0.Link(var_1)
    var_2 = link_1.__repr__()
    assert (
        var_2
        == "Link(url=b'\"Link(url=b\\'\\', text=\\'\\', fragment=\\'\\', nofollow=\\'\\')\"', text='', fragment='', nofollow=False)"
    )
    var_3 = var_2.__eq__(list_0)
    var_4 = var_3.__repr__()
    var_5 = var_4.__repr__()


def test_case_957():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_1)
    var_2 = var_0.__eq__(bytes_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_0 = False
    link_3 = module_0.Link(bool_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_4 = module_0.Link(var_3, nofollow=var_3)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    link_5 = module_0.Link(var_3, nofollow=link_4)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_2, bytes_2)
    bool_1 = True
    link_7 = module_0.Link(bool_1)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_8 = module_0.Link(float_0, fragment=var_4)
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_3)
    link_10 = module_0.Link(link_9)
    var_5 = link_10.__hash__()
    assert var_5 == -4606328870177462788
    bool_2 = True
    link_11 = module_0.Link(bool_2)
    var_6 = link_11.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_3)
    link_12 = module_0.Link(var_7, var_7)
    none_type_1 = None
    link_13 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_8 = link_13.__repr__()
    assert var_8 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_14 = module_0.Link(var_8, nofollow=link_13)
    int_0 = 783
    link_15 = module_0.Link(int_0, int_0)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_16 = module_0.Link(tuple_0, fragment=bool_3)
    var_9 = link_16.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__eq__(tuple_0)
    var_12 = var_11.__repr__()
    int_1 = 584
    link_17 = module_0.Link(int_1)
    bool_5 = False
    bool_6 = False
    tuple_1 = (bool_6,)
    link_18 = module_0.Link(bool_5, fragment=tuple_1)
    var_13 = link_18.__hash__()
    assert var_13 == -8753497827991233192
    link_19 = module_0.Link(var_13, var_13, nofollow=var_13)
    var_14 = link_19.__repr__()
    assert (
        var_14
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_15 = link_18.__repr__()
    assert var_15 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    link_20 = module_0.Link(link_12, none_type_1, link_19)


def test_case_958():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_3 = var_1.__repr__()
    assert var_3 == "'0'"
    link_2 = module_0.Link(bool_0, var_2, var_0)
    var_4 = var_2.__repr__()
    assert var_4 == "0"


def test_case_959():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    link_2 = module_0.Link(link_1)
    link_3 = module_0.Link(var_2, fragment=none_type_0)
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, link_4)
    var_4 = link_5.__eq__(link_5)
    assert var_4 is True
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    link_7 = module_0.Link(object_0, none_type_1)
    var_5 = link_4.__hash__()
    assert var_5 == 5
    float_1 = 5.0
    link_8 = module_0.Link(float_1)
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, link_8)
    none_type_3 = None
    link_10 = module_0.Link(none_type_3)
    var_6 = link_10.__hash__()
    assert var_6 == 477042
    var_7 = var_6.__hash__()
    assert var_7 == 477042
    bool_1 = False
    link_11 = module_0.Link(bool_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_12.__repr__()
    assert (
        var_8
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_13 = module_0.Link(bool_2)
    var_9 = var_8.__repr__()
    assert (
        var_9
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_14 = module_0.Link(var_8, bytes_1)
    assert f"{type(link_14).__module__}.{type(link_14).__qualname__}" == "link.Link"
    none_type_4 = None
    link_15 = module_0.Link(none_type_4, none_type_4, nofollow=none_type_4)
    var_10 = link_15.__repr__()
    assert var_10 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_16 = module_0.Link(var_10, nofollow=link_15)
    var_11 = var_10.__eq__(var_10)
    complex_0 = -1110.69549 - 569.4j
    link_17 = module_0.Link(complex_0)
    bytes_2 = b"\xe32\x8d\x1e"
    none_type_5 = None
    link_18 = module_0.Link(link_17, bytes_2, nofollow=none_type_5)
    var_12 = link_18.__repr__()
    assert (
        var_12
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_13 = var_12.__repr__()
    assert (
        var_13
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_14 = var_13.__repr__()
    assert (
        var_14
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    bool_3 = False
    none_type_6 = None
    link_19 = module_0.Link(bool_3, fragment=none_type_6)
    var_15 = link_19.__repr__()
    assert var_15 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_1 = module_1.object()
    link_20 = module_0.Link(object_1, fragment=object_1)
    var_16 = link_20.__hash__()
    assert var_16 == 0
    bool_4 = False
    link_21 = module_0.Link(bool_4)
    var_17 = link_21.__hash__()
    assert var_17 == 0
    link_22 = module_0.Link(bool_2)


def test_case_960():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_3 = var_1.__repr__()
    assert var_3 == "'0'"
    link_2 = module_0.Link(bool_0, var_2, var_0)
    link_3 = module_0.Link(bool_0)


def test_case_961():
    object_0 = module_1.object()
    none_type_0 = None
    link_0 = module_0.Link(object_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    none_type_1 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_1)
    var_3 = var_1.__repr__()
    assert var_3 == "0"
    none_type_2 = None
    link_2 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    var_4 = link_2.__hash__()
    assert var_4 == 477042
    var_5 = var_4.__repr__()
    assert var_5 == "477042"
    var_6 = var_5.__repr__()
    assert var_6 == "'477042'"
    var_7 = var_6.__hash__()
    assert var_7 == 9175907747363719430
    var_8 = var_7.__hash__()
    assert var_8 == 2258378719722637577
    complex_0 = -601 - 2782j
    link_3 = module_0.Link(complex_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_9 = link_4.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_9.__hash__()
    assert var_12 == -552935834187556073
    var_13 = var_1.__eq__(tuple_0)


def test_case_962():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_1 = var_0.__hash__()
    assert var_1 == -3203539594471298528
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_3 = module_0.Link(float_0, fragment=var_2)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    int_1 = 3199
    link_4 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_5 = module_0.Link(var_4)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, nofollow=none_type_0)
    var_5 = link_1.__hash__()
    assert var_5 == 0


def test_case_963():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 3199
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_1 = link_3.__hash__()
    assert var_1 == -4606328870177462788
    int_1 = 3199
    link_4 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_2 = var_0.__repr__()
    assert var_2 == "3199"


def test_case_964():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, link_2)
    var_1 = link_3.__eq__(link_3)
    assert var_1 is True
    none_type_1 = None
    link_4 = module_0.Link(none_type_1)
    var_2 = link_4.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__hash__()
    assert var_3 == 477042
    bool_1 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_5 = module_0.Link(var_3, fragment=bool_1, nofollow=complex_0)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_6.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    var_6 = var_4.__hash__()
    assert var_6 == 0
    bool_2 = False
    link_7 = module_0.Link(bool_2)
    var_7 = var_5.__repr__()
    assert var_7 == "'0'"
    link_8 = module_0.Link(bool_2, var_6, var_4)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_2)
    link_10 = module_0.Link(link_9)
    var_8 = link_10.__hash__()
    assert var_8 == -4606328870177462788
    bool_3 = True
    link_11 = module_0.Link(bool_3)
    var_9 = link_11.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_10 = var_8.__eq__(bytes_2)
    var_11 = var_10.__hash__()
    none_type_2 = None
    link_12 = module_0.Link(none_type_2)
    bool_4 = False
    link_13 = module_0.Link(bool_4)
    var_12 = link_13.__repr__()
    assert var_12 == "Link(url=False, text='', fragment='', nofollow=False)"
    none_type_3 = None
    bool_5 = True
    link_14 = module_0.Link(bool_5, nofollow=bool_5)
    var_13 = link_14.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_3)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_15 = module_0.Link(bytes_3, bytes_3)
    var_15 = link_14.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_16 = module_0.Link(var_15, nofollow=var_15)
    assert f"{type(link_16).__module__}.{type(link_16).__qualname__}" == "link.Link"
    bool_6 = True
    bool_7 = True
    bytes_4 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_17 = module_0.Link(bytes_4)
    var_16 = link_17.__hash__()
    assert var_16 == -6712542186422229073
    var_17 = var_16.__repr__()
    assert var_17 == "-6712542186422229073"
    var_18 = var_17.__eq__(bool_7)
    var_19 = var_18.__hash__()
    var_20 = var_19.__eq__(bool_6)
    bool_8 = True
    bool_9 = False
    tuple_0 = (bool_8, bool_9)
    link_18 = module_0.Link(tuple_0, fragment=bool_8)
    var_21 = link_18.__hash__()
    assert var_21 == -5164621852614943975
    var_22 = var_21.__repr__()
    assert var_22 == "-5164621852614943975"
    var_23 = var_7.__hash__()
    assert var_23 == -5735607041429533499


def test_case_965():
    int_0 = 401
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0)
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    link_2 = module_0.Link(list_0)
    none_type_1 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_0 = link_3.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    var_4 = link_6.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(object_0)
    none_type_2 = None
    bool_3 = True
    link_7 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_7.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_2)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_8 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_8.__hash__()
    assert var_8 == 0
    var_9 = var_8.__repr__()
    assert var_9 == "0"
    var_10 = var_8.__hash__()
    assert var_10 == 0
    bool_4 = False
    link_9 = module_0.Link(bool_4)
    var_11 = var_9.__repr__()
    assert var_11 == "'0'"
    var_12 = var_2.__repr__()
    assert var_12 == "\"Link(url=True, text='', fragment='', nofollow=True)\""


def test_case_966():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=None, text='', fragment=None, nofollow=False)"
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__repr__()
    assert var_4 == "0"
    var_5 = var_3.__hash__()
    assert var_5 == 0
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_6 = var_4.__repr__()
    assert var_6 == "'0'"
    link_3 = module_0.Link(bool_0, var_5, var_3)
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == -3936900723769714473
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    int_0 = 3199
    link_7 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_10 = var_9.__hash__()
    assert var_10 == -3203539594471298528
    float_0 = 5.0
    link_8 = module_0.Link(float_0)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_9 = module_0.Link(tuple_0, fragment=bool_2)
    var_11 = link_9.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__repr__()
    assert var_13 == "-5164621852614943975"
    int_1 = 2105
    none_type_1 = None
    link_10 = module_0.Link(int_1, none_type_1)
    var_14 = link_10.__repr__()
    assert var_14 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_11 = module_0.Link(var_14, int_1)
    assert f"{type(link_11).__module__}.{type(link_11).__qualname__}" == "link.Link"
    var_15 = link_11.__hash__()
    assert var_15 == -1122340555193368221
    var_16 = var_15.__repr__()
    assert var_16 == "-1122340555193368221"
    var_17 = var_4.__repr__()
    assert var_17 == "'0'"


def test_case_967():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_1)
    var_2 = var_0.__eq__(bytes_0)
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, link_2)
    none_type_1 = None
    none_type_2 = None
    link_4 = module_0.Link(none_type_2)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == 2234852059487564994
    var_5 = var_4.__eq__(none_type_1)
    link_5 = module_0.Link(var_3, var_4, var_3)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    bool_0 = False
    link_6 = module_0.Link(bool_0)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_7 = var_6.__hash__()
    assert var_7 == -3936900723769714473
    none_type_3 = None
    link_7 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    var_8 = link_7.__hash__()
    assert var_8 == 477042
    none_type_4 = None
    link_8 = module_0.Link(none_type_4, nofollow=none_type_4)
    var_9 = link_8.__repr__()
    assert var_9 == "Link(url=None, text='', fragment='', nofollow=None)"
    bool_1 = False
    link_9 = module_0.Link(bool_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_10.__repr__()
    assert (
        var_10
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_11 = module_0.Link(bool_2)
    var_11 = var_10.__repr__()
    assert (
        var_11
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_12 = module_0.Link(var_10, bytes_2)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_13 = module_0.Link(tuple_0, fragment=bool_3)
    var_12 = link_13.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__repr__()
    assert var_14 == "-5164621852614943975"
    none_type_5 = None
    link_14 = module_0.Link(none_type_5, bool_4)
    link_15 = module_0.Link(var_5, fragment=bool_0)


def test_case_968():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_1 = var_0.__eq__(int_0)
    complex_0 = -1110.69549 - 569.4j
    link_2 = module_0.Link(complex_0)
    bytes_1 = b"\xe32\x8d\x1e"
    none_type_0 = None
    link_3 = module_0.Link(link_2, bytes_1, nofollow=none_type_0)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    bytes_2 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_2, nofollow=bytes_2)
    int_1 = 36
    bytes_3 = b"\xeb\xdc\xa3"
    link_5 = module_0.Link(bytes_3)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_6 = var_5.__eq__(int_1)
    var_7 = var_6.__repr__()
    var_8 = var_7.__eq__(int_1)
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_6 = module_0.Link(bool_0, fragment=tuple_0)
    var_9 = link_6.__hash__()
    assert var_9 == -8753497827991233192
    link_7 = module_0.Link(var_9, var_9, nofollow=var_9)
    var_10 = link_7.__hash__()
    assert var_10 == -1835968800350151339
    var_11 = var_10.__hash__()
    assert var_11 == -1835968800350151339
    int_2 = 1870
    link_8 = module_0.Link(int_2)
    dict_0 = {link_8: link_8}
    link_9 = module_0.Link(dict_0, fragment=dict_0)
    var_12 = link_9.__repr__()
    assert (
        var_12
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_13 = var_12.__repr__()
    assert (
        var_13
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_14 = var_12.__eq__(var_12)
    var_15 = var_14.__hash__()
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_4)
    link_11 = module_0.Link(link_10)
    var_16 = link_11.__hash__()
    assert var_16 == -4606328870177462788
    bool_2 = True
    link_12 = module_0.Link(bool_2)
    var_17 = link_12.__repr__()
    assert var_17 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_18 = var_16.__eq__(bytes_4)
    link_13 = module_0.Link(var_16)
    bool_3 = True
    link_14 = module_0.Link(bool_3, nofollow=bool_3)
    var_19 = link_14.__eq__(link_14)
    assert var_19 is True
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_15 = module_0.Link(bool_4, fragment=tuple_1)
    var_20 = link_15.__hash__()
    assert var_20 == -8753497827991233192
    bool_6 = True
    link_16 = module_0.Link(bool_6, nofollow=bool_6)
    var_21 = link_16.__repr__()
    assert var_21 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_22 = var_18.__repr__()


def test_case_969():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    var_1 = link_0.__hash__()
    assert var_1 == 0
    object_1 = module_1.object()
    none_type_0 = None
    link_1 = module_0.Link(object_1, fragment=none_type_0)
    var_2 = link_1.__hash__()
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bytes_1 = b"-5164621852614943975"
    link_5 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_5 = link_0.__hash__()
    assert var_5 == 0


def test_case_970():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == 4128530656735687579
    var_2 = link_1.__hash__()
    assert var_2 == 4128530656735687579


def test_case_971():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_2 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_1 = link_2.__repr__()
    var_2 = var_1.__eq__(bool_1)
    var_3 = var_2.__hash__()
    var_4 = var_3.__repr__()
    bool_2 = True
    dict_1 = {}
    none_type_1 = None
    float_1 = 2515.28653
    link_3 = module_0.Link(dict_1, none_type_1, float_1, none_type_1)
    var_5 = link_3.__repr__()
    var_6 = var_5.__eq__(bool_2)
    var_7 = var_6.__hash__()
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_4.__hash__()
    assert var_8 == 0
    var_9 = var_8.__repr__()
    assert var_9 == "0"
    var_10 = var_8.__hash__()
    assert var_10 == 0
    bool_3 = True
    list_0 = [bool_3, bool_3, bool_3]
    link_5 = module_0.Link(list_0)
    none_type_2 = None
    bool_4 = True
    link_6 = module_0.Link(bool_4, nofollow=bool_4)
    var_11 = link_6.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_2, bytes_2)
    var_13 = link_6.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_5 = True
    link_8 = module_0.Link(bool_5, nofollow=bool_5)
    var_14 = link_8.__eq__(link_8)
    assert var_14 is True
    none_type_3 = None
    bool_6 = False
    link_9 = module_0.Link(none_type_3, fragment=bool_6)
    var_15 = link_9.__repr__()
    assert var_15 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_16 = var_15.__hash__()
    assert var_16 == -5509142826951788791
    var_17 = var_16.__repr__()
    assert var_17 == "-5509142826951788791"
    var_18 = var_17.__repr__()
    assert var_18 == "'-5509142826951788791'"
    float_2 = 5.0
    link_10 = module_0.Link(float_2)
    none_type_4 = None
    link_11 = module_0.Link(none_type_4, link_10)
    bytes_3 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_12 = module_0.Link(bytes_3)
    link_13 = module_0.Link(link_12)
    var_19 = link_8.__hash__()
    assert var_19 == 0


def test_case_972():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    link_1 = module_0.Link(var_0, var_1, var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__repr__()
    assert var_4 == "0"
    var_5 = var_3.__hash__()
    assert var_5 == 0
    bool_0 = False
    link_3 = module_0.Link(bool_0)
    var_6 = var_4.__repr__()
    assert var_6 == "'0'"
    link_4 = module_0.Link(bool_0, var_5, var_3)
    bool_1 = True
    link_5 = module_0.Link(bool_1, bool_1, nofollow=bool_1)
    var_7 = link_5.__hash__()
    assert var_7 == 1
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_7 = module_0.Link(tuple_0, fragment=bool_2)
    var_8 = link_7.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__hash__()
    assert var_10 == -552935834187556073
    link_8 = module_0.Link(link_7, nofollow=var_10)


def test_case_973():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_1 = link_2.__hash__()
    assert var_1 == -4606328870177462788
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_3 = var_1.__eq__(bytes_0)
    var_4 = var_3.__hash__()
    complex_0 = -2489 + 3297.83623j
    link_4 = module_0.Link(complex_0)
    var_5 = link_4.__hash__()
    assert var_5 == 1172959022599657258
    bool_2 = True
    link_5 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_6 = link_5.__hash__()
    assert var_6 == 1
    var_7 = link_5.__hash__()
    assert var_7 == 1
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_3 = False
    link_7 = module_0.Link(bool_3)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_8 = module_0.Link(var_8, nofollow=var_8)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    link_9 = module_0.Link(var_8, nofollow=link_8)
    none_type_1 = None
    link_10 = module_0.Link(none_type_1, none_type_1)
    var_9 = var_5.__hash__()
    assert var_9 == 1172959022599657258


def test_case_974():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    int_0 = 783
    link_3 = module_0.Link(int_0, int_0)
    link_4 = module_0.Link(bool_0)


def test_case_975():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    var_1 = link_0.__hash__()
    assert var_1 == 5
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_3 = module_0.Link(link_0, link_0, none_type_0, link_1)


def test_case_976():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    bool_0 = False
    bytes_0 = b"]\xfe"
    int_0 = 3199
    tuple_0 = (bool_0, bytes_0, int_0, int_0)
    link_4 = module_0.Link(tuple_0, fragment=bytes_0)
    link_5 = module_0.Link(link_4, nofollow=bool_0)
    var_1 = link_5.__hash__()
    assert var_1 == 3939945378486638560
    link_6 = module_0.Link(var_1, bytes_0, var_1)
    link_7 = module_0.Link(bytes_0, fragment=link_6, nofollow=tuple_0)


def test_case_977():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    var_3 = var_2.__hash__()
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    link_4 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = link_4.__hash__()
    assert var_5 == -1835968800350151339
    var_6 = var_5.__hash__()
    assert var_6 == -1835968800350151339
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    bool_3 = True
    link_6 = module_0.Link(bool_3)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_7 = module_0.Link(float_0, fragment=var_7)
    object_0 = module_1.object()
    link_8 = module_0.Link(object_0, fragment=object_0)
    var_8 = link_8.__repr__()
    var_9 = link_8.__hash__()
    assert var_9 == 0
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_9 = module_0.Link(bool_4, fragment=tuple_1)
    var_10 = link_9.__hash__()
    assert var_10 == -8753497827991233192
    none_type_0 = None
    bool_6 = True
    link_10 = module_0.Link(bool_6, nofollow=bool_6)
    var_11 = link_10.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_0)
    link_11 = module_0.Link(link_10)
    bool_7 = True
    bool_8 = False
    tuple_2 = (bool_7, bool_8)
    link_12 = module_0.Link(tuple_2, fragment=bool_7)
    var_13 = link_12.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_13.__hash__()
    assert var_16 == -552935834187556073
    float_1 = 5.0
    link_13 = module_0.Link(float_1)
    none_type_1 = None
    link_14 = module_0.Link(none_type_1, link_13)
    var_17 = link_14.__eq__(link_14)
    assert var_17 is True
    object_1 = module_1.object()
    link_15 = module_0.Link(object_1, fragment=object_1)
    link_16 = module_0.Link(object_1, none_type_1)
    var_18 = var_5.__repr__()
    assert var_18 == "-1835968800350151339"


def test_case_978():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    complex_0 = -2489 + 3297.83623j
    link_1 = module_0.Link(complex_0)
    var_3 = link_1.__hash__()
    assert var_3 == 1172959022599657258
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_5 = var_4.__hash__()
    assert var_5 == -3936900723769714473
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    var_6 = link_4.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(object_0)
    bool_1 = False
    none_type_0 = None
    link_5 = module_0.Link(bool_1, fragment=none_type_0)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_1 = module_1.object()
    link_6 = module_0.Link(object_1, fragment=object_1)
    var_9 = link_6.__hash__()
    assert var_9 == 0
    var_10 = link_1.__repr__()
    assert (
        var_10 == "Link(url=(-2489+3297.83623j), text='', fragment='', nofollow=False)"
    )


def test_case_979():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_1 = var_0.__hash__()
    assert var_1 == -3203539594471298528
    bool_0 = True
    link_1 = module_0.Link(bool_0, fragment=bool_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_3 = var_2.__hash__()
    assert var_3 == 4729962515010671871
    var_4 = var_3.__repr__()
    assert var_4 == "4729962515010671871"
    link_2 = module_0.Link(var_4)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_5 = link_2.__hash__()
    assert var_5 == -6813877331771076914
    none_type_0 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_6 = link_3.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    link_4 = module_0.Link(link_3)
    link_5 = module_0.Link(var_6, fragment=none_type_0)
    var_8 = link_5.__hash__()
    assert var_8 == 477042
    var_9 = var_8.__repr__()
    assert var_9 == "477042"
    none_type_1 = None
    none_type_2 = None
    link_6 = module_0.Link(none_type_2)
    var_10 = link_6.__repr__()
    assert var_10 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_11 = var_10.__hash__()
    assert var_11 == 2234852059487564994
    var_12 = var_11.__eq__(none_type_1)
    link_7 = module_0.Link(var_10, var_11, var_10)
    none_type_3 = None
    link_8 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    none_type_4 = None
    bool_2 = False
    link_9 = module_0.Link(none_type_4, fragment=bool_2)
    var_13 = link_9.__repr__()
    assert var_13 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_14 = var_13.__hash__()
    assert var_14 == -5509142826951788791
    var_15 = var_14.__repr__()
    assert var_15 == "-5509142826951788791"
    var_16 = var_15.__repr__()
    assert var_16 == "'-5509142826951788791'"
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_10 = module_0.Link(bool_3, fragment=tuple_0)
    var_17 = link_10.__hash__()
    assert var_17 == -8753497827991233192
    link_11 = module_0.Link(var_17, var_17, nofollow=var_17)
    var_18 = link_11.__repr__()
    assert (
        var_18
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_19 = link_10.__repr__()
    assert var_19 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    bool_5 = True
    dict_0 = {}
    none_type_5 = None
    float_0 = 2515.28653
    link_12 = module_0.Link(dict_0, none_type_5, float_0, none_type_5)
    var_20 = link_12.__repr__()
    var_21 = var_20.__eq__(bool_5)
    var_22 = var_21.__hash__()
    var_23 = var_22.__repr__()
    var_24 = var_9.__eq__(link_2)


def test_case_980():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    str_0 = "Dmfv; iJ001\n"
    none_type_1 = None
    link_2 = module_0.Link(str_0, fragment=none_type_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_0 = link_4.__repr__()
    assert (
        var_0
        == "Link(url=Link(url=b'\\x1f\\x04O\\x8c\\xc5\\x9b\\x03.\\xc4\\x97^\\xcb\\xb2\\xf6\\tC\\x8eAQ\\xad', text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )


def test_case_981():
    bytes_0 = b"O\xf3\x8ez\x9cB\xfdi\xa1"
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__repr__()
    assert var_1 == "477042"
    var_2 = var_1.__eq__(bytes_0)
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    link_2 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_5 = link_4.__hash__()
    assert var_5 == -4606328870177462788
    var_6 = var_5.__hash__()
    assert var_6 == -2300485860963768837
    none_type_1 = None
    none_type_2 = None
    link_5 = module_0.Link(none_type_2)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == 2234852059487564994
    var_9 = var_8.__eq__(none_type_1)
    link_6 = module_0.Link(var_7, var_8, var_7)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_7 = module_0.Link(float_0)
    none_type_3 = None
    link_8 = module_0.Link(none_type_3, link_7)
    var_10 = link_8.__eq__(link_8)
    assert var_10 is True
    var_11 = link_7.__hash__()
    assert var_11 == 5
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_9 = module_0.Link(tuple_1, fragment=bool_2)
    var_12 = link_9.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_12.__hash__()
    assert var_15 == -552935834187556073
    bool_4 = False
    bytes_2 = b"]\xfe"
    int_0 = 3199
    tuple_2 = (bool_4, bytes_2, int_0, int_0)
    link_10 = module_0.Link(tuple_2, fragment=bytes_2)
    link_11 = module_0.Link(link_10, nofollow=bool_4)
    var_16 = link_11.__hash__()
    assert var_16 == 3939945378486638560
    link_12 = module_0.Link(var_16, bytes_2, var_16)
    list_0 = []
    link_13 = module_0.Link(list_0)
    var_17 = link_13.__repr__()
    assert var_17 == "Link(url=[], text='', fragment='', nofollow=False)"
    bool_5 = False
    bool_6 = False
    tuple_3 = (bool_6,)
    link_14 = module_0.Link(bool_5, fragment=tuple_3)
    var_18 = link_14.__hash__()
    assert var_18 == -8753497827991233192
    link_15 = module_0.Link(var_18, var_18, nofollow=var_18)
    var_19 = link_15.__repr__()
    assert (
        var_19
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_20 = link_14.__repr__()
    assert var_20 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    int_1 = 1870
    link_16 = module_0.Link(int_1)
    dict_0 = {link_16: link_16}
    link_17 = module_0.Link(dict_0, fragment=dict_0)
    var_21 = link_17.__repr__()
    assert (
        var_21
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_22 = var_21.__repr__()
    assert (
        var_22
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_23 = link_5.__repr__()
    assert var_23 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_24 = var_23.__eq__(link_12)
    var_25 = var_24.__hash__()
    var_26 = var_25.__hash__()


def test_case_982():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    var_1 = link_2.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(object_0)
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_3 = link_3.__hash__()
    assert var_3 == 0
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_4 = module_0.Link(list_0, str_0)
    link_5 = module_0.Link(link_4)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, list_0)
    float_0 = 5.0
    link_7 = module_0.Link(float_0)
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, link_7)
    var_5 = link_8.__eq__(link_8)
    assert var_5 is True
    var_6 = link_7.__hash__()
    assert var_6 == 5
    link_9 = module_0.Link(link_0, link_7, list_0)


def test_case_983():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_6 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_6.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__hash__()
    assert var_4 == -552935834187556073
    none_type_1 = None
    bool_4 = True
    link_7 = module_0.Link(bool_4, nofollow=bool_4)
    var_5 = link_7.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_7.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_9 = module_0.Link(link_7)
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_10 = module_0.Link(list_0, str_0)
    link_11 = module_0.Link(link_10)
    none_type_2 = None
    link_12 = module_0.Link(none_type_2, fragment=none_type_2)
    var_8 = link_12.__hash__()
    assert var_8 == 0
    var_9 = var_8.__hash__()
    assert var_9 == 0
    var_10 = var_8.__eq__(var_8)
    var_11 = var_9.__hash__()
    assert var_11 == 0
    bool_5 = True
    link_13 = module_0.Link(bool_5, nofollow=bool_5)
    float_1 = 5.0
    link_14 = module_0.Link(float_1)
    none_type_3 = None
    link_15 = module_0.Link(none_type_3, link_14)
    var_12 = link_15.__eq__(link_15)
    assert var_12 is True
    var_13 = link_15.__eq__(link_14)
    assert var_13 is False
    var_14 = var_13.__eq__(var_12)
    assert var_14 is False
    list_1 = []
    link_16 = module_0.Link(list_1)
    var_15 = link_16.__repr__()
    assert var_15 == "Link(url=[], text='', fragment='', nofollow=False)"
    link_17 = module_0.Link(var_4, fragment=list_0)


def test_case_984():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    link_1 = module_0.Link(var_0, var_1, var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    link_2 = module_0.Link(none_type_0, var_2, link_0)
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_3 = module_0.Link(bool_0, fragment=tuple_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_0, var_3, bool_1, bool_0}
    var_4 = var_3.__eq__(set_0)
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    var_6 = link_3.__hash__()
    assert var_6 == -8753497827991233192
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_7 = link_5.__hash__()
    assert var_7 == -4606328870177462788
    bool_2 = True
    dict_0 = {}
    none_type_2 = None
    float_0 = 2515.28653
    link_6 = module_0.Link(dict_0, none_type_2, float_0, none_type_2)
    var_8 = link_6.__repr__()
    var_9 = var_8.__eq__(bool_2)
    var_10 = var_9.__hash__()
    var_11 = var_10.__repr__()
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_3 = True
    link_8 = module_0.Link(bool_3)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_9 = module_0.Link(float_1, fragment=var_12)
    link_10 = module_0.Link(float_1, fragment=link_8)
    var_13 = link_8.__hash__()
    assert var_13 == 1


def test_case_985():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_1)
    link_2 = module_0.Link(link_1)
    var_0 = link_2.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_3 = module_0.Link(bool_0)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_1)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    complex_0 = 2717.25865 + 279.6823j
    bytes_2 = b"xC(\xd2O"
    set_0 = {bytes_2, bytes_2, bytes_2}
    none_type_0 = None
    link_5 = module_0.Link(set_0, none_type_0)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_7 = var_6.__hash__()
    assert var_7 == -2938861455928792573
    var_8 = var_7.__hash__()
    assert var_8 == -633018446715098622
    var_9 = var_8.__eq__(complex_0)
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, link_6)
    int_0 = 3199
    link_8 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_3 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_3, nofollow=bytes_3)
    var_10 = link_9.__repr__()
    assert (
        var_10
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_4, bytes_4)
    bool_3 = True
    link_11 = module_0.Link(bool_3)
    var_11 = link_11.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_12 = module_0.Link(float_1, fragment=var_11)
    link_13 = module_0.Link(float_1, fragment=link_11)
    none_type_2 = None
    link_14 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    none_type_3 = None
    link_15 = module_0.Link(none_type_3)
    var_12 = link_15.__hash__()
    assert var_12 == 477042
    var_13 = var_12.__hash__()
    assert var_13 == 477042
    bool_4 = False
    complex_1 = -2055.726254 - 2343.20671j
    link_16 = module_0.Link(var_13, fragment=bool_4, nofollow=complex_1)
    int_1 = 1870
    link_17 = module_0.Link(int_1)
    dict_0 = {link_17: link_17}
    link_18 = module_0.Link(dict_0, fragment=dict_0)
    var_14 = link_18.__repr__()
    assert (
        var_14
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_15 = var_14.__repr__()
    assert (
        var_15
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_16 = var_8.__repr__()
    assert var_16 == "-633018446715098622"


def test_case_986():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=None, text='', fragment=None, nofollow=False)"
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, link_2)
    var_4 = link_3.__eq__(link_3)
    assert var_4 is True
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    link_5 = module_0.Link(object_0, none_type_1)
    var_5 = link_2.__hash__()
    assert var_5 == 5
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_1 = False
    link_7 = module_0.Link(bool_1)
    var_6 = link_7.__repr__()
    assert var_6 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_8 = module_0.Link(var_6, nofollow=var_6)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    var_7 = var_6.__hash__()
    assert var_7 == -3936900723769714473
    bool_2 = True
    dict_0 = {}
    none_type_3 = None
    float_1 = 2515.28653
    link_9 = module_0.Link(dict_0, none_type_3, float_1, none_type_3)
    var_8 = link_9.__repr__()
    var_9 = var_8.__eq__(bool_2)
    var_10 = var_9.__hash__()
    object_1 = module_1.object()
    link_10 = module_0.Link(object_1, fragment=object_1)
    var_11 = link_10.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(object_1)
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_11 = module_0.Link(bool_3, fragment=tuple_0)
    var_13 = link_11.__hash__()
    assert var_13 == -8753497827991233192
    link_12 = module_0.Link(var_13, var_13, nofollow=var_13)
    var_14 = link_12.__hash__()
    assert var_14 == -1835968800350151339
    var_15 = var_14.__hash__()
    assert var_15 == -1835968800350151339
    link_13 = module_0.Link(var_15)


def test_case_987():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    int_0 = 1870
    link_1 = module_0.Link(int_0)
    dict_0 = {link_1: link_1}
    link_2 = module_0.Link(dict_0, fragment=dict_0)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_4 = var_2.__eq__(var_2)
    var_5 = var_4.__hash__()
    int_1 = 3199
    link_3 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_0 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_7 = var_6.__eq__(int_1)
    bool_1 = False
    link_5 = module_0.Link(bool_1)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_6 = module_0.Link(tuple_0, fragment=bool_2)
    var_9 = link_6.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    none_type_1 = None
    link_7 = module_0.Link(link_6, fragment=none_type_1)
    float_0 = 5.0
    link_8 = module_0.Link(float_0)
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, link_8)
    var_11 = link_9.__eq__(link_9)
    assert var_11 is True
    object_0 = module_1.object()
    link_10 = module_0.Link(object_0, fragment=object_0)
    link_11 = module_0.Link(object_0, none_type_2)
    var_12 = var_1.__hash__()


def test_case_988():
    complex_0 = -1110.69549 - 569.4j
    link_0 = module_0.Link(complex_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xe32\x8d\x1e"
    none_type_0 = None
    link_1 = module_0.Link(link_0, bytes_0, nofollow=none_type_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_3 = module_0.Link(tuple_0, fragment=bool_0)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__hash__()
    assert var_5 == -552935834187556073
    none_type_2 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_6 = link_4.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_2)
    var_8 = link_4.__hash__()
    assert var_8 == 0
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    link_5 = module_0.Link(object_0)
    var_9 = link_5.__repr__()
    var_10 = var_9.__repr__()
    var_11 = var_10.__hash__()
    bool_3 = False
    link_6 = module_0.Link(bool_3)
    var_12 = link_6.__hash__()
    assert var_12 == 0
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_7 = module_0.Link(tuple_1, fragment=bool_4)
    var_13 = link_7.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__repr__()
    assert var_15 == "-5164621852614943975"
    none_type_3 = None
    link_8 = module_0.Link(none_type_3, bool_5)
    var_16 = var_6.__hash__()
    assert var_16 == 0


def test_case_989():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_1 = var_0.__hash__()
    assert var_1 == -3203539594471298528
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    none_type_0 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    var_4 = var_2.__repr__()
    assert var_4 == "0"
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    var_6 = var_5.__repr__()
    assert (
        var_6
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_6 = module_0.Link(var_5, bytes_0)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    bool_3 = False
    link_7 = module_0.Link(bool_3)
    var_7 = link_7.__hash__()
    assert var_7 == 0
    var_8 = link_0.__hash__()
    assert var_8 == 3199


def test_case_990():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, link_1)
    int_0 = 3199
    link_3 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_0 = link_3.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_1 = var_0.__hash__()
    assert var_1 == -3203539594471298528
    complex_0 = 2717.25865 + 279.6823j
    bytes_0 = b"xC(\xd2O"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_2 = None
    link_4 = module_0.Link(set_0, none_type_2)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_3 = var_2.__hash__()
    assert var_3 == -2938861455928792573
    var_4 = var_3.__hash__()
    assert var_4 == -633018446715098622
    var_5 = var_4.__eq__(complex_0)
    none_type_3 = None
    link_5 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_6 = module_0.Link(var_6, nofollow=link_5)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_7 = link_8.__hash__()
    assert var_7 == -4606328870177462788
    bool_0 = True
    link_9 = module_0.Link(bool_0)
    var_8 = link_9.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_1)
    var_10 = var_9.__hash__()
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_2)
    link_11 = module_0.Link(link_10)
    var_11 = link_11.__hash__()
    assert var_11 == -4606328870177462788
    bool_1 = True
    link_12 = module_0.Link(bool_1)
    var_12 = link_12.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_13 = var_11.__eq__(bytes_2)
    link_13 = module_0.Link(var_11)
    float_1 = 5.0
    link_14 = module_0.Link(float_1)
    none_type_4 = None
    link_15 = module_0.Link(none_type_4, link_14)
    var_14 = link_15.__eq__(link_15)
    assert var_14 is True
    var_15 = var_8.__eq__(bytes_1)


def test_case_991():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_4 = var_2.__repr__()
    int_0 = 783
    link_3 = module_0.Link(int_0, int_0)
    link_4 = module_0.Link(link_3, fragment=link_3)
    var_5 = link_0.__repr__()


def test_case_992():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_6 = link_1.__hash__()
    assert var_6 == 0
    none_type_1 = None
    bool_3 = True
    link_3 = module_0.Link(none_type_1, bool_3)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(url=None, text=True, fragment='', nofollow=False)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(url=None, text=True, fragment='', nofollow=False)\""
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_9 = link_4.__hash__()
    assert var_9 == 3199
    none_type_2 = None
    link_5 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    var_10 = link_5.__hash__()
    assert var_10 == 477042
    var_11 = var_10.__repr__()
    assert var_11 == "477042"
    var_12 = var_11.__repr__()
    assert var_12 == "'477042'"
    var_13 = var_12.__hash__()
    assert var_13 == 9175907747363719430
    var_14 = var_13.__hash__()
    assert var_14 == 2258378719722637577
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_15 = link_7.__hash__()
    assert var_15 == -4606328870177462788
    var_16 = var_15.__hash__()
    assert var_16 == -2300485860963768837
    bool_4 = False
    link_8 = module_0.Link(bool_4)
    var_17 = link_8.__repr__()
    assert var_17 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_18 = var_15.__repr__()
    assert var_18 == "-4606328870177462788"
    var_19 = var_15.__hash__()
    assert var_19 == -2300485860963768837


def test_case_993():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    link_4 = module_0.Link(link_2, fragment=bytes_0, nofollow=link_1)


def test_case_994():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(none_type_0, bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=True, fragment='', nofollow=False)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(url=None, text=True, fragment='', nofollow=False)\""
    none_type_1 = None
    bool_1 = True
    link_1 = module_0.Link(bool_1, nofollow=bool_1)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    var_4 = var_2.__repr__()
    assert var_4 == "0"
    none_type_2 = None
    link_2 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_5, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_6 = var_5.__eq__(var_5)
    bytes_0 = b"\xdb\x9d\xd6\xecN'F\x8a\xe6\xf4\x8b\x9b;\xffP"
    dict_0 = {none_type_0: link_1, var_1: bytes_0, link_1: link_0, bool_0: none_type_1}
    link_4 = module_0.Link(var_5, dict_0, none_type_2)


def test_case_995():
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_0 = module_0.Link(list_0, str_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, list_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    bool_0 = False
    link_4 = module_0.Link(bool_0)
    var_0 = link_4.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_5 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    link_7 = module_0.Link(link_5, fragment=bytes_0, nofollow=link_4)
    object_1 = module_1.object()
    link_8 = module_0.Link(object_1, fragment=object_1)
    var_1 = link_8.__repr__()
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )


def test_case_996():
    bool_0 = True
    bool_1 = True
    bytes_0 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -6712542186422229073
    var_1 = var_0.__repr__()
    assert var_1 == "-6712542186422229073"
    var_2 = var_1.__eq__(bool_1)
    var_3 = var_2.__hash__()
    var_4 = var_3.__eq__(bool_0)
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_5 = link_1.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_1.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_8 = link_1.__hash__()
    assert var_8 == 0
    bool_3 = True
    link_3 = module_0.Link(bool_3, nofollow=bool_3)
    var_9 = link_3.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, none_type_1)
    var_10 = var_9.__eq__(var_9)
    bool_4 = False
    bool_5 = False
    tuple_0 = (bool_5,)
    link_5 = module_0.Link(bool_4, fragment=tuple_0)
    var_11 = link_5.__hash__()
    assert var_11 == -8753497827991233192
    link_6 = module_0.Link(var_11, var_11, nofollow=var_11)
    link_7 = module_0.Link(bytes_0, var_5)


def test_case_997():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    var_1 = link_0.__hash__()
    assert var_1 == 1
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text=True, fragment='', nofollow=True)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(url=True, text=True, fragment='', nofollow=True)\""


def test_case_998():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    var_4 = link_2.__eq__(link_2)
    assert var_4 is True
    var_5 = link_2.__eq__(link_1)
    assert var_5 is False
    var_6 = var_5.__eq__(var_4)
    assert var_6 is False
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_4 = module_0.Link(var_7, nofollow=link_3)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    var_8 = link_4.__hash__()
    assert var_8 == 4128530656735687579
    var_9 = link_4.__hash__()
    assert var_9 == 4128530656735687579
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_5 = module_0.Link(bool_0, fragment=tuple_0)
    var_10 = link_5.__hash__()
    assert var_10 == -8753497827991233192
    link_6 = module_0.Link(var_10, var_10, nofollow=var_10)
    var_11 = link_6.__repr__()
    assert (
        var_11
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    none_type_2 = None
    bool_2 = True
    link_7 = module_0.Link(bool_2, nofollow=bool_2)
    var_12 = link_7.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_2)
    var_14 = var_12.__repr__()
    assert var_14 == "0"
    var_15 = var_11.__hash__()
    assert var_15 == -1760694494365731450


def test_case_999():
    bool_0 = True
    bool_1 = True
    bytes_0 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -6712542186422229073
    var_1 = var_0.__repr__()
    assert var_1 == "-6712542186422229073"
    var_2 = var_1.__eq__(bool_1)
    var_3 = var_2.__hash__()
    var_4 = var_3.__eq__(bool_0)
    object_0 = module_1.object()
    none_type_0 = None
    link_1 = module_0.Link(object_0, fragment=none_type_0)
    var_5 = link_1.__hash__()
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_6 = link_2.__eq__(link_2)
    assert var_6 is True
    bytes_1 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_1, nofollow=bytes_1)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    none_type_2 = None
    none_type_3 = None
    link_5 = module_0.Link(none_type_3)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == 2234852059487564994
    var_9 = var_8.__eq__(none_type_2)
    link_6 = module_0.Link(var_7, var_8, var_7)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    link_7 = module_0.Link(none_type_2, var_9, link_5)
    bool_3 = False
    link_8 = module_0.Link(bool_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_9.__repr__()
    assert (
        var_10
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    link_10 = module_0.Link(var_7)


def test_case_1000():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = link_0.__hash__()
    assert var_3 == 0
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_4 = link_3.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = link_3.__repr__()
    assert (
        var_5
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    bytes_2 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_6 = link_4.__hash__()
    assert var_6 == 0
    var_7 = var_6.__repr__()
    assert var_7 == "0"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_5 = module_0.Link(bool_1, fragment=tuple_0)
    var_8 = link_5.__hash__()
    assert var_8 == -8753497827991233192
    link_6 = module_0.Link(var_8, var_8, nofollow=var_8)
    var_9 = link_6.__hash__()
    assert var_9 == -1835968800350151339
    var_10 = var_9.__hash__()
    assert var_10 == -1835968800350151339
    complex_0 = -1110.69549 - 569.4j
    link_7 = module_0.Link(complex_0)
    bytes_3 = b"\xe32\x8d\x1e"
    none_type_1 = None
    link_8 = module_0.Link(link_7, bytes_3, nofollow=none_type_1)
    var_11 = link_8.__repr__()
    assert (
        var_11
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_12 = var_11.__repr__()
    assert (
        var_12
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_13 = var_12.__repr__()
    assert (
        var_13
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    bool_3 = True
    dict_0 = {}
    none_type_2 = None
    float_0 = 2515.28653
    link_9 = module_0.Link(dict_0, none_type_2, float_0, none_type_2)
    var_14 = link_9.__repr__()
    var_15 = var_14.__eq__(bool_3)
    var_16 = var_15.__hash__()
    var_17 = var_16.__repr__()
    link_10 = module_0.Link(var_14, nofollow=bool_0)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"


def test_case_1001():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    var_1 = link_1.__hash__()
    assert var_1 == 477042
    var_2 = var_1.__repr__()
    assert var_2 == "477042"
    var_3 = var_2.__repr__()
    assert var_3 == "'477042'"
    var_4 = var_3.__hash__()
    assert var_4 == 9175907747363719430
    var_5 = var_4.__hash__()
    assert var_5 == 2258378719722637577
    bool_0 = True
    link_2 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    var_6 = link_2.__hash__()
    assert var_6 == 1
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, link_3)
    var_7 = link_4.__eq__(link_4)
    assert var_7 is True
    var_8 = link_4.__eq__(link_3)
    assert var_8 is False
    var_9 = var_8.__eq__(var_7)
    assert var_9 is False
    none_type_2 = None
    bool_1 = True
    link_5 = module_0.Link(bool_1, nofollow=bool_1)
    var_10 = link_5.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    var_12 = link_5.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_13 = var_11.__repr__()
    none_type_3 = None
    none_type_4 = None
    link_7 = module_0.Link(none_type_4)
    var_14 = link_7.__repr__()
    assert var_14 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_15 = var_14.__hash__()
    assert var_15 == 2234852059487564994
    var_16 = var_15.__eq__(none_type_3)
    link_8 = module_0.Link(var_10)


def test_case_1002():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_2 = module_0.Link(var_2, nofollow=link_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    none_type_1 = None
    bool_2 = True
    link_3 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_3.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    var_5 = link_3.__hash__()
    assert var_5 == 0
    bool_3 = True
    link_4 = module_0.Link(bool_3, bool_3, nofollow=bool_3)
    var_6 = link_4.__hash__()
    assert var_6 == 1
    var_7 = link_4.__hash__()
    assert var_7 == 1
    var_8 = link_4.__repr__()
    assert var_8 == "Link(url=True, text=True, fragment='', nofollow=True)"
    var_9 = var_8.__repr__()
    assert var_9 == "\"Link(url=True, text=True, fragment='', nofollow=True)\""
    int_0 = 3199
    link_5 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_10 = link_5.__repr__()
    assert var_10 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_0 = b"-5164621852614943975"
    link_6 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_11 = var_10.__eq__(int_0)
    bool_4 = True
    link_7 = module_0.Link(bool_4, bool_4, nofollow=bool_4)
    var_12 = link_7.__hash__()
    assert var_12 == 1
    var_13 = link_7.__hash__()
    assert var_13 == 1
    object_0 = module_1.object()
    link_8 = module_0.Link(object_0, fragment=object_0)
    var_14 = link_8.__repr__()
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_15 = link_9.__hash__()
    assert var_15 == 0
    var_16 = var_15.__repr__()
    assert var_16 == "0"
    var_17 = var_15.__hash__()
    assert var_17 == 0
    none_type_2 = None
    bool_5 = True
    link_10 = module_0.Link(bool_5, nofollow=bool_5)
    var_18 = link_10.__hash__()
    assert var_18 == 0
    var_19 = var_18.__eq__(none_type_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    var_20 = link_10.__repr__()
    assert var_20 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_12 = module_0.Link(var_20, nofollow=var_20)
    bool_6 = False
    none_type_3 = None
    link_13 = module_0.Link(bool_6, fragment=none_type_3)
    var_21 = link_13.__repr__()
    assert var_21 == "Link(url=False, text='', fragment=None, nofollow=False)"
    link_14 = module_0.Link(var_13)


def test_case_1003():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    none_type_1 = None
    link_2 = module_0.Link(none_type_1)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_3 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_3.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    var_3 = var_1.__repr__()
    assert var_3 == "'-5164621852614943975'"


def test_case_1004():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_3, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_4 = link_3.__hash__()
    assert var_4 == 4128530656735687579
    var_5 = link_3.__hash__()
    assert var_5 == 4128530656735687579
    none_type_1 = None
    bool_2 = True
    link_4 = module_0.Link(none_type_1, bool_2)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=None, text=True, fragment='', nofollow=False)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(url=None, text=True, fragment='', nofollow=False)\""
    link_5 = module_0.Link(var_6, nofollow=var_7)
    none_type_2 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_8 = link_6.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_2)
    link_7 = module_0.Link(link_6)
    link_8 = module_0.Link(var_8, fragment=none_type_2)
    var_10 = link_8.__hash__()
    assert var_10 == 477042
    var_11 = var_10.__repr__()
    assert var_11 == "477042"
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_9 = module_0.Link(bool_4, fragment=tuple_1)
    var_12 = link_9.__hash__()
    assert var_12 == -8753497827991233192
    set_0 = {tuple_1, var_12, bool_5, bool_4}
    var_13 = var_12.__eq__(set_0)
    var_14 = link_9.__hash__()
    assert var_14 == -8753497827991233192
    bool_6 = True
    link_10 = module_0.Link(bool_6, bool_6, nofollow=bool_6)
    var_15 = link_10.__hash__()
    assert var_15 == 1
    var_16 = link_10.__hash__()
    assert var_16 == 1
    var_17 = link_10.__repr__()
    assert var_17 == "Link(url=True, text=True, fragment='', nofollow=True)"
    var_18 = var_17.__repr__()
    assert var_18 == "\"Link(url=True, text=True, fragment='', nofollow=True)\""
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_0, bytes_0)
    bool_7 = True
    link_12 = module_0.Link(bool_7)
    var_19 = link_12.__repr__()
    assert var_19 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_13 = module_0.Link(float_1, fragment=var_19)
    link_14 = module_0.Link(float_1, fragment=link_12)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_15 = module_0.Link(bytes_1)
    link_16 = module_0.Link(link_15)
    var_20 = link_16.__hash__()
    assert var_20 == -4606328870177462788
    bool_8 = True
    link_17 = module_0.Link(bool_8)
    var_21 = link_17.__repr__()
    assert var_21 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_22 = var_20.__eq__(bytes_1)
    float_2 = 5.0
    link_18 = module_0.Link(float_2)
    none_type_3 = None
    link_19 = module_0.Link(none_type_3, link_18)
    var_23 = link_19.__eq__(link_19)
    assert var_23 is True
    object_0 = module_1.object()
    link_20 = module_0.Link(object_0, fragment=object_0)
    link_21 = module_0.Link(object_0, none_type_3)
    var_24 = link_18.__hash__()
    assert var_24 == 5
    var_25 = var_19.__repr__()
    assert var_25 == "\"Link(url=True, text='', fragment='', nofollow=False)\""


def test_case_1005():
    int_0 = 783
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == 1
    var_1 = link_1.__hash__()
    assert var_1 == 1
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_4 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    link_5 = module_0.Link(var_2, nofollow=link_4)
    bool_2 = False
    link_6 = module_0.Link(bool_2)
    var_3 = link_6.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_7 = module_0.Link(var_3, nofollow=var_3)
    float_0 = 5.0
    link_8 = module_0.Link(float_0)
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, link_8)
    var_4 = link_9.__eq__(link_9)
    assert var_4 is True
    object_0 = module_1.object()
    link_10 = module_0.Link(object_0, fragment=object_0)
    link_11 = module_0.Link(object_0, none_type_1)
    bool_3 = False
    link_12 = module_0.Link(bool_3)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_13.__repr__()
    assert (
        var_5
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    object_1 = module_1.object()
    none_type_2 = None
    link_14 = module_0.Link(none_type_2, fragment=none_type_2)
    var_6 = link_14.__repr__()
    assert var_6 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_7 = var_6.__hash__()
    assert var_7 == 7957018345684386684
    var_8 = var_7.__repr__()
    assert var_8 == "7957018345684386684"
    link_15 = module_0.Link(object_1, var_8)
    var_9 = link_15.__repr__()
    bool_4 = True
    link_16 = module_0.Link(bool_4, nofollow=bool_4)
    var_10 = link_16.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_3 = None
    link_17 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    var_11 = link_17.__hash__()
    assert var_11 == 477042
    var_12 = var_11.__repr__()
    assert var_12 == "477042"
    var_13 = var_12.__repr__()
    assert var_13 == "'477042'"
    var_14 = var_13.__hash__()
    assert var_14 == 9175907747363719430
    var_15 = var_14.__hash__()
    assert var_15 == 2258378719722637577
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_18 = module_0.Link(bytes_1, bytes_1)
    var_16 = link_18.__hash__()
    assert var_16 == 0
    var_17 = var_16.__repr__()
    assert var_17 == "0"
    var_18 = var_16.__hash__()
    assert var_18 == 0
    bool_5 = False
    link_19 = module_0.Link(bool_5)
    var_19 = var_17.__repr__()
    assert var_19 == "'0'"
    int_1 = -8753497827991233192
    var_20 = link_3.__hash__()
    assert var_20 == 0
    var_21 = var_20.__eq__(var_4)
    assert var_21 is False
    var_22 = var_21.__repr__()
    assert var_22 == "False"
    var_23 = var_22.__eq__(int_1)


def test_case_1006():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bool_1 = True
    link_1 = module_0.Link(bool_1, nofollow=bool_1)
    link_2 = module_0.Link(link_1, link_1)
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(url=Link(url=True, text='', fragment='', nofollow=True), text=Link(url=True, text='', fragment='', nofollow=True), fragment='', nofollow=False)"
    )


def test_case_1007():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_4 = var_2.__repr__()
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_3 = True
    link_4 = module_0.Link(bool_3, nofollow=bool_3)
    link_5 = module_0.Link(tuple_0)


def test_case_1008():
    float_0 = 1729.95
    link_0 = module_0.Link(float_0, fragment=float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    link_1 = module_0.Link(var_0, var_0, float_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=0, text=0, fragment=1729.95, nofollow=False)"


def test_case_1009():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    int_0 = 1870
    link_3 = module_0.Link(int_0)
    dict_0 = {link_3: link_3}
    link_4 = module_0.Link(dict_0, fragment=dict_0)
    var_3 = link_4.__repr__()
    assert (
        var_3
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_5 = var_3.__eq__(var_3)
    var_6 = var_5.__hash__()
    none_type_0 = None
    none_type_1 = None
    link_5 = module_0.Link(none_type_1)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == 2234852059487564994
    var_9 = var_8.__eq__(none_type_0)
    var_10 = link_5.__hash__()
    assert var_10 == 477042
    var_11 = var_10.__hash__()
    assert var_11 == 477042


def test_case_1010():
    dict_0 = {}
    none_type_0 = None
    link_0 = module_0.Link(dict_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_1011():
    complex_0 = -2489 + 3297.83623j
    link_0 = module_0.Link(complex_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1172959022599657258
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__repr__()
    assert var_2 == "0"
    var_3 = var_1.__hash__()
    assert var_3 == 0
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_4 = var_2.__repr__()
    assert var_4 == "'0'"
    link_3 = module_0.Link(bool_0, var_3, var_1)
    bool_1 = True
    link_4 = module_0.Link(bool_1, bool_1, nofollow=bool_1)
    var_5 = link_4.__hash__()
    assert var_5 == 1
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    var_6 = link_5.__hash__()
    assert var_6 == 477042
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_6 = module_0.Link(bool_2, fragment=tuple_0)
    var_7 = link_6.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_0, var_7, bool_3, bool_2}
    var_8 = var_7.__eq__(set_0)
    link_7 = module_0.Link(link_2)


def test_case_1012():
    bool_0 = False
    complex_0 = -2172.59 + 2037.389578j
    list_0 = [bool_0, complex_0, complex_0, complex_0]
    list_1 = []
    tuple_0 = (list_1,)
    link_0 = module_0.Link(list_0, tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0, list_1, list_0)


def test_case_1013():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_2 = module_0.Link(var_4)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    bool_2 = True
    link_3 = module_0.Link(bool_2, nofollow=bool_2)
    link_4 = module_0.Link(link_3, link_3)
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    link_5 = module_0.Link(object_0)
    var_5 = link_5.__repr__()
    var_6 = var_5.__repr__()
    var_7 = var_6.__hash__()
    bool_3 = False
    link_6 = module_0.Link(bool_3)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_0, bytes_0)
    var_8 = link_7.__repr__()
    assert (
        var_8
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_8 = module_0.Link(bool_4)
    var_9 = var_8.__repr__()
    assert (
        var_9
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    object_1 = module_1.object()
    link_9 = module_0.Link(object_1, fragment=object_1)
    var_10 = link_9.__repr__()
    bool_5 = True
    bool_6 = True
    bytes_1 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_10 = module_0.Link(bytes_1)
    var_11 = link_10.__hash__()
    assert var_11 == -6712542186422229073
    var_12 = var_11.__repr__()
    assert var_12 == "-6712542186422229073"
    var_13 = var_12.__eq__(bool_6)
    var_14 = var_13.__hash__()
    var_15 = var_14.__eq__(bool_5)
    none_type_0 = None
    link_11 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_7 = False
    link_12 = module_0.Link(bool_7)
    var_16 = link_12.__repr__()
    assert var_16 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_13 = module_0.Link(var_16, nofollow=var_16)
    link_14 = module_0.Link(var_16, nofollow=link_13)
    float_0 = 5.0
    link_15 = module_0.Link(float_0)
    none_type_1 = None
    link_16 = module_0.Link(none_type_1, link_15)
    int_1 = 3199
    link_17 = module_0.Link(int_1, int_1, nofollow=int_1)
    bytes_2 = b"-5164621852614943975"
    link_18 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_17 = link_18.__repr__()
    assert (
        var_17
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    var_18 = var_15.__hash__()


def test_case_1014():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    float_0 = 1729.95
    link_1 = module_0.Link(float_0, fragment=float_0)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    link_2 = module_0.Link(var_4, var_4, float_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=0, text=0, fragment=1729.95, nofollow=False)"
    bool_2 = False
    link_3 = module_0.Link(bool_2)
    var_6 = link_3.__hash__()
    assert var_6 == 0
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_4 = module_0.Link(bool_3, fragment=tuple_1)
    var_7 = link_4.__hash__()
    assert var_7 == -8753497827991233192
    link_5 = module_0.Link(var_7, var_7, nofollow=var_7)
    var_8 = link_5.__repr__()
    assert (
        var_8
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bool_5 = False
    link_6 = module_0.Link(bool_5)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_6 = True
    dict_0 = {}
    none_type_0 = None
    float_1 = 2515.28653
    link_7 = module_0.Link(dict_0, none_type_0, float_1, none_type_0)
    var_10 = link_7.__repr__()
    var_11 = var_10.__eq__(bool_6)
    var_12 = var_11.__hash__()
    var_13 = var_12.__repr__()
    float_2 = 5.0
    link_8 = module_0.Link(float_2)
    var_14 = link_8.__hash__()
    assert var_14 == 5
    object_0 = module_1.object()
    link_9 = module_0.Link(object_0, fragment=object_0)
    var_15 = link_9.__repr__()
    var_16 = link_9.__hash__()
    assert var_16 == 0
    var_17 = var_11.__hash__()


def test_case_1015():
    complex_0 = 2717.25865 + 279.6823j
    bytes_0 = b"xC(\xd2O"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    link_0 = module_0.Link(set_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == -2938861455928792573
    var_2 = var_1.__hash__()
    assert var_2 == -633018446715098622
    var_3 = var_2.__eq__(complex_0)
    var_4 = var_0.__repr__()
    assert (
        var_4
        == "\"Link(url={b'xC(\\\\xd2O'}, text=None, fragment='', nofollow=False)\""
    )


def test_case_1016():
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_0 = module_0.Link(list_0, str_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, list_0)
    bool_0 = True
    link_3 = module_0.Link(bool_0, nofollow=bool_0)
    link_4 = module_0.Link(link_3, link_3)
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(url=['kcc#-Y\\x0b?P?jv'], text='kcc#-Y\\x0b?P?jv', fragment='', nofollow=False)"
    )


def test_case_1017():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment=None, nofollow=False)"
    link_1 = module_0.Link(var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=b\"Link(url=None, text='', fragment=None, nofollow=False)\", text='', fragment='', nofollow=False)"
    )
    none_type_1 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    link_3 = module_0.Link(link_2)
    link_4 = module_0.Link(var_2, fragment=none_type_1)
    none_type_2 = None
    link_5 = module_0.Link(none_type_2, fragment=none_type_2)
    var_4 = link_5.__hash__()
    assert var_4 == 0
    var_5 = var_4.__hash__()
    assert var_5 == 0
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=None, text='', fragment=None, nofollow=False)"
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    none_type_3 = None
    link_7 = module_0.Link(none_type_3, link_6)
    none_type_4 = None
    link_8 = module_0.Link(none_type_4, nofollow=none_type_4)
    var_7 = link_8.__repr__()
    assert var_7 == "Link(url=None, text='', fragment='', nofollow=None)"
    bytes_0 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_8 = link_9.__hash__()
    assert var_8 == 0
    var_9 = link_9.__repr__()
    assert (
        var_9
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_10 = module_0.Link(tuple_0, fragment=bool_1)
    var_10 = link_10.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = link_10.__repr__()
    assert var_12 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    link_11 = module_0.Link(var_2, fragment=var_3, nofollow=bool_2)


def test_case_1018():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    link_1 = module_0.Link(link_0)


def test_case_1019():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0)
    var_1 = var_0.__eq__(var_0)
    var_2 = var_0.__hash__()
    assert var_2 == 5710265117276615615


def test_case_1020():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_0)
    none_type_1 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_5 = link_2.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    bool_3 = False
    link_3 = module_0.Link(bool_3)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_8 = var_6.__repr__()
    var_9 = link_0.__hash__()
    assert var_9 == 0


def test_case_1021():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_1 = module_0.Link(bool_1, fragment=tuple_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    set_0 = {tuple_0, var_1, bool_2, bool_1}
    var_2 = var_1.__eq__(set_0)
    var_3 = link_1.__hash__()
    assert var_3 == -8753497827991233192
    var_4 = var_3.__repr__()
    assert var_4 == "-8753497827991233192"


def test_case_1022():
    int_0 = 852
    dict_0 = {int_0: int_0}
    link_0 = module_0.Link(dict_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={852: 852}, text='', fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, nofollow=dict_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"


def test_case_1023():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    complex_0 = -1110.69549 - 569.4j
    link_1 = module_0.Link(complex_0)
    bytes_0 = b"\xe32\x8d\x1e"
    none_type_0 = None
    link_2 = module_0.Link(link_1, bytes_0, nofollow=none_type_0)
    var_0 = link_2.__repr__()
    assert (
        var_0
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    int_0 = 3199
    link_3 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_1 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_4 = var_3.__eq__(int_0)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_2)
    link_6 = module_0.Link(link_5)
    var_5 = link_6.__hash__()
    assert var_5 == -4606328870177462788
    var_6 = var_5.__hash__()
    assert var_6 == -2300485860963768837
    none_type_1 = None
    bool_0 = True
    link_7 = module_0.Link(bool_0, nofollow=bool_0)
    var_7 = link_7.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    var_9 = link_7.__hash__()
    assert var_9 == 0
    int_1 = 3199
    link_8 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_10 = link_8.__repr__()
    assert var_10 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_9 = module_0.Link(var_10)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    bool_1 = False
    link_10 = module_0.Link(bool_1)
    var_11 = link_10.__repr__()
    assert var_11 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_12 = var_11.__hash__()
    assert var_12 == -3936900723769714473
    var_13 = link_10.__hash__()
    assert var_13 == 0


def test_case_1024():
    int_0 = 401
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    complex_0 = -2172.59 + 2037.389578j
    list_0 = [bool_0, complex_0, complex_0, complex_0]
    list_1 = []
    tuple_0 = (list_1,)
    link_1 = module_0.Link(list_0, tuple_0)
    link_2 = module_0.Link(link_1, list_1, list_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_0 = link_3.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_4 = module_0.Link(var_0, nofollow=link_3)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    var_1 = link_4.__hash__()
    assert var_1 == 4128530656735687579
    list_2 = []
    link_5 = module_0.Link(list_2)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(url=[], text='', fragment='', nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_0)
    link_7 = module_0.Link(link_6)
    var_3 = link_7.__hash__()
    assert var_3 == -4606328870177462788
    var_4 = var_3.__hash__()
    assert var_4 == -2300485860963768837
    bool_1 = False
    link_8 = module_0.Link(bool_1)
    var_5 = link_8.__repr__()
    assert var_5 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_6 = var_3.__repr__()
    assert var_6 == "-4606328870177462788"
    dict_0 = {}
    none_type_1 = None
    link_9 = module_0.Link(dict_0, nofollow=none_type_1)
    var_7 = link_6.__hash__()
    assert var_7 == -4606328870177462788


def test_case_1025():
    object_0 = module_1.object()
    none_type_0 = None
    link_0 = module_0.Link(object_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, link_1)
    var_1 = link_2.__eq__(link_2)
    assert var_1 is True
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_3 = module_0.Link(bool_0, fragment=tuple_0)
    var_2 = link_3.__hash__()
    assert var_2 == -8753497827991233192
    link_4 = module_0.Link(var_2, var_2, nofollow=var_2)
    var_3 = link_4.__repr__()
    assert (
        var_3
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    none_type_2 = None
    link_5 = module_0.Link(none_type_2, nofollow=none_type_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=False, text='', fragment=(False,), nofollow=False)"


def test_case_1026():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_0.__hash__()
    assert var_1 == -8753497827991233192
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__hash__()
    assert var_3 == 0
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_5 = var_0.__eq__(var_2)
    assert var_5 is False


def test_case_1027():
    int_0 = 502
    none_type_0 = None
    link_0 = module_0.Link(int_0, fragment=int_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_1028():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    link_1 = module_0.Link(none_type_0, var_0)


def test_case_1029():
    int_0 = 783
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_2 = module_0.Link(var_0, nofollow=link_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    none_type_1 = None
    link_3 = module_0.Link(none_type_1)
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    link_4 = module_0.Link(object_0)
    var_1 = link_4.__repr__()
    var_2 = var_1.__repr__()
    var_3 = var_2.__hash__()
    str_0 = "Dmfv; iJ001\n"
    none_type_2 = None
    link_5 = module_0.Link(str_0, fragment=none_type_2)
    bool_0 = True
    link_6 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    var_4 = link_6.__hash__()
    assert var_4 == 1
    var_5 = link_6.__hash__()
    assert var_5 == 1
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=True, text=True, fragment='', nofollow=True)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(url=True, text=True, fragment='', nofollow=True)\""
    bool_1 = False
    complex_0 = -2172.59 + 2037.389578j
    list_0 = [bool_1, complex_0, complex_0, complex_0]
    list_1 = []
    tuple_0 = (list_1,)
    link_7 = module_0.Link(list_0, tuple_0)
    link_8 = module_0.Link(link_7, list_1, list_0)
    bool_2 = False
    link_9 = module_0.Link(bool_2)
    object_1 = module_1.object()
    link_10 = module_0.Link(object_1, fragment=object_1)
    var_8 = link_10.__hash__()
    assert var_8 == 0
    link_11 = module_0.Link(link_4, fragment=bool_1, nofollow=link_4)


def test_case_1030():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = var_0.__eq__(var_0)
    var_2 = var_0.__repr__()
    assert var_2 == "\"Link(url=None, text=None, fragment='', nofollow=None)\""


def test_case_1031():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    complex_0 = -2489 + 3297.83623j
    link_3 = module_0.Link(complex_0)
    var_3 = link_3.__hash__()
    assert var_3 == 1172959022599657258
    var_4 = link_0.__repr__()
    assert (
        var_4
        == "Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False)"
    )


def test_case_1032():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(object_0)
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    bool_1 = True
    link_4 = module_0.Link(bool_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_5 = module_0.Link(float_0, fragment=var_3)
    bool_2 = True
    bool_3 = True
    bytes_2 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_6 = module_0.Link(bytes_2)
    var_4 = link_6.__hash__()
    assert var_4 == -6712542186422229073
    var_5 = var_4.__repr__()
    assert var_5 == "-6712542186422229073"
    var_6 = var_5.__eq__(bool_3)
    var_7 = var_6.__hash__()
    var_8 = var_7.__eq__(bool_2)
    float_1 = 5.0
    link_7 = module_0.Link(float_1)
    none_type_0 = None
    link_8 = module_0.Link(none_type_0, link_7)
    var_9 = link_8.__eq__(link_8)
    assert var_9 is True
    var_10 = link_5.__repr__()
    assert (
        var_10
        == "Link(url=3106.326, text='', fragment=\"Link(url=True, text='', fragment='', nofollow=False)\", nofollow=False)"
    )


def test_case_1033():
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_2 = module_0.Link(bytes_1)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    link_3 = module_0.Link(link_2)
    bytes_2 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_2, bytes_2)
    var_4 = link_4.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    var_6 = var_4.__hash__()
    assert var_6 == 0
    bool_0 = False
    link_5 = module_0.Link(bool_0)
    var_7 = var_5.__repr__()
    assert var_7 == "'0'"
    bool_1 = True
    link_6 = module_0.Link(bool_1, bool_1, nofollow=bool_1)
    var_8 = link_6.__hash__()
    assert var_8 == 1
    bool_2 = False
    link_7 = module_0.Link(bool_2)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_3, bytes_3)
    var_9 = link_8.__repr__()
    assert (
        var_9
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = True
    link_9 = module_0.Link(bool_3, bool_3, nofollow=bool_3)
    var_10 = link_9.__hash__()
    assert var_10 == 1
    var_11 = link_9.__hash__()
    assert var_11 == 1
    none_type_0 = None
    bool_4 = True
    link_10 = module_0.Link(bool_4, nofollow=bool_4)
    var_12 = link_10.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_0)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_4, bytes_4)
    var_14 = link_10.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=True)"
    object_0 = module_1.object()
    none_type_1 = None
    link_12 = module_0.Link(none_type_1, fragment=none_type_1)
    var_15 = link_12.__repr__()
    assert var_15 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_16 = var_15.__hash__()
    assert var_16 == 7957018345684386684
    var_17 = var_16.__repr__()
    assert var_17 == "7957018345684386684"
    link_13 = module_0.Link(object_0, var_17)
    var_18 = link_13.__repr__()
    float_0 = 5.0
    link_14 = module_0.Link(float_0)
    none_type_2 = None
    link_15 = module_0.Link(none_type_2, link_14)
    var_19 = link_15.__eq__(link_15)
    assert var_19 is True
    var_20 = link_15.__eq__(link_14)
    assert var_20 is False
    var_21 = var_20.__eq__(var_19)
    assert var_21 is False
    var_22 = var_12.__hash__()
    assert var_22 == 0


def test_case_1034():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    none_type_1 = None
    bool_0 = True
    link_4 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_6 = module_0.Link(link_4)
    int_0 = 584
    link_7 = module_0.Link(int_0)
    bytes_1 = b"-5164621852614943975"
    link_8 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_4 = link_8.__hash__()
    assert var_4 == 0
    bool_1 = False
    tuple_0 = (var_3, var_4, link_5, bool_1)
    dict_0 = {object_0: bytes_0, link_3: link_0, tuple_0: link_2, float_0: link_7}
    link_9 = module_0.Link(link_5, fragment=dict_0, nofollow=link_6)


def test_case_1035():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_0 = link_3.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    str_0 = "Dmfv; iJ001\n"
    none_type_1 = None
    link_4 = module_0.Link(str_0, fragment=none_type_1)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    none_type_2 = None
    bool_0 = True
    link_5 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_5.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_2)
    link_6 = module_0.Link(link_5)
    link_7 = module_0.Link(var_1, fragment=none_type_2)
    int_1 = 401
    link_8 = module_0.Link(int_1, int_1)
    var_3 = link_1.__hash__()
    assert var_3 == 477047


def test_case_1036():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    link_2 = module_0.Link(link_1)


def test_case_1037():
    int_0 = 401
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    complex_0 = -1110.69549 - 569.4j
    link_2 = module_0.Link(complex_0)
    bytes_1 = b"\xe32\x8d\x1e"
    none_type_0 = None
    link_3 = module_0.Link(link_2, bytes_1, nofollow=none_type_0)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    link_4 = module_0.Link(none_type_0, var_4)


def test_case_1038():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    str_0 = "Dmfv; iJ001\n"
    none_type_1 = None
    link_1 = module_0.Link(str_0, fragment=none_type_1)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_2.__hash__()
    assert var_3 == -8753497827991233192
    link_3 = module_0.Link(var_3, var_3, nofollow=var_3)
    none_type_2 = None
    bool_3 = True
    link_4 = module_0.Link(bool_3, nofollow=bool_3)
    var_4 = link_4.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_2)
    link_5 = module_0.Link(link_4)
    link_6 = module_0.Link(var_4, fragment=none_type_2)
    none_type_3 = None
    link_7 = module_0.Link(none_type_3, fragment=none_type_3)
    var_6 = link_7.__hash__()
    assert var_6 == 0
    var_7 = var_6.__hash__()
    assert var_7 == 0
    var_8 = var_6.__eq__(var_6)
    none_type_4 = None
    link_8 = module_0.Link(none_type_4, fragment=none_type_4)
    var_9 = link_8.__hash__()
    assert var_9 == 0
    var_10 = var_9.__hash__()
    assert var_10 == 0
    var_11 = link_8.__repr__()
    assert var_11 == "Link(url=None, text='', fragment=None, nofollow=False)"
    int_0 = 3199
    link_9 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_12 = link_9.__repr__()
    assert var_12 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_13 = var_12.__hash__()
    assert var_13 == -3203539594471298528
    bool_4 = False
    link_10 = module_0.Link(bool_4)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_0, bytes_0)
    var_14 = link_11.__repr__()
    assert (
        var_14
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_12 = module_0.Link(bool_5)
    var_15 = var_14.__repr__()
    assert (
        var_15
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_6 = False
    bool_7 = False
    tuple_1 = (bool_7,)
    link_13 = module_0.Link(bool_6, fragment=tuple_1)
    var_16 = link_13.__hash__()
    assert var_16 == -8753497827991233192
    set_0 = {tuple_1, var_16, bool_7, bool_6}
    var_17 = var_16.__eq__(set_0)
    var_18 = link_13.__hash__()
    assert var_18 == -8753497827991233192
    var_19 = var_3.__hash__()
    assert var_19 == -1835968800350151339
    var_20 = var_19.__repr__()
    assert var_20 == "-1835968800350151339"


def test_case_1039():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_2 = module_0.Link(var_1, nofollow=link_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_2 = var_1.__eq__(var_1)
    bool_1 = True
    link_3 = module_0.Link(bool_1, bool_1, nofollow=bool_1)
    var_3 = link_3.__hash__()
    assert var_3 == 1
    var_4 = link_3.__hash__()
    assert var_4 == 1
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=True, text=True, fragment='', nofollow=True)"
    var_6 = var_5.__repr__()
    assert var_6 == "\"Link(url=True, text=True, fragment='', nofollow=True)\""
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1)
    var_7 = link_5.__hash__()
    assert var_7 == 477042
    var_8 = var_7.__hash__()
    assert var_8 == 477042
    bool_2 = True
    list_0 = [bool_2, bool_2, bool_2]
    link_6 = module_0.Link(list_0)
    link_7 = module_0.Link(none_type_0, bool_0, nofollow=none_type_0)


def test_case_1040():
    str_0 = "zFdqvZ!_FXmvkkTDS"
    link_0 = module_0.Link(str_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5642901194074185885


def test_case_1041():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    link_1 = module_0.Link(bool_0, nofollow=link_0)


def test_case_1042():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    int_0 = 783
    link_3 = module_0.Link(int_0, int_0)
    link_4 = module_0.Link(link_3, fragment=link_3)
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, link_5)
    var_3 = link_6.__eq__(link_6)
    assert var_3 is True
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"


def test_case_1043():
    str_0 = "zFdqvZ!_FXmvkkTDS"
    link_0 = module_0.Link(str_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5642901194074185885
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_0)
    none_type_0 = None
    none_type_1 = None
    link_3 = module_0.Link(none_type_1)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == 2234852059487564994
    var_7 = var_6.__eq__(none_type_0)
    link_4 = module_0.Link(var_5, var_6, var_5)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_5 = module_0.Link(bool_2, fragment=tuple_1)
    var_8 = link_5.__hash__()
    assert var_8 == -8753497827991233192
    set_0 = {tuple_1, var_8, bool_3, bool_2}
    var_9 = var_8.__eq__(set_0)
    var_10 = link_5.__hash__()
    assert var_10 == -8753497827991233192
    var_11 = link_5.__hash__()
    assert var_11 == -8753497827991233192
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    bool_4 = False
    bool_5 = False
    tuple_2 = (bool_5,)
    link_7 = module_0.Link(bool_4, fragment=tuple_2)
    var_12 = link_7.__hash__()
    assert var_12 == -8753497827991233192
    link_8 = module_0.Link(var_12, var_12, nofollow=var_12)
    var_13 = link_8.__hash__()
    assert var_13 == -1835968800350151339
    var_14 = var_13.__hash__()
    assert var_14 == -1835968800350151339
    var_15 = var_13.__eq__(var_1)
    var_16 = var_15.__repr__()


def test_case_1044():
    int_0 = 2105
    none_type_0 = None
    link_0 = module_0.Link(int_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, int_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == -1122340555193368221
    var_2 = var_1.__repr__()
    assert var_2 == "-1122340555193368221"
    none_type_1 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_6 = var_4.__repr__()
    none_type_2 = None
    link_4 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_0)
    link_6 = module_0.Link(link_5)
    var_7 = link_6.__hash__()
    assert var_7 == -4606328870177462788
    var_8 = var_7.__hash__()
    assert var_8 == -2300485860963768837
    bool_2 = False
    link_7 = module_0.Link(bool_2)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_10 = var_7.__repr__()
    assert var_10 == "-4606328870177462788"
    none_type_3 = None
    link_8 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    var_11 = link_8.__hash__()
    assert var_11 == 477042
    var_12 = var_11.__repr__()
    assert var_12 == "477042"
    var_13 = var_12.__repr__()
    assert var_13 == "'477042'"
    var_14 = var_13.__hash__()
    assert var_14 == 9175907747363719430
    var_15 = var_14.__hash__()
    assert var_15 == 2258378719722637577
    bool_3 = False
    link_9 = module_0.Link(bool_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_16 = link_10.__repr__()
    assert (
        var_16
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_11 = module_0.Link(bool_4)
    var_17 = var_16.__repr__()
    assert (
        var_17
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_12 = module_0.Link(var_16, bytes_1)
    bool_5 = False
    link_13 = module_0.Link(bool_5)
    var_18 = link_13.__repr__()
    assert var_18 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_14 = module_0.Link(var_18, nofollow=var_18)
    float_0 = 5.0
    link_15 = module_0.Link(float_0)
    none_type_4 = None
    link_16 = module_0.Link(none_type_4, link_15)
    var_19 = link_16.__eq__(link_16)
    assert var_19 is True
    object_0 = module_1.object()
    link_17 = module_0.Link(object_0, fragment=object_0)
    link_18 = module_0.Link(object_0, none_type_4)
    var_20 = link_15.__hash__()
    assert var_20 == 5
    bool_6 = True
    bool_7 = False
    tuple_0 = (bool_6, bool_7)
    link_19 = module_0.Link(tuple_0, fragment=bool_6)
    var_21 = link_19.__hash__()
    assert var_21 == -5164621852614943975
    var_22 = var_21.__repr__()
    assert var_22 == "-5164621852614943975"
    none_type_5 = None
    link_20 = module_0.Link(link_19, fragment=none_type_5)
    none_type_6 = None
    link_21 = module_0.Link(none_type_6, fragment=none_type_6)
    var_23 = link_21.__hash__()
    assert var_23 == 0
    var_24 = var_23.__hash__()
    assert var_24 == 0
    var_25 = link_14.__eq__(link_15)
    assert var_25 is False


def test_case_1045():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_1 = var_0.__hash__()
    assert var_1 == -3936900723769714473
    complex_0 = -2489 + 3297.83623j
    link_3 = module_0.Link(complex_0)
    var_2 = link_3.__hash__()
    assert var_2 == 1172959022599657258
    none_type_1 = None
    bool_1 = False
    link_4 = module_0.Link(none_type_1, fragment=bool_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == -5509142826951788791
    var_5 = var_4.__repr__()
    assert var_5 == "-5509142826951788791"
    var_6 = var_5.__repr__()
    assert var_6 == "'-5509142826951788791'"
    bool_2 = True
    link_5 = module_0.Link(bool_2, nofollow=bool_2)
    var_7 = link_5.__eq__(link_5)
    assert var_7 is True
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_6 = module_0.Link(bytes_0)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_9 = var_8.__eq__(int_0)
    var_10 = var_9.__repr__()
    object_0 = module_1.object()
    none_type_2 = None
    link_7 = module_0.Link(object_0, fragment=none_type_2)
    var_11 = link_7.__hash__()
    none_type_3 = None
    link_8 = module_0.Link(none_type_3, fragment=none_type_3)
    var_12 = link_8.__hash__()
    assert var_12 == 0
    var_13 = var_12.__hash__()
    assert var_13 == 0
    var_14 = var_12.__eq__(var_12)
    var_15 = var_13.__hash__()
    assert var_15 == 0
    bool_3 = True
    link_9 = module_0.Link(bool_3)
    var_16 = link_9.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_17 = var_8.__eq__(link_2)


def test_case_1046():
    bool_0 = False
    complex_0 = -2172.59 + 2037.389578j
    list_0 = [bool_0, complex_0, complex_0, complex_0]
    list_1 = []
    tuple_0 = (list_1,)
    link_0 = module_0.Link(list_0, tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0, list_1, list_0)
    bool_1 = False
    bool_2 = False
    tuple_1 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_1)
    var_0 = link_2.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_1, var_0, bool_2, bool_1}
    var_1 = var_0.__eq__(set_0)
    bytes_0 = b"O\xf3\x8ez\x9cB\xfdi\xa1"
    none_type_0 = None
    link_3 = module_0.Link(none_type_0)
    var_2 = link_3.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__repr__()
    assert var_3 == "477042"
    var_4 = var_3.__eq__(bytes_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    bool_3 = True
    link_5 = module_0.Link(bool_3)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_6 = module_0.Link(float_0, fragment=var_5)
    var_6 = var_1.__eq__(bool_1)


def test_case_1047():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = var_0.__eq__(var_0)
    var_3 = var_1.__hash__()
    assert var_3 == 0
    int_0 = 502
    none_type_1 = None
    link_1 = module_0.Link(int_0, fragment=int_0, nofollow=none_type_1)
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_5 = module_0.Link(var_4, var_5, nofollow=link_3)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    bool_2 = True
    link_6 = module_0.Link(bool_2)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_3 = False
    complex_0 = -2172.59 + 2037.389578j
    list_0 = [bool_3, complex_0, complex_0, complex_0]
    list_1 = []
    tuple_0 = (list_1,)
    link_7 = module_0.Link(list_0, tuple_0)
    link_8 = module_0.Link(link_7, list_1, list_0)
    int_1 = 852
    dict_0 = {int_1: int_1}
    link_9 = module_0.Link(dict_0)
    var_7 = link_9.__repr__()
    assert var_7 == "Link(url={852: 852}, text='', fragment='', nofollow=False)"
    link_10 = module_0.Link(var_7, nofollow=dict_0)
    link_11 = module_0.Link(link_3, int_1, list_0)


def test_case_1048():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_1 = link_2.__hash__()
    assert var_1 == 3199
    object_0 = module_1.object()
    none_type_0 = None
    link_3 = module_0.Link(object_0, fragment=none_type_0)
    var_2 = link_3.__hash__()
    var_3 = link_1.__hash__()
    assert var_3 == -1835968800350151339


def test_case_1049():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == -3936900723769714473
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_5 = link_5.__hash__()
    assert var_5 == -4606328870177462788
    bool_2 = True
    link_6 = module_0.Link(bool_2)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_1)
    link_7 = module_0.Link(var_7, var_7)
    bool_3 = False
    link_8 = module_0.Link(bool_3)
    none_type_0 = None
    bool_4 = True
    link_9 = module_0.Link(bool_4, nofollow=bool_4)
    var_8 = link_9.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_9.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_11 = module_0.Link(var_10, nofollow=var_10)
    assert f"{type(link_11).__module__}.{type(link_11).__qualname__}" == "link.Link"
    var_11 = var_6.__repr__()
    assert var_11 == "\"Link(url=True, text='', fragment='', nofollow=False)\""


def test_case_1050():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    var_1 = link_0.__hash__()
    assert var_1 == 0
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_3 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    link_4 = module_0.Link(var_2, nofollow=link_3)
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, link_5)
    bool_1 = True
    link_7 = module_0.Link(bool_1, nofollow=bool_1)
    int_0 = 783
    link_8 = module_0.Link(int_0, int_0)
    bool_2 = True
    link_9 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_9.__eq__(link_9)
    assert var_3 is True
    int_1 = 783
    link_10 = module_0.Link(int_1, int_1)
    link_11 = module_0.Link(link_10, fragment=link_10)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_0)
    link_13 = module_0.Link(link_12)
    var_4 = link_13.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    none_type_2 = None
    link_14 = module_0.Link(none_type_2, fragment=none_type_2)
    var_6 = link_14.__hash__()
    assert var_6 == 0
    var_7 = var_6.__hash__()
    assert var_7 == 0
    var_8 = var_6.__eq__(var_6)
    var_9 = var_0.__eq__(object_0)


def test_case_1051():
    tuple_0 = ()
    str_0 = '6jc"e'
    int_0 = -820
    tuple_1 = (tuple_0, str_0, int_0, tuple_0)
    none_type_0 = None
    link_0 = module_0.Link(tuple_1, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_1052():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    link_3 = module_0.Link(var_4, var_4, nofollow=var_4)
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_4.__hash__()
    assert var_5 == 0
    var_6 = var_5.__repr__()
    assert var_6 == "0"
    var_7 = var_5.__hash__()
    assert var_7 == 0
    bool_3 = False
    link_5 = module_0.Link(bool_3)
    var_8 = var_6.__repr__()
    assert var_8 == "'0'"
    var_9 = var_5.__eq__(bytes_0)


def test_case_1053():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == 4128530656735687579
    none_type_1 = None
    none_type_2 = None
    link_2 = module_0.Link(none_type_2)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_3 = var_2.__hash__()
    assert var_3 == 2234852059487564994
    var_4 = var_3.__eq__(none_type_1)
    link_3 = module_0.Link(var_2, var_3, var_2)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_5 = link_5.__hash__()
    assert var_5 == -4606328870177462788
    none_type_3 = None
    none_type_4 = None
    link_6 = module_0.Link(none_type_4)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_7 = var_6.__hash__()
    assert var_7 == 2234852059487564994
    var_8 = var_7.__eq__(none_type_3)
    link_7 = module_0.Link(var_6, var_7, var_6)
    link_8 = module_0.Link(none_type_3, var_8, link_6)
    none_type_5 = None
    bool_0 = True
    link_9 = module_0.Link(bool_0, nofollow=bool_0)
    var_9 = link_9.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_5)
    var_11 = link_9.__hash__()
    assert var_11 == 0
    none_type_6 = None
    bool_1 = True
    link_10 = module_0.Link(bool_1, nofollow=bool_1)
    var_12 = link_10.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_6)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_11 = module_0.Link(tuple_0, fragment=bool_2)
    var_14 = link_11.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_14.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = var_14.__hash__()
    assert var_17 == -552935834187556073
    link_12 = module_0.Link(bool_2, nofollow=link_11)
    var_18 = link_5.__hash__()
    assert var_18 == -4606328870177462788


def test_case_1054():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__repr__()
    assert var_1 == "477042"
    var_2 = var_1.__repr__()
    assert var_2 == "'477042'"
    var_3 = var_2.__hash__()
    assert var_3 == 9175907747363719430
    var_4 = var_3.__hash__()
    assert var_4 == 2258378719722637577
    complex_0 = -601 - 2782j
    link_1 = module_0.Link(complex_0)
    bytes_0 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_5 = link_2.__repr__()
    assert (
        var_5
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_4 = module_0.Link(var_6, nofollow=link_3)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    none_type_2 = None
    bool_0 = True
    link_5 = module_0.Link(bool_0, nofollow=bool_0)
    var_7 = link_5.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_2)
    link_6 = module_0.Link(link_5)
    link_7 = module_0.Link(var_7, fragment=none_type_2)
    var_9 = link_7.__hash__()
    assert var_9 == 477042
    var_10 = var_9.__repr__()
    assert var_10 == "477042"
    none_type_3 = None
    link_8 = module_0.Link(none_type_3, nofollow=none_type_3)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_9 = module_0.Link(tuple_0, fragment=bool_1)
    var_11 = link_9.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    none_type_4 = None
    link_10 = module_0.Link(link_9, fragment=none_type_4)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_11 = module_0.Link(bytes_1, bytes_1)
    var_13 = link_11.__hash__()
    assert var_13 == 0
    var_14 = var_13.__repr__()
    assert var_14 == "0"
    var_15 = var_13.__hash__()
    assert var_15 == 0
    bool_3 = False
    link_12 = module_0.Link(bool_3)
    var_16 = var_14.__repr__()
    assert var_16 == "'0'"
    str_0 = "zFdqvZ!_FXmvkkTDS"
    link_13 = module_0.Link(str_0)
    var_17 = link_13.__hash__()
    assert var_17 == -5642901194074185885
    bytes_2 = b"-5164621852614943975"
    link_14 = module_0.Link(bytes_2, nofollow=bytes_2)
    float_0 = 5.0
    link_15 = module_0.Link(float_0)
    none_type_5 = None
    link_16 = module_0.Link(none_type_5, link_15)
    var_18 = link_16.__eq__(link_16)
    assert var_18 is True
    var_19 = link_16.__eq__(link_15)
    assert var_19 is False
    var_20 = var_19.__eq__(var_18)
    assert var_20 is False
    var_21 = link_10.__repr__()
    assert (
        var_21
        == "Link(url=Link(url=(True, False), text='', fragment=True, nofollow=False), text='', fragment=None, nofollow=False)"
    )


def test_case_1055():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    var_3 = var_2.__repr__()
    none_type_1 = None
    bool_1 = True
    link_1 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_6 = link_1.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_7 = var_5.__repr__()
    none_type_2 = None
    link_3 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    var_8 = link_3.__hash__()
    assert var_8 == 477042
    var_9 = var_8.__repr__()
    assert var_9 == "477042"
    var_10 = var_9.__repr__()
    assert var_10 == "'477042'"
    var_11 = var_10.__hash__()
    assert var_11 == 9175907747363719430
    var_12 = var_11.__hash__()
    assert var_12 == 2258378719722637577
    complex_0 = -601 - 2782j
    link_4 = module_0.Link(complex_0)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_13 = link_5.__hash__()
    assert var_13 == 0
    var_14 = var_13.__repr__()
    assert var_14 == "0"
    var_15 = var_13.__hash__()
    assert var_15 == 0
    bool_2 = False
    link_6 = module_0.Link(bool_2)
    var_16 = var_14.__repr__()
    assert var_16 == "'0'"
    link_7 = module_0.Link(bool_2, var_15, var_13)
    none_type_3 = None
    link_8 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    object_0 = module_1.object()
    link_9 = module_0.Link(object_0, fragment=object_0)
    link_10 = module_0.Link(link_9)
    var_17 = var_11.__repr__()
    assert var_17 == "9175907747363719430"


def test_case_1056():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    var_3 = link_0.__hash__()
    assert var_3 == -8753497827991233192
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_1 = module_0.Link(bytes_0)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_5 = var_4.__eq__(int_0)
    var_6 = var_5.__repr__()
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    var_7 = link_2.__hash__()
    assert var_7 == 477042
    var_8 = var_7.__repr__()
    assert var_8 == "477042"
    var_9 = var_8.__repr__()
    assert var_9 == "'477042'"
    var_10 = var_9.__hash__()
    assert var_10 == 9175907747363719430
    var_11 = var_10.__hash__()
    assert var_11 == 2258378719722637577
    complex_0 = -1110.69549 - 569.4j
    link_3 = module_0.Link(complex_0)
    bytes_1 = b"\xe32\x8d\x1e"
    none_type_1 = None
    link_4 = module_0.Link(link_3, bytes_1, nofollow=none_type_1)
    var_12 = link_4.__repr__()
    assert (
        var_12
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_13 = var_12.__repr__()
    assert (
        var_13
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_14 = var_13.__repr__()
    assert (
        var_14
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    bool_2 = True
    link_5 = module_0.Link(bool_2, nofollow=bool_2)
    var_15 = link_5.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, none_type_2)
    var_16 = var_15.__eq__(var_15)
    var_17 = var_15.__hash__()
    assert var_17 == 5710265117276615615
    object_0 = module_1.object()
    none_type_3 = None
    link_7 = module_0.Link(none_type_3, fragment=none_type_3)
    var_18 = link_7.__repr__()
    assert var_18 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_19 = var_18.__hash__()
    assert var_19 == 7957018345684386684
    var_20 = var_19.__repr__()
    assert var_20 == "7957018345684386684"
    link_8 = module_0.Link(object_0, var_20)
    var_21 = link_8.__repr__()
    int_1 = 783
    link_9 = module_0.Link(int_1, int_1)
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_10 = module_0.Link(list_0, str_0)
    link_11 = module_0.Link(link_10)
    none_type_4 = None
    link_12 = module_0.Link(none_type_4, list_0)
    none_type_5 = None
    none_type_6 = None
    link_13 = module_0.Link(none_type_6)
    var_22 = link_13.__repr__()
    assert var_22 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_23 = var_22.__hash__()
    assert var_23 == 2234852059487564994
    var_24 = var_23.__eq__(none_type_5)
    link_14 = module_0.Link(var_22, var_23, var_22)
    assert f"{type(link_14).__module__}.{type(link_14).__qualname__}" == "link.Link"
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_15 = module_0.Link(bool_3, fragment=tuple_1)
    var_25 = link_15.__hash__()
    assert var_25 == -8753497827991233192
    link_16 = module_0.Link(var_25, var_25, nofollow=var_25)
    var_26 = link_16.__hash__()
    assert var_26 == -1835968800350151339
    var_27 = var_26.__hash__()
    assert var_27 == -1835968800350151339
    float_0 = 2088.0
    link_17 = module_0.Link(var_10, fragment=float_0)


def test_case_1057():
    int_0 = 783
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0, fragment=link_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_2 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_2.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    var_4 = link_1.__hash__()
    assert var_4 == 0


def test_case_1058():
    bytes_0 = b"\xa6\xa9k\xc0I\xf9\x9b\xdf\x16\x0f#."
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: link_0, bytes_0: link_0}
    link_1 = module_0.Link(dict_0, nofollow=dict_0)


def test_case_1059():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    link_2 = module_0.Link(var_0, fragment=none_type_0)
    var_2 = link_2.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__repr__()
    assert var_3 == "477042"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_4 = link_4.__hash__()
    assert var_4 == -4606328870177462788
    bool_1 = True
    link_5 = module_0.Link(bool_1)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_0)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_6 = module_0.Link(tuple_0, fragment=bool_2)
    var_7 = link_6.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_7.__hash__()
    assert var_10 == -552935834187556073
    link_7 = module_0.Link(bool_2, nofollow=link_6)
    int_0 = 2105
    none_type_1 = None
    link_8 = module_0.Link(int_0, none_type_1)
    var_11 = link_8.__repr__()
    assert var_11 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_9 = module_0.Link(var_11, int_0)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    var_12 = link_9.__hash__()
    assert var_12 == -1122340555193368221
    var_13 = var_12.__repr__()
    assert var_13 == "-1122340555193368221"
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2)
    var_14 = link_10.__repr__()
    assert var_14 == "Link(url=None, text='', fragment=None, nofollow=False)"
    link_11 = module_0.Link(var_14)
    var_15 = link_11.__repr__()
    assert (
        var_15
        == "Link(url=b\"Link(url=None, text='', fragment=None, nofollow=False)\", text='', fragment='', nofollow=False)"
    )
    bool_4 = True
    link_12 = module_0.Link(bool_4, bool_4, nofollow=bool_4)
    var_16 = link_12.__hash__()
    assert var_16 == 1
    var_17 = link_12.__hash__()
    assert var_17 == 1
    var_18 = link_6.__hash__()
    assert var_18 == -5164621852614943975


def test_case_1060():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_1 = link_2.__hash__()
    assert var_1 == -4606328870177462788
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_3 = var_1.__eq__(bytes_0)
    var_4 = var_3.__hash__()
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    var_5 = link_4.__hash__()
    assert var_5 == 477042
    var_6 = var_5.__hash__()
    assert var_6 == 477042


def test_case_1061():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(url=True, text='', fragment='', nofollow=False)\""


def test_case_1062():
    int_0 = 502
    none_type_0 = None
    link_0 = module_0.Link(int_0, fragment=int_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    int_1 = 3199
    link_1 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_0 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_1 = var_0.__eq__(int_1)
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_3 = module_0.Link(list_0, str_0)
    link_4 = module_0.Link(link_3)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, list_0)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_2 = link_6.__hash__()
    assert var_2 == 0
    var_3 = var_2.__repr__()
    assert var_3 == "0"
    bool_0 = False
    link_7 = module_0.Link(bool_0)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_5 = var_4.__hash__()
    assert var_5 == -3936900723769714473
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_2)
    link_9 = module_0.Link(link_8)
    var_6 = link_9.__hash__()
    assert var_6 == -4606328870177462788
    bool_1 = True
    link_10 = module_0.Link(bool_1)
    var_7 = link_10.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_8 = var_6.__eq__(bytes_2)
    var_9 = var_8.__hash__()
    none_type_2 = None
    bool_2 = True
    link_11 = module_0.Link(bool_2, nofollow=bool_2)
    var_10 = link_11.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_2)
    bool_3 = False
    link_12 = module_0.Link(bool_3)
    var_12 = link_12.__repr__()
    assert var_12 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_13 = link_3.__eq__(link_2)
    assert var_13 is False


def test_case_1063():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    none_type_1 = None
    link_1 = module_0.Link(none_type_1)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    link_2 = module_0.Link(var_0, var_1, var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    bool_0 = False
    link_3 = module_0.Link(bool_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == -3936900723769714473
    bytes_1 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_2 = None
    bool_1 = True
    link_5 = module_0.Link(bool_1, nofollow=bool_1)
    var_6 = link_5.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_2, bytes_2)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_9 = link_5.__hash__()
    assert var_9 == 0
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_7 = module_0.Link(tuple_0, fragment=bool_2)
    var_10 = link_7.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = link_7.__repr__()
    assert var_12 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bytes_3 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_8 = module_0.Link(bytes_3, bytes_3)
    var_13 = link_8.__hash__()
    assert var_13 == 0
    var_14 = var_13.__repr__()
    assert var_14 == "0"
    var_15 = var_13.__hash__()
    assert var_15 == 0
    bool_4 = True
    link_9 = module_0.Link(bool_4, fragment=bool_4)
    var_16 = link_9.__repr__()
    assert var_16 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_17 = var_16.__hash__()
    assert var_17 == 4729962515010671871
    var_18 = var_17.__repr__()
    assert var_18 == "4729962515010671871"
    link_10 = module_0.Link(var_18)
    var_19 = link_10.__hash__()
    assert var_19 == -6813877331771076914
    none_type_3 = None
    link_11 = module_0.Link(none_type_3, fragment=none_type_3)
    var_20 = link_11.__hash__()
    assert var_20 == 0
    var_21 = var_20.__hash__()
    assert var_21 == 0
    var_22 = var_20.__eq__(var_20)
    link_12 = module_0.Link(var_11)


def test_case_1064():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    var_1 = link_0.__hash__()
    assert var_1 == 1
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_2 = link_2.__hash__()
    assert var_2 == -8753497827991233192
    link_3 = module_0.Link(var_2, var_2, nofollow=var_2)
    bool_3 = False
    link_4 = module_0.Link(bool_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_5.__repr__()
    assert (
        var_3
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_4 = False
    link_6 = module_0.Link(bool_4)
    var_4 = var_3.__repr__()
    assert (
        var_4
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_7 = module_0.Link(var_3, var_4, nofollow=link_5)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    bool_5 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_8 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_5 = link_8.__repr__()
    var_6 = var_5.__eq__(bool_5)
    var_7 = var_6.__hash__()
    link_9 = module_0.Link(none_type_0, var_5)
    object_0 = module_1.object()
    none_type_1 = None
    link_10 = module_0.Link(none_type_1, fragment=none_type_1)
    var_8 = link_10.__repr__()
    assert var_8 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == 7957018345684386684
    var_10 = var_9.__repr__()
    assert var_10 == "7957018345684386684"
    link_11 = module_0.Link(object_0, var_10)
    var_11 = link_11.__repr__()
    bool_6 = True
    link_12 = module_0.Link(bool_6, bool_6, nofollow=bool_6)
    var_12 = link_12.__hash__()
    assert var_12 == 1
    var_13 = link_12.__hash__()
    assert var_13 == 1
    var_14 = link_12.__repr__()
    assert var_14 == "Link(url=True, text=True, fragment='', nofollow=True)"
    var_15 = var_14.__repr__()
    assert var_15 == "\"Link(url=True, text=True, fragment='', nofollow=True)\""
    complex_0 = -1110.69549 - 569.4j
    link_13 = module_0.Link(complex_0)
    bytes_2 = b"\xe32\x8d\x1e"
    none_type_2 = None
    link_14 = module_0.Link(link_13, bytes_2, nofollow=none_type_2)
    var_16 = link_14.__repr__()
    assert (
        var_16
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_17 = var_16.__repr__()
    assert (
        var_17
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_18 = var_17.__repr__()
    assert (
        var_18
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    var_19 = var_4.__hash__()
    assert var_19 == 8180931366657057343


def test_case_1065():
    complex_0 = 2717.25865 + 279.6823j
    bytes_0 = b"xC(\xd2O"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    link_0 = module_0.Link(set_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == -2938861455928792573
    var_2 = var_1.__hash__()
    assert var_2 == -633018446715098622
    var_3 = var_2.__eq__(complex_0)
    none_type_1 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    link_2 = module_0.Link(link_1)
    link_3 = module_0.Link(var_4, fragment=none_type_1)
    var_6 = link_3.__hash__()
    assert var_6 == 477042
    var_7 = var_6.__repr__()
    assert var_7 == "477042"
    int_0 = 2105
    none_type_2 = None
    link_4 = module_0.Link(int_0, none_type_2)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_5 = module_0.Link(var_8, int_0)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_9 = link_5.__hash__()
    assert var_9 == -1122340555193368221
    var_10 = var_9.__repr__()
    assert var_10 == "-1122340555193368221"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    bool_1 = False
    link_7 = module_0.Link(bool_1)
    var_11 = link_7.__repr__()
    assert var_11 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_8 = module_0.Link(var_11, nofollow=var_11)
    object_0 = module_1.object()
    link_9 = module_0.Link(object_0, fragment=object_0)
    link_10 = module_0.Link(link_8, fragment=bytes_1, nofollow=link_7)
    int_1 = 36
    bytes_2 = b"\xeb\xdc\xa3"
    link_11 = module_0.Link(bytes_2)
    var_12 = link_11.__repr__()
    assert (
        var_12 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_13 = var_12.__eq__(int_1)
    var_14 = var_13.__repr__()
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_12 = module_0.Link(bool_2, fragment=tuple_0)
    var_15 = link_12.__hash__()
    assert var_15 == -8753497827991233192
    set_1 = {tuple_0, var_15, bool_3, bool_2}
    var_16 = var_15.__eq__(set_1)
    var_17 = link_12.__hash__()
    assert var_17 == -8753497827991233192
    complex_1 = -1110.69549 - 569.4j
    link_13 = module_0.Link(complex_1)
    bytes_3 = b"\xe32\x8d\x1e"
    none_type_3 = None
    link_14 = module_0.Link(link_13, bytes_3, nofollow=none_type_3)
    var_18 = link_14.__repr__()
    assert (
        var_18
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_19 = var_18.__repr__()
    assert (
        var_19
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_20 = var_19.__repr__()
    assert (
        var_20
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    str_0 = "zFdqvZ!_FXmvkkTDS"
    link_15 = module_0.Link(str_0)
    var_21 = link_15.__hash__()
    assert var_21 == -5642901194074185885
    none_type_4 = None
    link_16 = module_0.Link(none_type_4, fragment=none_type_4, nofollow=none_type_4)
    link_17 = module_0.Link(var_19)


def test_case_1066():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    link_2 = module_0.Link(var_0, fragment=none_type_0)
    var_2 = link_2.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__repr__()
    assert var_3 == "477042"
    bool_1 = True
    dict_0 = {}
    none_type_1 = None
    float_0 = 2515.28653
    link_3 = module_0.Link(dict_0, none_type_1, float_0, none_type_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_5 = var_4.__eq__(bool_1)
    var_6 = var_5.__hash__()
    link_4 = module_0.Link(none_type_1, var_4)
    object_0 = module_1.object()
    link_5 = module_0.Link(object_0, fragment=object_0)
    var_7 = link_5.__repr__()
    var_8 = link_5.__hash__()
    assert var_8 == 0
    bool_2 = False
    none_type_2 = None
    link_6 = module_0.Link(bool_2, fragment=none_type_2)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=False, text='', fragment=None, nofollow=False)"
    float_1 = 5.0
    link_7 = module_0.Link(float_1)
    none_type_3 = None
    link_8 = module_0.Link(none_type_3, link_7)
    var_10 = link_8.__eq__(link_8)
    assert var_10 is True
    var_11 = link_7.__hash__()
    assert var_11 == 5
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_9 = module_0.Link(bytes_0, bytes_0)
    var_12 = link_9.__hash__()
    assert var_12 == 0
    var_13 = var_12.__repr__()
    assert var_13 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_10 = module_0.Link(bytes_1)
    var_14 = var_12.__eq__(bytes_0)
    link_11 = module_0.Link(var_5)


def test_case_1067():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    link_2 = module_0.Link(var_0, fragment=none_type_0)
    var_2 = link_2.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__repr__()
    assert var_3 == "477042"
    int_0 = 2105
    none_type_1 = None
    link_3 = module_0.Link(int_0, none_type_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_4 = module_0.Link(var_4, int_0)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    var_5 = link_4.__hash__()
    assert var_5 == -1122340555193368221
    var_6 = var_5.__repr__()
    assert var_6 == "-1122340555193368221"
    none_type_2 = None
    link_5 = module_0.Link(none_type_2)
    var_7 = link_5.__hash__()
    assert var_7 == 477042
    var_8 = var_7.__hash__()
    assert var_8 == 477042
    var_9 = link_3.__repr__()
    assert var_9 == "Link(url=2105, text=None, fragment='', nofollow=False)"


def test_case_1068():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    link_1 = module_0.Link(var_0, var_1, var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    link_3 = module_0.Link(link_2, link_2)
    none_type_2 = None
    link_4 = module_0.Link(none_type_2)
    var_3 = link_4.__hash__()
    assert var_3 == 477042
    var_4 = var_3.__hash__()
    assert var_4 == 477042
    bool_1 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_5 = module_0.Link(var_4, fragment=bool_1, nofollow=complex_0)
    int_0 = 401
    link_6 = module_0.Link(int_0, int_0)
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    var_5 = link_7.__hash__()
    assert var_5 == 0
    int_1 = 3199
    link_8 = module_0.Link(int_1, int_1, nofollow=int_1)
    none_type_3 = None
    link_9 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    var_6 = link_9.__hash__()
    assert var_6 == 477042
    var_7 = var_6.__repr__()
    assert var_7 == "477042"
    var_8 = var_7.__repr__()
    assert var_8 == "'477042'"
    var_9 = var_8.__hash__()
    assert var_9 == 9175907747363719430
    var_10 = var_9.__hash__()
    assert var_10 == 2258378719722637577
    float_0 = 5.0
    link_10 = module_0.Link(float_0)
    none_type_4 = None
    link_11 = module_0.Link(none_type_4, link_10)
    var_11 = link_11.__eq__(link_11)
    assert var_11 is True
    bool_2 = True
    dict_0 = {}
    none_type_5 = None
    float_1 = 2515.28653
    link_12 = module_0.Link(dict_0, none_type_5, float_1, none_type_5)
    var_12 = link_12.__repr__()
    var_13 = var_12.__eq__(bool_2)
    var_14 = var_13.__hash__()
    link_13 = module_0.Link(none_type_5, var_12)
    var_15 = link_11.__hash__()
    assert var_15 == 477047


def test_case_1069():
    int_0 = 783
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0)
    var_1 = var_0.__eq__(var_0)
    var_2 = var_0.__hash__()
    assert var_2 == 5710265117276615615
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    link_4 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_4.__repr__()
    assert (
        var_4
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    int_1 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_5 = module_0.Link(bytes_0)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_6 = var_5.__eq__(int_1)
    var_7 = var_6.__repr__()
    var_8 = var_7.__eq__(int_1)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, fragment=none_type_1)
    var_9 = link_6.__hash__()
    assert var_9 == 0
    var_10 = var_9.__hash__()
    assert var_10 == 0
    var_11 = var_9.__eq__(var_9)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_12 = link_8.__hash__()
    assert var_12 == -4606328870177462788
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_2)
    link_10 = module_0.Link(link_9)
    var_13 = link_10.__hash__()
    assert var_13 == -4606328870177462788
    var_14 = var_13.__hash__()
    assert var_14 == -2300485860963768837
    object_0 = module_1.object()
    none_type_2 = None
    link_11 = module_0.Link(none_type_2, fragment=none_type_2)
    var_15 = link_11.__repr__()
    assert var_15 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_16 = var_15.__hash__()
    assert var_16 == 7957018345684386684
    var_17 = var_16.__repr__()
    assert var_17 == "7957018345684386684"
    link_12 = module_0.Link(object_0, var_17)
    var_18 = link_12.__repr__()
    link_13 = module_0.Link(var_16)


def test_case_1070():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = link_0.__repr__()
    assert (
        var_1
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_1, bytes_1)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_2, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_3 = link_3.__hash__()
    assert var_3 == 4128530656735687579
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_2)
    link_5 = module_0.Link(link_4)
    var_4 = link_5.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    bool_0 = False
    link_6 = module_0.Link(bool_0)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_7 = var_4.__repr__()
    assert var_7 == "-4606328870177462788"
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_1 = False
    link_8 = module_0.Link(bool_1)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_9 = module_0.Link(var_8, nofollow=var_8)
    var_9 = var_8.__hash__()
    assert var_9 == -3936900723769714473
    var_10 = link_5.__hash__()
    assert var_10 == -4606328870177462788


def test_case_1071():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__hash__()
    assert var_3 == 0
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_1, bytes_1)
    bool_0 = True
    link_3 = module_0.Link(bool_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_4 = module_0.Link(float_0, fragment=var_4)
    link_5 = module_0.Link(float_0, fragment=link_3)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_6 = module_0.Link(tuple_0, fragment=bool_1)
    var_5 = link_6.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_5.__hash__()
    assert var_8 == -552935834187556073
    link_7 = module_0.Link(bool_1, nofollow=link_6)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_8 = module_0.Link(tuple_1, fragment=bool_3)
    var_9 = link_8.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__eq__(tuple_1)
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_12 = link_9.__repr__()
    assert var_12 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_10 = module_0.Link(var_12, nofollow=link_9)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    var_13 = link_10.__hash__()
    assert var_13 == 4128530656735687579
    bool_5 = False
    link_11 = module_0.Link(bool_5)
    var_14 = link_11.__hash__()
    assert var_14 == 0
    var_15 = link_7.__eq__(link_4)
    assert var_15 is False
    var_16 = var_15.__repr__()
    assert var_16 == "False"


def test_case_1072():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_2 = link_4.__hash__()
    assert var_2 == -4606328870177462788
    bool_1 = True
    link_5 = module_0.Link(bool_1)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_4 = var_2.__eq__(bytes_1)
    link_6 = module_0.Link(var_4, var_4)
    var_5 = link_3.__repr__()
    assert (
        var_5
        == "Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False)"
    )


def test_case_1073():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    var_1 = link_0.__hash__()
    assert var_1 == 5
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_2 = module_0.Link(bytes_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_3 = var_2.__eq__(int_0)
    var_4 = var_3.__repr__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_5 = link_4.__hash__()
    assert var_5 == -4606328870177462788
    bool_0 = True
    link_5 = module_0.Link(bool_0)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_1)
    link_6 = module_0.Link(var_5)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_7 = module_0.Link(bool_1, fragment=tuple_0)
    var_8 = link_7.__hash__()
    assert var_8 == -8753497827991233192
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, fragment=none_type_1)
    var_9 = link_8.__hash__()
    assert var_9 == 0
    var_10 = var_9.__hash__()
    assert var_10 == 0
    var_11 = link_8.__repr__()
    assert var_11 == "Link(url=None, text='', fragment=None, nofollow=False)"
    object_0 = module_1.object()
    link_9 = module_0.Link(object_0, fragment=object_0)
    var_12 = link_9.__hash__()
    assert var_12 == 0
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_10 = module_0.Link(bool_3, fragment=tuple_1)
    var_13 = link_10.__hash__()
    assert var_13 == -8753497827991233192
    link_11 = module_0.Link(var_13, var_13, nofollow=var_13)
    link_12 = module_0.Link(var_6)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"


def test_case_1074():
    bytes_0 = b"O\xf3\x8ez\x9cB\xfdi\xa1"
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__repr__()
    assert var_1 == "477042"
    var_2 = var_1.__eq__(bytes_0)
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_2 = module_0.Link(var_3)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_3 = module_0.Link(tuple_0, fragment=bool_0)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_4.__hash__()
    assert var_7 == -552935834187556073
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_4.__hash__()
    assert var_8 == 0
    var_9 = var_8.__repr__()
    assert var_9 == "0"
    var_10 = var_8.__hash__()
    assert var_10 == 0
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    var_11 = var_9.__repr__()
    assert var_11 == "'0'"
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_6 = module_0.Link(tuple_1, fragment=bool_3)
    var_12 = link_6.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__repr__()
    assert var_14 == "-5164621852614943975"
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, bool_4)
    bytes_2 = b"\xa6\xa9k\xc0I\xf9\x9b\xdf\x16\x0f#."
    link_8 = module_0.Link(bytes_2)
    dict_0 = {bytes_2: bytes_2, bytes_2: bytes_2, bytes_2: link_8, bytes_2: link_8}
    link_9 = module_0.Link(dict_0, nofollow=dict_0)
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2)
    var_15 = link_10.__hash__()
    assert var_15 == 0
    var_16 = var_15.__hash__()
    assert var_16 == 0
    var_17 = var_15.__eq__(var_15)
    int_1 = -537
    int_2 = 1837
    link_11 = module_0.Link(int_1, nofollow=int_2)


def test_case_1075():
    bool_0 = True
    bool_1 = True
    bytes_0 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -6712542186422229073
    var_1 = var_0.__repr__()
    assert var_1 == "-6712542186422229073"
    var_2 = var_1.__eq__(bool_1)
    var_3 = var_2.__hash__()
    var_4 = var_3.__eq__(bool_0)
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0)
    var_6 = var_5.__eq__(var_5)
    var_7 = var_5.__hash__()
    assert var_7 == 5710265117276615615
    int_0 = 401
    link_3 = module_0.Link(int_0, int_0)
    var_8 = var_2.__repr__()


def test_case_1076():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    var_0 = link_1.__hash__()
    assert var_0 == 5
    var_1 = var_0.__eq__(float_0)
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    link_4 = module_0.Link(object_0)
    var_2 = link_4.__repr__()
    var_3 = var_2.__repr__()
    var_4 = var_3.__hash__()
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_5 = module_0.Link(tuple_0, fragment=bool_0)
    var_5 = link_5.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, bool_1)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_7 = module_0.Link(bool_2, fragment=tuple_1)
    var_8 = link_7.__hash__()
    assert var_8 == -8753497827991233192
    link_8 = module_0.Link(var_8, var_8, nofollow=var_8)
    var_9 = link_8.__hash__()
    assert var_9 == -1835968800350151339
    var_10 = var_9.__hash__()
    assert var_10 == -1835968800350151339
    none_type_1 = None
    bool_4 = False
    link_9 = module_0.Link(none_type_1, fragment=bool_4)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_12 = var_11.__hash__()
    assert var_12 == -5509142826951788791
    var_13 = var_12.__repr__()
    assert var_13 == "-5509142826951788791"
    var_14 = var_13.__repr__()
    assert var_14 == "'-5509142826951788791'"
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, nofollow=none_type_2)
    bool_5 = False
    link_11 = module_0.Link(bool_5)
    var_15 = link_11.__repr__()
    assert var_15 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_12 = module_0.Link(var_15, nofollow=var_15)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"
    link_13 = module_0.Link(var_15, nofollow=link_12)
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_14 = module_0.Link(list_0, str_0)
    link_15 = module_0.Link(link_14)
    bytes_2 = b"\xa6\xa9k\xc0I\xf9\x9b\xdf\x16\x0f#."
    link_16 = module_0.Link(bytes_2)
    dict_1 = {bytes_2: bytes_2, bytes_2: bytes_2, bytes_2: link_16, bytes_2: link_16}
    link_17 = module_0.Link(dict_1, nofollow=dict_1)
    none_type_3 = None
    link_18 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_19 = module_0.Link(tuple_2, fragment=bool_6)
    var_16 = link_19.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    var_18 = var_16.__hash__()
    assert var_18 == -552935834187556073
    var_19 = var_9.__hash__()
    assert var_19 == -1835968800350151339


def test_case_1077():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = var_0.__eq__(var_0)
    object_0 = module_1.object()
    none_type_1 = None
    link_1 = module_0.Link(object_0, fragment=none_type_1)
    var_3 = link_1.__hash__()
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    dict_0 = {}
    object_1 = module_1.object(**dict_0)
    link_4 = module_0.Link(object_1)
    var_5 = link_4.__repr__()
    var_6 = var_5.__repr__()
    var_7 = var_6.__hash__()
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    bytes_2 = b"-5164621852614943975"
    link_7 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_8 = link_7.__hash__()
    assert var_8 == 0
    var_9 = link_7.__repr__()
    assert (
        var_9
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    var_10 = var_0.__eq__(link_2)


def test_case_1078():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    link_0 = module_0.Link(list_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=[True, True, True], text='', fragment='', nofollow=False)"


def test_case_1079():
    complex_0 = 2717.25865 + 279.6823j
    bytes_0 = b"xC(\xd2O"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    link_0 = module_0.Link(set_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == -2938861455928792573
    var_2 = var_1.__hash__()
    assert var_2 == -633018446715098622
    var_3 = var_2.__eq__(complex_0)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    var_6 = var_4.__hash__()
    assert var_6 == 0
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_7 = var_5.__repr__()
    assert var_7 == "'0'"
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_3 = module_0.Link(list_0, str_0)
    link_4 = module_0.Link(link_3)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, list_0)
    int_0 = -1242
    var_8 = var_0.__eq__(int_0)


def test_case_1080():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, nofollow=none_type_1)
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_4 = module_0.Link(bytes_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_4 = var_3.__eq__(int_0)
    var_5 = var_4.__repr__()
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, link_5)
    var_6 = link_6.__eq__(link_6)
    assert var_6 is True
    link_7 = module_0.Link(int_0)


def test_case_1081():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    none_type_1 = None
    link_1 = module_0.Link(none_type_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_3 = var_2.__hash__()
    assert var_3 == 2234852059487564994
    var_4 = var_3.__eq__(none_type_0)
    bool_2 = True
    link_2 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_5 = link_2.__hash__()
    assert var_5 == 1
    var_6 = link_2.__hash__()
    assert var_6 == 1
    bool_3 = True
    link_3 = module_0.Link(bool_3, nofollow=bool_3)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_4 = module_0.Link(tuple_1, fragment=bool_4)
    var_7 = link_4.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_7.__hash__()
    assert var_10 == -552935834187556073
    link_5 = module_0.Link(var_0, bool_4, nofollow=var_6)


def test_case_1082():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0)
    var_1 = var_0.__eq__(var_0)
    var_2 = var_0.__hash__()
    assert var_2 == 5710265117276615615
    int_0 = 852
    dict_0 = {int_0: int_0}
    link_2 = module_0.Link(dict_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url={852: 852}, text='', fragment='', nofollow=False)"
    link_3 = module_0.Link(var_3, nofollow=dict_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    float_0 = 1729.95
    link_4 = module_0.Link(float_0, fragment=float_0)
    var_4 = link_4.__hash__()
    assert var_4 == 0
    link_5 = module_0.Link(var_4, var_4, float_0)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=0, text=0, fragment=1729.95, nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_6 = module_0.Link(tuple_0, fragment=bool_1)
    var_6 = link_6.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_1 = None
    link_7 = module_0.Link(link_6, fragment=none_type_1)
    none_type_2 = None
    bool_3 = True
    link_8 = module_0.Link(bool_3, nofollow=bool_3)
    var_8 = link_8.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_2)
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_9 = module_0.Link(bool_4, fragment=tuple_1)
    var_10 = link_9.__hash__()
    assert var_10 == -8753497827991233192
    set_0 = {tuple_1, var_10, bool_5, bool_4}
    var_11 = var_10.__eq__(set_0)
    var_12 = link_9.__hash__()
    assert var_12 == -8753497827991233192
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_0, bytes_0)
    var_13 = var_8.__repr__()
    assert var_13 == "0"


def test_case_1083():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, var_1, nofollow=link_1)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_4.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_0 = None
    bool_4 = True
    link_5 = module_0.Link(bool_4, nofollow=bool_4)
    var_5 = link_5.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_5 = True
    link_7 = module_0.Link(bool_5, bool_5, nofollow=bool_5)
    var_8 = link_7.__hash__()
    assert var_8 == 1
    var_9 = link_7.__hash__()
    assert var_9 == 1
    var_10 = link_7.__repr__()
    assert var_10 == "Link(url=True, text=True, fragment='', nofollow=True)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(url=True, text=True, fragment='', nofollow=True)\""
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_9 = module_0.Link(var_12, nofollow=link_8)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_2)
    link_11 = module_0.Link(link_10)
    var_13 = link_11.__hash__()
    assert var_13 == -4606328870177462788
    bool_6 = True
    link_12 = module_0.Link(bool_6)
    var_14 = link_12.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_15 = var_13.__eq__(bytes_2)
    var_16 = var_15.__hash__()
    var_17 = var_9.__repr__()
    assert var_17 == "1"


def test_case_1084():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=True)"
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_2 = link_2.__hash__()
    assert var_2 == -8753497827991233192
    set_0 = {tuple_0, var_2, bool_2, bool_1}
    var_3 = var_2.__eq__(set_0)
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    var_5 = link_2.__hash__()
    assert var_5 == -8753497827991233192
    int_1 = 3199
    link_3 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_4 = module_0.Link(var_6)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    int_2 = 1870
    link_5 = module_0.Link(int_2)
    dict_0 = {link_5: link_5}
    link_6 = module_0.Link(dict_0, fragment=dict_0)
    var_7 = link_6.__repr__()
    assert (
        var_7
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_9 = var_7.__eq__(var_7)
    var_10 = var_9.__hash__()
    complex_0 = 2717.25865 + 279.6823j
    bytes_0 = b"xC(\xd2O"
    set_1 = {bytes_0, bytes_0, bytes_0}
    none_type_0 = None
    link_7 = module_0.Link(set_1, none_type_0)
    var_11 = link_7.__repr__()
    assert var_11 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_12 = var_11.__hash__()
    assert var_12 == -2938861455928792573
    var_13 = var_12.__hash__()
    assert var_13 == -633018446715098622
    var_14 = var_13.__eq__(complex_0)
    object_0 = module_1.object()
    link_8 = module_0.Link(object_0, fragment=object_0)
    var_15 = link_8.__hash__()
    assert var_15 == 0
    float_0 = 5.0
    link_9 = module_0.Link(float_0)
    none_type_1 = None
    link_10 = module_0.Link(none_type_1, link_9)
    var_16 = link_10.__eq__(link_10)
    assert var_16 is True
    object_1 = module_1.object()
    link_11 = module_0.Link(object_1, fragment=object_1)
    link_12 = module_0.Link(object_1, none_type_1)
    var_17 = link_9.__hash__()
    assert var_17 == 5
    link_13 = module_0.Link(var_12)


def test_case_1085():
    int_0 = 783
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0, fragment=link_0)
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_2 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_2.__hash__()
    assert var_0 == -8753497827991233192
    link_3 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_3.__repr__()
    assert (
        var_1
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    int_1 = 3199
    link_4 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_3 = link_4.__repr__()
    assert var_3 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_5 = module_0.Link(var_3)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    bool_2 = True
    link_7 = module_0.Link(bool_2)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_8 = module_0.Link(float_0, fragment=var_4)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = link_0.__repr__()
    assert var_6 == "Link(url=783, text=783, fragment='', nofollow=False)"


def test_case_1086():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=None)"
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    link_2 = module_0.Link(var_1, var_1, nofollow=var_1)
    var_2 = link_0.__hash__()
    assert var_2 == 0


def test_case_1087():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_3 = var_1.__repr__()
    assert var_3 == "'0'"
    none_type_0 = None
    none_type_1 = None
    link_2 = module_0.Link(none_type_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_5 = var_4.__hash__()
    assert var_5 == 2234852059487564994
    var_6 = var_5.__eq__(none_type_0)
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_7 = link_3.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_8 = link_4.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_8.__hash__()
    assert var_11 == -552935834187556073
    link_5 = module_0.Link(bool_2, nofollow=link_4)
    bool_4 = True
    link_6 = module_0.Link(bool_4, nofollow=bool_4)
    link_7 = module_0.Link(link_6, link_6)
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_8 = module_0.Link(bytes_1)
    link_9 = module_0.Link(var_6, link_2, var_8, var_7)


def test_case_1088():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    bool_1 = True
    link_1 = module_0.Link(bool_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, link_2)
    var_2 = link_3.__eq__(link_3)
    assert var_2 is True
    var_3 = link_3.__eq__(link_2)
    assert var_3 is False
    var_4 = var_3.__eq__(var_2)
    assert var_4 is False
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_6 = module_0.Link(var_5, nofollow=var_5)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    var_6 = var_5.__hash__()
    assert var_6 == -3936900723769714473
    var_7 = link_5.__hash__()
    assert var_7 == 0


def test_case_1089():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_1090():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_1 = module_0.Link(var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bytes_0 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_1 = link_2.__repr__()
    assert (
        var_1
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_3 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_2 = link_3.__repr__()
    var_3 = var_2.__eq__(bool_0)
    var_4 = var_3.__hash__()
    float_1 = 5.0
    link_4 = module_0.Link(float_1)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, link_4)
    var_5 = link_5.__eq__(link_5)
    assert var_5 is True
    var_6 = link_4.__hash__()
    assert var_6 == 5
    bool_1 = False
    link_6 = module_0.Link(bool_1)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == -3936900723769714473
    none_type_2 = None
    bool_2 = True
    link_7 = module_0.Link(none_type_2, bool_2)
    var_9 = link_7.__repr__()
    assert var_9 == "Link(url=None, text=True, fragment='', nofollow=False)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(url=None, text=True, fragment='', nofollow=False)\""
    link_8 = module_0.Link(var_9, nofollow=var_10)
    bool_3 = True
    link_9 = module_0.Link(bool_3, bool_3, nofollow=bool_3)
    var_11 = link_9.__hash__()
    assert var_11 == 1
    none_type_3 = None
    bool_4 = True
    link_10 = module_0.Link(bool_4, nofollow=bool_4)
    var_12 = link_10.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_3)
    var_14 = link_10.__hash__()
    assert var_14 == 0
    none_type_4 = None
    link_11 = module_0.Link(none_type_4, none_type_4, nofollow=none_type_4)
    var_15 = link_11.__repr__()
    assert var_15 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_12 = module_0.Link(var_15, nofollow=link_11)
    bool_5 = False
    bool_6 = False
    tuple_0 = (bool_6,)
    link_13 = module_0.Link(bool_5, fragment=tuple_0)
    var_16 = link_13.__hash__()
    assert var_16 == -8753497827991233192
    link_14 = module_0.Link(link_8, fragment=var_4, nofollow=bool_3)


def test_case_1091():
    float_0 = 3106.326
    bytes_0 = b"\xb7\xeb\xfb"
    tuple_0 = (float_0, bytes_0, float_0)
    link_0 = module_0.Link(tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 3665279477578385934


def test_case_1092():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    link_1 = module_0.Link(var_0, var_1, var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    var_4 = link_3.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(object_0)
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    link_5 = module_0.Link(link_4, link_4)
    var_6 = var_3.__eq__(link_4)


def test_case_1093():
    float_0 = 1729.95
    link_0 = module_0.Link(float_0, fragment=float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    link_1 = module_0.Link(var_0, var_0, float_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=0, text=0, fragment=1729.95, nofollow=False)"
    bytes_0 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_2 = link_1.__eq__(link_1)
    assert var_2 is True


def test_case_1094():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=5.0, text='', fragment='', nofollow=False)"


def test_case_1095():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_1.__repr__()
    assert (
        var_1
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_3 = link_3.__hash__()
    assert var_3 == -4606328870177462788
    var_4 = var_3.__hash__()
    assert var_4 == -2300485860963768837
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_6 = var_3.__repr__()
    assert var_6 == "-4606328870177462788"
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_5 = module_0.Link(bool_3, fragment=tuple_1)
    var_7 = link_5.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_1, var_7, bool_4, bool_3}
    var_8 = var_7.__eq__(set_0)
    var_9 = link_5.__hash__()
    assert var_9 == -8753497827991233192
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_6 = module_0.Link(bool_5, fragment=tuple_2)
    var_10 = link_6.__hash__()
    assert var_10 == -8753497827991233192
    set_1 = {tuple_2, var_10, bool_6, bool_5}
    var_11 = var_10.__eq__(set_1)
    none_type_0 = None
    link_7 = module_0.Link(none_type_0, fragment=none_type_0)
    var_12 = link_7.__hash__()
    assert var_12 == 0
    var_13 = var_12.__hash__()
    assert var_13 == 0
    bool_7 = False
    bool_8 = False
    tuple_3 = (bool_8,)
    link_8 = module_0.Link(bool_7, fragment=tuple_3)
    var_14 = link_8.__hash__()
    assert var_14 == -8753497827991233192
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_15 = link_9.__hash__()
    assert var_15 == 0
    var_16 = var_15.__repr__()
    assert var_16 == "0"
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_10 = module_0.Link(bytes_2)
    var_17 = var_15.__eq__(bytes_1)
    bool_9 = False
    link_11 = module_0.Link(bool_9)
    var_18 = link_11.__hash__()
    assert var_18 == 0
    str_0 = "zFdqvZ!_FXmvkkTDS"
    link_12 = module_0.Link(str_0)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"
    var_19 = link_12.__hash__()
    assert var_19 == -5642901194074185885
    none_type_1 = None
    link_13 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_20 = link_13.__repr__()
    assert var_20 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_14 = module_0.Link(var_20, nofollow=link_13)
    var_21 = link_14.__hash__()
    assert var_21 == 4128530656735687579
    link_15 = module_0.Link(bool_2, nofollow=link_7)


def test_case_1096():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(none_type_0, bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=True, fragment='', nofollow=False)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(url=None, text=True, fragment='', nofollow=False)\""
    link_1 = module_0.Link(var_0, nofollow=var_1)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_2 = link_2.__hash__()
    assert var_2 == -8753497827991233192
    link_3 = module_0.Link(var_2, var_2, nofollow=var_2)
    var_3 = link_3.__repr__()
    assert (
        var_3
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_4 = link_5.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    bool_3 = False
    link_6 = module_0.Link(bool_3)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_7 = var_4.__repr__()
    assert var_7 == "-4606328870177462788"
    bool_4 = True
    link_7 = module_0.Link(bool_4, nofollow=bool_4)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, none_type_1)
    var_9 = var_8.__eq__(var_8)
    var_10 = var_8.__hash__()
    assert var_10 == 5710265117276615615
    int_0 = 3199
    link_9 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_1 = b"-5164621852614943975"
    link_10 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_12 = link_10.__hash__()
    assert var_12 == 0
    var_13 = var_12.__repr__()
    assert var_13 == "0"
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_2)
    link_12 = module_0.Link(link_11)
    var_14 = link_12.__hash__()
    assert var_14 == -4606328870177462788
    var_15 = link_12.__repr__()
    assert (
        var_15
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    var_16 = link_11.__repr__()
    assert (
        var_16
        == "Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False)"
    )


def test_case_1097():
    bool_0 = True
    link_0 = module_0.Link(bool_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 4729962515010671871
    var_2 = var_1.__repr__()
    assert var_2 == "4729962515010671871"
    link_1 = module_0.Link(var_2)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_3 = link_1.__hash__()
    assert var_3 == -6813877331771076914
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_5 = link_0.__repr__()
    assert var_5 == "Link(url=True, text='', fragment=True, nofollow=False)"


def test_case_1098():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, link_2)
    var_3 = link_3.__eq__(link_3)
    assert var_3 is True
    var_4 = link_2.__hash__()
    assert var_4 == 5
    bytes_0 = b"-5164621852614943975"
    link_4 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_5 = link_4.__repr__()
    assert (
        var_5
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    str_0 = "Dmfv; iJ001\n"
    none_type_1 = None
    link_5 = module_0.Link(str_0, fragment=none_type_1)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    none_type_2 = None
    bool_2 = True
    link_6 = module_0.Link(bool_2, nofollow=bool_2)
    var_6 = link_6.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_2)
    link_7 = module_0.Link(link_6)
    link_8 = module_0.Link(var_6, fragment=none_type_2)
    float_1 = 5.0
    link_9 = module_0.Link(float_1)
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, link_9)
    var_8 = link_10.__eq__(link_10)
    assert var_8 is True
    object_0 = module_1.object()
    link_11 = module_0.Link(object_0, fragment=object_0)
    link_12 = module_0.Link(object_0, none_type_3)
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_13 = module_0.Link(bool_3, fragment=tuple_1)
    var_9 = link_13.__hash__()
    assert var_9 == -8753497827991233192
    link_14 = module_0.Link(var_9, var_9, nofollow=var_9)
    bool_5 = True
    list_0 = [bool_5, bool_5, bool_5]
    link_15 = module_0.Link(list_0)
    var_10 = link_15.__repr__()
    assert (
        var_10 == "Link(url=[True, True, True], text='', fragment='', nofollow=False)"
    )
    var_11 = var_3.__eq__(var_7)


def test_case_1099():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    bool_1 = True
    bytes_1 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_2 = module_0.Link(bytes_1)
    var_1 = link_2.__hash__()
    assert var_1 == -6712542186422229073
    var_2 = var_1.__repr__()
    assert var_2 == "-6712542186422229073"
    var_3 = var_2.__eq__(bool_1)
    var_4 = var_3.__hash__()
    var_5 = var_4.__eq__(bool_0)
    none_type_0 = None
    link_3 = module_0.Link(none_type_0)
    var_6 = link_3.__hash__()
    assert var_6 == 477042
    var_7 = var_6.__hash__()
    assert var_7 == 477042
    bool_2 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_4 = module_0.Link(var_7, fragment=bool_2, nofollow=complex_0)
    object_0 = module_1.object()
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, fragment=none_type_1)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == 7957018345684386684
    var_10 = var_9.__repr__()
    assert var_10 == "7957018345684386684"
    link_6 = module_0.Link(object_0, var_10)
    var_11 = link_6.__repr__()
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_2)
    link_8 = module_0.Link(link_7)
    var_12 = link_8.__hash__()
    assert var_12 == -4606328870177462788
    var_13 = var_12.__hash__()
    assert var_13 == -2300485860963768837
    var_14 = link_0.__repr__()
    assert (
        var_14
        == "Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False)"
    )


def test_case_1100():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_3 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_3.__hash__()
    assert var_0 == -8753497827991233192
    link_4 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_4.__repr__()
    assert (
        var_1
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(var_2)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"


def test_case_1101():
    float_0 = 3106.326
    bytes_0 = b"\xb7\xeb\xfb"
    tuple_0 = (float_0, bytes_0, float_0)
    link_0 = module_0.Link(tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 3665279477578385934
    bool_0 = False
    bool_1 = False
    tuple_1 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_1)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    var_2 = var_1.__hash__()
    assert var_2 == -1835968800350151339


def test_case_1102():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(object_0)
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    object_1 = module_1.object()
    link_2 = module_0.Link(object_1, fragment=object_1)
    link_3 = module_0.Link(link_2)
    none_type_1 = None
    bool_0 = True
    link_4 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_4.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    link_5 = module_0.Link(link_4)
    link_6 = module_0.Link(var_2, fragment=none_type_1)
    bool_1 = True
    dict_0 = {}
    none_type_2 = None
    float_0 = 2515.28653
    link_7 = module_0.Link(dict_0, none_type_2, float_0, none_type_2)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_5 = var_4.__eq__(bool_1)
    var_6 = var_5.__hash__()
    link_8 = module_0.Link(none_type_2, var_4)
    none_type_3 = None
    link_9 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_7 = link_9.__repr__()
    assert var_7 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_10 = module_0.Link(var_7, nofollow=link_9)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    var_8 = link_10.__hash__()
    assert var_8 == 4128530656735687579
    bool_2 = True
    link_11 = module_0.Link(bool_2, bool_2)
    int_0 = 3199
    link_12 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_13 = module_0.Link(tuple_0, fragment=bool_3)
    var_9 = link_13.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_9.__hash__()
    assert var_12 == -552935834187556073
    var_13 = var_11.__hash__()
    assert var_13 == -8716866087637373422


def test_case_1103():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__repr__()
    assert var_1 == "-4606328870177462788"


def test_case_1104():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_1)
    var_2 = var_0.__eq__(bytes_0)
    none_type_0 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_2, bytes_2)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_4 = module_0.Link(var_5, nofollow=var_5)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    bool_1 = True
    link_5 = module_0.Link(bool_1, nofollow=bool_1)
    link_6 = module_0.Link(link_5, link_5)
    var_6 = var_1.__eq__(link_5)


def test_case_1105():
    int_0 = 584
    link_0 = module_0.Link(int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    int_1 = 3199
    link_2 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_2 = link_2.__hash__()
    assert var_2 == 3199
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_3.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_0 = None
    link_4 = module_0.Link(link_3, fragment=none_type_0)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_6 = module_0.Link(var_5, nofollow=link_5)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    var_6 = var_5.__eq__(var_5)
    var_7 = var_2.__repr__()
    assert var_7 == "3199"


def test_case_1106():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__hash__()
    assert var_2 == -552935834187556073
    bool_2 = True
    link_2 = module_0.Link(bool_2, bool_2)
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_3.__hash__()
    assert var_3 == 0
    var_4 = var_3.__repr__()
    assert var_4 == "0"
    var_5 = var_3.__hash__()
    assert var_5 == 0
    bool_3 = False
    link_4 = module_0.Link(bool_3)
    var_6 = var_4.__repr__()
    assert var_6 == "'0'"
    bool_4 = True
    link_5 = module_0.Link(bool_4)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    int_0 = 852
    dict_0 = {int_0: int_0}
    link_6 = module_0.Link(dict_0)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url={852: 852}, text='', fragment='', nofollow=False)"
    link_7 = module_0.Link(var_8, nofollow=dict_0)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    none_type_1 = None
    bool_5 = True
    link_8 = module_0.Link(bool_5, nofollow=bool_5)
    var_9 = link_8.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_1)
    link_9 = module_0.Link(link_8)
    link_10 = module_0.Link(var_9, fragment=none_type_1)
    var_11 = link_10.__hash__()
    assert var_11 == 477042
    var_12 = var_11.__repr__()
    assert var_12 == "477042"
    var_13 = var_5.__hash__()
    assert var_13 == 0


def test_case_1107():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, var_1, nofollow=link_1)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bool_2 = False
    bool_3 = False
    tuple_0 = (bool_3,)
    link_4 = module_0.Link(bool_2, fragment=tuple_0)
    var_2 = link_4.__hash__()
    assert var_2 == -8753497827991233192
    link_5 = module_0.Link(var_2, var_2, nofollow=var_2)
    var_3 = link_5.__repr__()
    assert (
        var_3
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_6 = module_0.Link(tuple_1, fragment=bool_4)
    var_5 = link_6.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"


def test_case_1108():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__repr__()
    assert var_3 == "0"
    bool_1 = True
    link_2 = module_0.Link(bool_1)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(url=True, text='', fragment='', nofollow=False)\""
    none_type_1 = None
    bool_2 = True
    link_3 = module_0.Link(none_type_1, bool_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=None, text=True, fragment='', nofollow=False)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(url=None, text=True, fragment='', nofollow=False)\""
    link_4 = module_0.Link(var_6, nofollow=var_7)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    bool_3 = True
    bool_4 = True
    bytes_1 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_5 = module_0.Link(bytes_1)
    var_8 = link_5.__hash__()
    assert var_8 == -6712542186422229073
    var_9 = var_8.__repr__()
    assert var_9 == "-6712542186422229073"
    var_10 = var_9.__eq__(bool_4)
    var_11 = var_10.__hash__()
    var_12 = var_11.__eq__(bool_3)
    none_type_2 = None
    link_6 = module_0.Link(none_type_2)
    var_13 = link_6.__hash__()
    assert var_13 == 477042
    var_14 = var_13.__hash__()
    assert var_14 == 477042
    bool_5 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_7 = module_0.Link(var_14, fragment=bool_5, nofollow=complex_0)
    bool_6 = True
    link_8 = module_0.Link(bool_6, bool_6, nofollow=bool_6)
    var_15 = link_8.__hash__()
    assert var_15 == 1
    int_0 = 36
    bytes_2 = b"\xeb\xdc\xa3"
    link_9 = module_0.Link(bytes_2)
    var_16 = link_9.__repr__()
    assert (
        var_16 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_17 = var_16.__eq__(int_0)
    var_18 = var_17.__repr__()
    var_19 = var_18.__eq__(int_0)
    tuple_0 = ()
    str_0 = '6jc"e'
    int_1 = -820
    tuple_1 = (tuple_0, str_0, int_1, tuple_0)
    none_type_3 = None
    link_10 = module_0.Link(tuple_1, nofollow=none_type_3)
    var_20 = link_4.__repr__()
    assert (
        var_20
        == "Link(url=b\"Link(url=None, text=True, fragment='', nofollow=False)\", text='', fragment='', nofollow='\"Link(url=None, text=True, fragment=\\'\\', nofollow=False)\"')"
    )


def test_case_1109():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    var_2 = link_2.__eq__(link_2)
    assert var_2 is True
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    link_4 = module_0.Link(object_0, none_type_0)
    var_3 = link_1.__hash__()
    assert var_3 == 5
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(url=None, text=Link(url=5.0, text='', fragment='', nofollow=False), fragment='', nofollow=False)"
    )


def test_case_1110():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_3 = module_0.Link(tuple_0, fragment=bool_0)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__hash__()
    assert var_4 == -552935834187556073
    none_type_1 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_5 = link_4.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_8 = var_6.__repr__()
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, none_type_2)
    var_10 = var_9.__eq__(var_9)
    bool_4 = True
    link_8 = module_0.Link(bool_4, fragment=bool_4)
    var_11 = link_8.__repr__()
    assert var_11 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_12 = var_11.__hash__()
    assert var_12 == 4729962515010671871
    var_13 = var_12.__repr__()
    assert var_13 == "4729962515010671871"
    link_9 = module_0.Link(var_13)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    var_14 = link_9.__hash__()
    assert var_14 == -6813877331771076914
    bytes_2 = b"-5164621852614943975"
    link_10 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_15 = link_10.__hash__()
    assert var_15 == 0
    var_16 = var_15.__repr__()
    assert var_16 == "0"
    none_type_3 = None
    link_11 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    var_17 = link_2.__repr__()
    assert var_17 == "Link(url=None, text='', fragment=None, nofollow=None)"


def test_case_1111():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0, link_0)
    int_0 = 783
    link_2 = module_0.Link(int_0, int_0)
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_0 = link_4.__eq__(link_4)
    assert var_0 is True
    int_1 = 2105
    none_type_0 = None
    link_5 = module_0.Link(int_1, none_type_0)
    var_1 = link_5.__repr__()
    assert var_1 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_6 = module_0.Link(var_1, int_1)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    var_2 = link_6.__hash__()
    assert var_2 == -1122340555193368221
    var_3 = var_2.__repr__()
    assert var_3 == "-1122340555193368221"
    int_2 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_7 = module_0.Link(bytes_0)
    var_4 = link_7.__repr__()
    assert var_4 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_5 = var_4.__eq__(int_2)
    var_6 = var_5.__repr__()
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_8 = module_0.Link(tuple_0, fragment=bool_2)
    var_7 = link_8.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__eq__(tuple_0)
    var_10 = var_9.__repr__()
    var_11 = var_5.__hash__()


def test_case_1112():
    int_0 = 0
    bool_0 = False
    link_0 = module_0.Link(int_0, fragment=int_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


def test_case_1113():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    bytes_1 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_1, nofollow=bytes_1)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1)
    var_3 = link_4.__hash__()
    assert var_3 == 477042
    var_4 = var_3.__hash__()
    assert var_4 == 477042
    bool_1 = False
    link_5 = module_0.Link(bool_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_2, bytes_2)
    var_5 = link_6.__repr__()
    assert (
        var_5
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    var_6 = var_2.__eq__(link_1)
    var_7 = var_6.__eq__(link_5)


def test_case_1114():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_0.__hash__()
    assert var_1 == -8753497827991233192
    link_2 = module_0.Link(var_1, tuple_0, nofollow=bool_0)


def test_case_1115():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__eq__(link_0)
    assert var_0 is True
    bool_1 = True
    link_1 = module_0.Link(bool_1)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 1729.95
    link_2 = module_0.Link(float_0, fragment=float_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    link_3 = module_0.Link(var_2, var_2, float_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=0, text=0, fragment=1729.95, nofollow=False)"
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_4 = module_0.Link(bytes_0)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_5 = var_4.__eq__(int_0)
    var_6 = var_5.__repr__()
    var_7 = var_6.__eq__(int_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    var_8 = link_5.__hash__()
    assert var_8 == -4606328870177462788
    var_9 = var_8.__repr__()
    assert var_9 == "-4606328870177462788"
    dict_0 = {link_2: var_3}
    link_6 = module_0.Link(dict_0)


def test_case_1116():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(url=True, text='', fragment='', nofollow=False)\""
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    bool_1 = True
    dict_0 = {}
    none_type_1 = None
    float_1 = 2515.28653
    link_3 = module_0.Link(dict_0, none_type_1, float_1, none_type_1)
    var_2 = link_3.__repr__()
    var_3 = var_2.__eq__(bool_1)
    var_4 = var_3.__hash__()
    link_4 = module_0.Link(none_type_1, var_2)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_0)
    link_6 = module_0.Link(link_5)
    var_5 = link_6.__hash__()
    assert var_5 == -4606328870177462788
    var_6 = link_6.__repr__()
    assert (
        var_6
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    var_7 = link_7.__repr__()
    bool_2 = False
    link_8 = module_0.Link(bool_2)
    var_8 = link_8.__hash__()
    assert var_8 == 0
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_9 = module_0.Link(tuple_0, fragment=bool_3)
    var_9 = link_9.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_9.__hash__()
    assert var_12 == -552935834187556073
    bool_5 = True
    link_10 = module_0.Link(bool_5, bool_5, nofollow=bool_5)
    var_13 = link_10.__hash__()
    assert var_13 == 1
    var_14 = link_10.__hash__()
    assert var_14 == 1
    var_15 = link_10.__repr__()
    assert var_15 == "Link(url=True, text=True, fragment='', nofollow=True)"
    var_16 = var_15.__repr__()
    assert var_16 == "\"Link(url=True, text=True, fragment='', nofollow=True)\""
    bool_6 = False
    link_11 = module_0.Link(bool_6)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_12 = module_0.Link(bytes_1, bytes_1)
    var_17 = link_12.__repr__()
    assert (
        var_17
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_7 = False
    link_13 = module_0.Link(bool_7)
    var_18 = var_17.__repr__()
    assert (
        var_18
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    var_19 = var_12.__repr__()
    assert var_19 == "-552935834187556073"


def test_case_1117():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bool_2 = False
    link_1 = module_0.Link(bool_2)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_3 = True
    link_2 = module_0.Link(bool_3, nofollow=bool_3)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, fragment=none_type_0)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=None, text='', fragment=None, nofollow=False)"
    link_4 = module_0.Link(var_6)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    var_7 = link_4.__repr__()
    assert (
        var_7
        == "Link(url=b\"Link(url=None, text='', fragment=None, nofollow=False)\", text='', fragment='', nofollow=False)"
    )
    none_type_1 = None
    link_5 = module_0.Link(none_type_1)
    var_8 = link_5.__hash__()
    assert var_8 == 477042
    var_9 = var_8.__hash__()
    assert var_9 == 477042
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_6 = module_0.Link(bool_4, fragment=tuple_1)
    var_10 = link_6.__hash__()
    assert var_10 == -8753497827991233192
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_7 = module_0.Link(tuple_2, fragment=bool_6)
    var_11 = link_7.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_11.__hash__()
    assert var_14 == -552935834187556073
    var_15 = var_6.__hash__()
    assert var_15 == 7957018345684386684


def test_case_1118():
    str_0 = "zFdqvZ!_FXmvkkTDS"
    link_0 = module_0.Link(str_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5642901194074185885
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_4 = var_2.__repr__()
    int_0 = 3199
    link_3 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_6 = var_5.__hash__()
    assert var_6 == -3203539594471298528
    none_type_1 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_7 = link_4.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_4.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    object_0 = module_1.object()
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2)
    var_10 = link_6.__repr__()
    assert var_10 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_11 = var_10.__hash__()
    assert var_11 == 7957018345684386684
    var_12 = var_11.__repr__()
    assert var_12 == "7957018345684386684"
    link_7 = module_0.Link(object_0, var_12)
    var_13 = link_7.__repr__()
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_8 = module_0.Link(tuple_0, fragment=bool_2)
    var_14 = link_8.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    none_type_3 = None
    link_9 = module_0.Link(link_8, fragment=none_type_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    link_11 = module_0.Link(var_13, object_0)


def test_case_1119():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    var_3 = var_2.__eq__(int_0)
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_4 = link_1.__eq__(link_1)
    assert var_4 is True
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_5 = link_3.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__hash__()
    assert var_7 == -552935834187556073
    int_1 = 3199
    link_4 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_5 = module_0.Link(var_8)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    bool_3 = True
    link_6 = module_0.Link(bool_3)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 5.0
    link_7 = module_0.Link(float_0)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, link_7)
    var_10 = link_8.__eq__(link_8)
    assert var_10 is True
    none_type_2 = None
    bool_4 = True
    link_9 = module_0.Link(none_type_2, bool_4)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=None, text=True, fragment='', nofollow=False)"
    var_12 = var_11.__repr__()
    assert var_12 == "\"Link(url=None, text=True, fragment='', nofollow=False)\""
    link_10 = module_0.Link(var_11, nofollow=var_12)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_1)
    var_13 = link_11.__hash__()
    assert var_13 == -4606328870177462788
    var_14 = var_13.__repr__()
    assert var_14 == "-4606328870177462788"
    bool_5 = False
    link_12 = module_0.Link(bool_5)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_2, bytes_2)
    var_15 = link_13.__repr__()
    assert (
        var_15
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    int_2 = 1870
    link_14 = module_0.Link(int_2)
    dict_0 = {link_14: link_14}
    link_15 = module_0.Link(dict_0, fragment=dict_0)
    var_16 = link_15.__repr__()
    assert (
        var_16
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_17 = var_16.__repr__()
    assert (
        var_17
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    link_16 = module_0.Link(link_14, fragment=var_6)


def test_case_1120():
    bool_0 = False
    none_type_0 = None
    link_0 = module_0.Link(bool_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"
    object_0 = module_1.object()
    link_1 = module_0.Link(object_0, fragment=object_0)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_4 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    object_1 = module_1.object()
    link_5 = module_0.Link(object_1, fragment=object_1)
    link_6 = module_0.Link(link_4, fragment=bytes_0, nofollow=link_3)
    bytes_1 = b"-5164621852614943975"
    link_7 = module_0.Link(bytes_1, nofollow=bytes_1)
    bool_2 = False
    bytes_2 = b"]\xfe"
    int_0 = 3199
    tuple_0 = (bool_2, bytes_2, int_0, int_0)
    link_8 = module_0.Link(tuple_0, fragment=bytes_2)
    link_9 = module_0.Link(link_8, nofollow=bool_2)
    var_3 = link_9.__hash__()
    assert var_3 == 3939945378486638560
    link_10 = module_0.Link(var_3, bytes_2, var_3)
    none_type_1 = None
    link_11 = module_0.Link(none_type_1, none_type_1)
    none_type_2 = None
    link_12 = module_0.Link(none_type_2)
    bool_3 = False
    none_type_3 = None
    link_13 = module_0.Link(bool_3, fragment=none_type_3)
    var_4 = link_13.__repr__()
    assert var_4 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_14 = module_0.Link(tuple_1, fragment=bool_4)
    var_5 = link_14.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_4 = None
    link_15 = module_0.Link(link_14, fragment=none_type_4)
    bytes_3 = b"-5164621852614943975"
    link_16 = module_0.Link(bytes_3, nofollow=bytes_3)
    float_0 = 5.0
    link_17 = module_0.Link(float_0)
    var_7 = link_17.__hash__()
    assert var_7 == 5
    var_8 = var_7.__eq__(float_0)
    bytes_4 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_18 = module_0.Link(bytes_4, bytes_4)
    var_9 = link_18.__hash__()
    assert var_9 == 0
    var_10 = var_9.__repr__()
    assert var_10 == "0"
    var_11 = var_9.__hash__()
    assert var_11 == 0
    var_12 = link_18.__eq__(link_2)
    assert var_12 is False


def test_case_1121():
    int_0 = 2105
    none_type_0 = None
    link_0 = module_0.Link(int_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, int_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == -1122340555193368221
    var_2 = var_1.__repr__()
    assert var_2 == "-1122340555193368221"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    bool_0 = True
    link_3 = module_0.Link(bool_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_4 = module_0.Link(float_0, fragment=var_3)
    int_1 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_5 = module_0.Link(bytes_1)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_5 = var_4.__eq__(int_1)
    var_6 = var_5.__repr__()
    var_7 = var_6.__eq__(int_1)
    link_6 = module_0.Link(link_5)
    bool_1 = True
    link_7 = module_0.Link(bool_1, nofollow=bool_1)
    var_8 = link_7.__eq__(link_7)
    assert var_8 is True
    none_type_1 = None
    bool_2 = True
    link_8 = module_0.Link(bool_2, nofollow=bool_2)
    var_9 = link_8.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_1)
    var_11 = var_7.__eq__(link_1)


def test_case_1122():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_2 = True
    link_2 = module_0.Link(bool_2)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_3 = module_0.Link(float_0, fragment=var_1)
    bool_3 = True
    list_0 = [bool_3, bool_3, bool_3]
    link_4 = module_0.Link(list_0)
    bool_4 = True
    dict_0 = {}
    none_type_0 = None
    float_1 = 2515.28653
    link_5 = module_0.Link(dict_0, none_type_0, float_1, none_type_0)
    var_2 = link_5.__repr__()
    var_3 = var_2.__eq__(bool_4)
    var_4 = var_3.__hash__()
    var_5 = var_2.__hash__()
    link_6 = module_0.Link(bytes_0, fragment=var_5, nofollow=tuple_0)


def test_case_1123():
    float_0 = 3106.326
    bytes_0 = b"\xb7\xeb\xfb"
    tuple_0 = (float_0, bytes_0, float_0)
    link_0 = module_0.Link(tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 3665279477578385934
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_1)
    link_2 = module_0.Link(link_1)
    var_1 = link_2.__hash__()
    assert var_1 == -4606328870177462788
    bool_0 = True
    link_3 = module_0.Link(bool_0)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_3 = var_1.__eq__(bytes_1)
    link_4 = module_0.Link(var_3, var_3)
    none_type_0 = None
    bool_1 = True
    link_5 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_5.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    link_6 = module_0.Link(link_5)
    link_7 = module_0.Link(var_4, fragment=none_type_0)
    var_6 = link_7.__hash__()
    assert var_6 == 477042
    var_7 = var_6.__repr__()
    assert var_7 == "477042"
    bytes_2 = b"-5164621852614943975"
    link_8 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_8 = link_8.__hash__()
    assert var_8 == 0
    none_type_1 = None
    bool_2 = True
    link_9 = module_0.Link(bool_2, nofollow=bool_2)
    var_9 = link_9.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_1)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_3, bytes_3)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_3 = False
    complex_0 = -2172.59 + 2037.389578j
    list_0 = [bool_3, complex_0, complex_0, complex_0]
    list_1 = []
    tuple_1 = (list_1,)
    link_11 = module_0.Link(list_0, tuple_1)
    link_12 = module_0.Link(link_11, list_1, list_0)
    bool_4 = False
    link_13 = module_0.Link(bool_4)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_14 = module_0.Link(bytes_4, bytes_4)
    var_12 = link_14.__repr__()
    assert (
        var_12
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_15 = module_0.Link(bool_5)
    var_13 = var_12.__repr__()
    assert (
        var_13
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    var_14 = var_13.__eq__(link_8)


def test_case_1124():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    none_type_0 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    link_3 = module_0.Link(link_2)
    link_4 = module_0.Link(var_2, fragment=none_type_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_4 = link_6.__hash__()
    assert var_4 == -4606328870177462788
    bool_1 = True
    link_7 = module_0.Link(bool_1)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_1)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, fragment=none_type_1)
    var_7 = link_8.__repr__()
    assert var_7 == "Link(url=None, text='', fragment=None, nofollow=False)"
    link_9 = module_0.Link(var_7)
    assert f"{type(link_9).__module__}.{type(link_9).__qualname__}" == "link.Link"
    var_8 = link_9.__repr__()
    assert (
        var_8
        == "Link(url=b\"Link(url=None, text='', fragment=None, nofollow=False)\", text='', fragment='', nofollow=False)"
    )
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    bool_2 = True
    link_11 = module_0.Link(bool_2)
    var_9 = link_11.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_12 = module_0.Link(float_0, fragment=var_9)
    var_10 = link_11.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_3, bytes_3)
    bool_3 = True
    link_14 = module_0.Link(bool_3)
    var_11 = link_14.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_15 = module_0.Link(float_1, fragment=var_11)
    link_16 = module_0.Link(float_1, fragment=link_14)
    bool_4 = False
    bool_5 = False
    tuple_0 = (bool_5,)
    link_17 = module_0.Link(bool_4, fragment=tuple_0)
    var_12 = link_17.__hash__()
    assert var_12 == -8753497827991233192
    link_18 = module_0.Link(var_12, var_12, nofollow=var_12)
    var_13 = link_18.__repr__()
    assert (
        var_13
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_14 = link_7.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_15 = var_14.__repr__()
    assert var_15 == "\"Link(url=True, text='', fragment='', nofollow=False)\""


def test_case_1125():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_1 = link_2.__hash__()
    assert var_1 == 0
    var_2 = var_1.__repr__()
    assert var_2 == "0"
    var_3 = var_1.__hash__()
    assert var_3 == 0
    bool_0 = False
    link_3 = module_0.Link(bool_0)
    var_4 = var_2.__repr__()
    assert var_4 == "'0'"
    link_4 = module_0.Link(bool_0, var_3, var_1)
    none_type_1 = None
    bool_1 = True
    link_5 = module_0.Link(bool_1, nofollow=bool_1)
    var_5 = link_5.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    var_7 = var_5.__repr__()
    assert var_7 == "0"
    link_6 = module_0.Link(var_2, fragment=none_type_0, nofollow=float_0)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"


def test_case_1126():
    none_type_0 = None
    bool_0 = False
    link_0 = module_0.Link(none_type_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == -5509142826951788791
    var_2 = var_1.__repr__()
    assert var_2 == "-5509142826951788791"
    var_3 = var_2.__repr__()
    assert var_3 == "'-5509142826951788791'"
    none_type_1 = None
    link_1 = module_0.Link(none_type_1, none_type_1)
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_2 = module_0.Link(bytes_0)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_5 = var_4.__eq__(int_0)
    var_6 = var_5.__repr__()
    var_7 = var_6.__eq__(int_0)
    link_3 = module_0.Link(link_2)
    complex_0 = 2717.25865 + 279.6823j
    bytes_1 = b"xC(\xd2O"
    set_0 = {bytes_1, bytes_1, bytes_1}
    none_type_2 = None
    link_4 = module_0.Link(set_0, none_type_2)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_9 = var_8.__hash__()
    assert var_9 == -2938861455928792573
    var_10 = var_9.__hash__()
    assert var_10 == -633018446715098622
    var_11 = var_10.__eq__(complex_0)
    var_12 = var_11.__hash__()


def test_case_1127():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__repr__()
    assert var_1 == "477042"
    var_2 = var_1.__repr__()
    assert var_2 == "'477042'"
    var_3 = var_2.__hash__()
    assert var_3 == 9175907747363719430
    var_4 = var_3.__hash__()
    assert var_4 == 2258378719722637577
    complex_0 = -601 - 2782j
    link_1 = module_0.Link(complex_0)
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, link_2)
    var_5 = link_3.__eq__(link_3)
    assert var_5 is True
    bool_0 = True
    link_4 = module_0.Link(bool_0)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(url=True, text='', fragment='', nofollow=False)\""
    bool_1 = True
    link_5 = module_0.Link(bool_1, bool_1, nofollow=bool_1)
    var_8 = link_5.__hash__()
    assert var_8 == 1
    var_9 = link_5.__hash__()
    assert var_9 == 1
    var_10 = link_5.__repr__()
    assert var_10 == "Link(url=True, text=True, fragment='', nofollow=True)"
    var_11 = var_10.__repr__()
    assert var_11 == "\"Link(url=True, text=True, fragment='', nofollow=True)\""
    float_1 = 5.0
    link_6 = module_0.Link(float_1)
    bool_2 = True
    link_7 = module_0.Link(bool_2, fragment=bool_2)
    var_12 = link_7.__repr__()
    assert var_12 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_13 = var_12.__hash__()
    assert var_13 == 4729962515010671871
    var_14 = var_13.__repr__()
    assert var_14 == "4729962515010671871"
    link_8 = module_0.Link(var_14)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    var_15 = link_8.__hash__()
    assert var_15 == -6813877331771076914
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_9 = module_0.Link(bool_3, fragment=tuple_0)
    var_16 = link_9.__hash__()
    assert var_16 == -8753497827991233192
    set_0 = {tuple_0, var_16, bool_4, bool_3}
    var_17 = var_16.__eq__(set_0)
    var_18 = link_9.__hash__()
    assert var_18 == -8753497827991233192
    var_19 = link_9.__hash__()
    assert var_19 == -8753497827991233192
    bool_5 = False
    link_10 = module_0.Link(bool_5)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_0, bytes_0)
    var_20 = link_11.__repr__()
    assert (
        var_20
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_6 = False
    link_12 = module_0.Link(bool_6)
    var_21 = var_20.__repr__()
    assert (
        var_21
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    var_22 = var_17.__repr__()
    var_23 = var_22.__eq__(link_3)


def test_case_1128():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    none_type_0 = None
    none_type_1 = None
    link_2 = module_0.Link(none_type_1)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_2 = var_1.__hash__()
    assert var_2 == 2234852059487564994
    var_3 = var_2.__eq__(none_type_0)
    none_type_2 = None
    link_3 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    link_5 = module_0.Link(link_4)
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_6 = module_0.Link(list_0, str_0)
    link_7 = module_0.Link(link_6)
    none_type_3 = None
    link_8 = module_0.Link(none_type_3, list_0)
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_9 = module_0.Link(bytes_0)
    complex_0 = -2489 + 3297.83623j
    link_10 = module_0.Link(complex_0)
    var_4 = link_10.__hash__()
    assert var_4 == 1172959022599657258
    var_5 = var_2.__eq__(link_9)


def test_case_1129():
    int_0 = 401
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_1 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    var_3 = var_2.__repr__()
    var_4 = var_1.__eq__(link_1)


def test_case_1130():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_3, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    var_4 = link_4.__repr__()
    var_5 = link_4.__hash__()
    assert var_5 == 0
    int_0 = 783
    link_5 = module_0.Link(int_0, int_0)
    link_6 = module_0.Link(link_5, fragment=link_5)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    var_6 = link_7.__hash__()
    assert var_6 == 477042
    bool_2 = True
    link_8 = module_0.Link(bool_2)
    var_7 = link_8.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_8 = var_7.__repr__()
    assert var_8 == "\"Link(url=True, text='', fragment='', nofollow=False)\""
    bool_3 = False
    tuple_1 = (var_7, var_4, var_1, bool_3)
    link_9 = module_0.Link(link_2, tuple_1)


def test_case_1131():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bool_1 = False
    link_1 = module_0.Link(bool_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_3 = var_1.__repr__()
    bool_2 = True
    link_2 = module_0.Link(bool_2)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_4.__repr__()
    assert var_5 == "\"Link(url=True, text='', fragment='', nofollow=False)\""
    bool_3 = False
    link_3 = module_0.Link(bool_3)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_4 = module_0.Link(var_6, nofollow=var_6)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    link_5 = module_0.Link(link_3, fragment=var_5)


def test_case_1132():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    none_type_2 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_2)
    var_5 = link_2.__hash__()
    assert var_5 == 0
    var_6 = var_5.__hash__()
    assert var_6 == 0


def test_case_1133():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=None)"
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    none_type_1 = None
    bool_1 = True
    link_2 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_2.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_4 = link_2.__hash__()
    assert var_4 == 0
    none_type_2 = None
    link_4 = module_0.Link(none_type_2, fragment=none_type_2)
    var_5 = link_4.__hash__()
    assert var_5 == 0
    var_6 = var_5.__hash__()
    assert var_6 == 0
    var_7 = var_5.__eq__(var_5)
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_5 = module_0.Link(bytes_1)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_9 = var_8.__eq__(int_0)
    var_10 = var_9.__repr__()
    var_11 = var_10.__eq__(int_0)
    link_6 = module_0.Link(link_5)
    none_type_3 = None
    none_type_4 = None
    link_7 = module_0.Link(none_type_4)
    var_12 = link_7.__repr__()
    assert var_12 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_13 = var_12.__hash__()
    assert var_13 == 2234852059487564994
    var_14 = var_13.__eq__(none_type_3)
    link_8 = module_0.Link(var_12, var_13, var_12)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    link_9 = module_0.Link(none_type_3, var_14, link_7)
    int_1 = 3199
    link_10 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_15 = link_10.__repr__()
    assert var_15 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_2 = b"-5164621852614943975"
    link_11 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_16 = var_15.__eq__(int_1)
    complex_0 = -1110.69549 - 569.4j
    link_12 = module_0.Link(complex_0)
    bytes_3 = b"\xe32\x8d\x1e"
    none_type_5 = None
    link_13 = module_0.Link(link_12, bytes_3, nofollow=none_type_5)
    var_17 = link_13.__repr__()
    assert (
        var_17
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_18 = var_17.__repr__()
    assert (
        var_18
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_19 = var_18.__repr__()
    assert (
        var_19
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    var_20 = var_16.__repr__()


def test_case_1134():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    int_0 = 0
    bool_0 = False
    link_1 = module_0.Link(int_0, fragment=int_0, nofollow=bool_0)
    var_1 = var_0.__hash__()
    assert var_1 == 0


def test_case_1135():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    int_0 = 502
    none_type_1 = None
    link_1 = module_0.Link(int_0, fragment=int_0, nofollow=none_type_1)
    int_1 = 3199
    link_2 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_2 = None
    link_5 = module_0.Link(link_4, fragment=none_type_2)
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    none_type_3 = None
    link_7 = module_0.Link(none_type_3, link_6)
    var_5 = link_7.__eq__(link_7)
    assert var_5 is True
    var_6 = link_6.__hash__()
    assert var_6 == 5
    bool_4 = True
    link_8 = module_0.Link(bool_4, bool_4, nofollow=bool_4)
    var_7 = link_8.__hash__()
    assert var_7 == 1
    var_8 = link_8.__hash__()
    assert var_8 == 1
    var_9 = link_8.__repr__()
    assert var_9 == "Link(url=True, text=True, fragment='', nofollow=True)"
    var_10 = var_9.__repr__()
    assert var_10 == "\"Link(url=True, text=True, fragment='', nofollow=True)\""
    list_0 = []
    link_9 = module_0.Link(list_0)
    var_11 = link_9.__repr__()
    assert var_11 == "Link(url=[], text='', fragment='', nofollow=False)"
    none_type_4 = None
    bool_5 = True
    link_10 = module_0.Link(bool_5, nofollow=bool_5)
    var_12 = link_10.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_4)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_0, bytes_0)
    var_14 = link_10.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_15 = link_10.__hash__()
    assert var_15 == 0
    bool_6 = False
    bool_7 = False
    tuple_1 = (bool_7,)
    link_12 = module_0.Link(bool_6, fragment=tuple_1)
    var_16 = link_12.__hash__()
    assert var_16 == -8753497827991233192
    var_17 = var_7.__hash__()
    assert var_17 == 1


def test_case_1136():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    complex_0 = 2717.25865 + 279.6823j
    bytes_1 = b"xC(\xd2O"
    set_0 = {bytes_1, bytes_1, bytes_1}
    none_type_0 = None
    link_1 = module_0.Link(set_0, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_2 = var_1.__hash__()
    assert var_2 == -2938861455928792573
    var_3 = var_2.__hash__()
    assert var_3 == -633018446715098622
    var_4 = var_3.__eq__(complex_0)
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=5.0, text='', fragment='', nofollow=False)"
    bytes_2 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_4 = module_0.Link(bytes_2, bytes_2)
    var_6 = link_4.__hash__()
    assert var_6 == 0
    var_7 = var_6.__repr__()
    assert var_7 == "0"
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_5 = module_0.Link(tuple_0, fragment=bool_0)
    var_8 = link_5.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_8.__hash__()
    assert var_11 == -552935834187556073
    link_6 = module_0.Link(bool_0, nofollow=link_5)
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_12 = link_7.__repr__()
    assert var_12 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_8 = module_0.Link(var_12, nofollow=link_7)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    object_1 = module_1.object()
    link_9 = module_0.Link(object_1, fragment=object_1)
    var_13 = link_9.__repr__()
    var_14 = link_9.__hash__()
    assert var_14 == 0
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, nofollow=none_type_2)
    bool_2 = False
    link_11 = module_0.Link(bool_2)
    var_15 = link_11.__repr__()
    assert var_15 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_12 = module_0.Link(var_15, nofollow=var_15)
    link_13 = module_0.Link(var_15, nofollow=link_12)
    var_16 = link_13.__repr__()
    assert (
        var_16
        == "Link(url=b\"Link(url=False, text='', fragment='', nofollow=False)\", text='', fragment='', nofollow=Link(url=b\"Link(url=False, text='', fragment='', nofollow=False)\", text='', fragment='', nofollow=\"Link(url=False, text='', fragment='', nofollow=False)\"))"
    )


def test_case_1137():
    int_0 = 783
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_3 = var_1.__repr__()
    assert var_3 == "'0'"
    link_3 = module_0.Link(bool_0, var_2, var_0)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_5 = module_0.Link(var_4, nofollow=link_4)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_5 = link_5.__hash__()
    assert var_5 == 4128530656735687579
    var_6 = link_5.__hash__()
    assert var_6 == 4128530656735687579
    bool_1 = False
    link_6 = module_0.Link(bool_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_7.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_8 = module_0.Link(bool_2)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bytes_2 = b"O\xf3\x8ez\x9cB\xfdi\xa1"
    none_type_1 = None
    link_9 = module_0.Link(none_type_1)
    var_9 = link_9.__hash__()
    assert var_9 == 477042
    var_10 = var_9.__repr__()
    assert var_10 == "477042"
    var_11 = var_10.__eq__(bytes_2)
    bool_3 = False
    link_10 = module_0.Link(bool_3)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_3, bytes_3)
    var_12 = link_11.__repr__()
    assert (
        var_12
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    float_0 = 5.0
    link_12 = module_0.Link(float_0)
    none_type_2 = None
    bool_4 = True
    link_13 = module_0.Link(bool_4, nofollow=bool_4)
    var_13 = link_13.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_2)
    link_14 = module_0.Link(link_13)
    link_15 = module_0.Link(var_13, fragment=none_type_2)
    var_15 = link_15.__hash__()
    assert var_15 == 477042
    var_16 = var_15.__repr__()
    assert var_16 == "477042"
    bool_5 = True
    bool_6 = False
    tuple_0 = (bool_5, bool_6)
    link_16 = module_0.Link(tuple_0, fragment=bool_5)
    var_17 = link_16.__hash__()
    assert var_17 == -5164621852614943975
    var_18 = var_17.__repr__()
    assert var_18 == "-5164621852614943975"
    var_19 = var_17.__repr__()
    assert var_19 == "-5164621852614943975"
    bool_7 = False
    bool_8 = False
    tuple_1 = (bool_8,)
    link_17 = module_0.Link(bool_7, fragment=tuple_1)
    var_20 = link_17.__hash__()
    assert var_20 == -8753497827991233192
    var_21 = var_18.__eq__(var_17)


def test_case_1138():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=None, text='', fragment=None, nofollow=False)"
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_2 = module_0.Link(bytes_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_4 = var_3.__eq__(int_0)
    var_5 = var_4.__repr__()
    var_6 = var_5.__eq__(int_0)
    link_3 = module_0.Link(var_6, var_2)


def test_case_1139():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    link_3 = module_0.Link(object_0, none_type_0)
    var_1 = link_0.__hash__()
    assert var_1 == 5
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, nofollow=none_type_1)
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_5 = module_0.Link(bytes_0)
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, nofollow=none_type_2)
    bool_0 = False
    link_7 = module_0.Link(bool_0)
    var_2 = link_7.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_8 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    link_9 = module_0.Link(var_2, nofollow=link_8)
    complex_0 = 2717.25865 + 279.6823j
    bytes_1 = b"xC(\xd2O"
    set_0 = {bytes_1, bytes_1, bytes_1}
    none_type_3 = None
    link_10 = module_0.Link(set_0, none_type_3)
    var_3 = link_10.__repr__()
    assert var_3 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == -2938861455928792573
    var_5 = var_4.__hash__()
    assert var_5 == -633018446715098622
    var_6 = var_5.__eq__(complex_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_11 = module_0.Link(bool_1, fragment=tuple_0)
    var_7 = link_11.__hash__()
    assert var_7 == -8753497827991233192
    set_1 = {tuple_0, var_7, bool_2, bool_1}
    var_8 = var_7.__eq__(set_1)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_12 = module_0.Link(tuple_1, fragment=bool_3)
    var_9 = link_12.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_9.__hash__()
    assert var_12 == -552935834187556073
    link_13 = module_0.Link(bool_3, nofollow=link_12)
    var_13 = var_8.__hash__()


def test_case_1140():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_1 = link_1.__hash__()
    assert var_1 == -8753497827991233192
    link_2 = module_0.Link(var_1, var_1, nofollow=var_1)
    var_2 = link_2.__repr__()
    assert (
        var_2
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_3.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    var_6 = var_4.__hash__()
    assert var_6 == 0
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    var_7 = var_5.__repr__()
    assert var_7 == "'0'"
    none_type_0 = None
    bool_3 = True
    link_5 = module_0.Link(bool_3, nofollow=bool_3)
    var_8 = link_5.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_0)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_2, bytes_2)
    var_10 = link_5.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_7 = module_0.Link(var_10, nofollow=var_10)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    int_0 = 3199
    link_8 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_11 = link_8.__repr__()
    assert var_11 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    none_type_2 = None
    link_10 = module_0.Link(none_type_2)
    var_12 = link_10.__hash__()
    assert var_12 == 477042
    var_13 = var_12.__hash__()
    assert var_13 == 477042
    bool_4 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_11 = module_0.Link(var_13, fragment=bool_4, nofollow=complex_0)
    bytes_3 = b"-5164621852614943975"
    link_12 = module_0.Link(bytes_3, nofollow=bytes_3)
    float_0 = 5.0
    link_13 = module_0.Link(float_0)
    var_14 = link_13.__hash__()
    assert var_14 == 5
    var_15 = var_14.__eq__(float_0)
    bool_5 = True
    link_14 = module_0.Link(bool_5, nofollow=bool_5)
    var_16 = link_14.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_3 = None
    link_15 = module_0.Link(none_type_3, none_type_3)
    var_17 = var_16.__eq__(var_16)
    link_16 = module_0.Link(var_1, var_3, link_12)


def test_case_1141():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_1)
    var_3 = link_1.__hash__()
    assert var_3 == -4606328870177462788
    var_4 = var_3.__repr__()
    assert var_4 == "-4606328870177462788"
    none_type_0 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_5 = link_2.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_0)
    var_7 = link_2.__hash__()
    assert var_7 == 0
    int_1 = 36
    bytes_2 = b"\xeb\xdc\xa3"
    link_3 = module_0.Link(bytes_2)
    var_8 = link_3.__repr__()
    assert var_8 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_9 = var_8.__eq__(int_1)
    var_10 = var_9.__repr__()
    var_11 = var_10.__eq__(int_1)
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_12 = link_4.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, none_type_1)
    var_13 = var_12.__eq__(var_12)
    var_14 = var_12.__hash__()
    assert var_14 == 5710265117276615615
    bool_2 = True
    list_0 = [bool_2, bool_2, bool_2]
    link_6 = module_0.Link(list_0)
    var_15 = link_6.__repr__()
    assert (
        var_15 == "Link(url=[True, True, True], text='', fragment='', nofollow=False)"
    )
    var_16 = link_2.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=True)"


def test_case_1142():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = var_0.__eq__(var_0)
    tuple_0 = ()
    str_0 = '6jc"e'
    int_0 = -820
    tuple_1 = (tuple_0, str_0, int_0, tuple_0)
    none_type_1 = None
    link_2 = module_0.Link(tuple_1, nofollow=none_type_1)
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    link_3 = module_0.Link(object_0)
    var_2 = link_3.__repr__()
    var_3 = var_2.__repr__()
    var_4 = var_3.__hash__()
    bool_0 = True
    link_4 = module_0.Link(bool_0, nofollow=bool_0)
    bool_1 = False
    link_5 = module_0.Link(bool_1)
    var_5 = link_5.__hash__()
    assert var_5 == 0
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, link_6)
    int_1 = 3199
    link_8 = module_0.Link(int_1, int_1, nofollow=int_1)
    bytes_0 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_6 = link_9.__repr__()
    assert (
        var_6
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    str_1 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_1]
    link_10 = module_0.Link(list_0, str_1)
    link_11 = module_0.Link(link_10)
    none_type_3 = None
    link_12 = module_0.Link(none_type_3, list_0)
    bool_2 = False
    bool_3 = False
    tuple_2 = (bool_3,)
    link_13 = module_0.Link(bool_2, fragment=tuple_2)
    var_7 = link_13.__hash__()
    assert var_7 == -8753497827991233192
    link_14 = module_0.Link(var_7, var_7, nofollow=var_7)
    var_8 = link_14.__repr__()
    assert (
        var_8
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_9 = link_13.__repr__()
    assert var_9 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_15 = module_0.Link(bytes_1)
    link_16 = module_0.Link(link_15)
    var_10 = link_16.__hash__()
    assert var_10 == -4606328870177462788
    float_1 = 1729.95
    link_17 = module_0.Link(float_1, fragment=float_1)
    var_11 = link_17.__hash__()
    assert var_11 == 0
    link_18 = module_0.Link(var_11, var_11, float_1)
    var_12 = link_18.__repr__()
    assert var_12 == "Link(url=0, text=0, fragment=1729.95, nofollow=False)"
    bytes_2 = b"-5164621852614943975"
    link_19 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_13 = link_18.__eq__(link_18)
    assert var_13 is True
    link_20 = module_0.Link(link_13, var_13, nofollow=var_2)


def test_case_1143():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    var_3 = var_2.__hash__()
    var_4 = var_1.__eq__(var_2)


def test_case_1144():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    bool_0 = True
    link_3 = module_0.Link(bool_0, fragment=bool_0)
    var_0 = link_3.__repr__()
    assert var_0 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 4729962515010671871
    var_2 = var_1.__repr__()
    assert var_2 == "4729962515010671871"
    link_4 = module_0.Link(var_2)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    var_3 = link_4.__hash__()
    assert var_3 == -6813877331771076914
    bool_1 = False
    link_5 = module_0.Link(bool_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_4 = link_6.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_2 = False
    link_7 = module_0.Link(bool_2)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    float_0 = 1729.95
    link_8 = module_0.Link(float_0, fragment=float_0)
    var_6 = link_8.__hash__()
    assert var_6 == 0
    link_9 = module_0.Link(var_6, var_6, float_0)
    var_7 = link_9.__repr__()
    assert var_7 == "Link(url=0, text=0, fragment=1729.95, nofollow=False)"
    var_8 = link_5.__hash__()
    assert var_8 == 0


def test_case_1145():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0, link_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0)
    var_0 = link_2.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=None, text='', fragment=None, nofollow=False)"
    bytes_0 = b"O\xf3\x8ez\x9cB\xfdi\xa1"
    none_type_1 = None
    link_3 = module_0.Link(none_type_1)
    var_3 = link_3.__hash__()
    assert var_3 == 477042
    var_4 = var_3.__repr__()
    assert var_4 == "477042"
    var_5 = var_4.__eq__(bytes_0)
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_5 = module_0.Link(bool_1, fragment=tuple_0)
    var_7 = link_5.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_0, var_7, bool_2, bool_1}
    var_8 = var_7.__eq__(set_0)
    var_9 = link_5.__hash__()
    assert var_9 == -8753497827991233192
    bytes_1 = b"\xa6\xa9k\xc0I\xf9\x9b\xdf\x16\x0f#."
    link_6 = module_0.Link(bytes_1)
    dict_0 = {bytes_1: bytes_1, bytes_1: bytes_1, bytes_1: link_6, bytes_1: link_6}
    link_7 = module_0.Link(dict_0, nofollow=dict_0)
    none_type_2 = None
    link_8 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_3 = False
    link_9 = module_0.Link(bool_3)
    var_10 = link_9.__repr__()
    assert var_10 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_10 = module_0.Link(var_10, nofollow=var_10)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    var_11 = var_10.__hash__()
    assert var_11 == -3936900723769714473
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    bool_4 = False
    link_12 = module_0.Link(bool_4)
    var_12 = link_12.__repr__()
    assert var_12 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_13 = module_0.Link(var_12, nofollow=var_12)
    object_0 = module_1.object()
    link_14 = module_0.Link(object_0, fragment=object_0)
    link_15 = module_0.Link(link_13, fragment=bytes_2, nofollow=link_12)
    none_type_3 = None
    link_16 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    object_1 = module_1.object()
    link_17 = module_0.Link(object_1, fragment=object_1)
    link_18 = module_0.Link(link_17)
    var_13 = link_1.__repr__()
    assert (
        var_13
        == "Link(url=Link(url=True, text='', fragment='', nofollow=True), text=Link(url=True, text='', fragment='', nofollow=True), fragment='', nofollow=False)"
    )


def test_case_1146():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_3 = module_0.Link(link_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_2, bytes_2)
    bool_1 = False
    link_5 = module_0.Link(bool_1)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_6 = module_0.Link(var_6, nofollow=var_6)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    link_8 = module_0.Link(link_6, fragment=bytes_2, nofollow=link_5)
    bool_2 = False
    link_9 = module_0.Link(bool_2)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_3, bytes_3)
    var_7 = link_10.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_11 = module_0.Link(bool_3)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_12 = module_0.Link(var_7, var_8, nofollow=link_10)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_4, bytes_4)
    bool_4 = True
    link_14 = module_0.Link(bool_4)
    var_9 = link_14.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_15 = module_0.Link(float_0, fragment=var_9)
    var_10 = link_14.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_5 = True
    link_16 = module_0.Link(bool_5, bool_5, nofollow=bool_5)
    var_11 = link_16.__hash__()
    assert var_11 == 1
    link_17 = module_0.Link(var_1)


def test_case_1147():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = link_0.__repr__()
    assert (
        var_1
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_2 = module_0.Link(var_2)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, link_3)
    var_3 = link_4.__eq__(link_4)
    assert var_3 is True
    object_0 = module_1.object()
    link_5 = module_0.Link(object_0, fragment=object_0)
    link_6 = module_0.Link(object_0, none_type_0)
    var_4 = link_3.__hash__()
    assert var_4 == 5
    float_1 = 5.0
    link_7 = module_0.Link(float_1)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, link_7)
    var_5 = link_8.__eq__(link_8)
    assert var_5 is True
    object_1 = module_1.object()
    link_9 = module_0.Link(object_1, fragment=object_1)
    link_10 = module_0.Link(object_1, none_type_1)
    int_1 = 2105
    none_type_2 = None
    link_11 = module_0.Link(int_1, none_type_2)
    var_6 = link_11.__repr__()
    assert var_6 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_12 = module_0.Link(var_6, int_1)
    var_7 = link_12.__hash__()
    assert var_7 == -1122340555193368221
    var_8 = var_7.__repr__()
    assert var_8 == "-1122340555193368221"
    none_type_3 = None
    link_13 = module_0.Link(none_type_3, fragment=none_type_3)
    var_9 = link_13.__hash__()
    assert var_9 == 0
    var_10 = var_9.__hash__()
    assert var_10 == 0
    var_11 = var_9.__eq__(var_9)
    var_12 = var_10.__hash__()
    assert var_12 == 0
    int_2 = 783
    link_14 = module_0.Link(int_2, int_2)
    link_15 = module_0.Link(link_14, fragment=link_14)
    none_type_4 = None
    link_16 = module_0.Link(none_type_4, fragment=none_type_4)
    var_13 = link_16.__hash__()
    assert var_13 == 0
    var_14 = var_13.__hash__()
    assert var_14 == 0
    var_15 = var_13.__eq__(var_13)
    link_17 = module_0.Link(int_2, fragment=link_14, nofollow=link_4)


def test_case_1148():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    complex_0 = 2717.25865 + 279.6823j
    bytes_1 = b"xC(\xd2O"
    set_0 = {bytes_1, bytes_1, bytes_1}
    none_type_0 = None
    link_1 = module_0.Link(set_0, none_type_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_3 = var_2.__hash__()
    assert var_3 == -2938861455928792573
    var_4 = var_3.__hash__()
    assert var_4 == -633018446715098622
    var_5 = var_4.__eq__(complex_0)
    link_2 = module_0.Link(var_2)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"


def test_case_1149():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == 4128530656735687579
    var_2 = link_1.__hash__()
    assert var_2 == 4128530656735687579
    str_0 = "zFdqvZ!_FXmvkkTDS"
    link_2 = module_0.Link(str_0)
    var_3 = link_2.__hash__()
    assert var_3 == -5642901194074185885
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_3 = module_0.Link(bytes_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_5 = var_4.__eq__(int_0)
    var_6 = var_5.__repr__()
    var_7 = var_6.__eq__(int_0)
    none_type_1 = None
    bool_0 = True
    link_4 = module_0.Link(bool_0, nofollow=bool_0)
    var_8 = link_4.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_1)
    link_5 = module_0.Link(link_4)
    link_6 = module_0.Link(var_8, fragment=none_type_1)
    var_10 = link_6.__hash__()
    assert var_10 == 477042
    var_11 = var_10.__repr__()
    assert var_11 == "477042"
    var_12 = var_1.__eq__(str_0)
    var_13 = var_12.__repr__()


def test_case_1150():
    bool_0 = True
    bool_1 = True
    bytes_0 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -6712542186422229073
    var_1 = var_0.__repr__()
    assert var_1 == "-6712542186422229073"
    var_2 = var_1.__eq__(bool_1)
    var_3 = var_2.__hash__()
    var_4 = var_3.__eq__(bool_0)
    none_type_0 = None
    bool_2 = False
    link_1 = module_0.Link(none_type_0, fragment=bool_2)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(url=None, text='', fragment=False, nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == -5509142826951788791
    var_7 = var_6.__repr__()
    assert var_7 == "-5509142826951788791"
    var_8 = var_7.__repr__()
    assert var_8 == "'-5509142826951788791'"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_1)
    link_3 = module_0.Link(link_2)
    var_9 = link_3.__hash__()
    assert var_9 == -4606328870177462788
    var_10 = var_2.__hash__()


def test_case_1151():
    list_0 = []
    link_0 = module_0.Link(list_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=[], text='', fragment='', nofollow=False)"
    int_0 = 2105
    none_type_0 = None
    link_1 = module_0.Link(int_0, none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_2 = module_0.Link(var_1, int_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_2 = link_2.__hash__()
    assert var_2 == -1122340555193368221
    var_3 = var_2.__repr__()
    assert var_3 == "-1122340555193368221"
    bool_0 = True
    list_1 = [bool_0, bool_0, bool_0]
    link_3 = module_0.Link(list_1)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=[True, True, True], text='', fragment='', nofollow=False)"
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    object_0 = module_1.object()
    link_5 = module_0.Link(object_0, fragment=object_0)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=5.0, text='', fragment='', nofollow=False)"
    dict_0 = {}
    object_1 = module_1.object(**dict_0)
    link_6 = module_0.Link(object_1)
    var_6 = link_6.__repr__()
    var_7 = var_6.__repr__()
    var_8 = var_7.__hash__()
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, fragment=none_type_1)
    var_9 = link_7.__hash__()
    assert var_9 == 0
    var_10 = var_9.__hash__()
    assert var_10 == 0
    var_11 = var_9.__eq__(var_9)
    var_12 = var_10.__hash__()
    assert var_12 == 0
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_8 = module_0.Link(bool_1, fragment=tuple_0)
    var_13 = link_8.__hash__()
    assert var_13 == -8753497827991233192
    link_9 = module_0.Link(var_13, var_13, nofollow=var_13)
    bool_3 = False
    link_10 = module_0.Link(bool_3)
    var_14 = link_10.__repr__()
    assert var_14 == "Link(url=False, text='', fragment='', nofollow=False)"
    float_1 = 5.0
    link_11 = module_0.Link(float_1)
    none_type_2 = None
    link_12 = module_0.Link(none_type_2, link_11)
    var_15 = link_12.__eq__(link_12)
    assert var_15 is True
    link_13 = module_0.Link(var_1, fragment=var_14)


def test_case_1152():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    var_4 = link_2.__eq__(link_2)
    assert var_4 is True
    var_5 = link_2.__eq__(link_1)
    assert var_5 is False
    var_6 = var_5.__eq__(var_4)
    assert var_6 is False
    bool_2 = False
    bytes_0 = b"]\xfe"
    int_0 = 3199
    tuple_1 = (bool_2, bytes_0, int_0, int_0)
    link_3 = module_0.Link(tuple_1, fragment=bytes_0)
    link_4 = module_0.Link(link_3, nofollow=bool_2)
    var_7 = link_4.__hash__()
    assert var_7 == 3939945378486638560
    link_5 = module_0.Link(var_7, bytes_0, var_7)
    bool_3 = True
    link_6 = module_0.Link(bool_3, bool_3)
    str_0 = "zFdqvZ!_FXmvkkTDS"
    link_7 = module_0.Link(str_0)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    var_8 = link_7.__hash__()
    assert var_8 == -5642901194074185885
    var_9 = link_0.__hash__()
    assert var_9 == -5164621852614943975


@pytest.mark.xfail(strict=True)
def test_case_1153():
    none_type_0 = None
    str_0 = "getint"
    list_0 = [str_0, str_0, str_0]
    link_0 = module_0.Link(list_0, list_0, str_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1154():
    str_0 = "9/K1>G\to~?c)?C8Iao"
    bool_0 = True
    none_type_0 = None
    link_0 = module_0.Link(bool_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1155():
    object_0 = module_1.object()
    bool_0 = True
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1156():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    link_0.__eq__(var_0)


@pytest.mark.xfail(strict=True)
def test_case_1157():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 477042
    var_1 = var_0.__repr__()
    assert var_1 == "477042"
    complex_0 = 2907.92 + 3291.834936j
    tuple_0 = (complex_0, complex_0, complex_0)
    set_0 = {tuple_0, complex_0}
    link_1 = module_0.Link(set_0)
    link_1.__hash__()


@pytest.mark.xfail(strict=True)
def test_case_1158():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_2 = link_2.__hash__()
    assert var_2 == -4606328870177462788
    var_3 = var_2.__hash__()
    assert var_3 == -2300485860963768837
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_4 = link_4.__hash__()
    assert var_4 == -4606328870177462788
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_5 = module_0.Link(tuple_1, fragment=bool_2)
    var_5 = link_5.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_5.__hash__()
    assert var_8 == -552935834187556073
    link_0.__eq__(link_4)


@pytest.mark.xfail(strict=True)
def test_case_1159():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_2 = link_3.__hash__()
    assert var_2 == -4606328870177462788
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_4.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__eq__(tuple_1)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, nofollow=none_type_1)
    bool_4 = True
    link_6 = module_0.Link(bool_4)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_7 = link_8.__hash__()
    assert var_7 == -4606328870177462788
    var_8 = var_7.__hash__()
    assert var_8 == -2300485860963768837
    bool_5 = False
    link_9 = module_0.Link(bool_5)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_2)
    link_11 = module_0.Link(link_10)
    var_9 = link_11.__hash__()
    assert var_9 == -4606328870177462788
    bool_6 = True
    link_12 = module_0.Link(bool_6)
    var_10 = link_12.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_11 = var_9.__eq__(bytes_2)
    link_13 = module_0.Link(link_0)
    link_13.__eq__(link_9)


@pytest.mark.xfail(strict=True)
def test_case_1160():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_2 = link_2.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_1)
    var_5 = var_4.__repr__()
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, nofollow=none_type_1)
    none_type_2 = None
    link_4 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_4 = False
    link_5 = module_0.Link(bool_4)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_6 = module_0.Link(tuple_2, fragment=bool_5)
    var_6 = link_6.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_7 = module_0.Link(tuple_3, fragment=bool_7)
    var_9 = link_7.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_9.__hash__()
    assert var_12 == -552935834187556073
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_0)
    link_9 = module_0.Link(link_8)
    var_13 = link_9.__hash__()
    assert var_13 == -4606328870177462788
    bool_9 = True
    link_10 = module_0.Link(bool_9)
    var_14 = link_10.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_15 = var_13.__eq__(bytes_0)
    bool_10 = True
    link_11 = module_0.Link(bool_10)
    var_16 = link_11.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_1)
    link_13 = module_0.Link(link_12)
    var_17 = link_13.__hash__()
    assert var_17 == -4606328870177462788
    var_18 = var_17.__hash__()
    assert var_18 == -2300485860963768837
    link_6.__eq__(tuple_3)


@pytest.mark.xfail(strict=True)
def test_case_1161():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_5 = module_0.Link(tuple_0, fragment=bool_2)
    var_4 = link_5.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_4.__hash__()
    assert var_7 == -552935834187556073
    var_8 = link_2.__hash__()
    assert var_8 == 1
    link_4.__eq__(var_8)


@pytest.mark.xfail(strict=True)
def test_case_1162():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_1 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_5 = link_3.__hash__()
    assert var_5 == -4606328870177462788
    bool_4 = True
    link_4 = module_0.Link(bool_4)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_0)
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_5 = module_0.Link(tuple_2, fragment=bool_5)
    var_8 = link_5.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__repr__()
    assert var_10 == "-5164621852614943975"
    bool_7 = True
    bool_8 = False
    tuple_3 = (bool_7, bool_8)
    link_6 = module_0.Link(tuple_3, fragment=bool_7)
    var_11 = link_6.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    none_type_0 = None
    link_7 = module_0.Link(link_6, fragment=none_type_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_1)
    link_9 = module_0.Link(link_8)
    var_13 = link_9.__hash__()
    assert var_13 == -4606328870177462788
    var_14 = var_13.__hash__()
    assert var_14 == -2300485860963768837
    link_8.__eq__(tuple_3)


@pytest.mark.xfail(strict=True)
def test_case_1163():
    str_0 = 'm"y*\\33G8'
    dict_0 = {str_0: str_0}
    link_0 = module_0.Link(dict_0, nofollow=dict_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__hash__()


@pytest.mark.xfail(strict=True)
def test_case_1164():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, nofollow=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    link_3.__eq__(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_1165():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bool_2 = False
    link_1 = module_0.Link(bool_2)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_3 = True
    link_3 = module_0.Link(bool_3)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    link_3.__eq__(var_0)


@pytest.mark.xfail(strict=True)
def test_case_1166():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_5 = link_4.__hash__()
    assert var_5 == -4606328870177462788
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_5 = module_0.Link(tuple_1, fragment=bool_3)
    var_6 = link_5.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_1 = None
    link_6 = module_0.Link(link_5, fragment=none_type_1)
    bool_5 = False
    link_7 = module_0.Link(bool_5)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_8 = module_0.Link(tuple_2, fragment=bool_6)
    var_8 = link_8.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_2)
    var_11 = var_10.__repr__()
    bool_8 = True
    link_9 = module_0.Link(bool_8)
    var_12 = link_9.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_2)
    link_12 = module_0.Link(link_11)
    var_13 = link_12.__hash__()
    assert var_13 == -4606328870177462788
    var_14 = var_13.__hash__()
    assert var_14 == -2300485860963768837
    link_1.__eq__(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1167():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_6 = link_1.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_7 = var_5.__repr__()
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_3 = module_0.Link(tuple_1, fragment=bool_3)
    var_8 = link_3.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_8.__hash__()
    assert var_11 == -552935834187556073
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_1)
    link_6 = module_0.Link(link_5)
    var_12 = link_6.__hash__()
    assert var_12 == -4606328870177462788
    bool_5 = True
    link_7 = module_0.Link(bool_5)
    var_13 = link_7.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_14 = var_12.__eq__(bytes_1)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_2, bytes_2)
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_9 = module_0.Link(tuple_2, fragment=bool_6)
    var_15 = link_9.__hash__()
    assert var_15 == -5164621852614943975
    var_16 = var_15.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = var_15.__eq__(tuple_2)
    bool_8 = False
    bool_9 = False
    tuple_3 = (bool_9,)
    link_10 = module_0.Link(bool_8, fragment=tuple_3)
    var_18 = link_10.__hash__()
    assert var_18 == -8753497827991233192
    set_0 = {tuple_3, var_18, bool_9, bool_8}
    var_19 = var_18.__eq__(set_0)
    var_20 = link_10.__hash__()
    assert var_20 == -8753497827991233192
    none_type_2 = None
    link_11 = module_0.Link(none_type_2, nofollow=none_type_2)
    bool_10 = False
    link_12 = module_0.Link(bool_10)
    link_3.__eq__(var_1)


@pytest.mark.xfail(strict=True)
def test_case_1168():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_1.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_0)
    link_3 = module_0.Link(link_2)
    var_5 = link_3.__hash__()
    assert var_5 == -4606328870177462788
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_6 = link_5.__hash__()
    assert var_6 == -4606328870177462788
    bool_3 = True
    link_6 = module_0.Link(bool_3)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_8 = var_6.__eq__(bytes_1)
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_7 = module_0.Link(bool_4, fragment=tuple_1)
    var_9 = link_7.__hash__()
    assert var_9 == -8753497827991233192
    set_0 = {tuple_1, var_9, bool_5, bool_4}
    var_10 = var_9.__eq__(set_0)
    var_11 = link_7.__hash__()
    assert var_11 == -8753497827991233192
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_8 = module_0.Link(tuple_2, fragment=bool_6)
    var_12 = link_8.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__eq__(tuple_2)
    none_type_1 = None
    link_9 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    none_type_2 = None
    bool_8 = True
    link_10 = module_0.Link(bool_8, nofollow=bool_8)
    var_15 = link_10.__hash__()
    assert var_15 == 0
    var_16 = var_15.__eq__(none_type_2)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_2, bytes_2)
    var_17 = link_10.__repr__()
    assert var_17 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_18 = var_16.__repr__()
    link_10.__eq__(var_13)


@pytest.mark.xfail(strict=True)
def test_case_1169():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, fragment=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    tuple_0 = (var_0, var_0)
    bytes_1 = b"\xa0\x99\xf4\xdf\x17\xa0\xbeO\x98\xa3\x9cm\x10\x93\xfei\xb00?"
    link_1 = module_0.Link(bytes_1, bytes_1)
    link_1.__eq__(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1170():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, nofollow=none_type_1)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_4 = link_4.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_5 = module_0.Link(tuple_0, fragment=bool_1)
    var_6 = link_5.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    bool_3 = True
    link_6 = module_0.Link(bool_3)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    link_0.__eq__(var_8)


@pytest.mark.xfail(strict=True)
def test_case_1171():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(link_0, fragment=none_type_0)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_2 = link_2.__hash__()
    assert var_2 == -8753497827991233192
    set_0 = {tuple_1, var_2, bool_3, bool_2}
    var_3 = var_2.__eq__(set_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    bool_4 = True
    link_4 = module_0.Link(bool_4)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_5 = module_0.Link(float_0, fragment=var_4)
    link_5.__eq__(var_3)


@pytest.mark.xfail(strict=True)
def test_case_1172():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    link_2 = module_0.Link(link_1)
    var_4 = link_1.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2.__eq__(var_4)


def test_case_1173():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1174():
    bool_0 = True
    bool_1 = False
    link_0 = module_0.Link(bool_1, bool_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1175():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_1 = link_5.__repr__()
    assert (
        var_1
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_2)
    link_7 = module_0.Link(link_6)
    var_2 = link_7.__hash__()
    assert var_2 == -4606328870177462788
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_8 = module_0.Link(tuple_0, fragment=bool_2)
    var_3 = link_8.__hash__()
    assert var_3 == -5164621852614943975
    var_4 = var_3.__repr__()
    assert var_4 == "-5164621852614943975"
    var_5 = var_3.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_3.__hash__()
    assert var_6 == -552935834187556073
    bool_4 = False
    link_9 = module_0.Link(bool_4)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_3, bytes_3)
    var_7 = link_10.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = False
    link_11 = module_0.Link(bool_5)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_6 = False
    bool_7 = False
    tuple_1 = (bool_7,)
    link_12 = module_0.Link(bool_6, fragment=tuple_1)
    var_9 = link_12.__hash__()
    assert var_9 == -8753497827991233192
    link_13 = module_0.Link(var_9, var_9, nofollow=var_9)
    var_10 = link_12.__hash__()
    assert var_10 == -8753497827991233192
    link_11.__eq__(var_8)


@pytest.mark.xfail(strict=True)
def test_case_1176():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    none_type_0 = None
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_3.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    var_3 = var_1.__repr__()
    assert var_3 == "0"
    var_4 = link_3.__eq__(link_1)
    assert var_4 is False
    var_5 = var_4.__eq__(link_0)
    var_6 = var_5.__repr__()
    link_1.__eq__(var_6)


@pytest.mark.xfail(strict=True)
def test_case_1177():
    bool_0 = True
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1178():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    bool_2 = False
    link_1 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_3 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_3.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_0 = None
    link_4 = module_0.Link(link_3, fragment=none_type_0)
    int_0 = 3199
    link_5 = module_0.Link(int_0, int_0, nofollow=int_0)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, fragment=none_type_1)
    var_7 = link_6.__hash__()
    assert var_7 == 0
    var_8 = var_7.__hash__()
    assert var_8 == 0
    bool_5 = False
    link_7 = module_0.Link(bool_5)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_8.__repr__()
    assert (
        var_9
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_6 = False
    link_9 = module_0.Link(bool_6)
    var_10 = var_9.__repr__()
    assert (
        var_10
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_10 = module_0.Link(var_9, var_10, nofollow=link_8)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    bool_7 = True
    link_11 = module_0.Link(bool_7)
    var_11 = link_11.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    link_12 = module_0.Link(bool_4, none_type_0)
    link_12.__eq__(var_4)


@pytest.mark.xfail(strict=True)
def test_case_1179():
    none_type_0 = None
    bool_0 = False
    none_type_1 = None
    link_0 = module_0.Link(bool_0, fragment=none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1180():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    none_type_1 = None
    link_1 = module_0.Link(none_type_1, fragment=none_type_1)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__hash__()
    assert var_3 == 0
    link_1.__eq__(var_2)


@pytest.mark.xfail(strict=True)
def test_case_1181():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_0.__hash__()
    assert var_3 == -552935834187556073
    none_type_0 = None
    bool_2 = True
    link_1 = module_0.Link(bool_2, nofollow=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_0)
    link_2 = module_0.Link(link_1)
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_3 = module_0.Link(bool_3, fragment=tuple_1)
    var_6 = link_3.__hash__()
    assert var_6 == -8753497827991233192
    bool_5 = False
    bool_6 = False
    tuple_2 = (bool_6,)
    link_4 = module_0.Link(bool_5, fragment=tuple_2)
    var_7 = link_4.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_2, var_7, bool_6, bool_5}
    var_8 = var_7.__eq__(set_0)
    var_9 = link_4.__hash__()
    assert var_9 == -8753497827991233192
    var_10 = link_4.__hash__()
    assert var_10 == -8753497827991233192
    bool_7 = False
    link_5 = module_0.Link(bool_7)
    var_11 = link_5.__repr__()
    assert var_11 == "Link(url=False, text='', fragment='', nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_0)
    link_7 = module_0.Link(link_6)
    var_12 = link_7.__hash__()
    assert var_12 == -4606328870177462788
    none_type_1 = None
    bool_8 = True
    link_8 = module_0.Link(bool_8, nofollow=bool_8)
    var_13 = link_8.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_1, bytes_1)
    var_15 = link_8.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_10 = module_0.Link(link_8)
    bool_9 = True
    bool_10 = False
    tuple_3 = (bool_9, bool_10)
    link_11 = module_0.Link(tuple_3, fragment=bool_9)
    var_16 = link_11.__hash__()
    assert var_16 == -5164621852614943975
    var_17 = var_16.__repr__()
    assert var_17 == "-5164621852614943975"
    var_18 = var_16.__repr__()
    assert var_18 == "-5164621852614943975"
    none_type_2 = None
    link_12 = module_0.Link(none_type_2, bool_10)
    int_0 = -1357
    link_3.__eq__(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1182():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    bool_2 = True
    link_3 = module_0.Link(bool_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_0)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_4 = module_0.Link(tuple_1, fragment=bool_3)
    var_6 = link_4.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__repr__()
    assert var_8 == "-5164621852614943975"
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, bool_4)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_9 = link_7.__hash__()
    assert var_9 == -4606328870177462788
    bool_5 = True
    bool_6 = False
    tuple_2 = (bool_5, bool_6)
    link_8 = module_0.Link(tuple_2, fragment=bool_5)
    var_10 = link_8.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_10.__hash__()
    assert var_13 == -552935834187556073
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    bool_7 = True
    link_10 = module_0.Link(bool_7)
    var_14 = link_10.__repr__()
    assert var_14 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_11 = module_0.Link(float_0, fragment=var_14)
    link_12 = module_0.Link(float_0, fragment=link_10)
    int_0 = 36
    bytes_3 = b"\xeb\xdc\xa3"
    link_13 = module_0.Link(bytes_3)
    var_15 = link_13.__repr__()
    assert (
        var_15 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_16 = var_15.__eq__(int_0)
    var_17 = var_16.__repr__()
    int_1 = 3199
    link_14 = module_0.Link(int_1, int_1, nofollow=int_1)
    bool_8 = False
    link_15 = module_0.Link(bool_8)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_16 = module_0.Link(bytes_4, bytes_4)
    var_18 = link_16.__repr__()
    assert (
        var_18
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_9 = False
    link_17 = module_0.Link(bool_9)
    var_19 = var_18.__repr__()
    assert (
        var_19
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_18 = module_0.Link(var_18, var_19, nofollow=link_16)
    assert f"{type(link_18).__module__}.{type(link_18).__qualname__}" == "link.Link"
    bool_10 = False
    bool_11 = False
    tuple_3 = (bool_11,)
    link_19 = module_0.Link(bool_10, fragment=tuple_3)
    var_20 = link_19.__hash__()
    assert var_20 == -8753497827991233192
    link_20 = module_0.Link(var_20, var_20, nofollow=var_20)
    var_21 = link_19.__hash__()
    assert var_21 == -8753497827991233192
    link_17.__eq__(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1183():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bool_2 = True
    link_1 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_3 = link_1.__hash__()
    assert var_3 == 1
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_2 = module_0.Link(tuple_1, fragment=bool_3)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_1)
    var_7 = var_6.__repr__()
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    bool_5 = True
    link_4 = module_0.Link(bool_5)
    var_8 = link_4.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_5 = module_0.Link(float_0, fragment=var_8)
    link_6 = module_0.Link(float_0, fragment=link_4)
    bool_6 = False
    bool_7 = False
    tuple_2 = (bool_7,)
    link_7 = module_0.Link(bool_6, fragment=tuple_2)
    var_9 = link_7.__hash__()
    assert var_9 == -8753497827991233192
    link_8 = module_0.Link(var_9, var_9, nofollow=var_9)
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_9 = module_0.Link(tuple_3, fragment=bool_8)
    var_10 = link_9.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__repr__()
    assert var_12 == "-5164621852614943975"
    none_type_0 = None
    link_10 = module_0.Link(none_type_0, bool_9)
    bool_10 = False
    bool_11 = False
    tuple_4 = (bool_11,)
    link_11 = module_0.Link(bool_10, fragment=tuple_4)
    var_13 = link_11.__hash__()
    assert var_13 == -8753497827991233192
    set_0 = {tuple_4, var_13, bool_11, bool_10}
    var_14 = var_13.__eq__(set_0)
    var_15 = link_11.__hash__()
    assert var_15 == -8753497827991233192
    var_16 = link_11.__hash__()
    assert var_16 == -8753497827991233192
    bool_12 = False
    link_12 = module_0.Link(bool_12)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_13 = module_0.Link(bytes_1, bytes_1)
    var_17 = link_13.__repr__()
    assert (
        var_17
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_13 = False
    link_14 = module_0.Link(bool_13)
    var_18 = var_17.__repr__()
    assert (
        var_18
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_8.__eq__(bool_9)


@pytest.mark.xfail(strict=True)
def test_case_1184():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__repr__()
    assert var_6 == "-5164621852614943975"
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, bool_3)
    link_1.__eq__(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1185():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    none_type_0 = None
    link_3 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_2 = True
    link_4 = module_0.Link(bool_2)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    link_0.__eq__(bool_1)


@pytest.mark.xfail(strict=True)
def test_case_1186():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = link_0.__hash__()
    assert var_3 == 0
    none_type_1 = None
    bool_1 = True
    link_2 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_2.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    bool_2 = False
    link_3 = module_0.Link(bool_2)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=False, text='', fragment='', nofollow=False)"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_7 = link_5.__hash__()
    assert var_7 == -4606328870177462788
    var_8 = var_7.__hash__()
    assert var_8 == -2300485860963768837
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_3 = True
    bool_4 = False
    tuple_0 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_0, fragment=bool_3)
    var_9 = link_7.__hash__()
    assert var_9 == -5164621852614943975
    var_10 = var_9.__repr__()
    assert var_10 == "-5164621852614943975"
    var_11 = var_9.__hash__()
    assert var_11 == -552935834187556073
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_8 = module_0.Link(tuple_1, fragment=bool_5)
    var_12 = link_8.__hash__()
    assert var_12 == -5164621852614943975
    var_13 = var_12.__repr__()
    assert var_13 == "-5164621852614943975"
    var_14 = var_12.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_12.__hash__()
    assert var_15 == -552935834187556073
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_2, bytes_2)
    bool_7 = True
    link_10 = module_0.Link(bool_7)
    var_16 = link_10.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_11 = module_0.Link(float_0, fragment=var_16)
    bool_8 = False
    bool_9 = False
    tuple_2 = (bool_9,)
    link_12 = module_0.Link(bool_8, fragment=tuple_2)
    var_17 = link_12.__hash__()
    assert var_17 == -8753497827991233192
    link_13 = module_0.Link(var_17, var_17, nofollow=var_17)
    bool_10 = False
    bool_11 = False
    tuple_3 = (bool_11,)
    link_14 = module_0.Link(bool_10, fragment=tuple_3)
    var_18 = link_14.__hash__()
    assert var_18 == -8753497827991233192
    link_15 = module_0.Link(var_18, var_18, nofollow=var_18)
    var_19 = link_14.__hash__()
    assert var_19 == -8753497827991233192
    link_14.__eq__(var_18)


@pytest.mark.xfail(strict=True)
def test_case_1187():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_2 = link_2.__hash__()
    assert var_2 == -8753497827991233192
    link_3 = module_0.Link(var_2, var_2, nofollow=var_2)
    var_3 = link_2.__hash__()
    assert var_3 == -8753497827991233192
    link_0.__eq__(bool_2)


@pytest.mark.xfail(strict=True)
def test_case_1188():
    object_0 = module_1.object()
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    set_0 = {link_0, link_0}
    link_1 = module_0.Link(set_0, none_type_0)
    link_1.__hash__()


@pytest.mark.xfail(strict=True)
def test_case_1189():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__hash__()
    assert var_3 == 0
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_3.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_4 = module_0.Link(bool_3)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_2.__eq__(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1190():
    str_0 = "\nRt\n'JUa9"
    bool_0 = True
    list_0 = [bool_0, bool_0]
    link_0 = module_0.Link(list_0, nofollow=list_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    dict_0 = {bool_0: link_0}
    int_0 = 90
    tuple_0 = (list_0, list_0, dict_0, int_0)
    link_1 = module_0.Link(tuple_0, nofollow=link_0)
    link_1.__eq__(str_0)


def test_case_1191():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


@pytest.mark.xfail(strict=True)
def test_case_1192():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_1, bytes_1)
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_3 = module_0.Link(float_0, fragment=var_0)
    none_type_0 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    link_2.__eq__(var_1)


@pytest.mark.xfail(strict=True)
def test_case_1193():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_1 = False
    none_type_0 = None
    link_1 = module_0.Link(bool_1, fragment=none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment=None, nofollow=False)"
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, link_2)
    var_1 = link_3.__eq__(link_3)
    assert var_1 is True
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_4 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_4.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__repr__()
    assert var_4 == "-5164621852614943975"
    none_type_2 = None
    none_type_3 = None
    link_5 = module_0.Link(none_type_3)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_6 = var_5.__hash__()
    assert var_6 == 2234852059487564994
    var_7 = var_6.__eq__(none_type_2)
    float_1 = 5.0
    link_6 = module_0.Link(float_1)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_7 = module_0.Link(tuple_1, fragment=bool_4)
    var_8 = link_7.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    none_type_4 = None
    link_8 = module_0.Link(link_7, fragment=none_type_4)
    link_5.__eq__(none_type_4)


@pytest.mark.xfail(strict=True)
def test_case_1194():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_2 = False
    link_2 = module_0.Link(bool_2)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_3 = module_0.Link(tuple_1, fragment=bool_3)
    var_2 = link_3.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__eq__(tuple_1)
    bool_5 = False
    link_4 = module_0.Link(bool_5)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_5.__repr__()
    assert (
        var_5
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_6 = False
    link_6 = module_0.Link(bool_6)
    var_6 = var_5.__repr__()
    assert (
        var_6
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    float_0 = 5.0
    link_7 = module_0.Link(float_0)
    bool_7 = False
    bool_8 = False
    tuple_2 = (bool_8,)
    link_8 = module_0.Link(bool_7, fragment=tuple_2)
    var_7 = link_8.__hash__()
    assert var_7 == -8753497827991233192
    set_0 = {tuple_2, var_7, bool_8, bool_7}
    var_8 = var_7.__eq__(set_0)
    var_9 = link_8.__hash__()
    assert var_9 == -8753497827991233192
    var_10 = link_8.__hash__()
    assert var_10 == -8753497827991233192
    bytes_1 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_1, nofollow=bytes_1)
    object_0 = module_1.object()
    link_10 = module_0.Link(object_0, fragment=object_0)
    bool_9 = True
    bool_10 = False
    tuple_3 = (bool_9, bool_10)
    link_11 = module_0.Link(tuple_3, fragment=bool_9)
    var_11 = link_11.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__repr__()
    assert var_13 == "-5164621852614943975"
    none_type_0 = None
    link_12 = module_0.Link(none_type_0, bool_10)
    link_1.__eq__(var_8)


@pytest.mark.xfail(strict=True)
def test_case_1195():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    float_1 = 5.0
    link_2 = module_0.Link(float_1)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, link_2)
    var_0 = link_3.__eq__(link_3)
    assert var_0 is True
    bool_0 = False
    link_4 = module_0.Link(bool_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_5 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_5.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_1.__hash__()
    assert var_4 == -552935834187556073
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_7 = module_0.Link(tuple_1, fragment=bool_3)
    var_5 = link_7.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__hash__()
    assert var_7 == -552935834187556073
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_0, bytes_0)
    bool_5 = True
    link_9 = module_0.Link(bool_5)
    var_8 = link_9.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_2 = 3106.326
    link_10 = module_0.Link(float_2, fragment=var_8)
    link_11 = module_0.Link(float_2, fragment=link_9)
    bool_6 = False
    link_12 = module_0.Link(bool_6)
    var_9 = link_12.__repr__()
    assert var_9 == "Link(url=False, text='', fragment='', nofollow=False)"
    none_type_3 = None
    bool_7 = True
    link_13 = module_0.Link(bool_7, nofollow=bool_7)
    var_10 = link_13.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_3)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_14 = module_0.Link(bytes_1, bytes_1)
    var_12 = link_13.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_15 = module_0.Link(link_13)
    bool_8 = True
    bool_9 = False
    tuple_2 = (bool_8, bool_9)
    link_16 = module_0.Link(tuple_2, fragment=bool_8)
    var_13 = link_16.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__eq__(tuple_2)
    var_16 = var_15.__repr__()
    bool_10 = False
    bool_11 = False
    tuple_3 = (bool_11,)
    link_17 = module_0.Link(bool_10, fragment=tuple_3)
    var_17 = link_17.__hash__()
    assert var_17 == -8753497827991233192
    set_0 = {tuple_3, var_17, bool_11, bool_10}
    var_18 = var_17.__eq__(set_0)
    link_15.__eq__(none_type_2)


@pytest.mark.xfail(strict=True)
def test_case_1196():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    var_3 = link_0.__hash__()
    assert var_3 == -8753497827991233192
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_2 = module_0.Link(tuple_1, fragment=bool_2)
    var_4 = link_2.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    none_type_0 = None
    link_3 = module_0.Link(link_2, fragment=none_type_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    link_3.__eq__(var_1)


@pytest.mark.xfail(strict=True)
def test_case_1197():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    var_0 = link_1.__eq__(link_1)
    assert var_0 is True
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_2 = module_0.Link(bool_0, fragment=tuple_0)
    var_1 = link_2.__hash__()
    assert var_1 == -8753497827991233192
    link_3 = module_0.Link(var_1, var_1, nofollow=var_1)
    var_2 = link_2.__hash__()
    assert var_2 == -8753497827991233192
    none_type_1 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_4.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    link_5 = module_0.Link(link_4)
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_6 = module_0.Link(bool_3, fragment=tuple_1)
    var_5 = link_6.__hash__()
    assert var_5 == -8753497827991233192
    set_0 = {tuple_1, var_5, bool_4, bool_3}
    var_6 = var_5.__eq__(set_0)
    none_type_2 = None
    bool_5 = True
    link_7 = module_0.Link(bool_5, nofollow=bool_5)
    var_7 = link_7.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_2)
    float_1 = 5.0
    link_8 = module_0.Link(float_1)
    link_5.__eq__(var_8)


@pytest.mark.xfail(strict=True)
def test_case_1198():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_0.__hash__()
    assert var_1 == -8753497827991233192
    bytes_0 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_0, nofollow=bytes_0)
    link_1.__eq__(var_0)


@pytest.mark.xfail(strict=True)
def test_case_1199():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    var_4 = var_3.__hash__()
    assert var_4 == -2300485860963768837
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_1, fragment=bool_2)
    var_5 = link_3.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__eq__(tuple_1)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_4 = True
    bool_5 = False
    tuple_2 = (bool_4, bool_5)
    link_5 = module_0.Link(tuple_2, fragment=bool_4)
    var_8 = link_5.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__hash__()
    assert var_10 == -552935834187556073
    bool_6 = False
    bool_7 = False
    tuple_3 = (bool_7,)
    link_6 = module_0.Link(bool_6, fragment=tuple_3)
    var_11 = link_6.__hash__()
    assert var_11 == -8753497827991233192
    set_0 = {tuple_3, var_11, bool_7, bool_6}
    var_12 = var_11.__eq__(set_0)
    complex_0 = -2489 + 3297.83623j
    link_7 = module_0.Link(complex_0)
    var_13 = link_7.__hash__()
    assert var_13 == 1172959022599657258
    bool_8 = True
    bool_9 = False
    tuple_4 = (bool_8, bool_9)
    link_8 = module_0.Link(tuple_4, fragment=bool_8)
    var_14 = link_8.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_14.__repr__()
    assert var_16 == "-5164621852614943975"
    float_0 = 5.0
    link_9 = module_0.Link(float_0)
    none_type_1 = None
    link_10 = module_0.Link(none_type_1, link_9)
    var_17 = link_10.__eq__(link_10)
    assert var_17 is True
    object_0 = module_1.object()
    link_11 = module_0.Link(object_0, fragment=object_0)
    link_12 = module_0.Link(object_0, none_type_1)
    bool_10 = True
    link_13 = module_0.Link(bool_10, nofollow=bool_10)
    link_5.__eq__(var_12)


@pytest.mark.xfail(strict=True)
def test_case_1200():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1201():
    int_0 = 214
    str_0 = "H[RZK3Xq)r"
    float_0 = -1958.51611
    tuple_0 = (str_0, float_0)
    link_0 = module_0.Link(tuple_0, nofollow=float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 7522848625784146103
    var_1 = var_0.__repr__()
    assert var_1 == "7522848625784146103"
    var_2 = var_1.__repr__()
    assert var_2 == "'7522848625784146103'"
    link_1 = module_0.Link(var_2, fragment=var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    link_1.__eq__(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1202():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_0)
    none_type_0 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_6 = link_2.__hash__()
    assert var_6 == 0
    bool_3 = True
    link_4 = module_0.Link(bool_3, bool_3, nofollow=bool_3)
    var_7 = link_4.__hash__()
    assert var_7 == 1
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, link_5)
    bool_4 = True
    dict_0 = {}
    none_type_2 = None
    float_1 = 2515.28653
    link_7 = module_0.Link(dict_0, none_type_2, float_1, none_type_2)
    var_8 = link_7.__repr__()
    var_9 = var_8.__eq__(bool_4)
    var_10 = var_9.__hash__()
    int_0 = 3199
    link_8 = module_0.Link(int_0, int_0, nofollow=int_0)
    none_type_3 = None
    bool_5 = True
    link_9 = module_0.Link(bool_5, nofollow=bool_5)
    var_11 = link_9.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_3)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_13 = link_9.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_14 = var_12.__repr__()
    bool_6 = True
    bool_7 = False
    tuple_1 = (bool_6, bool_7)
    link_11 = module_0.Link(tuple_1, fragment=bool_6)
    var_15 = link_11.__hash__()
    assert var_15 == -5164621852614943975
    var_16 = var_15.__repr__()
    assert var_16 == "-5164621852614943975"
    none_type_4 = None
    link_12 = module_0.Link(link_11, fragment=none_type_4)
    link_12.__eq__(var_0)


@pytest.mark.xfail(strict=True)
def test_case_1203():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    set_0 = {var_0, var_0}
    float_0 = 0.2
    link_1 = module_0.Link(float_0)
    link_1.__eq__(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1204():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_5 = link_4.__hash__()
    assert var_5 == -4606328870177462788
    bool_3 = True
    link_5 = module_0.Link(bool_3)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_1)
    bytes_2 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_6 = module_0.Link(bytes_2, bytes_2)
    var_8 = link_6.__hash__()
    assert var_8 == 0
    var_9 = var_8.__repr__()
    assert var_9 == "0"
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_8 = module_0.Link(tuple_1, fragment=bool_4)
    var_10 = link_8.__hash__()
    assert var_10 == -5164621852614943975
    var_11 = var_10.__repr__()
    assert var_11 == "-5164621852614943975"
    var_12 = var_10.__hash__()
    assert var_12 == -552935834187556073
    bool_6 = False
    link_9 = module_0.Link(bool_6)
    var_13 = link_9.__repr__()
    assert var_13 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_7 = True
    bool_8 = False
    tuple_2 = (bool_7, bool_8)
    link_10 = module_0.Link(tuple_2, fragment=bool_7)
    var_14 = link_10.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_14.__eq__(tuple_2)
    bool_9 = True
    link_11 = module_0.Link(bool_9, bool_9, nofollow=bool_9)
    var_17 = link_11.__hash__()
    assert var_17 == 1
    int_0 = 36
    bytes_3 = b"\xeb\xdc\xa3"
    link_12 = module_0.Link(bytes_3)
    var_18 = link_12.__repr__()
    assert (
        var_18 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_19 = var_18.__eq__(int_0)
    var_20 = var_19.__repr__()
    link_8.__eq__(var_6)


@pytest.mark.xfail(strict=True)
def test_case_1205():
    str_0 = ""
    str_1 = ""
    tuple_0 = ()
    bool_0 = False
    tuple_1 = (tuple_0, str_1, bool_0)
    dict_0 = {str_0: str_1, str_0: tuple_1, bool_0: bool_0}
    tuple_2 = (dict_0,)
    link_0 = module_0.Link(tuple_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(tuple_2, link_0)
    link_1.__hash__()


@pytest.mark.xfail(strict=True)
def test_case_1206():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, link_3)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_5 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_5.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_0, var_3, bool_2, bool_1}
    var_4 = var_3.__eq__(set_0)
    var_5 = link_5.__hash__()
    assert var_5 == -8753497827991233192
    var_6 = link_5.__hash__()
    assert var_6 == -8753497827991233192
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_6 = module_0.Link(bytes_1)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_8 = var_7.__eq__(int_0)
    var_9 = var_8.__repr__()
    none_type_1 = None
    bool_3 = True
    link_7 = module_0.Link(bool_3, nofollow=bool_3)
    var_10 = link_7.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_1)
    link_8 = module_0.Link(link_7)
    bool_4 = False
    link_9 = module_0.Link(bool_4)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_2, bytes_2)
    var_12 = link_10.__repr__()
    assert (
        var_12
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_11 = module_0.Link(tuple_1, fragment=bool_5)
    var_13 = link_11.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = link_11.__repr__()
    assert var_15 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    link_2.__eq__(link_1)


@pytest.mark.xfail(strict=True)
def test_case_1207():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    str_0 = "EVnzR3\nk\x0b2|\rV5)"
    link_3 = module_0.Link(str_0)
    link_3.__eq__(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1208():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(link_0)
    complex_0 = -2489 + 3297.83623j
    link_3 = module_0.Link(complex_0)
    var_3 = link_3.__hash__()
    assert var_3 == 1172959022599657258
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    bool_1 = False
    link_5 = module_0.Link(bool_1)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_6 = module_0.Link(var_4, nofollow=var_4)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    link_2.__eq__(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1209():
    str_0 = '?fka@.MeS^_\n)^<*"]M'
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1210():
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    object_0 = module_1.object()
    link_2 = module_0.Link(object_0, fragment=object_0)
    var_0 = link_2.__repr__()
    var_1 = link_2.__hash__()
    assert var_1 == 0
    none_type_0 = None
    link_3 = module_0.Link(var_1)
    link_3.__eq__(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1211():
    none_type_0 = None
    str_0 = ">mfQ.5o+Q*J^]&_1*"
    none_type_1 = None
    link_0 = module_0.Link(str_0, str_0, none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1212():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    int_0 = 401
    link_2 = module_0.Link(int_0, int_0)
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    var_1 = link_3.__repr__()
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    bool_0 = True
    link_5 = module_0.Link(bool_0)
    var_2 = link_5.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_6 = module_0.Link(float_0, fragment=var_2)
    int_1 = 36
    bytes_2 = b"\xeb\xdc\xa3"
    link_7 = module_0.Link(bytes_2)
    var_3 = link_7.__repr__()
    assert var_3 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_4 = var_3.__eq__(int_1)
    var_5 = var_4.__repr__()
    var_6 = var_5.__eq__(int_1)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_8 = module_0.Link(bool_1, fragment=tuple_0)
    var_7 = link_8.__hash__()
    assert var_7 == -8753497827991233192
    link_9 = module_0.Link(var_7, var_7, nofollow=var_7)
    var_8 = link_8.__hash__()
    assert var_8 == -8753497827991233192
    str_0 = "0HkJo+?k"
    link_7.__eq__(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1213():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__eq__(tuple_0)
    var_3 = var_2.__repr__()
    bool_2 = False
    link_1 = module_0.Link(bool_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_3 = False
    link_3 = module_0.Link(bool_3)
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    bool_4 = False
    link_4 = module_0.Link(bool_4)
    none_type_0 = None
    bool_5 = True
    link_5 = module_0.Link(bool_5, nofollow=bool_5)
    var_6 = link_5.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_7 = module_0.Link(link_5)
    none_type_1 = None
    bool_6 = True
    link_8 = module_0.Link(bool_6, nofollow=bool_6)
    var_9 = link_8.__hash__()
    assert var_9 == 0
    var_10 = var_9.__eq__(none_type_1)
    float_0 = 5.0
    link_9 = module_0.Link(float_0)
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, link_9)
    var_11 = link_10.__eq__(link_10)
    assert var_11 is True
    bool_7 = False
    link_3.__eq__(bool_7)


@pytest.mark.xfail(strict=True)
def test_case_1214():
    bool_0 = False
    bool_1 = False
    link_0 = module_0.Link(bool_1, nofollow=bool_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1215():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_1 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_1)
    none_type_2 = None
    link_2 = module_0.Link(none_type_2)
    var_2 = link_2.__hash__()
    assert var_2 == 477042
    var_3 = var_2.__hash__()
    assert var_3 == 477042
    none_type_3 = None
    link_3 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    bool_1 = False
    link_4 = module_0.Link(bool_1)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_5 = module_0.Link(var_4, nofollow=var_4)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_5 = var_4.__hash__()
    assert var_5 == -3936900723769714473
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    var_6 = link_6.__repr__()
    var_7 = link_6.__hash__()
    assert var_7 == 0
    bool_2 = False
    link_7 = module_0.Link(bool_2)
    var_8 = link_7.__repr__()
    assert var_8 == "Link(url=False, text='', fragment='', nofollow=False)"
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_8 = module_0.Link(bytes_0)
    complex_0 = -2489 + 3297.83623j
    link_9 = module_0.Link(complex_0)
    var_9 = link_9.__hash__()
    assert var_9 == 1172959022599657258
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_10 = module_0.Link(bytes_1)
    var_10 = link_10.__repr__()
    assert (
        var_10 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_11 = var_10.__eq__(int_0)
    var_12 = var_11.__repr__()
    link_0.__eq__(none_type_2)


@pytest.mark.xfail(strict=True)
def test_case_1216():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    float_1 = 5.0
    link_3 = module_0.Link(float_1)
    none_type_0 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_1 = link_4.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    link_5 = module_0.Link(link_4)
    link_6 = module_0.Link(var_1, fragment=none_type_0)
    float_2 = 5.0
    link_7 = module_0.Link(float_2)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, link_7)
    var_3 = link_8.__eq__(link_8)
    assert var_3 is True
    object_0 = module_1.object()
    link_9 = module_0.Link(object_0, fragment=object_0)
    link_10 = module_0.Link(object_0, none_type_1)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_11 = module_0.Link(tuple_0, fragment=bool_2)
    var_4 = link_11.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    none_type_2 = None
    link_12 = module_0.Link(link_11, fragment=none_type_2)
    none_type_3 = None
    link_13 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_6 = link_13.__repr__()
    assert var_6 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_14 = module_0.Link(var_6, nofollow=link_13)
    assert f"{type(link_14).__module__}.{type(link_14).__qualname__}" == "link.Link"
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_15 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_15.__hash__()
    assert var_7 == 0
    var_8 = var_7.__repr__()
    assert var_8 == "0"
    link_4.__eq__(var_8)


@pytest.mark.xfail(strict=True)
def test_case_1217():
    none_type_0 = None
    str_0 = ""
    link_0 = module_0.Link(str_0, fragment=str_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1218():
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_0 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_1 = var_0.__eq__(bool_0)
    var_2 = var_1.__hash__()
    link_0.__hash__()


@pytest.mark.xfail(strict=True)
def test_case_1219():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    var_2 = link_2.__eq__(link_2)
    assert var_2 is True
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    link_4 = module_0.Link(object_0, none_type_0)
    none_type_1 = None
    bool_0 = True
    link_5 = module_0.Link(bool_0, nofollow=bool_0)
    var_3 = link_5.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_1)
    var_5 = var_3.__repr__()
    assert var_5 == "0"
    none_type_2 = None
    link_6 = module_0.Link(none_type_2)
    var_6 = link_6.__hash__()
    assert var_6 == 477042
    var_7 = var_6.__hash__()
    assert var_7 == 477042
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_7 = module_0.Link(tuple_0, fragment=bool_1)
    var_8 = link_7.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_0)
    var_11 = var_10.__repr__()
    none_type_3 = None
    bool_3 = True
    link_8 = module_0.Link(bool_3, nofollow=bool_3)
    var_12 = link_8.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_3)
    link_9 = module_0.Link(link_8)
    link_10 = module_0.Link(var_12, fragment=none_type_3)
    link_7.__eq__(var_2)


@pytest.mark.xfail(strict=True)
def test_case_1220():
    bool_0 = False
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1221():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    link_1 = module_0.Link(link_0)
    link_2 = module_0.Link(var_0, fragment=none_type_0)
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_3 = module_0.Link(bytes_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_4 = module_0.Link(tuple_0, fragment=bool_1)
    var_2 = link_4.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_6 = module_0.Link(var_5, nofollow=link_5)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    var_6 = var_5.__eq__(var_5)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_3 = True
    link_8 = module_0.Link(bool_3)
    var_7 = link_8.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_9 = module_0.Link(float_0, fragment=var_7)
    link_10 = module_0.Link(float_0, fragment=link_8)
    link_3.__eq__(var_3)


@pytest.mark.xfail(strict=True)
def test_case_1222():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    bool_2 = False
    link_1 = module_0.Link(bool_2)
    link_0.__eq__(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1223():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_1 = module_0.Link(bool_1, fragment=tuple_0)
    var_0 = link_1.__hash__()
    assert var_0 == -8753497827991233192
    link_2 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_2.__repr__()
    assert (
        var_1
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    none_type_0 = None
    bool_3 = True
    link_3 = module_0.Link(bool_3, nofollow=bool_3)
    var_2 = link_3.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    link_4 = module_0.Link(link_3)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_0)
    link_6 = module_0.Link(link_5)
    var_4 = link_6.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__hash__()
    assert var_5 == -2300485860963768837
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_7 = module_0.Link(tuple_1, fragment=bool_4)
    var_6 = link_7.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    none_type_1 = None
    link_8 = module_0.Link(link_7, fragment=none_type_1)
    float_0 = 5.0
    link_9 = module_0.Link(float_0)
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, link_9)
    var_8 = link_10.__eq__(link_10)
    assert var_8 is True
    object_0 = module_1.object()
    link_11 = module_0.Link(object_0, fragment=object_0)
    link_12 = module_0.Link(object_0, none_type_2)
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_13 = module_0.Link(bytes_1, bytes_1)
    var_9 = link_13.__hash__()
    assert var_9 == 0
    var_10 = var_9.__repr__()
    assert var_10 == "0"
    bool_6 = True
    bool_7 = False
    tuple_2 = (bool_6, bool_7)
    link_14 = module_0.Link(tuple_2, fragment=bool_6)
    var_11 = link_14.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__repr__()
    assert var_13 == "-5164621852614943975"
    none_type_3 = None
    link_15 = module_0.Link(none_type_3, bool_7)
    bool_8 = True
    bool_9 = False
    tuple_3 = (bool_8, bool_9)
    link_16 = module_0.Link(tuple_3, fragment=bool_8)
    var_14 = link_16.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_14.__repr__()
    assert var_16 == "-5164621852614943975"
    var_17 = var_14.__hash__()
    assert var_17 == -552935834187556073
    link_11.__eq__(var_0)


@pytest.mark.xfail(strict=True)
def test_case_1224():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    bool_3 = False
    bool_4 = False
    tuple_0 = (bool_4,)
    link_5 = module_0.Link(bool_3, fragment=tuple_0)
    var_2 = link_5.__hash__()
    assert var_2 == -8753497827991233192
    none_type_0 = None
    bool_5 = True
    link_6 = module_0.Link(bool_5, nofollow=bool_5)
    var_3 = link_6.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_7.__eq__(var_2)


@pytest.mark.xfail(strict=True)
def test_case_1225():
    int_0 = 731
    bytes_0 = b'\x0f\xa7\xbe\x99*r\xd4\x99\xdd?"\xed\x9ek\x041\x83\x82\x92'
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 2733507086570629213
    var_1 = var_0.__repr__()
    assert var_1 == "2733507086570629213"
    var_2 = var_1.__hash__()
    assert var_2 == -7986944001736222805
    var_3 = var_2.__repr__()
    assert var_3 == "-7986944001736222805"
    var_4 = var_3.__eq__(int_0)
    int_1 = 20
    complex_0 = -3608 - 875.4j
    complex_1 = 20.44904 - 675.6002j
    dict_0 = {
        complex_0: complex_1,
        complex_1: complex_1,
        complex_0: complex_1,
        complex_0: complex_1,
    }
    link_1 = module_0.Link(dict_0)
    link_1.__eq__(int_1)


@pytest.mark.xfail(strict=True)
def test_case_1226():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    bytes_0 = b"-5164621852614943975"
    link_2 = module_0.Link(bytes_0, nofollow=bytes_0)
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_3 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_3.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    int_0 = 401
    link_4 = module_0.Link(int_0, int_0)
    bool_2 = False
    link_5 = module_0.Link(bool_2)
    int_1 = 3199
    link_6 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_3 = link_6.__hash__()
    assert var_3 == 3199
    bool_3 = True
    link_7 = module_0.Link(bool_3, nofollow=bool_3)
    bool_4 = True
    bool_5 = False
    tuple_1 = (bool_4, bool_5)
    link_8 = module_0.Link(tuple_1, fragment=bool_4)
    var_4 = link_8.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_1)
    link_0.__eq__(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1227():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_0 = link_3.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_4 = module_0.Link(tuple_0, fragment=bool_0)
    var_1 = link_4.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_1 = None
    link_5 = module_0.Link(link_4, fragment=none_type_1)
    bool_2 = True
    link_6 = module_0.Link(bool_2)
    var_3 = link_6.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_8 = module_0.Link(bool_3, fragment=tuple_1)
    var_4 = link_8.__hash__()
    assert var_4 == -8753497827991233192
    link_9 = module_0.Link(var_4, var_4, nofollow=var_4)
    var_5 = link_9.__repr__()
    assert (
        var_5
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bytes_2 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_11 = module_0.Link(bytes_2, bytes_2)
    var_6 = link_11.__hash__()
    assert var_6 == 0
    var_7 = var_6.__repr__()
    assert var_7 == "0"
    none_type_3 = None
    link_12 = module_0.Link(none_type_3, none_type_3, nofollow=none_type_3)
    var_8 = link_12.__repr__()
    assert var_8 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_13 = module_0.Link(var_8, nofollow=link_12)
    assert f"{type(link_13).__module__}.{type(link_13).__qualname__}" == "link.Link"
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_14 = module_0.Link(bytes_3, bytes_3)
    bool_5 = True
    link_15 = module_0.Link(bool_5)
    var_9 = link_15.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_16 = module_0.Link(float_1, fragment=var_9)
    bytes_4 = b"-5164621852614943975"
    link_17 = module_0.Link(bytes_4, nofollow=bytes_4)
    var_10 = link_17.__hash__()
    assert var_10 == 0
    link_7.__eq__(var_6)


@pytest.mark.xfail(strict=True)
def test_case_1228():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_2 = module_0.Link(var_0, nofollow=link_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_1 = link_2.__hash__()
    assert var_1 == 4128530656735687579
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_3 = module_0.Link(bool_0, fragment=tuple_0)
    var_2 = link_3.__hash__()
    assert var_2 == -8753497827991233192
    link_4 = module_0.Link(var_2, var_2, nofollow=var_2)
    var_3 = link_4.__repr__()
    assert (
        var_3
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    none_type_1 = None
    link_5 = module_0.Link(none_type_1)
    var_5 = link_5.__hash__()
    assert var_5 == 477042
    var_6 = var_5.__hash__()
    assert var_6 == 477042
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, none_type_2, nofollow=none_type_2)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_7 = module_0.Link(var_7, nofollow=link_6)
    none_type_3 = None
    bool_2 = True
    link_8 = module_0.Link(bool_2, nofollow=bool_2)
    var_8 = link_8.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_3)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_9 = module_0.Link(bytes_0, bytes_0)
    var_10 = link_8.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_11 = var_9.__repr__()
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    bool_3 = True
    link_11 = module_0.Link(bool_3)
    var_12 = link_11.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_12 = module_0.Link(float_1, fragment=var_12)
    link_13 = module_0.Link(float_1, fragment=link_11)
    none_type_4 = None
    link_14 = module_0.Link(none_type_4, nofollow=none_type_4)
    none_type_5 = None
    link_15 = module_0.Link(none_type_5, fragment=none_type_5, nofollow=none_type_5)
    bool_4 = True
    link_16 = module_0.Link(bool_4, nofollow=bool_4)
    link_15.__eq__(bool_4)


@pytest.mark.xfail(strict=True)
def test_case_1229():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_1 = module_0.Link(bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_3 = var_2.__eq__(int_0)
    var_4 = var_3.__repr__()
    var_5 = var_4.__eq__(int_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_6 = link_2.__hash__()
    assert var_6 == -8753497827991233192
    set_0 = {tuple_0, var_6, bool_2, bool_1}
    var_7 = var_6.__eq__(set_0)
    var_8 = link_2.__hash__()
    assert var_8 == -8753497827991233192
    var_9 = link_2.__hash__()
    assert var_9 == -8753497827991233192
    int_1 = 3199
    link_3 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_10 = link_3.__repr__()
    assert var_10 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_11 = var_10.__hash__()
    assert var_11 == -3203539594471298528
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_12 = link_5.__hash__()
    assert var_12 == -4606328870177462788
    var_13 = var_12.__hash__()
    assert var_13 == -2300485860963768837
    bytes_2 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_6 = module_0.Link(bytes_2, bytes_2)
    var_14 = link_6.__hash__()
    assert var_14 == 0
    var_15 = var_14.__repr__()
    assert var_15 == "0"
    bytes_3 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_7 = module_0.Link(bytes_3)
    var_16 = var_14.__eq__(bytes_2)
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_8 = module_0.Link(bool_3, fragment=tuple_1)
    var_17 = link_8.__hash__()
    assert var_17 == -8753497827991233192
    link_9 = module_0.Link(var_17, var_17, nofollow=var_17)
    var_18 = link_9.__hash__()
    assert var_18 == -1835968800350151339
    var_19 = var_18.__hash__()
    assert var_19 == -1835968800350151339
    none_type_1 = None
    bool_5 = True
    link_10 = module_0.Link(bool_5, nofollow=bool_5)
    var_20 = link_10.__hash__()
    assert var_20 == 0
    var_21 = var_20.__eq__(none_type_1)
    link_11 = module_0.Link(link_10)
    link_5.__eq__(var_9)


@pytest.mark.xfail(strict=True)
def test_case_1230():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_1 = module_0.Link(tuple_0, fragment=bool_0)
    var_0 = link_1.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__hash__()
    assert var_2 == -552935834187556073
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_3 = module_0.Link(bool_2, fragment=tuple_1)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_1, var_3, bool_3, bool_2}
    var_4 = var_3.__eq__(set_0)
    var_5 = link_3.__hash__()
    assert var_5 == -8753497827991233192
    none_type_2 = None
    link_4 = module_0.Link(none_type_2)
    var_6 = link_4.__hash__()
    assert var_6 == 477042
    var_7 = var_6.__hash__()
    assert var_7 == 477042
    none_type_3 = None
    link_5 = module_0.Link(none_type_3)
    var_8 = link_5.__hash__()
    assert var_8 == 477042
    var_9 = var_8.__hash__()
    assert var_9 == 477042
    bool_4 = False
    complex_0 = -2055.726254 - 2343.20671j
    link_6 = module_0.Link(var_9, fragment=bool_4, nofollow=complex_0)
    link_2.__eq__(bool_4)


@pytest.mark.xfail(strict=True)
def test_case_1231():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    link_1.__eq__(var_0)


@pytest.mark.xfail(strict=True)
def test_case_1232():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    object_0 = module_1.object()
    link_3 = module_0.Link(object_0, fragment=object_0)
    var_3 = link_3.__repr__()
    var_4 = link_3.__hash__()
    assert var_4 == 0
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_0)
    link_5 = module_0.Link(link_4)
    var_5 = link_5.__hash__()
    assert var_5 == -4606328870177462788
    bool_2 = True
    link_6 = module_0.Link(bool_2)
    var_6 = link_6.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_0)
    link_7 = module_0.Link(var_5)
    none_type_1 = None
    bool_3 = True
    link_8 = module_0.Link(bool_3, nofollow=bool_3)
    var_8 = link_8.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_1)
    link_9 = module_0.Link(link_8)
    none_type_2 = None
    bool_4 = True
    link_10 = module_0.Link(bool_4, nofollow=bool_4)
    var_10 = link_10.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_2)
    link_11 = module_0.Link(link_10)
    link_12 = module_0.Link(var_10, fragment=none_type_2)
    none_type_3 = None
    link_13 = module_0.Link(none_type_3, fragment=none_type_3)
    var_12 = link_13.__hash__()
    assert var_12 == 0
    var_13 = var_12.__hash__()
    assert var_13 == 0
    var_14 = link_13.__repr__()
    assert var_14 == "Link(url=None, text='', fragment=None, nofollow=False)"
    bool_5 = False
    link_14 = module_0.Link(bool_5)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_15 = module_0.Link(bytes_1, bytes_1)
    var_15 = link_15.__repr__()
    assert (
        var_15
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_6 = False
    link_16 = module_0.Link(bool_6)
    var_16 = var_15.__repr__()
    assert (
        var_16
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_17 = module_0.Link(var_15, var_16, nofollow=link_15)
    assert f"{type(link_17).__module__}.{type(link_17).__qualname__}" == "link.Link"
    object_1 = module_1.object()
    link_18 = module_0.Link(object_1, fragment=object_1)
    var_17 = link_18.__repr__()
    link_12.__eq__(var_11)


@pytest.mark.xfail(strict=True)
def test_case_1233():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_1 = var_0.__hash__()
    assert var_1 == -3203539594471298528
    int_1 = 401
    link_1 = module_0.Link(int_1, int_1)
    none_type_0 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_2.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    link_3 = module_0.Link(link_2)
    link_4 = module_0.Link(var_2, fragment=none_type_0)
    int_2 = 3199
    link_5 = module_0.Link(int_2, int_2, nofollow=int_2)
    var_4 = link_5.__hash__()
    assert var_4 == 3199
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, fragment=none_type_1)
    var_5 = link_6.__hash__()
    assert var_5 == 0
    var_6 = var_5.__hash__()
    assert var_6 == 0
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=None, text='', fragment=None, nofollow=False)"
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_7 = module_0.Link(bytes_0)
    link_8 = module_0.Link(link_7)
    none_type_2 = None
    bool_1 = True
    link_9 = module_0.Link(bool_1, nofollow=bool_1)
    var_8 = link_9.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_10 = link_9.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_11 = var_9.__repr__()
    int_3 = 2105
    none_type_3 = None
    link_11 = module_0.Link(int_3, none_type_3)
    var_12 = link_11.__repr__()
    assert var_12 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_12 = module_0.Link(var_12, int_3)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"
    var_13 = link_12.__hash__()
    assert var_13 == -1122340555193368221
    var_14 = var_13.__repr__()
    assert var_14 == "-1122340555193368221"
    link_9.__eq__(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1234():
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_0 = link_2.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_0, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_1 = var_0.__eq__(var_0)
    bool_0 = False
    link_4 = module_0.Link(bool_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_2 = link_5.__repr__()
    assert (
        var_2
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_6 = module_0.Link(bool_1)
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_7 = module_0.Link(var_2, var_3, nofollow=link_5)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1)
    var_4 = link_8.__hash__()
    assert var_4 == 477042
    var_5 = var_4.__hash__()
    assert var_5 == 477042
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, nofollow=none_type_2)
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_11 = module_0.Link(tuple_0, fragment=bool_2)
    var_6 = link_11.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__hash__()
    assert var_8 == -552935834187556073
    object_0 = module_1.object()
    link_12 = module_0.Link(object_0, fragment=object_0)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_13 = module_0.Link(bytes_2)
    link_14 = module_0.Link(link_13)
    var_9 = link_14.__hash__()
    assert var_9 == -4606328870177462788
    bool_4 = True
    link_15 = module_0.Link(bool_4)
    var_10 = link_15.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_11 = var_9.__eq__(bytes_2)
    none_type_4 = None
    link_16 = module_0.Link(none_type_4, fragment=none_type_4, nofollow=none_type_4)
    bool_5 = False
    link_17 = module_0.Link(bool_5)
    var_12 = link_17.__repr__()
    assert var_12 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_18 = module_0.Link(var_12, nofollow=var_12)
    var_13 = var_12.__hash__()
    assert var_13 == -3936900723769714473
    link_3.__eq__(var_10)


@pytest.mark.xfail(strict=True)
def test_case_1235():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    none_type_1 = None
    bool_1 = True
    link_2 = module_0.Link(bool_1, nofollow=bool_1)
    var_4 = link_2.__hash__()
    assert var_4 == 0
    var_5 = var_4.__eq__(none_type_1)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_1, bytes_1)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_4 = module_0.Link(var_6, nofollow=var_6)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    link_0.__eq__(var_3)


@pytest.mark.xfail(strict=True)
def test_case_1236():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_2 = link_1.__hash__()
    assert var_2 == 3199
    none_type_0 = None
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_3 = module_0.Link(bytes_0, bytes_0)
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_6 = link_2.__hash__()
    assert var_6 == 0
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_1, bytes_1)
    bool_3 = True
    link_5 = module_0.Link(bool_3)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_6 = module_0.Link(float_0, fragment=var_7)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_7 = module_0.Link(bool_4, fragment=tuple_1)
    var_9 = link_7.__hash__()
    assert var_9 == -8753497827991233192
    set_0 = {tuple_1, var_9, bool_5, bool_4}
    var_10 = var_9.__eq__(set_0)
    var_11 = link_7.__hash__()
    assert var_11 == -8753497827991233192
    var_12 = link_7.__hash__()
    assert var_12 == -8753497827991233192
    module_1.object(*var_8)


@pytest.mark.xfail(strict=True)
def test_case_1237():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_1.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__repr__()
    assert var_3 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, bool_2)
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_0)
    link_4 = module_0.Link(link_3)
    var_4 = link_4.__hash__()
    assert var_4 == -4606328870177462788
    bool_3 = True
    link_5 = module_0.Link(bool_3)
    var_5 = link_5.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_6 = var_4.__eq__(bytes_0)
    link_5.__eq__(link_4)


@pytest.mark.xfail(strict=True)
def test_case_1238():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    bool_1 = True
    link_1 = module_0.Link(bool_1, nofollow=bool_1)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_3 = module_0.Link(tuple_0, fragment=bool_2)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_0)
    var_7 = var_6.__repr__()
    none_type_1 = None
    bool_4 = True
    link_4 = module_0.Link(bool_4, nofollow=bool_4)
    var_8 = link_4.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(none_type_1)
    link_5 = module_0.Link(link_4)
    link_6 = module_0.Link(var_8, fragment=none_type_1)
    link_6.__eq__(bool_4)


@pytest.mark.xfail(strict=True)
def test_case_1239():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    bytes_1 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_1, nofollow=bytes_1)
    none_type_0 = None
    bool_0 = True
    link_2 = module_0.Link(bool_0, nofollow=bool_0)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    link_3 = module_0.Link(link_2)
    link_4 = module_0.Link(var_3, fragment=none_type_0)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_5 = module_0.Link(bytes_2)
    link_6 = module_0.Link(link_5)
    var_5 = link_6.__hash__()
    assert var_5 == -4606328870177462788
    var_6 = link_6.__repr__()
    assert (
        var_6
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    object_0 = module_1.object()
    link_7 = module_0.Link(object_0, fragment=object_0)
    dict_0 = {}
    link_6.__eq__(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1240():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_3 = module_0.Link(tuple_0, fragment=bool_1)
    var_1 = link_3.__hash__()
    assert var_1 == -5164621852614943975
    var_2 = var_1.__repr__()
    assert var_2 == "-5164621852614943975"
    var_3 = var_1.__eq__(tuple_0)
    var_4 = var_3.__repr__()
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_4 = module_0.Link(bool_3, fragment=tuple_1)
    var_5 = link_4.__hash__()
    assert var_5 == -8753497827991233192
    link_5 = module_0.Link(var_5, var_5, nofollow=var_5)
    var_6 = link_5.__repr__()
    assert (
        var_6
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    link_1.__eq__(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_1241():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_3 = module_0.Link(bool_1, fragment=tuple_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    int_0 = 1870
    link_4 = module_0.Link(int_0)
    dict_0 = {link_4: link_4}
    link_5 = module_0.Link(dict_0, fragment=dict_0)
    var_4 = link_5.__repr__()
    assert (
        var_4
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    int_1 = 3199
    link_6 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_6 = link_6.__hash__()
    assert var_6 == 3199
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_7 = link_8.__hash__()
    assert var_7 == -4606328870177462788
    bool_3 = False
    bool_4 = False
    tuple_1 = (bool_4,)
    link_9 = module_0.Link(bool_3, fragment=tuple_1)
    var_8 = link_9.__hash__()
    assert var_8 == -8753497827991233192
    set_0 = {tuple_1, var_8, bool_4, bool_3}
    var_9 = var_8.__eq__(set_0)
    var_10 = link_9.__hash__()
    assert var_10 == -8753497827991233192
    str_0 = "Dmfv; iJ001\n"
    none_type_0 = None
    link_10 = module_0.Link(str_0, fragment=none_type_0)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    bool_5 = False
    link_11 = module_0.Link(bool_5)
    int_2 = 2105
    none_type_1 = None
    link_12 = module_0.Link(int_2, none_type_1)
    var_11 = link_12.__repr__()
    assert var_11 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_13 = module_0.Link(var_11, int_2)
    var_12 = link_13.__hash__()
    assert var_12 == -1122340555193368221
    var_13 = var_12.__repr__()
    assert var_13 == "-1122340555193368221"
    float_0 = 5.0
    link_14 = module_0.Link(float_0)
    none_type_2 = None
    link_15 = module_0.Link(none_type_2, link_14)
    var_14 = link_15.__eq__(link_15)
    assert var_14 is True
    object_0 = module_1.object()
    link_16 = module_0.Link(object_0, fragment=object_0)
    link_17 = module_0.Link(object_0, none_type_2)
    link_6.__eq__(var_1)


@pytest.mark.xfail(strict=True)
def test_case_1242():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, bool_1)
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_2 = module_0.Link(bool_2, fragment=tuple_1)
    var_3 = link_2.__hash__()
    assert var_3 == -8753497827991233192
    link_3 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_3.__hash__()
    assert var_4 == -1835968800350151339
    var_5 = var_4.__hash__()
    assert var_5 == -1835968800350151339
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    bool_4 = True
    link_5 = module_0.Link(bool_4)
    var_6 = link_5.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_6 = module_0.Link(float_0, fragment=var_6)
    link_6.__eq__(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1243():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_0 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    var_1 = link_1.__hash__()
    assert var_1 == 0
    var_2 = var_1.__eq__(none_type_0)
    var_3 = var_1.__repr__()
    assert var_3 == "0"
    float_0 = 5.0
    link_2 = module_0.Link(float_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, link_2)
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_1 = b"-5164621852614943975"
    link_5 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_4 = link_5.__repr__()
    assert (
        var_4
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    float_1 = 5.0
    link_6 = module_0.Link(float_1)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, link_6)
    bytes_2 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_8 = module_0.Link(bytes_2, bytes_2)
    var_5 = link_8.__hash__()
    assert var_5 == 0
    var_6 = var_5.__repr__()
    assert var_6 == "0"
    var_7 = var_5.__hash__()
    assert var_7 == 0
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_3)
    link_10 = module_0.Link(link_9)
    var_8 = link_10.__hash__()
    assert var_8 == -4606328870177462788
    var_9 = var_8.__hash__()
    assert var_9 == -2300485860963768837
    bool_1 = True
    link_11 = module_0.Link(bool_1, bool_1, nofollow=bool_1)
    var_10 = link_11.__hash__()
    assert var_10 == 1
    bool_2 = False
    link_12 = module_0.Link(bool_2)
    var_11 = link_12.__hash__()
    assert var_11 == 0
    none_type_3 = None
    link_13 = module_0.Link(none_type_3, fragment=none_type_3)
    var_12 = link_13.__hash__()
    assert var_12 == 0
    var_13 = var_12.__hash__()
    assert var_13 == 0
    float_2 = 5.0
    link_14 = module_0.Link(float_2)
    none_type_4 = None
    link_15 = module_0.Link(none_type_4, link_14)
    var_14 = link_15.__eq__(link_15)
    assert var_14 is True
    var_15 = link_14.__hash__()
    assert var_15 == 5
    link_11.__eq__(var_3)


@pytest.mark.xfail(strict=True)
def test_case_1244():
    bool_0 = True
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1245():
    int_0 = 3502
    bool_0 = True
    link_0 = module_0.Link(bool_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1246():
    str_0 = "\\sX*Q;9>%"
    str_1 = "\x0bj"
    link_0 = module_0.Link(str_1, str_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1247():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = var_0.__repr__()
    assert var_2 == "-5164621852614943975"
    link_0.__eq__(var_0)


@pytest.mark.xfail(strict=True)
def test_case_1248():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    none_type_0 = None
    link_1 = module_0.Link(none_type_0)
    var_1 = link_1.__hash__()
    assert var_1 == 477042
    var_2 = var_1.__hash__()
    assert var_2 == 477042
    object_1 = module_1.object()
    none_type_1 = None
    link_2 = module_0.Link(object_1, fragment=none_type_1)
    var_3 = link_2.__hash__()
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_3 = module_0.Link(tuple_0, fragment=bool_0)
    var_4 = link_3.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    var_6 = var_4.__eq__(tuple_0)
    var_7 = var_6.__repr__()
    bool_2 = False
    bool_3 = False
    tuple_1 = (bool_3,)
    link_4 = module_0.Link(bool_2, fragment=tuple_1)
    var_8 = link_4.__hash__()
    assert var_8 == -8753497827991233192
    set_0 = {tuple_1, var_8, bool_3, bool_2}
    var_9 = var_8.__eq__(set_0)
    var_10 = link_4.__hash__()
    assert var_10 == -8753497827991233192
    var_11 = link_4.__hash__()
    assert var_11 == -8753497827991233192
    none_type_2 = None
    bool_4 = True
    link_5 = module_0.Link(bool_4, nofollow=bool_4)
    var_12 = link_5.__hash__()
    assert var_12 == 0
    var_13 = var_12.__eq__(none_type_2)
    none_type_3 = None
    bool_5 = True
    link_6 = module_0.Link(bool_5, nofollow=bool_5)
    var_14 = link_6.__hash__()
    assert var_14 == 0
    var_15 = var_14.__eq__(none_type_3)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_0, bytes_0)
    var_16 = link_6.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_1)
    link_9 = module_0.Link(link_8)
    var_17 = link_9.__hash__()
    assert var_17 == -4606328870177462788
    var_18 = link_9.__repr__()
    assert (
        var_18
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    bool_6 = False
    link_10 = module_0.Link(bool_6)
    link_7.__eq__(none_type_2)


@pytest.mark.xfail(strict=True)
def test_case_1249():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_5 = module_0.Link(tuple_0, fragment=bool_2)
    var_2 = link_5.__hash__()
    assert var_2 == -5164621852614943975
    var_3 = var_2.__repr__()
    assert var_3 == "-5164621852614943975"
    var_4 = var_2.__hash__()
    assert var_4 == -552935834187556073
    none_type_1 = None
    bool_4 = True
    link_6 = module_0.Link(bool_4, nofollow=bool_4)
    var_5 = link_6.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_1)
    bool_5 = False
    link_7 = module_0.Link(bool_5)
    var_7 = link_7.__hash__()
    assert var_7 == 0
    float_0 = 5.0
    link_8 = module_0.Link(float_0)
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, link_8)
    bool_6 = False
    link_10 = module_0.Link(bool_6)
    none_type_3 = None
    link_11 = module_0.Link(none_type_3, fragment=none_type_3)
    var_8 = link_11.__hash__()
    assert var_8 == 0
    var_9 = var_8.__hash__()
    assert var_9 == 0
    var_10 = var_8.__eq__(var_8)
    bool_7 = False
    bool_8 = False
    tuple_1 = (bool_8,)
    link_12 = module_0.Link(bool_7, fragment=tuple_1)
    var_11 = link_12.__hash__()
    assert var_11 == -8753497827991233192
    link_13 = module_0.Link(var_11, var_11, nofollow=var_11)
    var_12 = link_13.__repr__()
    assert (
        var_12
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bool_9 = True
    link_14 = module_0.Link(bool_9, nofollow=bool_9)
    var_13 = link_14.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_10 = True
    link_15 = module_0.Link(bool_10, nofollow=bool_10)
    link_10.__eq__(var_3)


@pytest.mark.xfail(strict=True)
def test_case_1250():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_0 = link_3.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_0 = True
    link_4 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    var_1 = link_4.__hash__()
    assert var_1 == 1
    link_1.__eq__(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1251():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    none_type_2 = None
    link_1 = module_0.Link(none_type_2, fragment=none_type_2)
    var_3 = link_1.__hash__()
    assert var_3 == 0
    var_4 = var_3.__hash__()
    assert var_4 == 0
    object_0 = module_1.object()
    none_type_3 = None
    link_2 = module_0.Link(object_0, fragment=none_type_3)
    var_5 = link_2.__hash__()
    link_0.__eq__(var_2)


@pytest.mark.xfail(strict=True)
def test_case_1252():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_1 = module_0.Link(var_0, nofollow=link_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    bool_0 = True
    link_3 = module_0.Link(bool_0)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_4 = module_0.Link(float_0, fragment=var_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_3 = link_5.__hash__()
    assert var_3 == 0
    var_4 = var_3.__repr__()
    assert var_4 == "0"
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_6 = module_0.Link(bytes_2)
    var_5 = var_3.__eq__(bytes_1)
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, nofollow=none_type_1)
    var_6 = link_7.__repr__()
    assert var_6 == "Link(url=None, text='', fragment='', nofollow=None)"
    bool_1 = False
    link_8 = module_0.Link(bool_1)
    var_7 = link_8.__hash__()
    assert var_7 == 0
    bytes_3 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_3)
    link_10 = module_0.Link(link_9)
    var_8 = link_10.__hash__()
    assert var_8 == -4606328870177462788
    object_0 = module_1.object()
    none_type_2 = None
    link_11 = module_0.Link(none_type_2, fragment=none_type_2)
    var_9 = link_11.__repr__()
    assert var_9 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_10 = var_9.__hash__()
    assert var_10 == 7957018345684386684
    var_11 = var_10.__repr__()
    assert var_11 == "7957018345684386684"
    link_12 = module_0.Link(object_0, var_11)
    var_12 = link_12.__repr__()
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_13 = module_0.Link(tuple_0, fragment=bool_2)
    var_13 = link_13.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__eq__(tuple_0)
    int_0 = 3199
    link_14 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_15 = module_0.Link(bytes_4, bytes_4)
    bool_4 = True
    link_16 = module_0.Link(bool_4)
    var_16 = link_16.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 3106.326
    link_17 = module_0.Link(float_1, fragment=var_16)
    link_18 = module_0.Link(float_1, fragment=link_16)
    link_18.__eq__(var_12)


@pytest.mark.xfail(strict=True)
def test_case_1253():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_0.__hash__()
    assert var_1 == -8753497827991233192
    link_0.__eq__(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1254():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = link_0.__repr__()
    assert (
        var_1
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_1, bytes_1)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__repr__()
    assert var_3 == "0"
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_2)
    link_3 = module_0.Link(link_2)
    var_4 = link_3.__hash__()
    assert var_4 == -4606328870177462788
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0)
    var_5 = link_4.__hash__()
    assert var_5 == 0
    var_6 = var_5.__hash__()
    assert var_6 == 0
    var_7 = var_5.__eq__(var_5)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_0 = False
    link_6 = module_0.Link(bool_0)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_7 = module_0.Link(var_8, nofollow=var_8)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    var_9 = var_8.__hash__()
    assert var_9 == -3936900723769714473
    link_1.__eq__(var_2)


@pytest.mark.xfail(strict=True)
def test_case_1255():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=True)"
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_2 = module_0.Link(var_1, nofollow=link_1)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_2 = link_2.__hash__()
    assert var_2 == 4128530656735687579
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_3 = link_3.__hash__()
    assert var_3 == 0
    bool_1 = True
    link_4 = module_0.Link(bool_1)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_5 = module_0.Link(tuple_0, fragment=bool_2)
    var_5 = link_5.__hash__()
    assert var_5 == -5164621852614943975
    var_6 = var_5.__repr__()
    assert var_6 == "-5164621852614943975"
    var_7 = var_5.__eq__(tuple_0)
    bool_4 = True
    dict_0 = {}
    none_type_1 = None
    float_0 = 2515.28653
    link_6 = module_0.Link(dict_0, none_type_1, float_0, none_type_1)
    var_8 = link_6.__repr__()
    var_9 = var_8.__eq__(bool_4)
    var_10 = var_9.__hash__()
    var_11 = var_10.__repr__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    var_12 = link_8.__hash__()
    assert var_12 == -4606328870177462788
    bool_5 = True
    link_9 = module_0.Link(bool_5)
    var_13 = link_9.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_14 = var_12.__eq__(bytes_1)
    link_10 = module_0.Link(var_14, var_14)
    link_8.__eq__(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1256():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    bool_1 = True
    link_3 = module_0.Link(bool_1)
    var_1 = link_3.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_4 = module_0.Link(float_0, fragment=var_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    int_0 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_5 = module_0.Link(bytes_1)
    var_3 = link_5.__repr__()
    assert var_3 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_4 = var_3.__eq__(int_0)
    var_5 = var_4.__repr__()
    link_3.__eq__(var_2)


@pytest.mark.xfail(strict=True)
def test_case_1257():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_0.__hash__()
    assert var_1 == -8753497827991233192
    bool_2 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_2 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_3 = var_2.__eq__(bool_2)
    var_4 = var_3.__hash__()
    var_5 = var_4.__repr__()
    bool_3 = True
    bool_4 = False
    tuple_1 = (bool_3, bool_4)
    link_3 = module_0.Link(tuple_1, fragment=bool_3)
    var_6 = link_3.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = link_3.__repr__()
    assert var_8 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    var_9 = link_4.__hash__()
    assert var_9 == 0
    bool_5 = True
    link_5 = module_0.Link(bool_5, nofollow=bool_5)
    int_0 = 1870
    link_6 = module_0.Link(int_0)
    dict_1 = {link_6: link_6}
    link_7 = module_0.Link(dict_1, fragment=dict_1)
    var_10 = link_7.__repr__()
    assert (
        var_10
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_11 = var_10.__repr__()
    assert (
        var_11
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    link_7.__eq__(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1258():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    link_0 = module_0.Link(list_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__hash__()


@pytest.mark.xfail(strict=True)
def test_case_1259():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=None, text='', fragment=None, nofollow=False)"
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_1 = module_0.Link(bytes_0)
    link_2 = module_0.Link(link_1)
    var_3 = link_2.__hash__()
    assert var_3 == -4606328870177462788
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(url=Link(url=b\"\\xb3\\xa6L'#\\xe0\\x91\\t\", text='', fragment='', nofollow=False), text='', fragment='', nofollow=False)"
    )
    bool_0 = True
    bool_1 = True
    bytes_1 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_3 = module_0.Link(bytes_1)
    var_5 = link_3.__hash__()
    assert var_5 == -6712542186422229073
    var_6 = var_5.__repr__()
    assert var_6 == "-6712542186422229073"
    var_7 = var_6.__eq__(bool_1)
    var_8 = var_7.__hash__()
    var_9 = var_8.__eq__(bool_0)
    int_0 = 3199
    link_4 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_10 = link_4.__repr__()
    assert var_10 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_11 = var_10.__hash__()
    assert var_11 == -3203539594471298528
    link_0.__eq__(var_4)


@pytest.mark.xfail(strict=True)
def test_case_1260():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    link_4 = module_0.Link(link_0)
    link_4.__eq__(link_2)


@pytest.mark.xfail(strict=True)
def test_case_1261():
    str_0 = "Dmfv; iJ001\n"
    none_type_0 = None
    link_0 = module_0.Link(str_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_1 = None
    bool_0 = True
    link_1 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_3 = var_1.__repr__()
    none_type_2 = None
    link_3 = module_0.Link(none_type_2, nofollow=none_type_2)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=None, text='', fragment='', nofollow=None)"
    int_0 = 401
    link_4 = module_0.Link(int_0, int_0)
    float_0 = 5.0
    link_5 = module_0.Link(float_0)
    var_5 = link_5.__hash__()
    assert var_5 == 5
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_6 = module_0.Link(bool_1, fragment=tuple_0)
    var_6 = link_6.__hash__()
    assert var_6 == -8753497827991233192
    set_0 = {tuple_0, var_6, bool_2, bool_1}
    var_7 = var_6.__eq__(set_0)
    var_8 = link_6.__hash__()
    assert var_8 == -8753497827991233192
    var_9 = link_6.__hash__()
    assert var_9 == -8753497827991233192
    none_type_3 = None
    bool_3 = True
    link_7 = module_0.Link(bool_3, nofollow=bool_3)
    var_10 = link_7.__hash__()
    assert var_10 == 0
    var_11 = var_10.__eq__(none_type_3)
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_8 = module_0.Link(bool_4, fragment=tuple_1)
    var_12 = link_8.__hash__()
    assert var_12 == -8753497827991233192
    set_1 = {tuple_1, var_12, bool_5, bool_4}
    var_13 = var_12.__eq__(set_1)
    var_14 = link_8.__hash__()
    assert var_14 == -8753497827991233192
    int_1 = 36
    bytes_1 = b"\xeb\xdc\xa3"
    link_9 = module_0.Link(bytes_1)
    var_15 = link_9.__repr__()
    assert (
        var_15 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    )
    var_16 = var_15.__eq__(int_1)
    var_17 = var_16.__repr__()
    var_18 = var_17.__eq__(int_1)
    bytes_2 = b"-5164621852614943975"
    link_10 = module_0.Link(bytes_2, nofollow=bytes_2)
    var_19 = link_10.__hash__()
    assert var_19 == 0
    list_0 = [link_2]
    link_5.__eq__(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1262():
    int_0 = 3199
    link_0 = module_0.Link(int_0, int_0, nofollow=int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_1 = var_0.__hash__()
    assert var_1 == -3203539594471298528
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__repr__()
    assert var_3 == "0"
    var_4 = var_2.__hash__()
    assert var_4 == 0
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_5 = var_3.__repr__()
    assert var_5 == "'0'"
    link_3 = module_0.Link(bool_0, var_4, var_2)
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_4 = module_0.Link(bytes_1)
    link_5 = module_0.Link(link_4)
    var_6 = link_5.__hash__()
    assert var_6 == -4606328870177462788
    int_1 = 3199
    link_6 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_7 = link_6.__repr__()
    assert var_7 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_7 = module_0.Link(var_7)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_2, bytes_2)
    bool_1 = True
    link_9 = module_0.Link(bool_1)
    var_8 = link_9.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_10 = module_0.Link(float_0, fragment=var_8)
    var_9 = link_9.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    link_0.__eq__(var_0)


@pytest.mark.xfail(strict=True)
def test_case_1263():
    float_0 = 5.0
    link_0 = module_0.Link(float_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, link_0)
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_0 = link_3.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    int_1 = 3199
    link_4 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    none_type_1 = None
    bool_0 = True
    link_5 = module_0.Link(bool_0, nofollow=bool_0)
    var_2 = link_5.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_1)
    link_6 = module_0.Link(link_5)
    none_type_2 = None
    link_7 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    int_2 = 1870
    link_8 = module_0.Link(int_2)
    dict_0 = {link_8: link_8}
    link_9 = module_0.Link(dict_0, fragment=dict_0)
    var_4 = link_9.__repr__()
    assert (
        var_4
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_6 = var_4.__eq__(var_4)
    var_7 = var_6.__hash__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_10 = module_0.Link(bytes_1)
    link_11 = module_0.Link(link_10)
    var_8 = link_11.__hash__()
    assert var_8 == -4606328870177462788
    bool_1 = True
    link_12 = module_0.Link(bool_1)
    var_9 = link_12.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_10 = var_8.__eq__(bytes_1)
    float_1 = 5.0
    link_13 = module_0.Link(float_1)
    var_11 = link_13.__hash__()
    assert var_11 == 5
    none_type_3 = None
    link_14 = module_0.Link(none_type_3, fragment=none_type_3)
    var_12 = link_14.__repr__()
    assert var_12 == "Link(url=None, text='', fragment=None, nofollow=False)"
    link_15 = module_0.Link(var_12)
    assert f"{type(link_15).__module__}.{type(link_15).__qualname__}" == "link.Link"
    var_13 = link_15.__repr__()
    assert (
        var_13
        == "Link(url=b\"Link(url=None, text='', fragment=None, nofollow=False)\", text='', fragment='', nofollow=False)"
    )
    bytes_2 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_16 = module_0.Link(bytes_2)
    none_type_4 = None
    bool_2 = True
    link_17 = module_0.Link(bool_2, nofollow=bool_2)
    var_14 = link_17.__hash__()
    assert var_14 == 0
    var_15 = var_14.__eq__(none_type_4)
    var_16 = link_17.__hash__()
    assert var_16 == 0
    link_7.__eq__(var_2)


@pytest.mark.xfail(strict=True)
def test_case_1264():
    bool_0 = True
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, object_0, object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1265():
    bool_0 = True
    bool_1 = True
    bytes_0 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -6712542186422229073
    var_1 = var_0.__repr__()
    assert var_1 == "-6712542186422229073"
    var_2 = var_1.__eq__(bool_1)
    var_3 = var_2.__hash__()
    var_4 = var_3.__eq__(bool_0)
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_5 = link_1.__repr__()
    assert var_5 == "Link(url=None, text='', fragment=None, nofollow=False)"
    link_2 = module_0.Link(var_5)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_6 = link_2.__repr__()
    assert (
        var_6
        == "Link(url=b\"Link(url=None, text='', fragment=None, nofollow=False)\", text='', fragment='', nofollow=False)"
    )
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    link_4 = module_0.Link(link_3)
    var_7 = link_4.__hash__()
    assert var_7 == -4606328870177462788
    bool_2 = True
    link_5 = module_0.Link(bool_2)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_9 = var_7.__eq__(bytes_1)
    var_10 = var_9.__hash__()
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_7 = module_0.Link(var_11, nofollow=link_6)
    var_12 = link_7.__hash__()
    assert var_12 == 4128530656735687579
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_8 = module_0.Link(bytes_2)
    link_9 = module_0.Link(link_8)
    var_13 = link_9.__hash__()
    assert var_13 == -4606328870177462788
    none_type_2 = None
    bool_3 = True
    link_10 = module_0.Link(bool_3, nofollow=bool_3)
    var_14 = link_10.__hash__()
    assert var_14 == 0
    var_15 = var_14.__eq__(none_type_2)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_11 = module_0.Link(bytes_3, bytes_3)
    var_16 = link_10.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_17 = link_10.__hash__()
    assert var_17 == 0
    link_6.__eq__(bytes_1)


@pytest.mark.xfail(strict=True)
def test_case_1266():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    bool_2 = True
    bool_3 = True
    bytes_0 = b"\x8e\x8f\xe6\x02.\xbb]\x9b\x0b\xa5\x0bN\x8c\xaf\xa7B"
    link_2 = module_0.Link(bytes_0)
    var_1 = link_2.__hash__()
    assert var_1 == -6712542186422229073
    var_2 = var_1.__repr__()
    assert var_2 == "-6712542186422229073"
    var_3 = var_2.__eq__(bool_3)
    var_4 = var_3.__hash__()
    var_5 = var_4.__eq__(bool_2)
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_3 = module_0.Link(bool_4, fragment=tuple_1)
    var_6 = link_3.__hash__()
    assert var_6 == -8753497827991233192
    link_4 = module_0.Link(var_6, var_6, nofollow=var_6)
    var_7 = link_4.__hash__()
    assert var_7 == -1835968800350151339
    var_8 = var_7.__hash__()
    assert var_8 == -1835968800350151339
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_9 = link_5.__repr__()
    assert var_9 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_6 = module_0.Link(var_9, nofollow=link_5)
    assert f"{type(link_6).__module__}.{type(link_6).__qualname__}" == "link.Link"
    var_10 = link_6.__hash__()
    assert var_10 == 4128530656735687579
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_7 = module_0.Link(bytes_1)
    link_8 = module_0.Link(link_7)
    bool_6 = True
    link_9 = module_0.Link(bool_6, nofollow=bool_6)
    link_10 = module_0.Link(link_9, link_9)
    bool_7 = False
    bool_8 = False
    tuple_2 = (bool_8,)
    link_11 = module_0.Link(bool_7, fragment=tuple_2)
    var_11 = link_11.__hash__()
    assert var_11 == -8753497827991233192
    link_12 = module_0.Link(var_11, var_11, nofollow=var_11)
    var_12 = link_12.__repr__()
    assert (
        var_12
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    var_13 = link_11.__repr__()
    assert var_13 == "Link(url=False, text='', fragment=(False,), nofollow=False)"
    link_3.__eq__(link_8)


@pytest.mark.xfail(strict=True)
def test_case_1267():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    link_0.__eq__(var_0)


@pytest.mark.xfail(strict=True)
def test_case_1268():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    var_1 = var_0.__hash__()
    assert var_1 == -2300485860963768837
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_3 = var_0.__repr__()
    assert var_3 == "-4606328870177462788"
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_3 = module_0.Link(list_0, str_0)
    link_4 = module_0.Link(link_3)
    none_type_0 = None
    link_5 = module_0.Link(none_type_0, list_0)
    link_3.__eq__(var_1)


@pytest.mark.xfail(strict=True)
def test_case_1269():
    list_0 = []
    none_type_0 = None
    link_0 = module_0.Link(list_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__hash__()


def test_case_1270():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1271():
    int_0 = 401
    link_0 = module_0.Link(int_0, int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_1 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_1.__hash__()
    assert var_0 == -8753497827991233192
    bool_2 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_2 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_2 = var_1.__eq__(bool_2)
    var_3 = var_2.__hash__()
    var_4 = var_3.__repr__()
    bool_3 = False
    none_type_1 = None
    link_3 = module_0.Link(bool_3, fragment=none_type_1)
    var_5 = link_3.__repr__()
    assert var_5 == "Link(url=False, text='', fragment=None, nofollow=False)"
    none_type_2 = None
    link_4 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    none_type_3 = None
    bool_4 = True
    link_5 = module_0.Link(bool_4, nofollow=bool_4)
    var_6 = link_5.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_3)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    var_8 = link_5.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_7 = module_0.Link(link_5)
    bytes_1 = b"-5164621852614943975"
    link_8 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_9 = link_8.__repr__()
    assert (
        var_9
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    none_type_4 = None
    link_9 = module_0.Link(none_type_4, fragment=none_type_4)
    var_10 = link_9.__repr__()
    assert var_10 == "Link(url=None, text='', fragment=None, nofollow=False)"
    link_10 = module_0.Link(var_10)
    assert f"{type(link_10).__module__}.{type(link_10).__qualname__}" == "link.Link"
    var_11 = link_10.__repr__()
    assert (
        var_11
        == "Link(url=b\"Link(url=None, text='', fragment=None, nofollow=False)\", text='', fragment='', nofollow=False)"
    )
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_11 = module_0.Link(bytes_2)
    link_12 = module_0.Link(link_11)
    var_12 = link_12.__hash__()
    assert var_12 == -4606328870177462788
    bool_5 = True
    bool_6 = False
    tuple_1 = (bool_5, bool_6)
    link_13 = module_0.Link(tuple_1, fragment=bool_5)
    var_13 = link_13.__hash__()
    assert var_13 == -5164621852614943975
    var_14 = var_13.__repr__()
    assert var_14 == "-5164621852614943975"
    var_15 = var_13.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_13.__hash__()
    assert var_16 == -552935834187556073
    link_3.__eq__(bool_1)


@pytest.mark.xfail(strict=True)
def test_case_1272():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    var_1 = link_1.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    link_1.__eq__(var_0)


@pytest.mark.xfail(strict=True)
def test_case_1273():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_1 = link_2.__hash__()
    assert var_1 == 0
    var_2 = var_1.__repr__()
    assert var_2 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_3 = module_0.Link(bytes_1)
    var_3 = var_1.__eq__(bytes_0)
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_4 = module_0.Link(list_0, str_0)
    link_5 = module_0.Link(link_4)
    link_5.__hash__()


@pytest.mark.xfail(strict=True)
def test_case_1274():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = False
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_1 = var_0.__hash__()
    assert var_1 == -3936900723769714473
    bytes_0 = b"-5164621852614943975"
    link_3 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_2 = link_3.__repr__()
    assert (
        var_2
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_4 = module_0.Link(list_0, str_0)
    link_5 = module_0.Link(link_4)
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_3 = link_6.__repr__()
    assert var_3 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_7 = module_0.Link(var_3, nofollow=link_6)
    var_4 = link_7.__hash__()
    assert var_4 == 4128530656735687579
    link_7.__eq__(var_1)


@pytest.mark.xfail(strict=True)
def test_case_1275():
    str_0 = "Dmfv; iJ001\n"
    none_type_0 = None
    link_0 = module_0.Link(str_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    int_0 = 2105
    none_type_1 = None
    link_1 = module_0.Link(int_0, none_type_1)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_2 = module_0.Link(var_0, int_0)
    var_1 = link_2.__hash__()
    assert var_1 == -1122340555193368221
    var_2 = var_1.__repr__()
    assert var_2 == "-1122340555193368221"
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_3 = module_0.Link(bool_0, fragment=tuple_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    float_0 = 5.0
    link_4 = module_0.Link(float_0)
    none_type_2 = None
    link_5 = module_0.Link(none_type_2, link_4)
    int_1 = 3199
    link_6 = module_0.Link(int_1, int_1, nofollow=int_1)
    bytes_0 = b"-5164621852614943975"
    link_7 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_4 = link_7.__repr__()
    assert (
        var_4
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_8 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_8.__hash__()
    assert var_5 == 0
    var_6 = var_5.__repr__()
    assert var_6 == "0"
    var_7 = var_5.__hash__()
    assert var_7 == 0
    bool_2 = False
    link_9 = module_0.Link(bool_2)
    var_8 = var_6.__repr__()
    assert var_8 == "'0'"
    link_10 = module_0.Link(bool_2, var_7, var_5)
    link_3.__eq__(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1276():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"-5164621852614943975"
    link_1 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_1 = False
    link_3 = module_0.Link(bool_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_4 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    var_3 = var_2.__hash__()
    assert var_3 == -3936900723769714473
    int_0 = 3199
    link_5 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_4 = link_5.__repr__()
    assert var_4 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_1 = b"-5164621852614943975"
    link_6 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_5 = var_4.__eq__(int_0)
    bool_2 = True
    bool_3 = False
    tuple_0 = (bool_2, bool_3)
    link_7 = module_0.Link(tuple_0, fragment=bool_2)
    var_6 = link_7.__hash__()
    assert var_6 == -5164621852614943975
    var_7 = var_6.__repr__()
    assert var_7 == "-5164621852614943975"
    var_8 = var_6.__eq__(tuple_0)
    int_1 = 3199
    link_8 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_9 = link_8.__hash__()
    assert var_9 == 3199
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_9 = module_0.Link(list_0, str_0)
    link_10 = module_0.Link(link_9)
    none_type_1 = None
    link_11 = module_0.Link(none_type_1, list_0)
    none_type_2 = None
    link_12 = module_0.Link(none_type_2, fragment=none_type_2)
    var_10 = link_12.__hash__()
    assert var_10 == 0
    var_11 = var_10.__hash__()
    assert var_11 == 0
    link_0.__eq__(var_2)


@pytest.mark.xfail(strict=True)
def test_case_1277():
    complex_0 = -1110.69549 - 569.4j
    link_0 = module_0.Link(complex_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xe32\x8d\x1e"
    none_type_0 = None
    link_1 = module_0.Link(link_0, bytes_0, nofollow=none_type_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_2 = var_1.__repr__()
    assert (
        var_2
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    var_3 = link_2.__hash__()
    assert var_3 == 477042
    int_0 = 3199
    link_3 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_4 = link_3.__repr__()
    assert var_4 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_5 = var_4.__hash__()
    assert var_5 == -3203539594471298528
    int_1 = 3199
    link_4 = module_0.Link(int_1, int_1, nofollow=int_1)
    var_6 = link_4.__repr__()
    assert var_6 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_5 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_5.__hash__()
    assert var_7 == 0
    var_8 = var_7.__repr__()
    assert var_8 == "0"
    object_0 = module_1.object()
    none_type_2 = None
    link_6 = module_0.Link(none_type_2, fragment=none_type_2)
    var_9 = link_6.__repr__()
    assert var_9 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_10 = var_9.__hash__()
    assert var_10 == 7957018345684386684
    var_11 = var_10.__repr__()
    assert var_11 == "7957018345684386684"
    link_7 = module_0.Link(object_0, var_11)
    var_12 = link_7.__repr__()
    link_0.__eq__(var_10)


@pytest.mark.xfail(strict=True)
def test_case_1278():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    link_3 = module_0.Link(var_0)
    none_type_0 = None
    link_4 = module_0.Link(none_type_0, fragment=none_type_0)
    var_3 = link_4.__hash__()
    assert var_3 == 0
    var_4 = var_3.__hash__()
    assert var_4 == 0
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=None, text='', fragment=None, nofollow=False)"
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_5 = module_0.Link(bool_1, fragment=tuple_0)
    var_6 = link_5.__hash__()
    assert var_6 == -8753497827991233192
    link_6 = module_0.Link(var_6, var_6, nofollow=var_6)
    bool_3 = False
    bytes_1 = b"]\xfe"
    int_0 = 3199
    tuple_1 = (bool_3, bytes_1, int_0, int_0)
    link_7 = module_0.Link(tuple_1, fragment=bytes_1)
    link_8 = module_0.Link(link_7, nofollow=bool_3)
    var_7 = link_8.__hash__()
    assert var_7 == 3939945378486638560
    link_9 = module_0.Link(var_7, bytes_1, var_7)
    bool_4 = True
    link_10 = module_0.Link(bool_4)
    var_8 = link_10.__repr__()
    assert var_8 == "Link(url=True, text='', fragment='', nofollow=False)"
    link_9.__eq__(var_3)


@pytest.mark.xfail(strict=True)
def test_case_1279():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bool_1 = False
    link_1 = module_0.Link(bool_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_3 = var_1.__repr__()
    bool_2 = True
    link_2 = module_0.Link(bool_2, nofollow=bool_2)
    var_4 = link_2.__eq__(link_2)
    assert var_4 is True
    float_0 = 5.0
    link_3 = module_0.Link(float_0)
    none_type_1 = None
    link_4 = module_0.Link(none_type_1, link_3)
    var_5 = link_4.__eq__(link_4)
    assert var_5 is True
    var_6 = link_3.__hash__()
    assert var_6 == 5
    list_0 = []
    link_5 = module_0.Link(list_0)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=[], text='', fragment='', nofollow=False)"
    int_0 = 3199
    link_6 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_8 = link_6.__repr__()
    assert var_8 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    bytes_0 = b"-5164621852614943975"
    link_7 = module_0.Link(bytes_0, nofollow=bytes_0)
    var_9 = var_8.__eq__(int_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_8 = module_0.Link(bytes_1, bytes_1)
    bool_3 = False
    link_9 = module_0.Link(bool_3)
    var_10 = link_9.__repr__()
    assert var_10 == "Link(url=False, text='', fragment='', nofollow=False)"
    none_type_2 = None
    link_10 = module_0.Link(none_type_2, fragment=none_type_2, nofollow=none_type_2)
    bool_4 = True
    bool_5 = False
    tuple_0 = (bool_4, bool_5)
    link_11 = module_0.Link(tuple_0, fragment=bool_4)
    var_11 = link_11.__hash__()
    assert var_11 == -5164621852614943975
    var_12 = var_11.__repr__()
    assert var_12 == "-5164621852614943975"
    var_13 = var_11.__hash__()
    assert var_13 == -552935834187556073
    bool_6 = True
    bool_7 = False
    tuple_1 = (bool_6, bool_7)
    link_12 = module_0.Link(tuple_1, fragment=bool_6)
    var_14 = link_12.__hash__()
    assert var_14 == -5164621852614943975
    var_15 = var_14.__repr__()
    assert var_15 == "-5164621852614943975"
    var_16 = var_14.__repr__()
    assert var_16 == "-5164621852614943975"
    none_type_3 = None
    link_13 = module_0.Link(none_type_3, bool_7)
    bool_8 = False
    bool_9 = False
    tuple_2 = (bool_9,)
    link_14 = module_0.Link(bool_8, fragment=tuple_2)
    var_17 = link_14.__hash__()
    assert var_17 == -8753497827991233192
    link_15 = module_0.Link(var_17, var_17, nofollow=var_17)
    var_18 = link_15.__hash__()
    assert var_18 == -1835968800350151339
    var_19 = var_18.__hash__()
    assert var_19 == -1835968800350151339
    link_8.__eq__(var_9)


@pytest.mark.xfail(strict=True)
def test_case_1280():
    set_0 = set()
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1281():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    link_0 = module_0.Link(object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    var_1 = var_0.__repr__()
    var_2 = var_1.__hash__()
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_3 = module_0.Link(float_0, fragment=var_3)
    var_4 = link_2.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    complex_0 = -1110.69549 - 569.4j
    link_4 = module_0.Link(complex_0)
    bytes_1 = b"\xe32\x8d\x1e"
    none_type_0 = None
    link_5 = module_0.Link(link_4, bytes_1, nofollow=none_type_0)
    var_5 = link_5.__repr__()
    assert (
        var_5
        == "Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\xe32\\x8d\\x1e', fragment='', nofollow=None)"
    )
    var_6 = var_5.__repr__()
    assert (
        var_6
        == "\"Link(url=Link(url=(-1110.69549-569.4j), text='', fragment='', nofollow=False), text=b'\\\\xe32\\\\x8d\\\\x1e', fragment='', nofollow=None)\""
    )
    var_7 = var_6.__repr__()
    assert (
        var_7
        == "'\"Link(url=Link(url=(-1110.69549-569.4j), text=\\'\\', fragment=\\'\\', nofollow=False), text=b\\'\\\\\\\\xe32\\\\\\\\x8d\\\\\\\\x1e\\', fragment=\\'\\', nofollow=None)\"'"
    )
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_6 = module_0.Link(tuple_0, fragment=bool_1)
    var_8 = link_6.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = link_6.__repr__()
    assert var_10 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    float_1 = 5.0
    link_7 = module_0.Link(float_1)
    none_type_1 = None
    link_8 = module_0.Link(none_type_1, link_7)
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, none_type_2)
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, fragment=none_type_3, nofollow=none_type_3)
    var_11 = link_10.__hash__()
    assert var_11 == 477042
    bytes_2 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_11 = module_0.Link(bytes_2, bytes_2)
    var_12 = link_11.__hash__()
    assert var_12 == 0
    var_13 = var_12.__repr__()
    assert var_13 == "0"
    int_0 = 3199
    link_12 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_14 = link_12.__repr__()
    assert var_14 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_13 = module_0.Link(var_14)
    assert f"{type(link_13).__module__}.{type(link_13).__qualname__}" == "link.Link"
    link_5.__eq__(var_9)


@pytest.mark.xfail(strict=True)
def test_case_1282():
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(none_type_1)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_1 = var_0.__hash__()
    assert var_1 == 2234852059487564994
    var_2 = var_1.__eq__(none_type_0)
    link_1 = module_0.Link(var_0, var_1, var_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    link_2 = module_0.Link(none_type_0, var_2, link_0)
    link_2.__eq__(var_0)


@pytest.mark.xfail(strict=True)
def test_case_1283():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    none_type_0 = None
    bool_2 = True
    link_3 = module_0.Link(bool_2, nofollow=bool_2)
    var_2 = link_3.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    var_4 = var_2.__repr__()
    assert var_4 == "0"
    bool_3 = True
    link_4 = module_0.Link(bool_3)
    var_5 = link_4.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=False)"
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_5 = module_0.Link(list_0, str_0)
    link_6 = module_0.Link(link_5)
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, list_0)
    bool_4 = False
    none_type_2 = None
    link_8 = module_0.Link(bool_4, fragment=none_type_2)
    var_6 = link_8.__repr__()
    assert var_6 == "Link(url=False, text='', fragment=None, nofollow=False)"
    bool_5 = False
    link_9 = module_0.Link(bool_5)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_10 = module_0.Link(bytes_1, bytes_1)
    var_7 = link_10.__repr__()
    assert (
        var_7
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_6 = False
    link_11 = module_0.Link(bool_6)
    var_8 = var_7.__repr__()
    assert (
        var_8
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_12 = module_0.Link(var_7, var_8, nofollow=link_10)
    assert f"{type(link_12).__module__}.{type(link_12).__qualname__}" == "link.Link"
    bool_7 = False
    bool_8 = False
    tuple_0 = (bool_8,)
    link_13 = module_0.Link(bool_7, fragment=tuple_0)
    var_9 = link_13.__hash__()
    assert var_9 == -8753497827991233192
    link_14 = module_0.Link(var_9, var_9, nofollow=var_9)
    var_10 = link_13.__hash__()
    assert var_10 == -8753497827991233192
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_15 = module_0.Link(bytes_2)
    link_16 = module_0.Link(link_15)
    var_11 = link_16.__hash__()
    assert var_11 == -4606328870177462788
    bool_9 = True
    link_17 = module_0.Link(bool_9)
    var_12 = link_17.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_13 = var_11.__eq__(bytes_2)
    link_18 = module_0.Link(var_13, var_13)
    complex_0 = 2717.25865 + 279.6823j
    bytes_3 = b"xC(\xd2O"
    set_0 = {bytes_3, bytes_3, bytes_3}
    none_type_3 = None
    link_19 = module_0.Link(set_0, none_type_3)
    var_14 = link_19.__repr__()
    assert var_14 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_15 = var_14.__hash__()
    assert var_15 == -2938861455928792573
    var_16 = var_15.__hash__()
    assert var_16 == -633018446715098622
    var_17 = var_16.__eq__(complex_0)
    link_18.__eq__(var_12)


@pytest.mark.xfail(strict=True)
def test_case_1284():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    float_0 = 5.0
    link_1 = module_0.Link(float_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, link_1)
    var_0 = link_2.__eq__(link_2)
    assert var_0 is True
    var_1 = link_1.__hash__()
    assert var_1 == 5
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, nofollow=none_type_1)
    var_2 = link_3.__repr__()
    assert var_2 == "Link(url=None, text='', fragment='', nofollow=None)"
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_4 = module_0.Link(bool_0, fragment=tuple_0)
    var_3 = link_4.__hash__()
    assert var_3 == -8753497827991233192
    set_0 = {tuple_0, var_3, bool_1, bool_0}
    var_4 = var_3.__eq__(set_0)
    var_5 = link_4.__hash__()
    assert var_5 == -8753497827991233192
    var_6 = link_4.__hash__()
    assert var_6 == -8753497827991233192
    bool_2 = True
    bool_3 = False
    tuple_1 = (bool_2, bool_3)
    link_5 = module_0.Link(tuple_1, fragment=bool_2)
    var_7 = link_5.__hash__()
    assert var_7 == -5164621852614943975
    var_8 = var_7.__repr__()
    assert var_8 == "-5164621852614943975"
    var_9 = var_7.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_7.__hash__()
    assert var_10 == -552935834187556073
    int_0 = 2105
    none_type_2 = None
    link_6 = module_0.Link(int_0, none_type_2)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_7 = module_0.Link(var_11, int_0)
    assert f"{type(link_7).__module__}.{type(link_7).__qualname__}" == "link.Link"
    var_12 = link_7.__hash__()
    assert var_12 == -1122340555193368221
    var_13 = var_12.__repr__()
    assert var_13 == "-1122340555193368221"
    none_type_3 = None
    none_type_4 = None
    link_8 = module_0.Link(none_type_4)
    var_14 = link_8.__repr__()
    assert var_14 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_15 = var_14.__hash__()
    assert var_15 == 2234852059487564994
    var_16 = var_15.__eq__(none_type_3)
    link_9 = module_0.Link(var_14, var_15, var_14)
    link_10 = module_0.Link(none_type_3, var_16, link_8)
    bytes_1 = b"-5164621852614943975"
    link_11 = module_0.Link(bytes_1, nofollow=bytes_1)
    var_17 = link_11.__hash__()
    assert var_17 == 0
    object_0 = module_1.object()
    link_12 = module_0.Link(object_0, fragment=object_0)
    var_18 = link_12.__hash__()
    assert var_18 == 0
    var_19 = var_18.__eq__(object_0)
    none_type_5 = None
    bool_4 = True
    link_13 = module_0.Link(bool_4, nofollow=bool_4)
    var_20 = link_13.__hash__()
    assert var_20 == 0
    var_21 = var_20.__eq__(none_type_5)
    bytes_2 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_14 = module_0.Link(bytes_2, bytes_2)
    var_22 = link_13.__repr__()
    assert var_22 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_23 = link_13.__hash__()
    assert var_23 == 0
    link_10.__eq__(bool_3)


@pytest.mark.xfail(strict=True)
def test_case_1285():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    bool_2 = False
    link_4 = module_0.Link(bool_2)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_5 = module_0.Link(var_2, nofollow=var_2)
    none_type_0 = None
    bool_3 = True
    link_6 = module_0.Link(bool_3, nofollow=bool_3)
    var_3 = link_6.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(none_type_0)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_7 = module_0.Link(bytes_1, bytes_1)
    var_5 = link_6.__repr__()
    assert var_5 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_6 = link_6.__hash__()
    assert var_6 == 0
    bytes_2 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_8 = module_0.Link(bytes_2, bytes_2)
    var_7 = link_8.__hash__()
    assert var_7 == 0
    var_8 = var_7.__repr__()
    assert var_8 == "0"
    var_9 = var_7.__hash__()
    assert var_9 == 0
    bool_4 = False
    link_9 = module_0.Link(bool_4)
    var_10 = var_8.__repr__()
    assert var_10 == "'0'"
    none_type_1 = None
    link_10 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_5 = False
    link_11 = module_0.Link(bool_5)
    var_11 = link_11.__repr__()
    assert var_11 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_12 = module_0.Link(var_11, nofollow=var_11)
    var_12 = var_11.__hash__()
    assert var_12 == -3936900723769714473
    object_0 = module_1.object()
    link_13 = module_0.Link(object_0, fragment=object_0)
    var_13 = link_13.__hash__()
    assert var_13 == 0
    var_14 = var_13.__eq__(object_0)
    bytes_3 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_14 = module_0.Link(bytes_3, bytes_3)
    bool_6 = True
    link_15 = module_0.Link(bool_6)
    var_15 = link_15.__repr__()
    assert var_15 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_16 = module_0.Link(float_0, fragment=var_15)
    var_16 = link_15.__repr__()
    assert var_16 == "Link(url=True, text='', fragment='', nofollow=False)"
    link_7.__eq__(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1286():
    bytes_0 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_2 = module_0.Link(bool_0, fragment=tuple_0)
    var_0 = link_2.__hash__()
    assert var_0 == -8753497827991233192
    link_3 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_3.__repr__()
    assert (
        var_1
        == "Link(url=-8753497827991233192, text=-8753497827991233192, fragment='', nofollow=-8753497827991233192)"
    )
    bool_2 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_4 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_2 = link_4.__repr__()
    var_3 = var_2.__eq__(bool_2)
    var_4 = var_3.__hash__()
    var_5 = var_4.__repr__()
    link_4.__eq__(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1287():
    none_type_0 = None
    str_0 = ""
    str_1 = "8rq{(kY9"
    str_2 = "FZK2"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_2: none_type_0,
    }
    module_1.object(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1288():
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_0 = module_0.Link(list_0, str_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    link_0.__hash__()


@pytest.mark.xfail(strict=True)
def test_case_1289():
    object_0 = module_1.object()
    link_0 = module_0.Link(object_0, fragment=object_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(object_0)
    int_0 = 3199
    link_1 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_2 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url={}, text=None, fragment=2515.28653, nofollow=None)"
    var_3 = var_2.__eq__(bool_0)
    var_4 = var_3.__hash__()
    var_5 = var_4.__repr__()
    bool_1 = True
    link_3 = module_0.Link(bool_1, nofollow=bool_1)
    var_6 = link_3.__eq__(link_3)
    assert var_6 is True
    none_type_1 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_7 = link_4.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_5 = module_0.Link(bytes_0, bytes_0)
    var_9 = link_4.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_1)
    link_7 = module_0.Link(link_6)
    var_10 = link_7.__hash__()
    assert var_10 == -4606328870177462788
    bool_3 = True
    link_8 = module_0.Link(bool_3)
    var_11 = link_8.__repr__()
    assert var_11 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_12 = var_10.__eq__(bytes_1)
    link_9 = module_0.Link(var_12, var_12)
    float_1 = 5.0
    link_10 = module_0.Link(float_1)
    none_type_2 = None
    link_11 = module_0.Link(none_type_2, link_10)
    var_13 = link_11.__eq__(link_11)
    assert var_13 is True
    var_14 = link_11.__eq__(link_10)
    assert var_14 is False
    var_15 = var_14.__eq__(var_13)
    assert var_15 is False
    bool_4 = False
    bool_5 = False
    tuple_0 = (bool_5,)
    link_12 = module_0.Link(bool_4, fragment=tuple_0)
    var_16 = link_12.__hash__()
    assert var_16 == -8753497827991233192
    set_0 = {tuple_0, var_16, bool_5, bool_4}
    var_17 = var_16.__eq__(set_0)
    float_2 = 5.0
    link_13 = module_0.Link(float_2)
    none_type_3 = None
    link_14 = module_0.Link(none_type_3, link_13)
    var_18 = link_14.__eq__(link_14)
    assert var_18 is True
    object_1 = module_1.object()
    link_15 = module_0.Link(object_1, fragment=object_1)
    link_16 = module_0.Link(object_1, none_type_3)
    bool_6 = True
    bool_7 = False
    tuple_1 = (bool_6, bool_7)
    link_17 = module_0.Link(tuple_1, fragment=bool_6)
    var_19 = link_17.__hash__()
    assert var_19 == -5164621852614943975
    var_20 = var_19.__repr__()
    assert var_20 == "-5164621852614943975"
    var_21 = var_19.__repr__()
    assert var_21 == "-5164621852614943975"
    link_18 = module_0.Link(var_6, var_10)
    link_18.__eq__(var_21)


@pytest.mark.xfail(strict=True)
def test_case_1290():
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    bytes_1 = b"\x1f\x04O\x8c\xc5\x9b\x03.\xc4\x97^\xcb\xb2\xf6\tC\x8eAQ\xad"
    link_1 = module_0.Link(bytes_1)
    var_2 = var_0.__eq__(bytes_0)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_2 = module_0.Link(bytes_2)
    link_3 = module_0.Link(link_2)
    var_3 = link_3.__hash__()
    assert var_3 == -4606328870177462788
    bool_0 = True
    link_4 = module_0.Link(bool_0)
    var_4 = link_4.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_5 = var_3.__eq__(bytes_2)
    link_5 = module_0.Link(var_3)
    none_type_0 = None
    link_6 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    bool_1 = False
    link_7 = module_0.Link(bool_1)
    var_6 = link_7.__repr__()
    assert var_6 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_8 = module_0.Link(var_6, nofollow=var_6)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    var_7 = var_6.__hash__()
    assert var_7 == -3936900723769714473
    bytes_3 = b"-5164621852614943975"
    link_9 = module_0.Link(bytes_3, nofollow=bytes_3)
    var_8 = link_9.__hash__()
    assert var_8 == 0
    none_type_1 = None
    link_10 = module_0.Link(none_type_1, none_type_1)
    object_0 = module_1.object()
    link_11 = module_0.Link(object_0, fragment=object_0)
    bytes_4 = b"\xb3\xa6L'#\xe0\x91\t"
    link_12 = module_0.Link(bytes_4)
    link_13 = module_0.Link(link_12)
    var_9 = link_13.__hash__()
    assert var_9 == -4606328870177462788
    bool_2 = True
    link_14 = module_0.Link(bool_2)
    var_10 = link_14.__repr__()
    assert var_10 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_11 = var_9.__eq__(bytes_4)
    link_15 = module_0.Link(var_11, var_11)
    link_4.__eq__(var_2)


@pytest.mark.xfail(strict=True)
def test_case_1291():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    bytes_1 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_1, bytes_1)
    var_2 = link_1.__hash__()
    assert var_2 == 0
    var_3 = var_2.__repr__()
    assert var_3 == "0"
    var_4 = var_2.__hash__()
    assert var_4 == 0
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_5 = var_3.__repr__()
    assert var_5 == "'0'"
    none_type_0 = None
    bool_1 = True
    link_3 = module_0.Link(none_type_0, bool_1)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=None, text=True, fragment='', nofollow=False)"
    var_7 = var_6.__repr__()
    assert var_7 == "\"Link(url=None, text=True, fragment='', nofollow=False)\""
    link_4 = module_0.Link(var_6, nofollow=var_7)
    assert f"{type(link_4).__module__}.{type(link_4).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    link_5 = module_0.Link(object_0, fragment=object_0)
    var_8 = link_5.__hash__()
    assert var_8 == 0
    var_9 = var_8.__eq__(object_0)
    float_0 = 5.0
    link_6 = module_0.Link(float_0)
    none_type_1 = None
    link_7 = module_0.Link(none_type_1, link_6)
    var_10 = link_7.__eq__(link_7)
    assert var_10 is True
    object_1 = module_1.object()
    link_8 = module_0.Link(object_1, fragment=object_1)
    link_9 = module_0.Link(object_1, none_type_1)
    var_11 = link_6.__hash__()
    assert var_11 == 5
    link_3.__eq__(var_7)


@pytest.mark.xfail(strict=True)
def test_case_1292():
    bool_0 = False
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', text=b'\\xd1\\x04\\x83\\xb7\\x84\\x19<2\\xe6<\\xc4\\x19\\xaeE\\xfb:J4\\xdd', fragment='', nofollow=False)"
    )
    bool_1 = False
    link_2 = module_0.Link(bool_1)
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', text=b'\\\\xd1\\\\x04\\\\x83\\\\xb7\\\\x84\\\\x19<2\\\\xe6<\\\\xc4\\\\x19\\\\xaeE\\\\xfb:J4\\\\xdd', fragment='', nofollow=False)\""
    )
    link_3 = module_0.Link(var_0, bytes_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    none_type_0 = None
    bool_2 = True
    link_4 = module_0.Link(bool_2, nofollow=bool_2)
    var_2 = link_4.__hash__()
    assert var_2 == 0
    var_3 = var_2.__eq__(none_type_0)
    link_5 = module_0.Link(link_4)
    link_6 = module_0.Link(var_2, fragment=none_type_0)
    int_0 = 3199
    link_7 = module_0.Link(int_0, int_0, nofollow=int_0)
    bool_3 = True
    link_8 = module_0.Link(bool_3, nofollow=bool_3)
    var_4 = link_8.__repr__()
    assert var_4 == "Link(url=True, text='', fragment='', nofollow=True)"
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_9 = module_0.Link(bytes_1)
    link_10 = module_0.Link(link_9)
    var_5 = link_10.__hash__()
    assert var_5 == -4606328870177462788
    bool_4 = True
    link_11 = module_0.Link(bool_4)
    var_6 = link_11.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_7 = var_5.__eq__(bytes_1)
    link_12 = module_0.Link(var_5)
    bool_5 = True
    bool_6 = False
    tuple_0 = (bool_5, bool_6)
    link_13 = module_0.Link(tuple_0, fragment=bool_5)
    var_8 = link_13.__hash__()
    assert var_8 == -5164621852614943975
    var_9 = var_8.__repr__()
    assert var_9 == "-5164621852614943975"
    var_10 = var_8.__eq__(tuple_0)
    var_11 = var_10.__repr__()
    complex_0 = -2489 + 3297.83623j
    link_14 = module_0.Link(complex_0)
    var_12 = link_14.__hash__()
    assert var_12 == 1172959022599657258
    bool_7 = True
    dict_0 = {}
    none_type_1 = None
    float_0 = 2515.28653
    link_15 = module_0.Link(dict_0, none_type_1, float_0, none_type_1)
    var_13 = link_15.__repr__()
    var_14 = var_13.__eq__(bool_7)
    var_15 = var_14.__hash__()
    var_16 = var_15.__repr__()
    bool_8 = True
    bool_9 = False
    tuple_1 = (bool_8, bool_9)
    link_16 = module_0.Link(tuple_1, fragment=bool_8)
    var_17 = link_16.__hash__()
    assert var_17 == -5164621852614943975
    var_18 = var_17.__repr__()
    assert var_18 == "-5164621852614943975"
    var_19 = var_17.__eq__(tuple_1)
    link_9.__eq__(var_11)


def test_case_1293():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1294():
    int_0 = 1870
    link_0 = module_0.Link(int_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    dict_0 = {link_0: link_0}
    link_1 = module_0.Link(dict_0, fragment=dict_0)
    var_0 = link_1.__repr__()
    assert (
        var_0
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_1 = var_0.__repr__()
    assert (
        var_1
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    link_1.__hash__()


@pytest.mark.xfail(strict=True)
def test_case_1295():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    link_0 = module_0.Link(tuple_0, fragment=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -5164621852614943975
    var_1 = var_0.__repr__()
    assert var_1 == "-5164621852614943975"
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=(True, False), text='', fragment=True, nofollow=False)"
    object_0 = module_1.object()
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=None, text='', fragment=None, nofollow=False)"
    var_4 = var_3.__hash__()
    assert var_4 == 7957018345684386684
    var_5 = var_4.__repr__()
    assert var_5 == "7957018345684386684"
    link_2 = module_0.Link(object_0, var_5)
    var_6 = link_2.__repr__()
    none_type_1 = None
    bool_2 = True
    link_3 = module_0.Link(bool_2, nofollow=bool_2)
    var_7 = link_3.__hash__()
    assert var_7 == 0
    var_8 = var_7.__eq__(none_type_1)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_4 = module_0.Link(bytes_0, bytes_0)
    var_9 = link_3.__repr__()
    assert var_9 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_10 = var_8.__repr__()
    none_type_2 = None
    bool_3 = True
    link_5 = module_0.Link(bool_3, nofollow=bool_3)
    var_11 = link_5.__hash__()
    assert var_11 == 0
    var_12 = var_11.__eq__(none_type_2)
    bytes_1 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_1, bytes_1)
    var_13 = link_5.__repr__()
    assert var_13 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_14 = link_5.__hash__()
    assert var_14 == 0
    link_0.__eq__(var_12)


@pytest.mark.xfail(strict=True)
def test_case_1296():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    set_0 = {tuple_0, var_0, bool_1, bool_0}
    var_1 = var_0.__eq__(set_0)
    var_2 = link_0.__hash__()
    assert var_2 == -8753497827991233192
    var_3 = link_0.__hash__()
    assert var_3 == -8753497827991233192
    bool_2 = True
    link_1 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_4 = link_1.__hash__()
    assert var_4 == 1
    var_5 = link_1.__hash__()
    assert var_5 == 1
    int_0 = 3199
    link_2 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_6 = link_2.__repr__()
    assert var_6 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_3 = module_0.Link(var_6)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    object_0 = module_1.object()
    link_4 = module_0.Link(object_0, fragment=object_0)
    bool_3 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_5 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_7 = link_5.__repr__()
    var_8 = var_7.__eq__(bool_3)
    var_9 = var_8.__hash__()
    var_10 = var_9.__repr__()
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_0)
    link_7 = module_0.Link(link_6)
    var_11 = link_7.__hash__()
    assert var_11 == -4606328870177462788
    bool_4 = True
    link_8 = module_0.Link(bool_4)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_13 = var_11.__eq__(bytes_0)
    link_7.__eq__(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1297():
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_0 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bool_0 = True
    link_1 = module_0.Link(bool_0)
    var_0 = link_1.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_2 = module_0.Link(float_0, fragment=var_0)
    link_3 = module_0.Link(float_0, fragment=link_1)
    int_0 = 852
    dict_0 = {int_0: int_0}
    link_4 = module_0.Link(dict_0)
    var_1 = link_4.__repr__()
    assert var_1 == "Link(url={852: 852}, text='', fragment='', nofollow=False)"
    link_5 = module_0.Link(var_1, nofollow=dict_0)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    int_1 = 502
    none_type_0 = None
    link_6 = module_0.Link(int_1, fragment=int_1, nofollow=none_type_0)
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_7 = module_0.Link(list_0, str_0)
    link_8 = module_0.Link(link_7)
    link_5.__hash__()


@pytest.mark.xfail(strict=True)
def test_case_1298():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=True)"
    link_2 = module_0.Link(var_2, nofollow=var_2)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    int_0 = 3199
    link_3 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_3 = link_3.__repr__()
    assert var_3 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_4 = module_0.Link(var_3)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, nofollow=none_type_1)
    int_1 = 1870
    link_6 = module_0.Link(int_1)
    dict_0 = {link_6: link_6}
    link_7 = module_0.Link(dict_0, fragment=dict_0)
    var_4 = link_7.__repr__()
    assert (
        var_4
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_5 = var_4.__repr__()
    assert (
        var_5
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_6 = var_4.__eq__(var_4)
    var_7 = var_6.__hash__()
    int_2 = 3199
    link_8 = module_0.Link(int_2, int_2, nofollow=int_2)
    var_8 = link_8.__repr__()
    assert var_8 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    var_9 = var_8.__hash__()
    assert var_9 == -3203539594471298528
    bool_1 = True
    link_9 = module_0.Link(bool_1, bool_1, nofollow=bool_1)
    var_10 = link_9.__hash__()
    assert var_10 == 1
    var_11 = link_9.__hash__()
    assert var_11 == 1
    var_12 = link_9.__repr__()
    assert var_12 == "Link(url=True, text=True, fragment='', nofollow=True)"
    var_13 = var_12.__repr__()
    assert var_13 == "\"Link(url=True, text=True, fragment='', nofollow=True)\""
    link_3.__eq__(var_6)


@pytest.mark.xfail(strict=True)
def test_case_1299():
    str_0 = "kcc#-Y\x0b?P?jv"
    list_0 = [str_0]
    link_0 = module_0.Link(list_0, str_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, list_0)
    none_type_1 = None
    link_3 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_0 = False
    link_4 = module_0.Link(bool_0)
    var_0 = link_4.__repr__()
    assert var_0 == "Link(url=False, text='', fragment='', nofollow=False)"
    link_5 = module_0.Link(var_0, nofollow=var_0)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_1 = var_0.__hash__()
    assert var_1 == -3936900723769714473
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    link_6 = module_0.Link(object_0)
    var_2 = link_6.__repr__()
    var_3 = var_2.__repr__()
    var_4 = var_3.__hash__()
    int_0 = 3199
    link_7 = module_0.Link(int_0, int_0, nofollow=int_0)
    var_5 = link_7.__hash__()
    assert var_5 == 3199
    none_type_2 = None
    link_8 = module_0.Link(none_type_2)
    var_6 = link_8.__hash__()
    assert var_6 == 477042
    var_7 = var_6.__hash__()
    assert var_7 == 477042
    float_0 = 5.0
    link_9 = module_0.Link(float_0)
    none_type_3 = None
    link_10 = module_0.Link(none_type_3, link_9)
    var_8 = link_10.__eq__(link_10)
    assert var_8 is True
    object_1 = module_1.object()
    link_11 = module_0.Link(object_1, fragment=object_1)
    link_12 = module_0.Link(object_1, none_type_3)
    bool_1 = False
    link_13 = module_0.Link(bool_1)
    var_9 = link_13.__hash__()
    assert var_9 == 0
    complex_0 = 2717.25865 + 279.6823j
    bytes_0 = b"xC(\xd2O"
    set_0 = {bytes_0, bytes_0, bytes_0}
    none_type_4 = None
    link_14 = module_0.Link(set_0, none_type_4)
    var_10 = link_14.__repr__()
    assert var_10 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_11 = var_10.__hash__()
    assert var_11 == -2938861455928792573
    var_12 = var_11.__hash__()
    assert var_12 == -633018446715098622
    var_13 = var_12.__eq__(complex_0)
    none_type_5 = None
    link_15 = module_0.Link(none_type_5, nofollow=none_type_5)
    bool_2 = True
    link_16 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_14 = link_16.__hash__()
    assert var_14 == 1
    var_15 = link_16.__hash__()
    assert var_15 == 1
    var_16 = link_16.__repr__()
    assert var_16 == "Link(url=True, text=True, fragment='', nofollow=True)"
    var_17 = var_16.__repr__()
    assert var_17 == "\"Link(url=True, text=True, fragment='', nofollow=True)\""
    link_11.__eq__(var_5)


@pytest.mark.xfail(strict=True)
def test_case_1300():
    int_0 = 36
    bytes_0 = b"\xeb\xdc\xa3"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=b'\\xeb\\xdc\\xa3', text='', fragment='', nofollow=False)"
    var_1 = var_0.__eq__(int_0)
    var_2 = var_1.__repr__()
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0)
    var_3 = link_1.__repr__()
    assert var_3 == "Link(url=None, text='', fragment=None, nofollow=False)"
    link_2 = module_0.Link(var_3)
    assert f"{type(link_2).__module__}.{type(link_2).__qualname__}" == "link.Link"
    var_4 = link_2.__repr__()
    assert (
        var_4
        == "Link(url=b\"Link(url=None, text='', fragment=None, nofollow=False)\", text='', fragment='', nofollow=False)"
    )
    int_1 = 584
    link_3 = module_0.Link(int_1)
    link_3.__eq__(var_2)


def test_case_1301():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1302():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_0 = module_0.Link(bool_0, fragment=tuple_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == -8753497827991233192
    link_1 = module_0.Link(var_0, var_0, nofollow=var_0)
    var_1 = link_0.__hash__()
    assert var_1 == -8753497827991233192
    none_type_0 = None
    link_2 = module_0.Link(none_type_0, none_type_0, nofollow=none_type_0)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_3 = module_0.Link(var_2, nofollow=link_2)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_3 = link_3.__hash__()
    assert var_3 == 4128530656735687579
    link_0.__eq__(bool_1)


def test_case_1303():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0, nofollow=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    none_type_1 = None
    link_1 = module_0.Link(none_type_1, fragment=none_type_1)
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = var_0.__eq__(var_0)
    none_type_2 = None
    link_2 = module_0.Link(none_type_2, fragment=none_type_2)
    var_3 = link_2.__hash__()
    assert var_3 == 0
    var_4 = var_3.__hash__()
    assert var_4 == 0
    var_5 = link_2.__repr__()
    assert var_5 == "Link(url=None, text='', fragment=None, nofollow=False)"


@pytest.mark.xfail(strict=True)
def test_case_1304():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_1 = module_0.Link(bytes_0, bytes_0)
    bool_1 = True
    link_2 = module_0.Link(bool_1)
    var_2 = link_2.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_0 = 3106.326
    link_3 = module_0.Link(float_0, fragment=var_2)
    var_3 = link_2.__repr__()
    assert var_3 == "Link(url=True, text='', fragment='', nofollow=False)"
    float_1 = 5.0
    link_4 = module_0.Link(float_1)
    none_type_1 = None
    link_5 = module_0.Link(none_type_1, link_4)
    var_4 = link_5.__eq__(link_5)
    assert var_4 is True
    var_5 = link_4.__hash__()
    assert var_5 == 5
    float_2 = 5.0
    link_6 = module_0.Link(float_2)
    var_6 = link_6.__hash__()
    assert var_6 == 5
    var_7 = link_2.__hash__()
    assert var_7 == 1
    link_2.__eq__(var_7)


@pytest.mark.xfail(strict=True)
def test_case_1305():
    str_0 = "Dmfv; iJ001\n"
    none_type_0 = None
    link_0 = module_0.Link(str_0, fragment=none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_1 = module_0.Link(bytes_0, bytes_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_0 = link_1.__hash__()
    assert var_0 == 0
    var_1 = var_0.__repr__()
    assert var_1 == "0"
    var_2 = var_0.__hash__()
    assert var_2 == 0
    bool_0 = False
    link_2 = module_0.Link(bool_0)
    var_3 = var_1.__repr__()
    assert var_3 == "'0'"
    bytes_1 = b"O\xf3\x8ez\x9cB\xfdi\xa1"
    none_type_1 = None
    link_3 = module_0.Link(none_type_1)
    var_4 = link_3.__hash__()
    assert var_4 == 477042
    var_5 = var_4.__repr__()
    assert var_5 == "477042"
    var_6 = var_5.__eq__(bytes_1)
    link_0.__eq__(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1306():
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__eq__(link_0)
    assert var_0 is True
    bool_1 = False
    bytes_0 = b"]\xfe"
    int_0 = 3199
    tuple_0 = (bool_1, bytes_0, int_0, int_0)
    link_1 = module_0.Link(tuple_0, fragment=bytes_0)
    link_2 = module_0.Link(link_1, nofollow=bool_1)
    var_1 = link_2.__hash__()
    assert var_1 == 3939945378486638560
    link_3 = module_0.Link(var_1, bytes_0, var_1)
    bool_2 = True
    link_4 = module_0.Link(bool_2)
    var_2 = link_4.__repr__()
    assert var_2 == "Link(url=True, text='', fragment='', nofollow=False)"
    int_1 = 584
    link_5 = module_0.Link(int_1)
    object_0 = module_1.object()
    link_6 = module_0.Link(object_0, fragment=object_0)
    var_3 = link_6.__hash__()
    assert var_3 == 0
    var_4 = var_3.__eq__(object_0)
    int_2 = 3199
    link_7 = module_0.Link(int_2, int_2, nofollow=int_2)
    var_5 = link_7.__repr__()
    assert var_5 == "Link(url=3199, text=3199, fragment='', nofollow=3199)"
    link_8 = module_0.Link(var_5)
    assert f"{type(link_8).__module__}.{type(link_8).__qualname__}" == "link.Link"
    complex_0 = 2717.25865 + 279.6823j
    bytes_1 = b"xC(\xd2O"
    set_0 = {bytes_1, bytes_1, bytes_1}
    none_type_0 = None
    link_9 = module_0.Link(set_0, none_type_0)
    var_6 = link_9.__repr__()
    assert var_6 == "Link(url={b'xC(\\xd2O'}, text=None, fragment='', nofollow=False)"
    var_7 = var_6.__hash__()
    assert var_7 == -2938861455928792573
    var_8 = var_7.__hash__()
    assert var_8 == -633018446715098622
    var_9 = var_8.__eq__(complex_0)
    link_2.__eq__(bool_1)


@pytest.mark.xfail(strict=True)
def test_case_1307():
    bool_0 = False
    none_type_0 = None
    none_type_1 = None
    link_0 = module_0.Link(bool_0, none_type_1, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1308():
    bytes_0 = b"-5164621852614943975"
    link_0 = module_0.Link(bytes_0, nofollow=bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert (
        var_0
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_0 = True
    dict_0 = {}
    none_type_0 = None
    float_0 = 2515.28653
    link_1 = module_0.Link(dict_0, none_type_0, float_0, none_type_0)
    var_1 = link_1.__repr__()
    var_2 = var_1.__eq__(bool_0)
    var_3 = var_2.__hash__()
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_2,)
    link_2 = module_0.Link(bool_1, fragment=tuple_0)
    var_4 = link_2.__hash__()
    assert var_4 == -8753497827991233192
    link_3 = module_0.Link(var_4, var_4, nofollow=var_4)
    link_3.__eq__(var_0)


@pytest.mark.xfail(strict=True)
def test_case_1309():
    int_0 = 3199
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_0.__eq__(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1310():
    bool_0 = True
    link_0 = module_0.Link(bool_0, bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 1
    var_1 = link_0.__hash__()
    assert var_1 == 1
    var_2 = link_0.__repr__()
    assert var_2 == "Link(url=True, text=True, fragment='', nofollow=True)"
    var_3 = var_2.__repr__()
    assert var_3 == "\"Link(url=True, text=True, fragment='', nofollow=True)\""
    bool_1 = True
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    link_1 = module_0.Link(tuple_0, fragment=bool_1)
    var_4 = link_1.__hash__()
    assert var_4 == -5164621852614943975
    var_5 = var_4.__repr__()
    assert var_5 == "-5164621852614943975"
    none_type_0 = None
    link_2 = module_0.Link(link_1, fragment=none_type_0)
    bool_3 = True
    link_3 = module_0.Link(bool_3, nofollow=bool_3)
    var_6 = link_3.__repr__()
    assert var_6 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_4 = True
    link_4 = module_0.Link(bool_4, fragment=bool_4)
    var_7 = link_4.__repr__()
    assert var_7 == "Link(url=True, text='', fragment=True, nofollow=False)"
    var_8 = var_7.__hash__()
    assert var_8 == 4729962515010671871
    var_9 = var_8.__repr__()
    assert var_9 == "4729962515010671871"
    link_5 = module_0.Link(var_9)
    assert f"{type(link_5).__module__}.{type(link_5).__qualname__}" == "link.Link"
    var_10 = link_5.__hash__()
    assert var_10 == -6813877331771076914
    none_type_1 = None
    link_6 = module_0.Link(none_type_1, none_type_1, nofollow=none_type_1)
    var_11 = link_6.__repr__()
    assert var_11 == "Link(url=None, text=None, fragment='', nofollow=None)"
    link_7 = module_0.Link(var_11, nofollow=link_6)
    var_12 = link_7.__hash__()
    assert var_12 == 4128530656735687579
    float_0 = 5.0
    link_8 = module_0.Link(float_0)
    none_type_2 = None
    link_9 = module_0.Link(none_type_2, link_8)
    var_13 = link_9.__eq__(link_9)
    assert var_13 is True
    object_0 = module_1.object()
    link_10 = module_0.Link(object_0, fragment=object_0)
    link_11 = module_0.Link(object_0, none_type_2)
    link_6.__eq__(none_type_2)


@pytest.mark.xfail(strict=True)
def test_case_1311():
    bool_0 = True
    link_0 = module_0.Link(bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_1 = var_0.__repr__()
    assert var_1 == "\"Link(url=True, text='', fragment='', nofollow=False)\""
    none_type_0 = None
    link_1 = module_0.Link(none_type_0, fragment=none_type_0, nofollow=none_type_0)
    int_0 = 502
    none_type_1 = None
    link_2 = module_0.Link(int_0, fragment=int_0, nofollow=none_type_1)
    str_0 = "zFdqvZ!_FXmvkkTDS"
    link_3 = module_0.Link(str_0)
    assert f"{type(link_3).__module__}.{type(link_3).__qualname__}" == "link.Link"
    var_2 = link_3.__hash__()
    assert var_2 == -5642901194074185885
    link_2.__eq__(none_type_1)


@pytest.mark.xfail(strict=True)
def test_case_1312():
    bytes_0 = b"\xb3\xa6L'#\xe0\x91\t"
    link_0 = module_0.Link(bytes_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    link_1 = module_0.Link(link_0)
    var_0 = link_1.__hash__()
    assert var_0 == -4606328870177462788
    bool_0 = True
    link_2 = module_0.Link(bool_0)
    var_1 = link_2.__repr__()
    assert var_1 == "Link(url=True, text='', fragment='', nofollow=False)"
    var_2 = var_0.__eq__(bytes_0)
    var_3 = var_2.__hash__()
    bytes_1 = b"\xb3\xa6L'#\xe0\x91\t"
    link_3 = module_0.Link(bytes_1)
    var_4 = link_3.__hash__()
    assert var_4 == -4606328870177462788
    var_5 = var_4.__repr__()
    assert var_5 == "-4606328870177462788"
    none_type_0 = None
    bool_1 = True
    link_4 = module_0.Link(bool_1, nofollow=bool_1)
    var_6 = link_4.__hash__()
    assert var_6 == 0
    var_7 = var_6.__eq__(none_type_0)
    var_8 = var_6.__repr__()
    assert var_8 == "0"
    bool_2 = True
    link_5 = module_0.Link(bool_2, bool_2, nofollow=bool_2)
    var_9 = link_5.__hash__()
    assert var_9 == 1
    bool_3 = False
    complex_0 = -2172.59 + 2037.389578j
    list_0 = [bool_3, complex_0, complex_0, complex_0]
    list_1 = []
    tuple_0 = (list_1,)
    link_6 = module_0.Link(list_0, tuple_0)
    link_7 = module_0.Link(link_6, list_1, list_0)
    bool_4 = False
    bool_5 = False
    tuple_1 = (bool_5,)
    link_8 = module_0.Link(bool_4, fragment=tuple_1)
    var_10 = link_8.__hash__()
    assert var_10 == -8753497827991233192
    link_9 = module_0.Link(var_10, var_10, nofollow=var_10)
    var_11 = link_8.__hash__()
    assert var_11 == -8753497827991233192
    float_0 = 5.0
    link_10 = module_0.Link(float_0)
    none_type_1 = None
    link_11 = module_0.Link(none_type_1, link_10)
    var_12 = link_11.__eq__(link_11)
    assert var_12 is True
    str_0 = "BfP>AK$\nt-"
    link_0.__eq__(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1313():
    none_type_0 = None
    module_1.object(*none_type_0)


def test_case_1314():
    none_type_0 = None
    link_0 = module_0.Link(none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )


@pytest.mark.xfail(strict=True)
def test_case_1315():
    int_0 = 2105
    none_type_0 = None
    link_0 = module_0.Link(int_0, none_type_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__repr__()
    assert var_0 == "Link(url=2105, text=None, fragment='', nofollow=False)"
    link_1 = module_0.Link(var_0, int_0)
    assert f"{type(link_1).__module__}.{type(link_1).__qualname__}" == "link.Link"
    var_1 = link_1.__hash__()
    assert var_1 == -1122340555193368221
    var_2 = var_1.__repr__()
    assert var_2 == "-1122340555193368221"
    none_type_1 = None
    link_2 = module_0.Link(none_type_1, fragment=none_type_1, nofollow=none_type_1)
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    link_3 = module_0.Link(bool_0, fragment=tuple_0)
    var_3 = link_3.__hash__()
    assert var_3 == -8753497827991233192
    link_4 = module_0.Link(var_3, var_3, nofollow=var_3)
    var_4 = link_3.__hash__()
    assert var_4 == -8753497827991233192
    none_type_2 = None
    bool_2 = True
    link_5 = module_0.Link(bool_2, nofollow=bool_2)
    var_5 = link_5.__hash__()
    assert var_5 == 0
    var_6 = var_5.__eq__(none_type_2)
    bytes_0 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_6 = module_0.Link(bytes_0, bytes_0)
    var_7 = link_5.__repr__()
    assert var_7 == "Link(url=True, text='', fragment='', nofollow=True)"
    bool_3 = True
    dict_0 = {}
    none_type_3 = None
    float_0 = 2515.28653
    link_7 = module_0.Link(dict_0, none_type_3, float_0, none_type_3)
    var_8 = link_7.__repr__()
    var_9 = var_8.__eq__(bool_3)
    var_10 = var_9.__hash__()
    var_11 = var_10.__repr__()
    none_type_4 = None
    none_type_5 = None
    link_8 = module_0.Link(none_type_5)
    var_12 = link_8.__repr__()
    assert var_12 == "Link(url=None, text='', fragment='', nofollow=False)"
    var_13 = var_12.__hash__()
    assert var_13 == 2234852059487564994
    var_14 = var_13.__eq__(none_type_4)
    link_9 = module_0.Link(var_12, var_13, var_12)
    none_type_6 = None
    link_10 = module_0.Link(none_type_6, fragment=none_type_6)
    var_15 = link_10.__hash__()
    assert var_15 == 0
    var_16 = var_15.__hash__()
    assert var_16 == 0
    link_3.__eq__(var_4)


@pytest.mark.xfail(strict=True)
def test_case_1316():
    none_type_0 = None
    bool_0 = True
    link_0 = module_0.Link(bool_0, nofollow=bool_0)
    assert f"{type(link_0).__module__}.{type(link_0).__qualname__}" == "link.Link"
    assert (
        f"{type(module_0.Link.fragment).__module__}.{type(module_0.Link.fragment).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.nofollow).__module__}.{type(module_0.Link.nofollow).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.text).__module__}.{type(module_0.Link.text).__qualname__}"
        == "builtins.member_descriptor"
    )
    assert (
        f"{type(module_0.Link.url).__module__}.{type(module_0.Link.url).__qualname__}"
        == "builtins.member_descriptor"
    )
    var_0 = link_0.__hash__()
    assert var_0 == 0
    var_1 = var_0.__eq__(none_type_0)
    bool_1 = False
    link_1 = module_0.Link(bool_1)
    var_2 = link_1.__repr__()
    assert var_2 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_3 = var_1.__repr__()
    bytes_0 = b"T.\xf7\xc9\x14\xb1\xcb\xfd\xaf"
    link_2 = module_0.Link(bytes_0, bytes_0)
    var_4 = link_2.__hash__()
    assert var_4 == 0
    var_5 = var_4.__repr__()
    assert var_5 == "0"
    var_6 = var_4.__hash__()
    assert var_6 == 0
    bool_2 = False
    link_3 = module_0.Link(bool_2)
    var_7 = var_5.__repr__()
    assert var_7 == "'0'"
    link_4 = module_0.Link(bool_2, var_6, var_4)
    bytes_1 = b"-5164621852614943975"
    link_5 = module_0.Link(bytes_1, nofollow=bytes_1)
    bytes_2 = b"\xb3\xa6L'#\xe0\x91\t"
    link_6 = module_0.Link(bytes_2)
    link_7 = module_0.Link(link_6)
    var_8 = link_7.__hash__()
    assert var_8 == -4606328870177462788
    var_9 = var_8.__hash__()
    assert var_9 == -2300485860963768837
    bool_3 = False
    link_8 = module_0.Link(bool_3)
    var_10 = link_8.__repr__()
    assert var_10 == "Link(url=False, text='', fragment='', nofollow=False)"
    var_11 = var_8.__repr__()
    assert var_11 == "-4606328870177462788"
    int_0 = 1870
    link_9 = module_0.Link(int_0)
    dict_0 = {link_9: link_9}
    link_10 = module_0.Link(dict_0, fragment=dict_0)
    var_12 = link_10.__repr__()
    assert (
        var_12
        == "Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)"
    )
    var_13 = var_12.__repr__()
    assert (
        var_13
        == "\"Link(url={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, text='', fragment={Link(url=1870, text='', fragment='', nofollow=False): Link(url=1870, text='', fragment='', nofollow=False)}, nofollow=False)\""
    )
    var_14 = var_12.__eq__(var_12)
    var_15 = var_14.__hash__()
    bytes_3 = b"-5164621852614943975"
    link_11 = module_0.Link(bytes_3, nofollow=bytes_3)
    var_16 = link_11.__repr__()
    assert (
        var_16
        == "Link(url=b'-5164621852614943975', text='', fragment='', nofollow=b'-5164621852614943975')"
    )
    bool_4 = True
    link_12 = module_0.Link(bool_4, bool_4, nofollow=bool_4)
    var_17 = link_12.__hash__()
    assert var_17 == 1
    var_18 = link_12.__hash__()
    assert var_18 == 1
    none_type_1 = None
    bool_5 = True
    link_13 = module_0.Link(bool_5, nofollow=bool_5)
    var_19 = link_13.__hash__()
    assert var_19 == 0
    var_20 = var_19.__eq__(none_type_1)
    bytes_4 = b"\xd1\x04\x83\xb7\x84\x19<2\xe6<\xc4\x19\xaeE\xfb:J4\xdd"
    link_14 = module_0.Link(bytes_4, bytes_4)
    var_21 = link_13.__repr__()
    assert var_21 == "Link(url=True, text='', fragment='', nofollow=True)"
    var_22 = var_20.__repr__()
    link_10.__eq__(none_type_1)
