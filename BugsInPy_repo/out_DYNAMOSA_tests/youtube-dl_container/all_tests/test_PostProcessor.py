# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import PostProcessor as module_0
import utils as module_1


def test_case_0():
    f_fmpeg_video_convertor_0 = module_0.FFmpegVideoConvertor()
    assert (
        f"{type(f_fmpeg_video_convertor_0).__module__}.{type(f_fmpeg_video_convertor_0).__qualname__}"
        == "PostProcessor.FFmpegVideoConvertor"
    )


@pytest.mark.xfail(strict=True)
def test_case_1():
    f_fmpeg_video_convertor_0 = module_0.FFmpegVideoConvertor()
    assert (
        f"{type(f_fmpeg_video_convertor_0).__module__}.{type(f_fmpeg_video_convertor_0).__qualname__}"
        == "PostProcessor.FFmpegVideoConvertor"
    )
    f_fmpeg_video_convertor_0.run_ffmpeg(
        f_fmpeg_video_convertor_0, f_fmpeg_video_convertor_0, f_fmpeg_video_convertor_0
    )


def test_case_2():
    f_fmpeg_extract_audio_p_p_0 = module_0.FFmpegExtractAudioPP()
    assert (
        f"{type(f_fmpeg_extract_audio_p_p_0).__module__}.{type(f_fmpeg_extract_audio_p_p_0).__qualname__}"
        == "PostProcessor.FFmpegExtractAudioPP"
    )


def test_case_3():
    f_fmpeg_extract_audio_p_p_0 = module_0.FFmpegExtractAudioPP()
    assert (
        f"{type(f_fmpeg_extract_audio_p_p_0).__module__}.{type(f_fmpeg_extract_audio_p_p_0).__qualname__}"
        == "PostProcessor.FFmpegExtractAudioPP"
    )
    with pytest.raises(module_0.AudioConversionError):
        f_fmpeg_extract_audio_p_p_0.run_ffmpeg(
            f_fmpeg_extract_audio_p_p_0,
            f_fmpeg_extract_audio_p_p_0,
            f_fmpeg_extract_audio_p_p_0,
            f_fmpeg_extract_audio_p_p_0,
        )


def test_case_4():
    f_fmpeg_extract_audio_p_p_0 = module_0.FFmpegExtractAudioPP()
    assert (
        f"{type(f_fmpeg_extract_audio_p_p_0).__module__}.{type(f_fmpeg_extract_audio_p_p_0).__qualname__}"
        == "PostProcessor.FFmpegExtractAudioPP"
    )
    var_0 = f_fmpeg_extract_audio_p_p_0.set_downloader(f_fmpeg_extract_audio_p_p_0)
    with pytest.raises(module_1.PostProcessingError):
        f_fmpeg_extract_audio_p_p_0.get_audio_codec(f_fmpeg_extract_audio_p_p_0)


def test_case_5():
    f_fmpeg_extract_audio_p_p_0 = module_0.FFmpegExtractAudioPP()
    assert (
        f"{type(f_fmpeg_extract_audio_p_p_0).__module__}.{type(f_fmpeg_extract_audio_p_p_0).__qualname__}"
        == "PostProcessor.FFmpegExtractAudioPP"
    )
    post_processor_0 = module_0.PostProcessor()
    var_0 = post_processor_0.run(f_fmpeg_extract_audio_p_p_0)
    with pytest.raises(module_0.FFmpegPostProcessorError):
        f_fmpeg_extract_audio_p_p_0.run_ffmpeg_multiple_files(
            f_fmpeg_extract_audio_p_p_0,
            f_fmpeg_extract_audio_p_p_0,
            f_fmpeg_extract_audio_p_p_0,
        )


def test_case_6():
    f_fmpeg_embed_subtitle_p_p_0 = module_0.FFmpegEmbedSubtitlePP()
    assert (
        f"{type(f_fmpeg_embed_subtitle_p_p_0).__module__}.{type(f_fmpeg_embed_subtitle_p_p_0).__qualname__}"
        == "PostProcessor.FFmpegEmbedSubtitlePP"
    )


def test_case_7():
    f_fmpeg_extract_audio_p_p_0 = module_0.FFmpegExtractAudioPP()
    assert (
        f"{type(f_fmpeg_extract_audio_p_p_0).__module__}.{type(f_fmpeg_extract_audio_p_p_0).__qualname__}"
        == "PostProcessor.FFmpegExtractAudioPP"
    )
    f_fmpeg_extract_audio_p_p_1 = module_0.FFmpegExtractAudioPP(
        preferredcodec=f_fmpeg_extract_audio_p_p_0,
        nopostoverwrites=f_fmpeg_extract_audio_p_p_0,
    )
    assert (
        f"{type(f_fmpeg_extract_audio_p_p_1).__module__}.{type(f_fmpeg_extract_audio_p_p_1).__qualname__}"
        == "PostProcessor.FFmpegExtractAudioPP"
    )
    with pytest.raises(module_1.PostProcessingError):
        f_fmpeg_extract_audio_p_p_1.get_audio_codec(f_fmpeg_extract_audio_p_p_1)


def test_case_8():
    f_fmpeg_extract_audio_p_p_0 = module_0.FFmpegExtractAudioPP()
    assert (
        f"{type(f_fmpeg_extract_audio_p_p_0).__module__}.{type(f_fmpeg_extract_audio_p_p_0).__qualname__}"
        == "PostProcessor.FFmpegExtractAudioPP"
    )
    with pytest.raises(module_1.PostProcessingError):
        f_fmpeg_extract_audio_p_p_0.get_audio_codec(f_fmpeg_extract_audio_p_p_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    f_fmpeg_metadata_p_p_0 = module_0.FFmpegMetadataPP()
    assert (
        f"{type(f_fmpeg_metadata_p_p_0).__module__}.{type(f_fmpeg_metadata_p_p_0).__qualname__}"
        == "PostProcessor.FFmpegMetadataPP"
    )
    var_0 = f_fmpeg_metadata_p_p_0.detect_executables()
    f_fmpeg_metadata_p_p_0.run(var_0)
