# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import utils as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "*-f[b>/Ge/W]]"
    tuple_0 = module_0.get_authorization_scheme_param(str_0)
    str_1 = ".fZx7W"
    tuple_1 = module_0.get_authorization_scheme_param(str_1)
    tuple_2 = module_0.get_authorization_scheme_param(str_0)
    int_0 = 2744
    none_type_0 = None
    tuple_3 = module_0.get_authorization_scheme_param(none_type_0)
    tuple_4 = module_0.get_authorization_scheme_param(none_type_0)
    str_2 = "z!{"
    tuple_5 = module_0.get_authorization_scheme_param(str_2)
    tuple_6 = module_0.get_authorization_scheme_param(none_type_0)
    tuple_7 = module_0.get_authorization_scheme_param(str_0)
    module_0.get_authorization_scheme_param(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    complex_0 = -2057.2 - 1438j
    str_0 = "=0%z=gD\x0bzfahFI\nR=)ML"
    none_type_0 = None
    str_1 = "w{\\{/!|&/zO "
    tuple_0 = module_0.get_authorization_scheme_param(str_1)
    str_2 = ")#A[;7f<-3]wn\x0b"
    tuple_1 = module_0.get_authorization_scheme_param(str_2)
    tuple_2 = module_0.get_authorization_scheme_param(none_type_0)
    tuple_3 = module_0.get_authorization_scheme_param(str_0)
    str_3 = '9G5_/fA#\tadGf/Ew"'
    tuple_4 = module_0.get_authorization_scheme_param(str_3)
    tuple_5 = module_0.get_authorization_scheme_param(str_0)
    module_0.get_authorization_scheme_param(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x94\xbd(c\x13FAnEd-\x08&\xc8m"
    bool_0 = True
    bytes_1 = b"\xa7\x84V\xd2\x00\x9f\xe9\x17"
    dict_0 = {bytes_0: bytes_0, bytes_0: bool_0, bool_0: bool_0, bytes_1: bytes_0}
    module_0.get_authorization_scheme_param(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '#PYmn)VL>26_\\"nqo'
    bool_0 = False
    set_0 = {str_0, bool_0}
    tuple_0 = (str_0, bool_0, set_0)
    module_0.get_authorization_scheme_param(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b""
    str_0 = "it&6cr"
    tuple_0 = module_0.get_authorization_scheme_param(str_0)
    bool_0 = False
    tuple_1 = module_0.get_authorization_scheme_param(bool_0)
    tuple_2 = module_0.get_authorization_scheme_param(bytes_0)
    module_0.get_authorization_scheme_param(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    module_0.get_authorization_scheme_param(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "|keHoMC2#=M`=i$8,m+6"
    str_1 = "zsIMV/\tT"
    str_2 = "YO>'gQwH="
    tuple_0 = module_0.get_authorization_scheme_param(str_2)
    tuple_1 = module_0.get_authorization_scheme_param(str_1)
    tuple_2 = module_0.get_authorization_scheme_param(str_0)
    tuple_3 = ()
    tuple_4 = module_0.get_authorization_scheme_param(tuple_3)
    float_0 = 1927.8946
    tuple_5 = (tuple_3, float_0)
    module_0.get_authorization_scheme_param(tuple_5)
