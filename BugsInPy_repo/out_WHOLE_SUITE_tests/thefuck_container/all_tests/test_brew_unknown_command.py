# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import brew_unknown_command as module_0
import difflib as module_1
import enum as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    module_0.match(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_1.get_close_matches(none_type_0, none_type_0, cutoff=none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -2900
    module_2.EnumMeta(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.get_new_command(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    module_0.match(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    module_0.match(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = -4019
    sequence_matcher_0 = module_1.SequenceMatcher(int_0, int_0)
    sequence_matcher_0.find_longest_match(bhi=int_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    none_type_0 = None
    module_0.get_new_command(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    none_type_0 = None
    module_1.IS_LINE_JUNK(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    int_0 = 623
    module_0.get_new_command(int_0, int_0)
