# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import brew_install as module_0
import re as module_1
import difflib as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    module_0.match(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.get_new_command(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x8f\x87$\xfc[6\x05\n\x03x\xa1\x17\xad*\x0e\x9c"
    none_type_0 = None
    module_0.match(bytes_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    var_0 = module_1.purge()
    var_1 = module_2.ndiff(var_0, var_0, var_0)
    module_0.match(var_1, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    module_0.match(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    module_1.split(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    module_0.get_new_command(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    module_0.match(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = -456
    module_0.match(int_0, int_0)
