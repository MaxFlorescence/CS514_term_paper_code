# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import defaultheaders as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    none_type_1 = None
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(none_type_1)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )
    default_headers_middleware_0.process_request(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = '3zeG2"\t)y5^b\x0c'
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(str_0)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )
    object_0 = module_1.object()
    default_headers_middleware_1 = module_0.DefaultHeadersMiddleware(object_0)
    none_type_0 = None
    default_headers_middleware_1.process_request(
        none_type_0, default_headers_middleware_1
    )


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    none_type_1 = None
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(none_type_1)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )
    default_headers_middleware_0.process_request(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_1.object()
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(object_0)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )
    default_headers_middleware_0.process_request(default_headers_middleware_0, object_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(dict_0)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )
    none_type_0 = None
    default_headers_middleware_1 = module_0.DefaultHeadersMiddleware(none_type_0)
    default_headers_middleware_1.process_request(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\x80\xabI\xba,\x96\xceb\x9e\x94\x82]"
    tuple_0 = ()
    tuple_1 = ()
    none_type_0 = None
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(tuple_0)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )
    var_0 = default_headers_middleware_0.process_request(tuple_1, bytes_0)
    var_0.process_request(tuple_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(none_type_0)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )
    default_headers_middleware_0.process_request(
        none_type_0, default_headers_middleware_0
    )


@pytest.mark.xfail(strict=True)
def test_case_7():
    none_type_0 = None
    bytes_0 = b"\xa7K\xa4+Q\xc3\xb5\xf4t\xa1"
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(bytes_0)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )
    default_headers_middleware_0.process_request(none_type_0, none_type_0)
