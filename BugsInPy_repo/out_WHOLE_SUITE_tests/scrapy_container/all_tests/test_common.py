# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import common as module_0
import builtins as module_1


def test_case_0():
    bool_0 = False
    bool_1 = True
    var_0 = module_0.obsolete_setter(bool_0, bool_1)
    var_1 = module_0.obsolete_setter(bool_0, bool_0)
    bytes_0 = b"\xc8\x896\x81\x06\x05\xf7}Mm\xcd*"
    none_type_0 = None
    var_2 = module_0.obsolete_setter(none_type_0, var_1)
    var_3 = module_0.obsolete_setter(var_1, var_0)
    var_4 = module_0.obsolete_setter(none_type_0, none_type_0)
    var_5 = module_0.obsolete_setter(bytes_0, none_type_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.obsolete_setter(none_type_0, none_type_0)
    var_1 = module_0.obsolete_setter(var_0, none_type_0)
    object_0 = module_1.object()
    var_2 = module_0.obsolete_setter(object_0, object_0)


def test_case_2():
    bool_0 = True
    var_0 = module_0.obsolete_setter(bool_0, bool_0)
    var_1 = module_0.obsolete_setter(bool_0, bool_0)
    bool_1 = True
    list_0 = [bool_1]
    var_2 = module_0.obsolete_setter(list_0, list_0)
    var_3 = module_0.obsolete_setter(bool_1, bool_1)
    bool_2 = True
    var_4 = module_0.obsolete_setter(list_0, bool_2)
    none_type_0 = None
    var_5 = module_0.obsolete_setter(none_type_0, var_2)
    var_6 = module_0.obsolete_setter(list_0, none_type_0)
    str_0 = "Vo<U^9u>_,"
    var_7 = module_0.obsolete_setter(var_6, str_0)
    var_8 = module_0.obsolete_setter(bool_0, none_type_0)
    bool_3 = False
    var_9 = module_0.obsolete_setter(var_6, var_3)
    var_10 = module_0.obsolete_setter(list_0, var_1)
    var_11 = module_0.obsolete_setter(bool_3, var_6)
    var_12 = module_0.obsolete_setter(var_5, bool_1)
    var_13 = module_0.obsolete_setter(var_6, bool_3)
    var_14 = module_0.obsolete_setter(var_6, str_0)


def test_case_3():
    complex_0 = 3367.31328 - 2425.1j
    var_0 = module_0.obsolete_setter(complex_0, complex_0)
    var_1 = module_0.obsolete_setter(var_0, var_0)
    var_2 = module_0.obsolete_setter(var_0, var_0)
    list_0 = []
    var_3 = module_0.obsolete_setter(list_0, list_0)
    var_4 = module_0.obsolete_setter(list_0, list_0)
    var_5 = module_0.obsolete_setter(list_0, var_4)
    var_6 = module_0.obsolete_setter(complex_0, list_0)
    var_7 = module_0.obsolete_setter(var_3, var_5)
    var_8 = module_0.obsolete_setter(var_3, complex_0)
    var_9 = module_0.obsolete_setter(var_3, list_0)
    var_10 = module_0.obsolete_setter(list_0, var_5)
    var_11 = module_0.obsolete_setter(var_9, var_5)
    none_type_0 = None
    var_12 = module_0.obsolete_setter(var_10, none_type_0)
    float_0 = 2033.47
    bool_0 = True
    var_13 = module_0.obsolete_setter(none_type_0, complex_0)
    var_14 = module_0.obsolete_setter(var_3, bool_0)
    var_15 = module_0.obsolete_setter(float_0, var_14)
    var_16 = module_0.obsolete_setter(list_0, var_14)
    var_17 = module_0.obsolete_setter(var_0, var_7)


def test_case_4():
    bytes_0 = b"\x01\x16\xba\xf0\x82#\xa0D"
    var_0 = module_0.obsolete_setter(bytes_0, bytes_0)
    float_0 = 3632.46
    var_1 = module_0.obsolete_setter(float_0, var_0)
    var_2 = module_0.obsolete_setter(bytes_0, bytes_0)
    list_0 = [var_0, var_0]
    var_3 = module_0.obsolete_setter(var_2, list_0)
    bytes_1 = b",\x02\x95\xe1\xe79\\\x9b\xe5"
    var_4 = module_0.obsolete_setter(list_0, var_3)
    var_5 = module_0.obsolete_setter(var_0, var_0)
    var_6 = module_0.obsolete_setter(bytes_1, var_0)
    var_7 = module_0.obsolete_setter(var_2, var_5)
    var_8 = module_0.obsolete_setter(var_0, var_2)
    bool_0 = True
    var_9 = module_0.obsolete_setter(var_5, bool_0)
    var_10 = module_0.obsolete_setter(bytes_1, bytes_1)
    var_11 = module_0.obsolete_setter(var_10, var_10)
    var_12 = module_0.obsolete_setter(bytes_1, bytes_1)
    var_13 = module_0.obsolete_setter(var_10, var_11)
    bytes_2 = b"\xac\xc0\xa2\xa1\xbc\xae\x08\xa1P\xcb\x14=n"
    bool_1 = False
    var_14 = module_0.obsolete_setter(bool_1, var_2)
    object_0 = module_1.object()
    var_15 = module_0.obsolete_setter(bytes_0, var_0)
    var_16 = module_0.obsolete_setter(var_10, object_0)
    var_17 = module_0.obsolete_setter(bytes_2, bytes_2)
    var_18 = module_0.obsolete_setter(bool_1, var_14)
    var_19 = module_0.obsolete_setter(var_17, var_17)
    var_20 = module_0.obsolete_setter(var_11, var_0)
    var_21 = module_0.obsolete_setter(var_10, var_17)
    var_22 = module_0.obsolete_setter(var_10, var_11)


def test_case_5():
    int_0 = -982
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    var_0 = module_0.obsolete_setter(dict_0, dict_0)
    none_type_0 = None
    var_1 = module_0.obsolete_setter(none_type_0, int_0)
    var_2 = module_0.obsolete_setter(none_type_0, dict_0)
    var_3 = module_0.obsolete_setter(none_type_0, none_type_0)
    bool_0 = False
    var_4 = module_0.obsolete_setter(var_0, var_1)
    tuple_0 = (bool_0, bool_0)
    var_5 = module_0.obsolete_setter(bool_0, var_2)
    var_6 = module_0.obsolete_setter(int_0, tuple_0)
