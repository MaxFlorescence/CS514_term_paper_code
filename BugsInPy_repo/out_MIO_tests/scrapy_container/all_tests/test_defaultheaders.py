# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import defaultheaders as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x96\x84+\xb4\xd2V\xd2\xbe\xf5\x16#\xfbL\x11\xa4\x89\xa1"
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(bytes_0)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )
    default_headers_middleware_0.process_request(
        default_headers_middleware_0, default_headers_middleware_0
    )


def test_case_1():
    set_0 = set()
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(set_0)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )
    var_0 = default_headers_middleware_0.process_request(
        set_0, default_headers_middleware_0
    )


def test_case_2():
    none_type_0 = None
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(none_type_0)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )


def test_case_3():
    set_0 = set()
    default_headers_middleware_0 = module_0.DefaultHeadersMiddleware(set_0)
    assert (
        f"{type(module_0.DefaultHeadersMiddleware.from_crawler).__module__}.{type(module_0.DefaultHeadersMiddleware.from_crawler).__qualname__}"
        == "builtins.method"
    )
