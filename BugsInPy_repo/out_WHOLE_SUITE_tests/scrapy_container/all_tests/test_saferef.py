# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import saferef as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.safeRef(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    module_0.BoundMethodWeakref(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 966
    module_0.BoundMethodWeakref(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.safeRef(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 1114
    module_0.safeRef(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "\nf<tT"
    module_0.BoundMethodWeakref(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    dict_0 = {}
    module_0.BoundMethodWeakref(dict_0)


def test_case_7():
    pass
