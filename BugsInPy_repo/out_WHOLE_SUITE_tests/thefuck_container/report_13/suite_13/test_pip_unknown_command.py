# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import pip_unknown_command as module_0
import enum as module_1
import re as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 162
    none_type_0 = None
    module_0.match(int_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    module_0.match(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    module_0.match(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.get_new_command(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    module_1.EnumMeta()


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\xbd\xba\xd7k\xd3\xcb\x17"
    module_2.subn(bytes_0, bytes_0, bytes_0, flags=bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    module_0.get_new_command(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    none_type_0 = None
    tuple_0 = ()
    module_0.match(none_type_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "1Yu# s8A"
    tuple_0 = (str_0,)
    module_2.findall(tuple_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    bytes_0 = b"o\xbf\x85\xe7zS\nKY\x16"
    list_0 = [bytes_0]
    none_type_0 = None
    module_2.match(list_0, none_type_0)
