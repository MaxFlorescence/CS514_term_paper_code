# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import find as module_0
import builtins as module_1
import exceptions as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "S`89"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    object_0 = module_1.object()
    module_0.find_template(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"r\xf9\x13v\x9b2\xc3'\x81\xb2\x1e\x03\xcc\x19\xf7\x07\xb1\x86l"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = -876.2
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 1277
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    exception_0 = module_1.Exception()
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_10():
    bytes_0 = b"\xb5\x1fj\xad\xdcs"
    module_0.find_template(bytes_0)


def test_case_11():
    cookiecutter_exception_0 = module_2.CookiecutterException()


@pytest.mark.xfail(strict=True)
def test_case_12():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_13():
    tuple_0 = ()
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_14():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_0 = (cookiecutter_exception_0, cookiecutter_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_15():
    complex_0 = -1109.34878 + 740.4j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_16():
    bytes_0 = b"%@s"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_17():
    bytes_0 = b"f\x1e7\xb4\xac\x80w\xdf\x1a\x94"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_18():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_19():
    list_0 = []
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_20():
    set_0 = set()
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_21():
    exception_0 = module_1.Exception()
    tuple_0 = (exception_0, exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_22():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_2.NonTemplatedInputDirException(**non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_23():
    float_0 = -1064.328629
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_24():
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(**dict_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_25():
    str_0 = "_C%yQh\rm\nm<\\eN^5"
    str_1 = "bRioe-"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_26():
    float_0 = -1222.420986
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_27():
    int_0 = -2071
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_28():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_29():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [cookiecutter_exception_0, cookiecutter_exception_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_30():
    tuple_0 = ()
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_31():
    bytes_0 = b"\x1a\x83\x1e:2*\xdf\x02@\xde\x88z"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_32():
    bytes_0 = b"\x1d\x82\xc7\x00"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_33():
    int_0 = 3780
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_34():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    exception_0 = module_1.Exception(*list_0)
    list_1 = [exception_0, exception_0, exception_0, none_type_0]
    module_2.NonTemplatedInputDirException(*list_1, **exception_0)


@pytest.mark.xfail(strict=True)
def test_case_35():
    list_0 = []
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_36():
    dict_0 = {}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_37():
    bytes_0 = b"\xbdO\xe3\x8cYi\xa4[f%f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_38():
    bytes_0 = b"\xc6\xabY\x12\x7f\xbd\xb3|\xae"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_39():
    complex_0 = 743.71 + 3520.38252j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_40():
    bytes_0 = b"+9$\\\x9a\x060"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_41():
    str_0 = "79Tb:&ww3\n\n2N+y4+"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_42():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_43():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_44():
    int_0 = -1257
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_45():
    base_exception_0 = module_1.BaseException()
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_46():
    int_0 = 224
    list_0 = [int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_47():
    str_0 = "V"
    str_1 = "B\\N*6acw0"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


def test_case_48():
    pass


@pytest.mark.xfail(strict=True)
def test_case_49():
    bytes_0 = b"\xafZ\x80\x14\x1e0g\x06\xf8H\xc9\xbc3lF\xb6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_50():
    float_0 = 1070.8423
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_51():
    float_0 = 69.937705
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_52():
    set_0 = set()
    bool_0 = True
    tuple_0 = (set_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_53():
    int_0 = -378
    set_0 = {int_0, int_0, int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_54():
    complex_0 = 793.0029 + 343.75269j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_55():
    base_exception_0 = module_1.BaseException()
    list_0 = [base_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_56():
    bytes_0 = b"\x89h\x88"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_57():
    str_0 = "T}u_t@v"
    list_0 = [str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_58():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_59():
    str_0 = "z]x{k_o2M"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


def test_case_60():
    pass


@pytest.mark.xfail(strict=True)
def test_case_61():
    bytes_0 = b"\xc5\xe3\x11\x96o\x1d\x1a-\xf6#\xaev\xd7\xa7\x9e\x06p\xec\xa2\xac"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_62():
    bytes_0 = b"\x0f\xc9\xb4\xb6+p0Rp\xa9\x91c\x1c\xee\x98\x96\x1c;\xd2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_63():
    str_0 = "D'_"
    str_1 = "n\x0c!YTE\r^L\\"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_64():
    base_exception_0 = module_1.BaseException()
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_65():
    bool_0 = False
    set_0 = {bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_66():
    int_0 = 551
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_67():
    bytes_0 = b"\xb7\xb3\xa7e\x98Z\xb0>"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_68():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    set_0 = {cookiecutter_exception_0, cookiecutter_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_69():
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)
    set_0 = {exception_0, exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_70():
    bytes_0 = b"~\x19n\xdf`\xaf\x80X\xe2Z\xc0\x19\xd9?t\x95"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_71():
    str_0 = "[60WT&}B"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_72():
    str_0 = "j?]|8%X"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_73():
    none_type_0 = None
    module_1.Exception(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_74():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    set_0 = {cookiecutter_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_75():
    bytes_0 = b"\xf0\x08\xce\xcc\x06\xda\xa0e\xff\xd9\x19\xd1M\xefC\xdf5\xc3\x1b5"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_76():
    str_0 = "#2\x0bTu\r4t $"
    bytes_0 = b"\x1e\xba\xaf\x01\x08>F\x04\x92\xe0\xca\x94\x84$\xec"
    dict_0 = {str_0: str_0, str_0: bytes_0, str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_77():
    str_0 = 'U"|36|0^E~D'
    set_0 = {str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_78():
    int_0 = 1105
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_79():
    str_0 = "_fobW&q%WWBr2"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_80():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_81():
    float_0 = 896.58296
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_82():
    str_0 = "NO3\tiJ:xp[2-9a%}"
    str_1 = "80_C&\x0cy>f\t:/H\r|"
    int_0 = 617
    dict_0 = {str_0: str_0, str_1: int_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


def test_case_83():
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_84():
    bool_0 = False
    module_1.object(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_85():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_86():
    bytes_0 = b'-\xda\xb1O\xe5u7\xb2\xcb\xae6l\xad\xa5"'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_87():
    str_0 = "\\"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_88():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_2.NonTemplatedInputDirException(**non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_89():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_90():
    list_0 = []
    list_1 = [list_0, list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_91():
    int_0 = 1374
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_92():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_93():
    str_0 = ",0"
    str_1 = "IBW{[yF\x0bi!tT,2;fv"
    str_2 = "NWd*wj\t_&NDE5F@L'$"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_94():
    complex_0 = 185 + 3950.8j
    set_0 = {complex_0, complex_0}
    float_0 = 363.82045
    list_0 = [set_0, complex_0, set_0, float_0]
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0, **dict_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_95():
    float_0 = 728.10736
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_96():
    exception_0 = module_1.Exception()
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_97():
    int_0 = 961
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_98():
    bytes_0 = b"C\xee\xa6\x1b\xe6ji\xbc\x1b\x82\xc7C\xc5\x14\xec\x84\xe4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_99():
    int_0 = -164
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_100():
    bytes_0 = b"\x14\r)}a\x06\x00X\xd3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_101():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    set_0 = {
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    }
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_102():
    str_0 = ""
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_103():
    str_0 = "#"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_104():
    str_0 = "<"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_105():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_106():
    int_0 = 2739
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_107():
    bytes_0 = b"\x93\xed\x12"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_108():
    dict_0 = {}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_109():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_0 = True
    tuple_0 = (
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        bool_0,
    )
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_110():
    int_0 = -1262
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_111():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    int_0 = -2111
    list_0 = [
        non_templated_input_dir_exception_0,
        int_0,
        int_0,
        non_templated_input_dir_exception_0,
    ]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_112():
    exception_0 = module_1.Exception()
    module_2.NonTemplatedInputDirException(*exception_0)


@pytest.mark.xfail(strict=True)
def test_case_113():
    float_0 = 247.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_114():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_2.CookiecutterException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_115():
    exception_0 = module_1.Exception()
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_116():
    set_0 = set()
    list_0 = [set_0, set_0, set_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_117():
    int_0 = -5050
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_118():
    bytes_0 = b"\xdd\xff\toi\x19\xc6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_119():
    str_0 = 'BIj7 a|:y,t"|\t'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_120():
    str_0 = "8;(Pjh*JOun:_"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_121():
    int_0 = 1813
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_122():
    str_0 = "6APgXFQ-;tTu4FP6d"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_123():
    str_0 = "rS;/ukYYBu;"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_124():
    bytes_0 = b""
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_125():
    float_0 = -1387.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_126():
    float_0 = -2326.6
    module_0.find_template(float_0)


def test_case_127():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    exception_0 = module_1.Exception()


@pytest.mark.xfail(strict=True)
def test_case_128():
    bytes_0 = b"\x8c\x97\x87[\xbd\xf4\x1ak\xc1Ub\xfay"
    list_0 = [bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_129():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    str_0 = ""
    tuple_0 = (bool_0, set_0, bool_0, str_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_130():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_131():
    bytes_0 = b"\xd6\xa5l0+E\xf4\xd1_\x08\x82"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_132():
    float_0 = -1894.902
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_133():
    int_0 = -902
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_134():
    bool_0 = True
    list_0 = []
    object_0 = module_1.object(*list_0)
    float_0 = -4496.0
    dict_0 = {bool_0: object_0, float_0: object_0, float_0: list_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_135():
    str_0 = "Cx9P;JZ/_\x0b?"
    complex_0 = 66.4 - 1254j
    dict_0 = {str_0: complex_0}
    list_0 = [dict_0]
    module_1.object(*list_0, **str_0)


@pytest.mark.xfail(strict=True)
def test_case_136():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    set_0 = set()
    tuple_0 = (
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        set_0,
        list_0,
    )
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_137():
    float_0 = 1901.7
    str_0 = "(_}10HN{g'@[Ie"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(*float_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_138():
    bytes_0 = b"\xcf\xeb\xf4m\xeaB\x06\xfb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_139():
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_140():
    int_0 = 2449
    bool_0 = False
    tuple_0 = (int_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_141():
    int_0 = -675
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {int_0: non_templated_input_dir_exception_0, int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_142():
    int_0 = -2735
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_143():
    int_0 = 753
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_144():
    str_0 = "3x]"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_145():
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_146():
    str_0 = "kI5%[M#\rG3 "
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_147():
    int_0 = 4329
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_148():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_149():
    tuple_0 = ()
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_150():
    int_0 = -2042
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_151():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    bool_0 = False
    tuple_0 = (cookiecutter_exception_0, cookiecutter_exception_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_152():
    str_0 = ""
    none_type_0 = None
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_153():
    int_0 = -1333
    list_0 = [int_0, int_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_154():
    str_0 = "ZaULON!"
    module_0.find_template(str_0)


def test_case_155():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )


@pytest.mark.xfail(strict=True)
def test_case_156():
    int_0 = -3006
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_157():
    str_0 = "Cq/cO@IsT=c}-\\s0h"
    set_0 = {str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_158():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_159():
    str_0 = "fA\tI\t^q"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_160():
    int_0 = -828
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_161():
    str_0 = "x"
    str_1 = "i\t]hLT6\x0c K&?"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_0: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_162():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_163():
    int_0 = -400
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_164():
    int_0 = 628
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_165():
    none_type_0 = None
    module_1.BaseException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_166():
    int_0 = 2031
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_167():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    module_2.NonTemplatedInputDirException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_168():
    int_0 = 2184
    module_0.find_template(int_0)


def test_case_169():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_170():
    str_0 = 'gD2Z}t5P-DUxLnyf "i.'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_171():
    float_0 = -2184.688
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_172():
    bytes_0 = b"Q\xcf\xaaf\x0f\xe2\x83(\xcf~\x96Z\xfd\xc1a\x08\x9b"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_173():
    str_0 = "*_Jd2=!JWRXPfi7+"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_174():
    int_0 = -3831
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_175():
    int_0 = -2115
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_176():
    bool_0 = True
    list_0 = [bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_177():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_178():
    str_0 = "Mz6g!)F~fISAX"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_179():
    bytes_0 = b"\xe0\x15\xf7\xd5\xec\xe2\x19\xe3\xde\xbe\x12\xdf\xe6 "
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_180():
    str_0 = "kxXRe.\\^\\\r\r3-&\x0bg7"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_181():
    int_0 = 2169
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_182():
    bool_0 = False
    list_0 = [bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_183():
    bool_0 = True
    str_0 = "-wMTFh,b=;gdVNS=.^3}"
    bool_1 = True
    str_1 = "d{~"
    dict_0 = {str_0: bool_1, str_0: bool_1, str_0: str_0, str_1: bool_1}
    module_2.NonTemplatedInputDirException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_184():
    str_0 = "\ra%7&RKS%\n6*7"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_185():
    float_0 = -1137.40175
    dict_0 = {float_0: float_0, float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_186():
    float_0 = -1668.916
    list_0 = [float_0, float_0, float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_187():
    str_0 = "M<]=,"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_188():
    str_0 = ".UW+Br=tr.@xGZa&{"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_189():
    str_0 = ":Mr3NSx/g$l%M%\x0b"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_190():
    str_0 = '*F9%HHbTLb"}Fi{O)TLm'
    int_0 = 1307
    tuple_0 = (str_0, int_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_191():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_192():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_193():
    bytes_0 = b"\x93T\xbc\xf95\xcf \xd0\xab\xa1"
    module_0.find_template(bytes_0)


def test_case_194():
    pass


@pytest.mark.xfail(strict=True)
def test_case_195():
    int_0 = -3038
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_196():
    int_0 = -2596
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_197():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_198():
    int_0 = -662
    list_0 = [int_0, int_0, int_0]
    dict_0 = {}
    module_1.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_199():
    str_0 = "\n?e~rUcig[JX^S"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_200():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_201():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    float_0 = -2589.691847
    tuple_0 = (cookiecutter_exception_0, float_0)
    dict_0 = {tuple_0: float_0}
    list_0 = [dict_0, float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_202():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_0 = False
    tuple_0 = (non_templated_input_dir_exception_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_203():
    float_0 = -1553.0
    set_0 = {float_0, float_0}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(*set_0)
    set_1 = {non_templated_input_dir_exception_0}
    module_0.find_template(set_1)


@pytest.mark.xfail(strict=True)
def test_case_204():
    int_0 = 3279
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_205():
    int_0 = 1697
    list_0 = [int_0, int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_206():
    str_0 = "K 1@~W1LM0kSa"
    str_1 = "Eq$\rm7\rt?g 78n\r"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_207():
    set_0 = set()
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [set_0, set_0, non_templated_input_dir_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_208():
    int_0 = 2581
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_209():
    complex_0 = -3040.298091 + 2774.021674j
    bool_0 = True
    tuple_0 = (complex_0, bool_0, complex_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_210():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    bool_0 = False
    list_0 = [cookiecutter_exception_0, cookiecutter_exception_0, bool_0, bool_0]
    none_type_0 = None
    module_2.NonTemplatedInputDirException(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_211():
    str_0 = "sj/^gW"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_212():
    float_0 = 421.6254
    module_0.find_template(float_0)


def test_case_213():
    pass


@pytest.mark.xfail(strict=True)
def test_case_214():
    complex_0 = 817.610758 + 2325.089424j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_215():
    bool_0 = True
    set_0 = {bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_216():
    dict_0 = {}
    base_exception_0 = module_1.BaseException(**dict_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_217():
    set_0 = set()
    tuple_0 = (set_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_218():
    float_0 = -133.658976
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_219():
    int_0 = 1608
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_220():
    bool_0 = False
    tuple_0 = (bool_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_221():
    float_0 = -730.8946
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_222():
    object_0 = module_1.object()
    list_0 = [object_0, object_0, object_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_223():
    str_0 = "$k),"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_224():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_225():
    bytes_0 = b"6\x01K\xa2\x87\xe2\x03w\x0f{R\x9a\x01"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_226():
    float_0 = -1514.978921
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_227():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: set_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_228():
    bytes_0 = b"\xd5\xa4\xc4\xd0'>5w\xf6?\x80\xc7\xf9O"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_229():
    int_0 = 3756
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_230():
    complex_0 = -44.6298 + 1456.92145j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_231():
    bytes_0 = b"9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_232():
    int_0 = 2071
    list_0 = [int_0, int_0]
    str_0 = "}I2tjImnelyh111dS"
    dict_0 = {str_0: int_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_233():
    bytes_0 = b"o<q\x936<"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_234():
    str_0 = "v:^fMIrR"
    tuple_0 = (str_0, str_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_235():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_236():
    bytes_0 = b"\xce\xbe%\xed\xcc\x86\xf1\x9d\x8b$\xdf\xd8\x0b\xd2\xc8\xb1"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_237():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0]
    str_0 = "Zi#Gb$X;7lPg]%"
    dict_0 = {}
    dict_1 = {str_0: list_0, str_0: dict_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_1)


@pytest.mark.xfail(strict=True)
def test_case_238():
    str_0 = "hegI\n%F@$cFEf}h*"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_239():
    bool_0 = False
    list_0 = [bool_0]
    module_2.CookiecutterException(*list_0, **bool_0)


@pytest.mark.xfail(strict=True)
def test_case_240():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    set_0 = {non_templated_input_dir_exception_0, non_templated_input_dir_exception_0}
    tuple_0 = (
        non_templated_input_dir_exception_0,
        set_0,
        non_templated_input_dir_exception_0,
    )
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_241():
    str_0 = "gLtyt%%o3McWu"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_242():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    tuple_0 = (bool_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_243():
    none_type_0 = None
    module_1.BaseException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_244():
    str_0 = "0K^#N-"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_245():
    str_0 = "%D"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_246():
    float_0 = 2908.5239
    module_0.find_template(float_0)


def test_case_247():
    pass


@pytest.mark.xfail(strict=True)
def test_case_248():
    str_0 = ")4|s!iE1"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_249():
    str_0 = "TjT7e|8 ^vID)Q{Sa5 "
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_250():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    list_1 = [list_0, non_templated_input_dir_exception_0]
    module_1.object(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_251():
    exception_0 = module_1.Exception()
    module_1.Exception(**exception_0)


@pytest.mark.xfail(strict=True)
def test_case_252():
    dict_0 = {}
    base_exception_0 = module_1.BaseException(**dict_0)
    dict_1 = {base_exception_0: base_exception_0}
    module_0.find_template(dict_1)


@pytest.mark.xfail(strict=True)
def test_case_253():
    float_0 = 2696.25628
    module_0.find_template(float_0)


def test_case_254():
    pass


@pytest.mark.xfail(strict=True)
def test_case_255():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_256():
    bytes_0 = b" q\x04\xe5 |\xcfd*\x16\x14q"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_257():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [cookiecutter_exception_0, cookiecutter_exception_0]
    bool_0 = False
    tuple_0 = (cookiecutter_exception_0, list_0, cookiecutter_exception_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_258():
    bytes_0 = b"\xeb\xb3\x82\xfd\x84Y}\x81\x13+"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_259():
    bytes_0 = b"\xd3\xb1\x08(\x82QI\xa5LH\\M\xe7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_260():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_261():
    int_0 = 4125
    set_0 = {int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_262():
    complex_0 = 1570.941 - 352j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_263():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_2.CookiecutterException(**non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_264():
    bytes_0 = b"$\x9c\xc2|\x17\xe7("
    bool_0 = False
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (bytes_0, bool_0, non_templated_input_dir_exception_0, bool_0)
    complex_0 = -493.94798 + 446.82j
    str_0 = ""
    tuple_1 = (non_templated_input_dir_exception_0, complex_0, str_0, bool_0)
    bytes_1 = b"\xa3\xf2\x12j\x9e\xc2e\xfdmj+/\xfb\xd4\x89\xe82;"
    dict_0 = {
        tuple_0: tuple_0,
        bool_0: non_templated_input_dir_exception_0,
        tuple_1: tuple_1,
        tuple_1: bytes_1,
    }
    tuple_2 = (
        dict_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    )
    module_0.find_template(tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_265():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_266():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_267():
    float_0 = -257.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_268():
    int_0 = -522
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_269():
    str_0 = '~rf\t\n"her]b#kN'
    list_0 = [str_0, str_0, str_0, str_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_1)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_270():
    str_0 = ",Ozem{;L"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_271():
    int_0 = 591
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_272():
    bytes_0 = b"\xac[xt\xd5aL"
    list_0 = [bytes_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    list_1 = [cookiecutter_exception_0, list_0, bytes_0, list_0]
    cookiecutter_exception_1 = module_2.CookiecutterException(*list_1)
    module_0.find_template(cookiecutter_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_273():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    complex_0 = 4809.56 + 282.8043j
    set_0 = {complex_0, non_templated_input_dir_exception_0}
    tuple_0 = (complex_0, set_0, non_templated_input_dir_exception_0)
    bool_0 = False
    tuple_1 = (
        non_templated_input_dir_exception_0,
        tuple_0,
        non_templated_input_dir_exception_0,
        bool_0,
    )
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_274():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_275():
    bytes_0 = b"\xf8E\x8f\xca\xa8"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_276():
    float_0 = -2393.6
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_277():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_2.CookiecutterException(
        *cookiecutter_exception_0, **cookiecutter_exception_0
    )


@pytest.mark.xfail(strict=True)
def test_case_278():
    int_0 = -1037
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_279():
    str_0 = ">|4mon\x0b"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_280():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    tuple_0 = (list_0,)
    module_0.find_template(tuple_0)


def test_case_281():
    object_0 = module_1.object()


@pytest.mark.xfail(strict=True)
def test_case_282():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    set_0 = {
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    }
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_283():
    bytes_0 = b"o\x99"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_284():
    complex_0 = -2099.111345 + 45j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_285():
    float_0 = -572.098
    list_0 = [float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_286():
    complex_0 = -1369.42839 - 989.5636j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_287():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_288():
    int_0 = -2172
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_289():
    float_0 = -842.28
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_290():
    str_0 = "xl;rs6ZqgfUMc[#6>7;\\"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_291():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_292():
    str_0 = "-Nd0x'B*GIy+"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_293():
    bytes_0 = b"\x99\xe1\x0f\xe6\x85\x1f\xdb\xee\xec"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_294():
    int_0 = -2655
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_295():
    bytes_0 = b"\x81\xe0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_296():
    float_0 = -122.56
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_297():
    str_0 = "]]`UnN@mRbj\x0bp3M"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_298():
    str_0 = ">eX+WX()<(QHii"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_299():
    list_0 = []
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


def test_case_300():
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_301():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_302():
    str_0 = "7gn474Y!Dk%jd`"
    str_1 = "n'V"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_303():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_304():
    complex_0 = -3526.561862 + 3408.203j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_305():
    str_0 = 'VMZIxTT":`ibWtp'
    none_type_0 = None
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    module_1.BaseException(**dict_0)


def test_case_306():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    base_exception_0 = module_1.BaseException(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_307():
    int_0 = 38
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_308():
    str_0 = "|V_Zn)\x0bw]gk;V"
    list_0 = [str_0, str_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_309():
    str_0 = "V"
    str_1 = "3..Q"
    str_2 = "NOgMP@z\x0b+Ehh`FDh"
    dict_0 = {str_0: str_0, str_1: str_2, str_1: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_310():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_311():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    cookiecutter_exception_0 = module_2.CookiecutterException(*set_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_312():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    set_0 = {
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    }
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_313():
    dict_0 = {}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_314():
    str_0 = "0"
    list_0 = [str_0]
    module_1.BaseException(*list_0, **str_0)


@pytest.mark.xfail(strict=True)
def test_case_315():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {non_templated_input_dir_exception_0: non_templated_input_dir_exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_316():
    str_0 = "+x\r5U WiX{"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_317():
    int_0 = 1847
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_318():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (non_templated_input_dir_exception_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_319():
    int_0 = 3603
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_320():
    float_0 = -3663.302
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_321():
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)
    dict_1 = {exception_0: dict_0}
    bool_0 = True
    str_0 = "]3(b\x0b,K@7#U>?"
    tuple_0 = (dict_1, exception_0, bool_0, str_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_322():
    str_0 = "`"
    str_1 = "j@u#DpTrsr{j"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_323():
    float_0 = 525.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_324():
    int_0 = 1772
    int_1 = -1734
    int_2 = 987
    dict_0 = {int_0: int_0, int_1: int_1, int_2: int_2}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_325():
    int_0 = -2536
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_326():
    list_0 = []
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0, **dict_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_327():
    int_0 = 606
    set_0 = {int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_328():
    int_0 = 6123
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_329():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_330():
    bytes_0 = b"\xfc\x1c\x9aO\xad\xd1\xf6\xca"
    base_exception_0 = module_1.BaseException(*bytes_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_331():
    str_0 = "=y)6Ed_PjW"
    bool_0 = False
    str_1 = "^:+@$tD;uX\r<Lk"
    dict_0 = {str_0: bool_0, str_1: bool_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_332():
    float_0 = 1694.07
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_333():
    int_0 = 2280
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_334():
    int_0 = 693
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_335():
    complex_0 = -405.3337 + 2253.077j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_336():
    int_0 = -2625
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_337():
    int_0 = -288
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_338():
    set_0 = set()
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_339():
    complex_0 = 86.3321 - 3973.53055j
    module_0.find_template(complex_0)


def test_case_340():
    pass


@pytest.mark.xfail(strict=True)
def test_case_341():
    int_0 = 497
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_342():
    exception_0 = module_1.Exception()
    set_0 = {exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_343():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_0 = True
    bytes_0 = b'\xb0\x159N\xc5\xeb\xbd!"\xdb6\xfe\xf9F"\xc7\n\xa2'
    tuple_0 = (non_templated_input_dir_exception_0, bool_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_344():
    int_0 = 430
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_345():
    str_0 = "z3a\r"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_346():
    str_0 = "(YQYSb9,9"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_347():
    bytes_0 = b"\n\x8b"
    set_0 = {bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_348():
    str_0 = '?"0f+k9j`'
    module_0.find_template(str_0)


def test_case_349():
    pass


@pytest.mark.xfail(strict=True)
def test_case_350():
    int_0 = 1948
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_351():
    int_0 = -938
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_352():
    float_0 = -1111.58
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_353():
    int_0 = 1843
    list_0 = [int_0, int_0, int_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


def test_case_354():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )


@pytest.mark.xfail(strict=True)
def test_case_355():
    int_0 = 637
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_356():
    str_0 = "'LT:|xwp,("
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_357():
    complex_0 = 1762.28955 - 2541j
    list_0 = [complex_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_358():
    float_0 = -13.8
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_359():
    bytes_0 = b"\xf3="
    module_0.find_template(bytes_0)


def test_case_360():
    pass


def test_case_361():
    pass


@pytest.mark.xfail(strict=True)
def test_case_362():
    str_0 = "QigrCV+ux>_U3'-"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_363():
    bytes_0 = b"\xad8\x1eF\xf3]\xa4\xe4\xb5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_364():
    bytes_0 = b"\xf5\xb3\xfb\x14\xac\x0c.\xf5S\xe8\xefbBe\xc1\xd1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_365():
    complex_0 = -1281.1 + 2657.3j
    module_0.find_template(complex_0)


def test_case_366():
    pass


@pytest.mark.xfail(strict=True)
def test_case_367():
    str_0 = ""
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_368():
    float_0 = -1302.5
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_369():
    none_type_0 = None
    module_2.NonTemplatedInputDirException(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_370():
    str_0 = "\rBga"
    tuple_0 = (str_0, str_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_371():
    set_0 = set()
    module_2.NonTemplatedInputDirException(**set_0)


def test_case_372():
    list_0 = []
    exception_0 = module_1.Exception(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_373():
    str_0 = "G}K9gT/R7"
    str_1 = "3usXitTF5&RNnm+M"
    dict_0 = {str_1: str_0, str_0: str_0, str_1: str_1}
    module_1.object(**dict_0)


def test_case_374():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_375():
    str_0 = "YFZ9T"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_376():
    bool_0 = True
    int_0 = -3912
    set_0 = {bool_0, bool_0, int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_377():
    bytes_0 = b"\x82\xed\xd3\x8b-\xeev\xeb?"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_378():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
    }
    dict_1 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: dict_0,
    }
    module_0.find_template(dict_1)


@pytest.mark.xfail(strict=True)
def test_case_379():
    bytes_0 = b"'\x9d\xe6\x88\x1d\x8c\xeb\xaa\\\x10L\xff\xcf\xea\n.\xd8\x82\xc0"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_380():
    bytes_0 = b"]\x9e\x0e\xf9\x93\xf9\xe7\x91\x8e0\x06\xb3\t\xab\xe8\x8c"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_381():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_382():
    float_0 = -876.563023
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_383():
    bytes_0 = b"\xb9\x02\xf8\x99\x14}xO\xa1\x1a\xe6\x95\xf23\xa8\xb5\xcd\x0f\xc0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_384():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_385():
    int_0 = 424
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_386():
    bytes_0 = b"@\xa37\x89\xfe\x11"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_387():
    bytes_0 = b"c\xbd\x87\x9a\x9b\x82\xda\xf5+DFC\xe9"
    int_0 = -1490
    dict_0 = {bytes_0: bytes_0, int_0: bytes_0, int_0: bytes_0}
    bool_0 = False
    tuple_0 = (dict_0, bool_0, bytes_0, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_388():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_389():
    bytes_0 = b"o8\xa2\x1b\x95"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_390():
    str_0 = "Y}!7V\r,\tLY_FMY`"
    list_0 = [str_0, str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_391():
    bytes_0 = b"\xa1}\t\xa0\x88vA\x88&w\xe7\xd8\xd1\xde\n-\xe1\xcbz"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_392():
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )
    tuple_0 = (set_0, non_templated_input_dir_exception_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_393():
    bytes_0 = b"A\xedH\xd1o\x1ey\xe9v/qB\x85Hh9eA"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_394():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_395():
    int_0 = 607
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_396():
    bytes_0 = b"\x00"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_397():
    str_0 = "vYxGhT5~S"
    str_1 = '?\x0b&D}>47%|(ita&\t"p'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


def test_case_398():
    pass


@pytest.mark.xfail(strict=True)
def test_case_399():
    int_0 = -1351
    tuple_0 = (int_0, int_0, int_0)
    int_1 = 121
    tuple_1 = (tuple_0, int_1)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_400():
    exception_0 = module_1.Exception()
    module_2.NonTemplatedInputDirException(**exception_0)


@pytest.mark.xfail(strict=True)
def test_case_401():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_402():
    str_0 = "%iWv$;;iZt#j\n1!"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_403():
    int_0 = -249
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_404():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_405():
    str_0 = "aM{x7U8nF_fn^#O:"
    str_1 = "UMWw&@"
    str_2 = "1'R_\x0c~"
    str_3 = "D"
    dict_0 = {str_0: str_1, str_2: str_1, str_3: str_1, str_2: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_406():
    complex_0 = 1746 - 1407.9j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_407():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    list_0 = [dict_0, bool_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_408():
    bytes_0 = b"#lp\xf2/\x07\xec\x89\xaf\xa8"
    set_0 = {bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_409():
    complex_0 = -4219.5 + 116.018j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_410():
    list_0 = []
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    set_0 = {cookiecutter_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_411():
    int_0 = -1193
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_412():
    object_0 = module_1.object()
    set_0 = {object_0, object_0, object_0, object_0}
    list_0 = [set_0, object_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_413():
    str_0 = 'DiRro"3'
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_414():
    float_0 = -713.97
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_415():
    none_type_0 = None
    list_0 = [none_type_0]
    str_0 = 'IH"+zQ'
    dict_0 = {str_0: str_0, str_0: none_type_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_416():
    int_0 = 3158
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_417():
    int_0 = 278
    tuple_0 = (int_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_418():
    int_0 = 1911
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_419():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_420():
    str_0 = "3i\x0c8DAzP"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_421():
    str_0 = "'`Qj"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_422():
    float_0 = -749.8996
    list_0 = [float_0, float_0, float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_423():
    str_0 = 'x>UdQ"e*pgh=X'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_424():
    int_0 = -621
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_425():
    float_0 = 1375.6
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_426():
    int_0 = -2773
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_427():
    int_0 = -1715
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_428():
    str_0 = "?&\x0c-\\>N~7"
    dict_0 = {str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_429():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_430():
    float_0 = -988.82
    set_0 = {float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_431():
    bytes_0 = b"\xaf\xfa\x07J\xb63`\x17\xb7\xa7\xf0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_432():
    list_0 = []
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


def test_case_433():
    pass


@pytest.mark.xfail(strict=True)
def test_case_434():
    float_0 = -3233.98377
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_435():
    int_0 = 5318
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_436():
    str_0 = "CUvP@9Q2Ml"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_437():
    str_0 = ":=6^"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_438():
    bytes_0 = b"K\x0ei\xf1\x8a\xd4\x9a6a%\xf4I\x82\x0b\xf5\xc0\x10\xd9\xbb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_439():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_440():
    int_0 = 2848
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_441():
    int_0 = -4531
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_442():
    bytes_0 = b"m\xcf\x0f-!\xeb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_443():
    int_0 = -1079
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_444():
    float_0 = 2501.06
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_445():
    object_0 = module_1.object()
    module_2.NonTemplatedInputDirException(*object_0)


@pytest.mark.xfail(strict=True)
def test_case_446():
    int_0 = -1296
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_447():
    bytes_0 = b"D\xd6\x13t{\xe7\xbb\x14,p\xbd!\x16\x82\x8a\xd3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_448():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_449():
    bytes_0 = b"R\xb8t/\xb2\x15\x1f\x89$E\x8b"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_450():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    cookiecutter_exception_1 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_451():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    str_0 = '{%"O4n>5Td('
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        str_0: non_templated_input_dir_exception_0,
    }
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_452():
    int_0 = 1729
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_453():
    int_0 = 2651
    dict_0 = {int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_454():
    int_0 = 3794
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_455():
    int_0 = 486
    dict_0 = {int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_456():
    bytes_0 = b"\xd0j\xc3.\xb7\xb5n$\x05"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_457():
    int_0 = 1378
    bytes_0 = b"\xa0r\xd8\xf0p!\xb6\xe3\x19\xe4\xae\x1b\xca\x91\xb3\n\x97~"
    list_0 = [int_0, int_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_458():
    str_0 = 'Tb5je"!\x0cg3i{'
    none_type_0 = None
    str_1 = ""
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_459():
    bytes_0 = b"\xb1"
    bool_0 = True
    set_0 = {bytes_0, bool_0, bool_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_460():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_461():
    float_0 = 830.53
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_462():
    list_0 = []
    base_exception_0 = module_1.BaseException(*list_0)
    set_0 = {base_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_463():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_1.Exception(**base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_464():
    complex_0 = -714.44 + 147j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_465():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_466():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_467():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    list_0 = [non_templated_input_dir_exception_0, dict_0, dict_0, dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_468():
    float_0 = -2503.11
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_469():
    bytes_0 = b""
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_470():
    bytes_0 = b"\xdb\xe0\xd4\xecUr\xa6\x9bS\xd9D\x0b\\\xa8I"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_471():
    float_0 = 3639.48
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_472():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_473():
    bytes_0 = b"\xbd\x9e)\xff\x8bz\x15\xfa\x96\x8b%\xc7="
    cookiecutter_exception_0 = module_2.CookiecutterException(*bytes_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_474():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    module_0.find_template(object_0)


@pytest.mark.xfail(strict=True)
def test_case_475():
    bool_0 = True
    bytes_0 = b"[$O`vI9{\xdc\x86\xf5f\xe0"
    dict_0 = {bool_0: bool_0, bytes_0: bool_0, bytes_0: bool_0, bool_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_476():
    int_0 = -4942
    module_2.CookiecutterException(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_477():
    str_0 = "(k^IG{w83\x0c"
    float_0 = -2376.0
    dict_0 = {str_0: float_0, str_0: float_0, float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_478():
    complex_0 = 1688.677479 + 606.8105j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_479():
    tuple_0 = ()
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_480():
    bytes_0 = b"\xeb\xa8\xca[-Khp\t\xeeO"
    base_exception_0 = module_1.BaseException(*bytes_0)
    module_2.NonTemplatedInputDirException(**base_exception_0)


def test_case_481():
    int_0 = 1715
    list_0 = [int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )


@pytest.mark.xfail(strict=True)
def test_case_482():
    list_0 = []
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_483():
    int_0 = -404
    module_0.find_template(int_0)


def test_case_484():
    exception_0 = module_1.Exception()


@pytest.mark.xfail(strict=True)
def test_case_485():
    str_0 = "eaXy\n\x0bGGF_ L"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_486():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )
    object_0 = module_1.object()
    list_1 = [non_templated_input_dir_exception_0, object_0, none_type_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_487():
    int_0 = 2358
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_488():
    complex_0 = -2882.2275 + 609.03074j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_489():
    int_0 = 1231
    tuple_0 = (int_0, int_0, int_0)
    cookiecutter_exception_0 = module_2.CookiecutterException(*tuple_0)
    set_0 = {cookiecutter_exception_0, cookiecutter_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_490():
    int_0 = 1351
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_491():
    int_0 = -39
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_492():
    str_0 = "y8o'kZFQb3#UR<)'."
    str_1 = "CRMG ##"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_493():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    set_0 = {
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    }
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_494():
    str_0 = "k"
    str_1 = "`pcIibLiRJ%PH\x0c6v.P"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_495():
    float_0 = -2118.8
    str_0 = "5_i\\Iy6D34|'9Y-hVo"
    tuple_0 = (float_0,)
    dict_0 = {float_0: str_0, float_0: tuple_0}
    tuple_1 = (float_0, str_0, tuple_0, dict_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_496():
    int_0 = -3705
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_497():
    bool_0 = False
    set_0 = {bool_0}
    list_0 = [set_0]
    list_1 = [list_0, set_0, list_0, bool_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_498():
    bytes_0 = b"0\xfc\xf8o\x1b\x810.\xfet/\x9e\x82\x83y\xdfo"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_499():
    str_0 = "/G\run}b=);ADy\tR!~0E\n"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_500():
    float_0 = 1768.1375
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_501():
    tuple_0 = ()
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_0 = False
    tuple_1 = (
        tuple_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        bool_0,
    )
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_502():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_503():
    list_0 = []
    exception_0 = module_1.Exception(*list_0)
    module_2.NonTemplatedInputDirException(*exception_0)


@pytest.mark.xfail(strict=True)
def test_case_504():
    bool_0 = True
    list_0 = [bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    tuple_0 = (non_templated_input_dir_exception_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_505():
    int_0 = -966
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_506():
    float_0 = -784.7156
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_507():
    int_0 = 991
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_508():
    bytes_0 = b"\xfc\xcf\xfb\xc4W\x13\xcd\x12\xb7\r\rC\xefM5\xb3\x82$"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_509():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_510():
    str_0 = "I9\\a9\x0c5_BD{>v^#1c"
    exception_0 = module_1.Exception()
    list_0 = [str_0, str_0, exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_511():
    bytes_0 = b"\xb7\xff\xf0K?\xd8\x05K\x90\xa0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_512():
    int_0 = -862
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_513():
    int_0 = 4835
    module_0.find_template(int_0)


def test_case_514():
    pass


@pytest.mark.xfail(strict=True)
def test_case_515():
    float_0 = 3427.0187
    dict_0 = {float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_516():
    complex_0 = -166.703485 + 1081.62j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_517():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (non_templated_input_dir_exception_0, non_templated_input_dir_exception_0)
    list_0 = [tuple_0, non_templated_input_dir_exception_0, tuple_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_518():
    int_0 = -1917
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_519():
    bytes_0 = b"\x08$\x9fLW\x8d\xce>\x1e\x8dD\xeav"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_520():
    dict_0 = {}
    base_exception_0 = module_1.BaseException(**dict_0)
    list_0 = [base_exception_0]
    base_exception_1 = module_1.BaseException(*list_0)
    list_1 = [base_exception_1]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_521():
    bytes_0 = b"\xa5\x05\xf6\xdb@2_\xe3M\x17x\xe9\x87\x0bzZy\xcb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_522():
    bytes_0 = b"\xad\xa1=\x82L\xa1\xbf\xe2@\xda"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_523():
    exception_0 = module_1.Exception()
    dict_0 = {exception_0: exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_524():
    bool_0 = True
    list_0 = [bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_525():
    none_type_0 = None
    module_2.CookiecutterException(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_526():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    exception_0 = module_1.Exception(*list_0)
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (exception_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_527():
    base_exception_0 = module_1.BaseException()
    list_0 = [base_exception_0, base_exception_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_528():
    complex_0 = 1141.106 - 1523.941566j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_529():
    float_0 = -1105.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_530():
    float_0 = 2545.05414
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_531():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_532():
    bytes_0 = b"\xfd\x00{X\x0e\x1e}da\x05\x97\xcf|"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_533():
    complex_0 = -2435.5049 - 634.31393j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_534():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    module_2.NonTemplatedInputDirException(*list_1, **list_1)


@pytest.mark.xfail(strict=True)
def test_case_535():
    set_0 = set()
    list_0 = [set_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_536():
    bytes_0 = b"\x84"
    module_0.find_template(bytes_0)


def test_case_537():
    list_0 = []
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_538():
    str_0 = "9XI:\r>ip\x0byb)"
    str_1 = ""
    str_2 = "Y-0f"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_539():
    int_0 = 2541
    set_0 = {int_0, int_0, int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_540():
    bytes_0 = b"7M\x04Z\xf5$\xc6\xd5\x88\x9c\xa8\x10\xabb\xba\x00"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_541():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    str_0 = "ILnXll0Yj:]r0[P]:"
    bool_0 = False
    dict_0 = {str_0: bool_0}
    module_1.Exception(*non_templated_input_dir_exception_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_542():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_543():
    str_0 = "-EWt.K'"
    str_1 = "mow1"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_544():
    str_0 = "E(F"
    str_1 = ""
    str_2 = "GkUt9J"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2, str_1: str_2}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_545():
    complex_0 = -286.6 - 3733.3899j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_546():
    str_0 = "o.q."
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_547():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [cookiecutter_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_548():
    bytes_0 = b'\xc2M\x9eQ\xd8\xd1"4\xe6y*\xa3\x8e\xff'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_549():
    str_0 = "e2)\\/,"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_550():
    bytes_0 = b"\x8e\xb3HR\xd3\x9d\xb7n"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_551():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_552():
    int_0 = 42
    int_1 = -158
    list_0 = [int_0, int_0, int_1]
    tuple_0 = (int_1, list_0, int_1, int_1)
    tuple_1 = (int_0, tuple_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_553():
    base_exception_0 = module_1.BaseException()
    list_0 = [base_exception_0, base_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_554():
    base_exception_0 = module_1.BaseException()
    dict_0 = {
        base_exception_0: base_exception_0,
        base_exception_0: base_exception_0,
        base_exception_0: base_exception_0,
        base_exception_0: base_exception_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_555():
    str_0 = "{uVi`\n&6'+O^lZ|KG"
    list_0 = [str_0, str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_556():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_557():
    str_0 = "lh.LY:\tE*m|`\x0c,A%"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


def test_case_558():
    pass


@pytest.mark.xfail(strict=True)
def test_case_559():
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(**dict_0)
    list_0 = [cookiecutter_exception_0]
    cookiecutter_exception_1 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_560():
    bool_0 = True
    module_1.Exception(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_561():
    str_0 = "^"
    set_0 = {str_0, str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_562():
    int_0 = -554
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_563():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_564():
    int_0 = -1682
    set_0 = {int_0, int_0, int_0}
    list_0 = [set_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


def test_case_565():
    pass


@pytest.mark.xfail(strict=True)
def test_case_566():
    str_0 = "Xv@k$;'DI071qOs3"
    str_1 = '\x0c)":\rA0d~FIgvUmza+e'
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_567():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_568():
    str_0 = "@ 5.\x0bOm4"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_569():
    int_0 = 3208
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    list_0 = [dict_0, int_0, dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_570():
    complex_0 = 942.11 + 917j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_571():
    int_0 = 1382
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_572():
    str_0 = "N6'DkTGqm}}trK!9?x#g"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_573():
    int_0 = -679
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_574():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_575():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    str_0 = "L+ZV`tk<Go7s"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_576():
    bytes_0 = b")"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_577():
    str_0 = ")l"
    str_1 = " "
    str_2 = "J O_k%~H~&Btty"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1, str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_578():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0, **dict_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_579():
    str_0 = ","
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_580():
    str_0 = "8=i<N`t/MvC\x0b+ZT\tn"
    dict_0 = {str_0: str_0}
    dict_1 = {str_0: dict_0}
    module_1.Exception(**dict_1)


@pytest.mark.xfail(strict=True)
def test_case_581():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_2.NonTemplatedInputDirException(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_582():
    int_0 = 3945
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_583():
    bytes_0 = b"\x9f\xe1\xf0\xc5\x96\xa5\xbaG\xc7\xcf\xdeIU"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_584():
    str_0 = "\n$FS~eYy+"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_585():
    float_0 = 2554.346
    module_1.Exception(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_586():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [cookiecutter_exception_0]
    cookiecutter_exception_1 = module_2.CookiecutterException(*list_0)
    tuple_0 = (cookiecutter_exception_1, cookiecutter_exception_1)
    list_1 = [tuple_0, cookiecutter_exception_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_587():
    float_0 = 595.38189
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_588():
    float_0 = 745.6
    dict_0 = {float_0: float_0, float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_589():
    str_0 = "\x0cbZZZh5mQ?OlVqKMN"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_590():
    int_0 = -273
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_591():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_592():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_593():
    list_0 = []
    module_2.NonTemplatedInputDirException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_594():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_595():
    str_0 = '2 \rLS\rT@eK"\x0b8@JM3W~L'
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    set_0 = {
        str_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    }
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_596():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    int_0 = -2614
    object_0 = module_1.object()
    bool_0 = True
    dict_0 = {object_0: cookiecutter_exception_0, object_0: bool_0, object_0: bool_0}
    tuple_0 = (cookiecutter_exception_0, int_0, cookiecutter_exception_0, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_597():
    int_0 = -190
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_598():
    bytes_0 = b"!4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_599():
    bytes_0 = b"\x14\xe3\xe1\x1d\x04u^\xe4\t\x9e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_600():
    int_0 = -2189
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_601():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_2.CookiecutterException(*list_0, **bool_0)


@pytest.mark.xfail(strict=True)
def test_case_602():
    int_0 = 1617
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_603():
    bytes_0 = b"\xc3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_604():
    int_0 = -1754
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_605():
    str_0 = ""
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_606():
    int_0 = 3248
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_607():
    bytes_0 = b"\x07,0s:\x08=`"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_608():
    float_0 = 623.990851
    list_0 = [float_0, float_0, float_0, float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_609():
    bytes_0 = b"\x7f\xf8\xccu&Va\x1b\r\xa5p\xf7m^\xcc\xb1\xd4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_610():
    exception_0 = module_1.Exception()
    none_type_0 = None
    module_1.Exception(*exception_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_611():
    str_0 = "{>"
    dict_0 = {str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_612():
    str_0 = "_/\\]e]h3M6,XfTplY"
    str_1 = "`Z\x0c9~=wUjzi`(lT"
    str_2 = ""
    str_3 = "H97o8vHy;3F"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1, str_3: str_3}
    module_2.CookiecutterException(**dict_0)


def test_case_613():
    tuple_0 = ()
    list_0 = [tuple_0]
    base_exception_0 = module_1.BaseException(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_614():
    str_0 = "wfDpKP1G%30ke&Gzdi3"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_615():
    int_0 = 399
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_616():
    bytes_0 = b"d\x99\xfa\xe2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_617():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    list_1 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_618():
    float_0 = 2240.0
    int_0 = -1319
    dict_0 = {float_0: float_0, float_0: float_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_619():
    complex_0 = -1199.33 + 4163.784147j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_620():
    list_0 = []
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_621():
    int_0 = 650
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_622():
    int_0 = 2243
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_623():
    complex_0 = -2903.0521 + 1455.7j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_624():
    str_0 = "h>"
    none_type_0 = None
    str_1 = "QMFvgUW&gB2$7"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_625():
    bytes_0 = b"^[\x81\xe2\x81\x99U"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_626():
    exception_0 = module_1.Exception()
    dict_0 = {exception_0: exception_0, exception_0: exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_627():
    bytes_0 = b"20\xd6\xed%\xa1w\xd3\xac.\xaa\xe8V\x7f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_628():
    bool_0 = False
    bytes_0 = b"\n\x97\xfc\xa6:\x82\xf3\xe8G\x8e\x08\x13g\x82\x16\x13\xa2\xf8\xcb\xa2"
    tuple_0 = (bool_0, bytes_0)
    dict_0 = {tuple_0: tuple_0, bytes_0: tuple_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_629():
    str_0 = "f.`B9,6)\tc"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_630():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    set_0 = {cookiecutter_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_631():
    bytes_0 = b"\\\x16\xcf\x81#\x85\x92&"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_632():
    str_0 = "90iz"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_633():
    int_0 = 1328
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_634():
    float_0 = 1468.222
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_635():
    float_0 = -374.3496
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_636():
    str_0 = "~Js\\<6\\vk:OGOVd)R2"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_637():
    str_0 = "BJZ<6"
    str_1 = "y^K'.z8 u1eB"
    str_2 = "J$)`XjAt]&pP\tN"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_638():
    str_0 = "\x0c^|\nk7/+kREA=Y"
    none_type_0 = None
    str_1 = "Z<:J}|,"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
    }
    module_2.CookiecutterException(**dict_0)


def test_case_639():
    pass


@pytest.mark.xfail(strict=True)
def test_case_640():
    base_exception_0 = module_1.BaseException()
    list_0 = [base_exception_0, base_exception_0, base_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_641():
    str_0 = 'w-K>ZCEa`",4-W\x0c"W`'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_642():
    bytes_0 = b"\xd7\xfe"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_643():
    str_0 = "w3-;l\\5"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_644():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_645():
    bytes_0 = b"\x9a\xf3\x02h\xc22$N\xe9\xea"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_646():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_647():
    bytes_0 = b"\x97\x8a"
    set_0 = {bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_648():
    str_0 = "]M$K%@G*a\x0cv'K\n"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_649():
    str_0 = "d\x0cB5!#\x0cI'\rE\nw;m~"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_650():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_651():
    str_0 = "1YemU3X&Yf=~\n}s"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_652():
    int_0 = -867
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_653():
    str_0 = "grq;4i ]I|"
    module_2.NonTemplatedInputDirException(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_654():
    int_0 = 1821
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_655():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_656():
    str_0 = "\r%K(\x0cnQ06.+8&V45K6Fi"
    int_0 = -2940
    dict_0 = {str_0: int_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_657():
    bytes_0 = b"\x06\xc6\x04<!\x816"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_658():
    int_0 = 413
    tuple_0 = (int_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_659():
    bool_0 = True
    str_0 = "W"
    str_1 = '|#|A*"`\x0ct|U'
    list_0 = [str_0, str_1, bool_0]
    str_2 = "Okh["
    dict_0 = {str_0: bool_0, str_1: list_0, str_2: bool_0}
    module_2.NonTemplatedInputDirException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_660():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    int_0 = -680
    tuple_0 = (non_templated_input_dir_exception_0, list_0, int_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_661():
    str_0 = "mx>eA0Ru1Z"
    str_1 = "S"
    bool_0 = False
    dict_0 = {str_0: str_0, str_1: bool_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_662():
    str_0 = 'D6.0y_<V-QO"fT;TU'
    set_0 = {str_0, str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_663():
    float_0 = 1232.74
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_664():
    int_0 = 2353
    module_2.CookiecutterException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_665():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_666():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_667():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [cookiecutter_exception_0, cookiecutter_exception_0]
    str_0 = " DyX{"
    dict_0 = {str_0: list_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_668():
    tuple_0 = ()
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_669():
    bytes_0 = b"\x04\xdd\xaf\x8b\r\xb3EM"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_670():
    str_0 = "6h2A\\F(>+j9_FTQ;"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_671():
    bytes_0 = b"\xfa\xd5]"
    module_2.NonTemplatedInputDirException(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_672():
    bytes_0 = b"\x1b\xc0+`s"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_673():
    list_0 = []
    exception_0 = module_1.Exception(*list_0)
    exception_1 = module_1.Exception()
    set_0 = {exception_0, exception_0, exception_0, exception_1}
    list_1 = [set_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_674():
    str_0 = "})\x0bupQd"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_675():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_676():
    complex_0 = 1053.062 - 886.3j
    bool_0 = False
    list_0 = [complex_0, bool_0, complex_0, bool_0]
    module_0.find_template(list_0)


def test_case_677():
    pass


@pytest.mark.xfail(strict=True)
def test_case_678():
    int_0 = 947
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_679():
    int_0 = -2005
    module_0.find_template(int_0)


def test_case_680():
    list_0 = []
    object_0 = module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_681():
    bytes_0 = b"\x04\xabe\xa3%v\xdf\xc3"
    float_0 = -2589.3654
    list_0 = [bytes_0, bytes_0, float_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_682():
    int_0 = 2622
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_683():
    str_0 = "fv6"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_684():
    int_0 = -5555
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_685():
    str_0 = "^a#=GQ"
    str_1 = "Zn|dd\\*1~"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_686():
    int_0 = 2348
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_687():
    bytes_0 = b"7\xffN\xfc\x04\xbf\x05\xc7\xb9K\x07#\xb6\x92\t\xc0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_688():
    int_0 = -3174
    list_0 = [int_0, int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_689():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_690():
    bytes_0 = b"7[\x1d\xe8Kz\xbe\x07\x11h\xe4\x03\x1a\xbd\x93\xf9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_691():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    complex_0 = -2217.831086 + 156.4j
    int_0 = -2542
    tuple_0 = (non_templated_input_dir_exception_0, int_0)
    tuple_1 = (non_templated_input_dir_exception_0, complex_0, tuple_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_692():
    float_0 = 504.0
    module_2.CookiecutterException(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_693():
    none_type_0 = None
    module_1.Exception(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_694():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_695():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_696():
    none_type_0 = None
    str_0 = "CW89<S\n}?=&\x0b@u\x0c3J0n"
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_2.NonTemplatedInputDirException(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_697():
    int_0 = 2554
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_698():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_699():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_700():
    int_0 = -3027
    dict_0 = {int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_701():
    int_0 = 158
    set_0 = {int_0, int_0}
    list_0 = [set_0, set_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_702():
    float_0 = 1249.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_703():
    str_0 = "`=qnTH2"
    module_0.find_template(str_0)


def test_case_704():
    pass


@pytest.mark.xfail(strict=True)
def test_case_705():
    set_0 = set()
    str_0 = "o>1>P"
    dict_0 = {str_0: str_0, str_0: set_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_706():
    int_0 = 729
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_707():
    int_0 = 1759
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_708():
    int_0 = -1176
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_709():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_710():
    str_0 = "OVw6*"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_711():
    str_0 = '5x.\n"n6wC,@aG`B'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_712():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_713():
    int_0 = 1052
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_714():
    int_0 = -1674
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_715():
    str_0 = "n\"u'\x0b1\r?<FhsIulvt/"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_716():
    complex_0 = -1254.17479 - 3597.57j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_717():
    bytes_0 = b"\x8a\xb5PV*\x10\x1e2"
    bytes_1 = b"8E\xb4\xc8\xcdF\xbc\xc5\x87\xb9\xbf}"
    str_0 = '_t:9&KW"X\nWf7jN;6\x0c3'
    complex_0 = 172.066549 + 3757.21j
    float_0 = -1136.9
    tuple_0 = (bytes_1, str_0, complex_0, float_0)
    set_0 = {bytes_0, tuple_0, float_0, complex_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_718():
    int_0 = 64
    module_2.CookiecutterException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_719():
    bytes_0 = b"\xa6\xcd\xce\xb3=\x97Ne\xab\xed\xb4\xa4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_720():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    list_0 = [dict_0, bool_0]
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_721():
    bytes_0 = b"_X!\x0e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_722():
    str_0 = ':w;Bgm^V"NR%'
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_723():
    str_0 = "?b"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_724():
    list_0 = []
    object_0 = module_1.object(*list_0)
    module_0.find_template(object_0)


@pytest.mark.xfail(strict=True)
def test_case_725():
    int_0 = -759
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_726():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_727():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_728():
    str_0 = "7^sk?Xte[6V"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_729():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (non_templated_input_dir_exception_0, non_templated_input_dir_exception_0)
    list_0 = [tuple_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_730():
    str_0 = "z>KN\n-pzojO4k."
    str_1 = "vHT-1R'C=G\\\nC\nnq"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_731():
    int_0 = 5057
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_732():
    int_0 = -644
    module_2.NonTemplatedInputDirException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_733():
    int_0 = 1403
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_734():
    object_0 = module_1.object()
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_735():
    bytes_0 = b"p\x1b\xf1\x119)\x8c\xb3\xdc"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_736():
    str_0 = ".E"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_737():
    str_0 = "M-`M},"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_738():
    str_0 = "fNj+|dKHNEbrb`M"
    str_1 = "@@G{g6jW=,/!v"
    str_2 = "~?peN7c7&<t5"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_2: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_739():
    bool_0 = True
    module_1.object(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_740():
    int_0 = -2114
    list_0 = [int_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_741():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_0 = (cookiecutter_exception_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_742():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_743():
    str_0 = ">nQ'zr<?wm!T)!X>zl"
    tuple_0 = (str_0,)
    list_0 = [tuple_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_744():
    str_0 = "36 556-}kI;9n3RASk"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_745():
    complex_0 = -3950 + 1469j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_746():
    str_0 = ""
    module_0.find_template(str_0)


def test_case_747():
    pass


@pytest.mark.xfail(strict=True)
def test_case_748():
    str_0 = "6|f|w98r09nO"
    list_0 = [str_0]
    base_exception_0 = module_1.BaseException(*list_0)
    set_0 = set()
    list_1 = [base_exception_0, str_0, set_0, base_exception_0]
    list_2 = [list_1, list_0, set_0, set_0]
    str_1 = "1|RlUl)k\\"
    none_type_0 = None
    dict_0 = {str_1: none_type_0, str_1: none_type_0, str_0: none_type_0}
    module_1.BaseException(*list_2, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_749():
    bytes_0 = b"~r\xd4\x11"
    set_0 = {bytes_0}
    module_0.find_template(set_0)


def test_case_750():
    pass


@pytest.mark.xfail(strict=True)
def test_case_751():
    str_0 = "hC"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_752():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


def test_case_753():
    pass


@pytest.mark.xfail(strict=True)
def test_case_754():
    float_0 = 721.08
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_755():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_756():
    str_0 = 'OsaoM>"Fd'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_757():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_0, bool_0]
    list_2 = [list_1]
    module_0.find_template(list_2)


@pytest.mark.xfail(strict=True)
def test_case_758():
    str_0 = "v@u,y8g.p/X\n$\\OO-.]{"
    exception_0 = module_1.Exception(*str_0)
    str_1 = "[/0\r!]!^ET/G33NR"
    str_2 = "ZwEK+`%^AP"
    dict_0 = {str_0: exception_0, str_0: str_0, str_1: str_0, str_2: exception_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_759():
    int_0 = 110
    list_0 = [int_0]
    str_0 = "8'hGpoP;qLph1"
    str_1 = "@IRu@Tad<wap%*t:"
    str_2 = "r"
    dict_0 = {str_0: list_0, str_1: str_1, str_0: str_1, str_2: str_2}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_760():
    str_0 = "&NNWt6-L+{A`N-D"
    none_type_0 = None
    str_1 = "WaT;F=[C"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_761():
    bytes_0 = b"\xf6\x95>\xff5\xf6b\xdd\xb1{Q\x0c"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_762():
    bytes_0 = b"dI\xb8\xf0L\xc7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_763():
    object_0 = module_1.object()
    module_0.find_template(object_0)


@pytest.mark.xfail(strict=True)
def test_case_764():
    str_0 = "Z\\t3Vk\\"
    str_1 = ".m=G SZ\x0b5!DW+9q[Wf\t"
    str_2 = "0x1$ Z3\r1E]"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2, str_0: str_2}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_765():
    int_0 = 3841
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_766():
    bytes_0 = b'$"K$'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_767():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    list_1 = [list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_768():
    bytes_0 = b"\x1a\r}\xea"
    module_2.CookiecutterException(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_769():
    float_0 = -1397.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_770():
    str_0 = "f,*.\\-$[e1Rs2k&~r_{"
    list_0 = [str_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_771():
    int_0 = -1870
    set_0 = {int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_772():
    float_0 = -1896.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_773():
    bytes_0 = b"\x19\x8dWZy\xe5V\xb7\xce#T\xa3\xf7\xa3\xcf\xeb\x12"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_774():
    str_0 = "L^t=,y~Ip"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_775():
    float_0 = -249.97795
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_776():
    int_0 = 318
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_777():
    float_0 = -63.80968
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_778():
    str_0 = '\x0b8L"eX[W49I,3y'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_779():
    str_0 = "X-q'4!q/d}q"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_780():
    str_0 = "A;"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_781():
    float_0 = -5918.4
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_782():
    str_0 = 'ocS380lF"['
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_783():
    complex_0 = -3675.83768 + 146.3j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_784():
    bytes_0 = b"\x014\x1c)"
    list_0 = [bytes_0, bytes_0, bytes_0]
    exception_0 = module_1.Exception(*list_0)
    set_0 = {exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_785():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0, exception_0]
    module_1.object(*list_0)


def test_case_786():
    pass


@pytest.mark.xfail(strict=True)
def test_case_787():
    str_0 = "rQJf"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_788():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_789():
    base_exception_0 = module_1.BaseException()
    list_0 = [base_exception_0, base_exception_0]
    base_exception_1 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_790():
    bool_0 = True
    str_0 = '"~'
    int_0 = -1139
    bytes_0 = b"\x99"
    str_1 = "cQt5]i"
    tuple_0 = (int_0, bytes_0, str_1)
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_1 = (tuple_0, cookiecutter_exception_0, bool_0, cookiecutter_exception_0)
    tuple_2 = (bool_0, str_0, bool_0, tuple_1)
    set_0 = {tuple_2, tuple_0}
    list_0 = [set_0]
    module_2.CookiecutterException(*list_0, **tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_791():
    float_0 = 1992.896
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_792():
    str_0 = "R2%JEIj~j\x0c8{?"
    bool_0 = True
    dict_0 = {str_0: str_0, str_0: bool_0, str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_793():
    str_0 = "w`NT\t"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_794():
    bool_0 = False
    tuple_0 = (bool_0,)
    list_0 = [tuple_0, tuple_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_795():
    str_0 = "{!?2v%v9(Mp&[@"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_796():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    tuple_0 = (non_templated_input_dir_exception_0,)
    list_0 = [tuple_0, tuple_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_797():
    float_0 = 2054.415
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_798():
    bytes_0 = b"\xfcQ\xa2\x02\x07\xd7\x96\xa1*\x9041,"
    module_0.find_template(bytes_0)


def test_case_799():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )


@pytest.mark.xfail(strict=True)
def test_case_800():
    str_0 = "_H-u\x0bFd\r:9zJjNm`\\u&!"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_801():
    complex_0 = -1138.95 - 1749.96j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_802():
    int_0 = 532
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_803():
    str_0 = "3\t\tU4?Sx)Yx"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_804():
    str_0 = "}XiO5c%"
    str_1 = "xRkO]=U;'\x0b"
    list_0 = [str_0, str_0, str_1]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_805():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    bool_0 = False
    tuple_0 = (bool_0, cookiecutter_exception_0)
    tuple_1 = (cookiecutter_exception_0, tuple_0)
    module_0.find_template(tuple_1)


def test_case_806():
    pass


@pytest.mark.xfail(strict=True)
def test_case_807():
    int_0 = 1538
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_808():
    str_0 = "$ARp; (\nX/3`h 'C"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_809():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_810():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {}
    module_2.NonTemplatedInputDirException(*cookiecutter_exception_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_811():
    str_0 = "iSpzA/"
    none_type_0 = None
    str_1 = "s-<"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_812():
    str_0 = "1EnIZpJ??"
    str_1 = "?b^(o;^.,-vK"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_813():
    dict_0 = {}
    tuple_0 = (dict_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_814():
    float_0 = -3551.664
    dict_0 = {float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_815():
    str_0 = "TE}9T4M;$"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_816():
    int_0 = 123
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_817():
    float_0 = -3131.8
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_818():
    str_0 = "m4A^zOZvQFuyKN"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_819():
    int_0 = -581
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_820():
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)
    bool_0 = True
    tuple_0 = (dict_0, exception_0, bool_0, exception_0)
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    tuple_1 = (tuple_0, tuple_0, exception_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_821():
    tuple_0 = ()
    str_0 = "k\\)U"
    tuple_1 = (tuple_0, str_0, str_0, str_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_822():
    int_0 = -1474
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_823():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    set_0 = {non_templated_input_dir_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_824():
    float_0 = 1743.794
    set_0 = {float_0, float_0}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [set_0, float_0, non_templated_input_dir_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_825():
    str_0 = "XZ.f^"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_826():
    bytes_0 = b"\x97\xb8\x8c\xe0\xf1\xe0\xd1\xa7\x1c\xa4\xf5\x07\xdf\xef\xb7<l\xf7\xf7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_827():
    str_0 = ">e=%3"
    dict_0 = {str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_828():
    str_0 = "@?[TC"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_829():
    int_0 = 1939
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0]
    tuple_0 = (int_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_830():
    none_type_0 = None
    module_2.CookiecutterException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_831():
    bytes_0 = b"\x97\x8e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_832():
    int_0 = -1707
    module_0.find_template(int_0)


def test_case_833():
    pass


@pytest.mark.xfail(strict=True)
def test_case_834():
    bytes_0 = b"Bl\x1d\xa5\xfa\xff\xce}/<\xef\x0e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_835():
    str_0 = "A`Y^EL6U\\"
    str_1 = ',"{;~3O&74'
    str_2 = "C"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_2: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_836():
    str_0 = "=b6Y$z>>;uW"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_837():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0, exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_838():
    str_0 = ")C1.E\r>k\x0bm?ywbb5[w?"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_839():
    int_0 = 1101
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_840():
    set_0 = set()
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(*set_0)
    module_1.Exception(*non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_841():
    float_0 = 1885.803
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_842():
    bytes_0 = b"S\xdf\x15\x9b\tv\x88"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_843():
    int_0 = -2450
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_844():
    list_0 = []
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_845():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_0 = (cookiecutter_exception_0,)
    list_0 = [tuple_0, cookiecutter_exception_0, tuple_0]
    cookiecutter_exception_1 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_846():
    float_0 = 1751.21
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_847():
    str_0 = "\x0cg~#p9NZq-8/d\rgv5l1"
    exception_0 = module_1.Exception(*str_0)
    module_0.find_template(exception_0)


def test_case_848():
    pass


@pytest.mark.xfail(strict=True)
def test_case_849():
    str_0 = '``BiEq}m4H9{]9^"'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_850():
    str_0 = ".ABrH_~Tn4e#x!rs@XKq"
    str_1 = "RX]O\x0c&v*AI4>^roR-'J("
    str_2 = "|R\tjZW\n\x0cm(S32 /"
    str_3 = "ciSWl_,n\tl9m\x0b"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0, str_3: str_3}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_851():
    float_0 = -2350.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_852():
    none_type_0 = None
    list_0 = [none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_853():
    bool_0 = True
    int_0 = -1689
    list_0 = [bool_0, bool_0, bool_0, int_0]
    module_0.find_template(list_0)


def test_case_854():
    pass


@pytest.mark.xfail(strict=True)
def test_case_855():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_856():
    int_0 = -395
    module_0.find_template(int_0)


def test_case_857():
    pass


@pytest.mark.xfail(strict=True)
def test_case_858():
    complex_0 = -4887.77 + 828.83033j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_859():
    float_0 = 2295.12328
    str_0 = "hd-|]qvh+aX9Q]\x0cgqe&"
    dict_0 = {float_0: float_0, float_0: str_0, str_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_860():
    str_0 = "*tVz_s"
    base_exception_0 = module_1.BaseException()
    bool_0 = True
    tuple_0 = (str_0, base_exception_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_861():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_862():
    bytes_0 = b"\x81Y\x9ayd\x06\x85\x10(\xcbU"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_863():
    none_type_0 = None
    str_0 = 'vIq"SJsc5+kD\n[dT2'
    dict_0 = {str_0: none_type_0, str_0: str_0}
    module_2.CookiecutterException(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_864():
    int_0 = 421
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_865():
    float_0 = 516.31085
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_866():
    str_0 = "^}_"
    none_type_0 = None
    str_1 = "&QhmY1S'L0>P\"h2R[Uq"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
    }
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_867():
    str_0 = "bd1]|mJgo`4"
    list_0 = [str_0, str_0, str_0, str_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_868():
    float_0 = -1596.833384
    list_0 = [float_0, float_0, float_0]
    str_0 = ""
    dict_0 = {str_0: str_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_869():
    float_0 = 4624.223731
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_870():
    bytes_0 = b"\xc4_\xa0\x11\xe6C\xf2a\x94\x1c\xd4\xdd\xadh\x95~\xf5\xa6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_871():
    complex_0 = 1925.2276 + 1793.9j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_872():
    str_0 = "~P"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_873():
    str_0 = "q|C FL6>S]L "
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_874():
    str_0 = "~Lo0K)\\,^y\n\x0bwQv"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_875():
    bytes_0 = b"\xbb\x97"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_876():
    float_0 = -754.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_877():
    str_0 = "O~@&<sM?"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_878():
    str_0 = "vZDb<spv9M"
    dict_0 = {str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_879():
    str_0 = "\t"
    str_1 = " 9gIB=oX,;oC4=Uy$=-"
    str_2 = "05O}"
    list_0 = [str_1]
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2, str_2: list_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_880():
    int_0 = -1289
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_881():
    float_0 = 3956.0252
    bool_0 = True
    list_0 = [float_0, bool_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_882():
    str_0 = 'G"HBLRqIrYQfS\x0cQz.y-'
    str_1 = "&uNpY]s,'_%^NIOX;+"
    list_0 = [str_1, str_1, str_0, str_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    dict_0 = {str_0: str_0, cookiecutter_exception_0: str_1}
    str_2 = '\x0bi%Kz~Si9I$I"!@2x,'
    dict_1 = {str_0: str_0, str_1: dict_0, str_2: str_1, str_1: str_1}
    module_1.Exception(**dict_1)


@pytest.mark.xfail(strict=True)
def test_case_883():
    str_0 = "d)<Y(tX#ZSg{PG9C(o"
    list_0 = [str_0, str_0]
    list_1 = [list_0, list_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_884():
    int_0 = -3422
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_885():
    str_0 = "e-<V)\nF%+^)"
    str_1 = "\x0c26!X}z/QSzA-mzt3V}"
    dict_0 = {str_0: str_0, str_0: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_886():
    str_0 = ")N"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_887():
    str_0 = ";wig({5u\nx\nG00#\x0b\t"
    bool_0 = True
    str_1 = 'Kd"yZV\x0cj&WJ5C4kC'
    str_2 = "7H[{kGR"
    bool_1 = True
    dict_0 = {str_0: bool_0, str_1: str_1, str_0: str_0, str_2: bool_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_888():
    int_0 = -322
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    exception_0 = module_1.Exception(*list_0)
    dict_0 = {int_0: int_0, int_0: int_0, exception_0: int_0, exception_0: exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_889():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_890():
    str_0 = ", }jROK7C^ky}sZbl\n:u"
    str_1 = 'lj$G9Bxm:6*vA"Lg\x0bN~'
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_891():
    float_0 = -149.86
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_892():
    str_0 = "Bwq>\nm, z{!ziO}psx/"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_893():
    str_0 = "u~;"
    dict_0 = {str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_894():
    int_0 = -1370
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_895():
    float_0 = -934.74
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_896():
    none_type_0 = None
    list_0 = [none_type_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_897():
    float_0 = -1555.782316
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_898():
    str_0 = "6bCqn3"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_899():
    bytes_0 = b"\xc5\xedTq?\xcc\x9f\x9f\xf0Y\xc5\nn"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_900():
    int_0 = 3760
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_901():
    object_0 = module_1.object()
    list_0 = [object_0, object_0, object_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_902():
    bytes_0 = b"\x07\x9f-\x95a[\x80h\xdc\x8cA\xc0\xa5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_903():
    int_0 = 2141
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_904():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    str_0 = "vtFzT"
    complex_0 = -1540.092 - 432.0937j
    dict_0 = {
        cookiecutter_exception_0: cookiecutter_exception_0,
        str_0: cookiecutter_exception_0,
        complex_0: complex_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_905():
    exception_0 = module_1.Exception()
    list_0 = [exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_906():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_907():
    str_0 = 'DQ|#"m'
    str_1 = "X|q2Y"
    str_2 = " G,puE2d"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_908():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_909():
    float_0 = 1658.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_910():
    bytes_0 = b"\x17\x07R\xc6\x8f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_911():
    str_0 = ":p+!qgb?b'%LCey"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_912():
    int_0 = 1455
    str_0 = ";+\\\x0c#R?uO\x0c2kZA[:"
    str_1 = "g,)]{s*Qxv]LKJ"
    dict_0 = {str_0: str_0, str_1: int_0, str_0: int_0}
    module_2.NonTemplatedInputDirException(*int_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_913():
    float_0 = 8.225112
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_914():
    int_0 = -3836
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_915():
    float_0 = -2164.34
    str_0 = "c'\"DC"
    str_1 = "iP=yY{>|1\x0b~}4/ct\riX"
    dict_0 = {str_0: float_0, str_0: float_0, str_1: float_0, str_0: str_0}
    module_1.Exception(*float_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_916():
    str_0 = ""
    tuple_0 = (str_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_917():
    object_0 = module_1.object()
    set_0 = {object_0, object_0, object_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_918():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_919():
    set_0 = set()
    module_2.CookiecutterException(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_920():
    str_0 = "?\r\\EjIJ]-zx|:5lY"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_921():
    float_0 = 1846.41
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_922():
    str_0 = ")YlCo,g1Niwid"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_923():
    str_0 = "pa\\WY8}Xf&n]ep{O"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_924():
    float_0 = -1217.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_925():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_926():
    bytes_0 = b"d\x9b\xbe"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_927():
    none_type_0 = None
    list_0 = [none_type_0]
    str_0 = "P+RL\x0c6n"
    str_1 = "rz<!F\r>X-MI"
    dict_0 = {str_0: none_type_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_928():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_929():
    bytes_0 = b"\x08D.FC\xee\xc2\xb7\xc7\xc3x\x15\x81,"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_930():
    int_0 = 406
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_931():
    str_0 = "yi00ghB~lQR8%qxJ"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_932():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_933():
    int_0 = 236
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_934():
    base_exception_0 = module_1.BaseException()
    module_1.BaseException(**base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_935():
    bytes_0 = b"\xeb9\xb3\xdfh\xd4\xf2I*"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_936():
    bytes_0 = b"\x07\xa9\xe1\xf9\x8e\xb9\x17("
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_937():
    int_0 = -1826
    list_0 = [int_0, int_0, int_0]
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0, **dict_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_938():
    complex_0 = 2635 - 1605j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_939():
    bytes_0 = b"\xaf\xab\xf3a1\xda\xad\x82vq\x13DK\x87\x1e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_940():
    exception_0 = module_1.Exception()
    list_0 = [exception_0]
    exception_1 = module_1.Exception(*list_0)
    list_1 = [exception_1]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_941():
    str_0 = "))m}cstI"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_942():
    exception_0 = module_1.Exception()
    tuple_0 = (exception_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_943():
    int_0 = -2275
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_944():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {non_templated_input_dir_exception_0: non_templated_input_dir_exception_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_945():
    bytes_0 = b"\xf60G#\xdb}"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_946():
    float_0 = -3453.744
    module_0.find_template(float_0)


def test_case_947():
    pass


@pytest.mark.xfail(strict=True)
def test_case_948():
    bool_0 = True
    module_2.NonTemplatedInputDirException(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_949():
    str_0 = "`n3x*\n,{l$s\r9"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_950():
    bytes_0 = b"\xf2\xf7\x08\x8c\x8b\xfe\x8a\xe4\x98\xd44\x8c\xbcRf\xa7p\xe4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_951():
    bool_0 = True
    module_1.BaseException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_952():
    str_0 = "CPLeikn'\x0b`On3'oR"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_953():
    int_0 = -90
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_954():
    complex_0 = 3996 - 2429.8j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_955():
    base_exception_0 = module_1.BaseException()
    set_0 = {base_exception_0, base_exception_0, base_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_956():
    bytes_0 = b"\xc6oyi{\xb0R64\x12\x9b\x9doP#\x14\x86\x90\xb8\x95"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_957():
    str_0 = '+* 8o"VY,uU+fN|!h\r'
    str_1 = "\n9Se(}(wp%a~9^Ck"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1}
    module_1.BaseException(*str_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_958():
    bytes_0 = b"\xd9t\xbd}\x8f\xbd"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_959():
    complex_0 = 868.4 - 916.5424j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_960():
    bytes_0 = b"$Dr\x11\xcfG1\x9a\xc6&\x93+Aowi\xfb\xeb\xc8s"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_961():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (non_templated_input_dir_exception_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_962():
    bytes_0 = b"t\x88\xfa\x14a\x16\xfc\xae\x01[\xcdY\x16\x04\x0e\x90$\x17\x87"
    set_0 = {bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_963():
    complex_0 = 3148.740729 - 376.6094j
    dict_0 = {complex_0: complex_0, complex_0: complex_0, complex_0: complex_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_964():
    int_0 = -1849
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_965():
    float_0 = -1239.3
    list_0 = [float_0, float_0, float_0, float_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    str_0 = "bG!\\m"
    str_1 = "jQ_z0@kRfr!I#,2{#O"
    dict_0 = {str_0: list_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(*cookiecutter_exception_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_966():
    str_0 = "0q5U\tO<MtTTPG;)9{}"
    set_0 = {str_0, str_0, str_0, str_0}
    bool_0 = True
    list_0 = [set_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_967():
    str_0 = "Acy-j:T^T"
    list_0 = []
    str_1 = "sE"
    dict_0 = {str_0: list_0, str_1: str_0, str_0: list_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_968():
    int_0 = -596
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_969():
    exception_0 = module_1.Exception()
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {exception_0: cookiecutter_exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_970():
    float_0 = -670.5087
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_971():
    bytes_0 = b"A1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_972():
    int_0 = -1695
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_973():
    str_0 = "'7!k<cJg;]4Csjd"
    bool_0 = False
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_0 = (str_0, bool_0, bool_0, cookiecutter_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_974():
    int_0 = -2286
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_975():
    bytes_0 = b"\xb5\xae\x8b\xb3A\xd3\xa8\xc8|\x1a\xe5\xeaLC"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_976():
    str_0 = ";K:Z)D"
    module_0.find_template(str_0)


def test_case_977():
    pass


@pytest.mark.xfail(strict=True)
def test_case_978():
    str_0 = "w"
    exception_0 = module_1.Exception(*str_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_979():
    str_0 = "<\x0b|7'iV]2:\\\nyIjjH"
    dict_0 = {str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_980():
    str_0 = "rec%5~wJKU"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_981():
    float_0 = -3286.4
    module_0.find_template(float_0)


def test_case_982():
    pass


@pytest.mark.xfail(strict=True)
def test_case_983():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    str_0 = "Z]2n}=]-eCpLv"
    dict_0 = {str_0: list_0, str_0: str_0, str_0: none_type_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_984():
    int_0 = 1702
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_985():
    int_0 = 611
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_986():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_987():
    complex_0 = -109.82358 + 521.9932j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_988():
    bytes_0 = b"NA&\x81M\xe5\x1f.\xbb\x1a\xc46_\x8f\xf6k6f\x83"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_989():
    complex_0 = 169 + 4888.7953j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_990():
    int_0 = -375
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_991():
    float_0 = -2685.08
    list_0 = [float_0, float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_992():
    str_0 = "j<^2W>:{B|U8cPr8L"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_993():
    str_0 = ")[,W`~:=a)"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_994():
    str_0 = "T$M"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_995():
    int_0 = 558
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_996():
    int_0 = 1440
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_997():
    float_0 = -941.56
    module_1.Exception(**float_0)


def test_case_998():
    pass


@pytest.mark.xfail(strict=True)
def test_case_999():
    float_0 = -1814.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1000():
    bytes_0 = b"\xe7$\xf6\xfah\xdc\x15\x06u\xd1\x93\x9b\xad\xfd\x9e\xd7"
    set_0 = {bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1001():
    str_0 = ")RrVWOG"
    list_0 = [str_0, str_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_2.NonTemplatedInputDirException(*cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1002():
    bytes_0 = b"f?:\xe3\x91b\x94\xcfT\x8c\xe7c=\xb1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1003():
    bytes_0 = b"\x8c\ne4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1004():
    bytes_0 = b"\x8e\xef7\x1e\x8f\xe9\x0b\xac"
    dict_0 = {bytes_0: bytes_0}
    tuple_0 = (dict_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1005():
    str_0 = "Ac\x0cS"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1006():
    bytes_0 = b"\x07\xcb:"
    list_0 = [bytes_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1007():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    str_0 = "3@t1"
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1008():
    float_0 = 940.283
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1009():
    float_0 = 558.661791
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1010():
    bytes_0 = b"\x9b8\x1axJh\xce\x96\xbd\x87\x10"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1011():
    complex_0 = -438.97 + 35.384j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1012():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1013():
    str_0 = "U]29/.#kZ["
    str_1 = "v1^"
    dict_0 = {str_1: str_1}
    module_2.NonTemplatedInputDirException(*str_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1014():
    str_0 = "+PDAkAkx4M_bUdQtW"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1015():
    complex_0 = 2699.47944 + 726.2j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1016():
    str_0 = "3"
    str_1 = "?7UhA+m1zE\r"
    str_2 = "%_"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1017():
    str_0 = "a\nhT"
    bool_0 = False
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    tuple_0 = (str_0, bool_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1018():
    bool_0 = True
    str_0 = "ys5A\ru0Sp<"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1019():
    str_0 = "QrHRfL!tn)g"
    complex_0 = -1508.79 - 656.6882j
    tuple_0 = (str_0, complex_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1020():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    cookiecutter_exception_1 = module_2.CookiecutterException(*list_0)
    list_1 = [cookiecutter_exception_0, cookiecutter_exception_1, list_0, list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1021():
    int_0 = -1182
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1022():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    set_0 = {non_templated_input_dir_exception_0, non_templated_input_dir_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1023():
    str_0 = "/oDfE?4%9Tm6LL"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1024():
    str_0 = "6E(?uOr,b{`L8K"
    list_0 = [str_0, str_0, str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1025():
    str_0 = "nuW2\r"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1026():
    bytes_0 = b"\x94\xcdO\xd4\xb9\x0b\xec\x1b5}J\xbc\xa9\xd7\n\xb94"
    set_0 = {bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1027():
    bytes_0 = b"\x84\xe0b]S>\xbc\xbf@"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1028():
    set_0 = set()
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [set_0, set_0, non_templated_input_dir_exception_0, set_0]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_1029():
    int_0 = 289
    module_2.CookiecutterException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_1030():
    str_0 = "HZTR9\\A9Ux6d<"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1031():
    float_0 = -2012.197
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1032():
    str_0 = "H5T]\nf6Qf"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1033():
    bytes_0 = b'Y\xfa\xd6\xf58\x12\x99n\xd9\xb0\x07>N\x16t"\xddO\xa0E'
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_2.NonTemplatedInputDirException(*list_0, **bytes_0)


def test_case_1034():
    cookiecutter_exception_0 = module_2.CookiecutterException()


def test_case_1035():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1036():
    str_0 = "65E&5o^AqLHw\x0b"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1037():
    str_0 = "Z\tf\tdn"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1038():
    bytes_0 = b"\xec\xf1&"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1039():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_1.BaseException(**non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1040():
    complex_0 = 2429.172 + 1493.001977j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1041():
    base_exception_0 = module_1.BaseException()
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1042():
    bytes_0 = b"\x11\x86Yqq\xa9"
    set_0 = {bytes_0, bytes_0}
    module_0.find_template(set_0)


def test_case_1043():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    exception_0 = module_1.Exception(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1044():
    exception_0 = module_1.Exception()
    set_0 = {exception_0, exception_0, exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1045():
    bytes_0 = b"bN\xe7\xa5\x9b\x8b#g\x1d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1046():
    int_0 = -1869
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1047():
    none_type_0 = None
    module_1.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1048():
    str_0 = "E@8F&!B"
    bytes_0 = b" \x0f% L;@\x13+\xb3\xf1\x11c\x94KP\xa8"
    dict_0 = {str_0: bytes_0, str_0: bytes_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1049():
    none_type_0 = None
    list_0 = [none_type_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1050():
    bytes_0 = b"\xd3q\xc2\xa1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1051():
    str_0 = "y=vF!e\ns~K!7Chb(\r\r'Z"
    list_0 = [str_0]
    str_1 = ",Tv:i;c$]v9wHLM i6D&"
    dict_0 = {str_0: list_0, str_0: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1052():
    int_0 = -638
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1053():
    none_type_0 = None
    module_2.NonTemplatedInputDirException(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1054():
    bytes_0 = b"\xd3\x9e\x8f\xf6\xe7/\x84(R\xb8\\W"
    list_0 = []
    list_1 = [bytes_0, list_0, list_0, list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1055():
    str_0 = "F);Wc?{ofY4^"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1056():
    str_0 = "?^R5"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


def test_case_1057():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    exception_0 = module_1.Exception()


@pytest.mark.xfail(strict=True)
def test_case_1058():
    str_0 = "{e#8\rH{~d/'-P7s="
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1059():
    bytes_0 = b"\x05 F\xb0\xf5\xe5@"
    module_0.find_template(bytes_0)


def test_case_1060():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1061():
    int_0 = -1995
    list_0 = [int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1062():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1063():
    float_0 = 881.044
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1064():
    int_0 = 2460
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1065():
    int_0 = 1563
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1066():
    str_0 = ";01^l#O\tv#A(lPDTI "
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1067():
    bytes_0 = b"W\xb7\xcc"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1068():
    str_0 = "gl=1:\x0b"
    str_1 = "!h@UDWIE<=q3ar!y)h?"
    dict_0 = {str_0: str_1, str_1: str_0, str_0: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1069():
    float_0 = -3955.00109
    list_0 = [float_0, float_0, float_0]
    set_0 = set()
    tuple_0 = (list_0, list_0, set_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1070():
    int_0 = 1316
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1071():
    str_0 = "Y6r-}/!\nwkpodG t"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1072():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1073():
    str_0 = "(&r36nLQ"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1074():
    str_0 = ","
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1075():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1076():
    bytes_0 = b"@\x83\xdd\xd6\xed\x83\x1f\xd4\x0cx1\xd7*s\xa9\xf9_\xb5\xfaK"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1077():
    str_0 = '3OH#$!CjUczm"D<WOSP+'
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1078():
    bytes_0 = b"\x9f'\xad\xb7"
    list_0 = [bytes_0, bytes_0, bytes_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1079():
    bytes_0 = b"\xc72\xf0n\xbc\xf9\tq,1\xbe1\xbf\xac"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1080():
    str_0 = "Q,;IN.|"
    str_1 = "lCXobVq\rc&c5\x0c"
    str_2 = "NOG\\n{y]Ukt"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: str_2}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1081():
    str_0 = ""
    str_1 = '"b{0_$*#\nB#5;6D?;&L#'
    str_2 = "Ex"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1082():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bytes_0 = b"o\xca\xda\r\xbc\xa0\xc8\xf6\x0f"
    dict_0 = {
        non_templated_input_dir_exception_0: bytes_0,
        bytes_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
    }
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        dict_0,
    ]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1083():
    int_0 = -1272
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1084():
    int_0 = 2277
    list_0 = [int_0, int_0]
    dict_0 = {}
    base_exception_0 = module_1.BaseException(*list_0, **dict_0)
    module_2.NonTemplatedInputDirException(*base_exception_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1085():
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_1}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1086():
    str_0 = "m\tS~~|<8=~%a:]ym"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1087():
    exception_0 = module_1.Exception()
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1088():
    str_0 = 'K(;5Ch\tXC\\\rkRY"}'
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1089():
    float_0 = -1821.13
    set_0 = {float_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1090():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1091():
    bytes_0 = b")\x1e\xfd^"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1092():
    str_0 = "\\{w)"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1093():
    bytes_0 = b"(\x9a\xda\x84"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1094():
    bool_0 = False
    str_0 = '\tT<\x0b6=<"?Sl\t VoG3V'
    str_1 = "R*"
    str_2 = "a7\nFCav2<7aM>fJ6m3?"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1}
    module_1.BaseException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1095():
    float_0 = 2396.3953
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1096():
    str_0 = "-;Xdv`L3A/)fO6^"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1097():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1098():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    module_0.find_template(set_0)


def test_case_1099():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1100():
    str_0 = "7j!mFMk<$]j"
    str_1 = "6He.d5\\C6)tjW.4|w!*\t"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1101():
    set_0 = set()
    list_0 = [set_0, set_0, set_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1102():
    bytes_0 = b"\x18_L\x91^\x93\x8ah\x88\xad-h\x90\xfd9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1103():
    str_0 = "w94n3bbkC!"
    str_1 = "|U).Y_.y!^iS!$"
    str_2 = "I\nxcg/8?s'P~\x0cCy"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1104():
    float_0 = -1550.46808
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1105():
    str_0 = "\x0c5"
    module_1.BaseException(*str_0, **str_0)


@pytest.mark.xfail(strict=True)
def test_case_1106():
    bytes_0 = b"\xc9\x02\x86\xe6\x008\x84\xb5\xb2\xb1\xaa[\xe0\x9a\x84\x13"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1107():
    float_0 = -232.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1108():
    str_0 = "hHX(q"
    exception_0 = module_1.Exception(*str_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1109():
    bool_0 = True
    set_0 = {bool_0}
    bool_1 = False
    tuple_0 = (set_0, bool_1)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1110():
    bool_0 = True
    list_0 = [bool_0]
    dict_0 = {}
    base_exception_0 = module_1.BaseException(*list_0, **dict_0)
    module_0.find_template(base_exception_0)


def test_case_1111():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1112():
    bytes_0 = b"\xf0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1113():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1114():
    bool_0 = True
    set_0 = set()
    list_0 = [bool_0, set_0, set_0, set_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1115():
    list_0 = []
    object_0 = module_1.object(*list_0)
    list_1 = [object_0]
    exception_0 = module_1.Exception(*list_1)
    bool_0 = False
    list_2 = [exception_0, object_0, list_0, bool_0]
    module_0.find_template(list_2)


@pytest.mark.xfail(strict=True)
def test_case_1116():
    bytes_0 = b"A\xc9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1117():
    complex_0 = 361.74771 + 1735.211j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1118():
    bytes_0 = b"D\xec\xdfU\x877J\xd4N\x84\x1b\xac\x98"
    module_1.BaseException(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1119():
    int_0 = 3498
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1120():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1121():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    list_1 = [tuple_0, cookiecutter_exception_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1122():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
    }
    tuple_0 = (
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        dict_0,
    )
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1123():
    bool_0 = False
    bool_1 = True
    list_0 = [bool_0, bool_1, bool_0, bool_0]
    str_0 = '?R4bSy1qB/4T"Oj'
    dict_0 = {str_0: list_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1124():
    bytes_0 = b"\xb8V\xc4\xdcg"
    module_0.find_template(bytes_0)


def test_case_1125():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1126():
    bytes_0 = b"\x07\xc3\xcd\xf8\x8dG\xd4\xcd\x9cS2\x9b\x9f\xa2\x16\x0f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1127():
    int_0 = -3055
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1128():
    str_0 = "h42/sfxn#n?@S\\72f,."
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1129():
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)
    bytes_0 = b"\r\xa8]\xee\xf7\xdf\x90"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1130():
    list_0 = []
    module_1.object(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_1131():
    int_0 = 3981
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1132():
    int_0 = 3731
    module_0.find_template(int_0)


def test_case_1133():
    base_exception_0 = module_1.BaseException()
    list_0 = [base_exception_0, base_exception_0, base_exception_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )


@pytest.mark.xfail(strict=True)
def test_case_1134():
    str_0 = "!ZT2g@q[?hKT8$tJTP\x0b"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1135():
    int_0 = 1691
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1136():
    float_0 = 2668.49394
    list_0 = [float_0, float_0, float_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1137():
    complex_0 = 2635.563 - 533.26j
    list_0 = [complex_0, complex_0, complex_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1138():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1139():
    complex_0 = 1249.58549 - 1576.4j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1140():
    str_0 = "O%q,"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1141():
    float_0 = 1778.392
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1142():
    str_0 = "S=ne@H8.TZn<&a"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1143():
    bool_0 = True
    list_0 = []
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    int_0 = 677
    dict_0 = {
        bool_0: bool_0,
        bool_0: bool_0,
        cookiecutter_exception_0: bool_0,
        int_0: bool_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1144():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    tuple_0 = (non_templated_input_dir_exception_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1145():
    float_0 = -2093.8975
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1146():
    float_0 = 458.6
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1147():
    base_exception_0 = module_1.BaseException()
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1148():
    int_0 = 4031
    list_0 = [int_0, int_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1149():
    list_0 = []
    str_0 = 'x"ySleZ'
    str_1 = "Fgl`F\nj#\x0c?&9U\\mB"
    dict_0 = {str_0: list_0, str_1: str_1, str_0: str_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1150():
    int_0 = 2070
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1151():
    complex_0 = 2478.466 - 3753.161j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1152():
    complex_0 = -1188.801424 + 644.30886j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1153():
    float_0 = -67.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1154():
    bytes_0 = b"?n}R"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *bytes_0
    )
    module_1.Exception(**non_templated_input_dir_exception_0)


def test_case_1155():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1156():
    float_0 = -3894.0
    module_0.find_template(float_0)


def test_case_1157():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1158():
    bytes_0 = b"\xd6\x1a\xca\xee\x89>\xbe\xdeau\x10*"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1159():
    str_0 = "+Th>L<I;A>0(/"
    set_0 = {str_0, str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1160():
    bytes_0 = b"\x99\x86\xa7\x89\xd3\x0f\xdbeZ$"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1161():
    bool_0 = True
    complex_0 = -1141 - 389.81575j
    list_0 = [bool_0, complex_0, bool_0, bool_0]
    list_1 = [list_0, list_0, complex_0]
    module_2.CookiecutterException(*list_1, **bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1162():
    int_0 = -4719
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1163():
    bytes_0 = b"1bHtvb\xbe\x19?\xc7\xe8\xd1\xe1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1164():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1165():
    int_0 = 1698
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1166():
    bool_0 = True
    str_0 = "YQ`?)pI&2Edt.&,?5z;1"
    tuple_0 = (bool_0, bool_0, str_0)
    set_0 = {tuple_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1167():
    str_0 = "9"
    str_1 = "&JcknO'QPP-FWX"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1168():
    str_0 = "c|v7TAp+8zI@:?\x0cK,"
    list_0 = [str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1169():
    int_0 = 425
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1170():
    int_0 = 42
    tuple_0 = (int_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1171():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_1.Exception(**non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1172():
    list_0 = []
    str_0 = "cfE^n-A#`V=kYj!r"
    str_1 = ""
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {str_0: list_0, str_1: cookiecutter_exception_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1173():
    exception_0 = module_1.Exception()
    module_1.BaseException(*exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1174():
    int_0 = -1345
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1175():
    float_0 = 2515.88
    list_0 = [float_0, float_0, float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1176():
    bool_0 = False
    tuple_0 = (bool_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1177():
    complex_0 = -2458.58272 - 188.753732j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1178():
    bytes_0 = b"\x08\x98x\xd9D\xce\xe68\xf9{\xe7\xad\xd1\xae\xdf\nC\x18"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1179():
    bytes_0 = b""
    bytes_1 = b"\xdf\x84\xcc\x9dx\xba\x0f`Z"
    list_0 = [bytes_0, bytes_1]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1180():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1181():
    object_0 = module_1.object()
    int_0 = -569
    dict_0 = {object_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1182():
    list_0 = []
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1183():
    str_0 = "\\2NSU\tcD^R8Yq"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1184():
    bytes_0 = b"\xb2\x7f\x14z\x9e\x18\xfd\xb8\xb5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1185():
    complex_0 = 850.5179 - 3239.48051j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1186():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1187():
    str_0 = "iH{4\rWch;Mm]:N? "
    str_1 = "0)lj{}x#']%d3nTS^duO"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


def test_case_1188():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1189():
    int_0 = 611
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1190():
    bool_0 = True
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [bool_0, bool_0, non_templated_input_dir_exception_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1191():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    set_0 = {
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    }
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1192():
    str_0 = ")7VBeLkvC\n\tFv91|"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1193():
    bytes_0 = b"\x1ce\xff\x92\x0f\x8a$"
    bool_0 = False
    tuple_0 = (bytes_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1194():
    bytes_0 = b"\xc579"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1195():
    bytes_0 = b"\xa6\x17a\x0f0\xf6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1196():
    bytes_0 = b"_A\xe6\xddg\x10B\x94H\x8c-M\x8d\x0c|\x80"
    cookiecutter_exception_0 = module_2.CookiecutterException(*bytes_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1197():
    bytes_0 = b"J\xcf\xda\x84\x88\xfe\xc89\xfe\xe3\x1a\xbc\xc4\x10\xa2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1198():
    str_0 = "vZ'\r_.y)UDwcx="
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1199():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1200():
    int_0 = 1657
    module_2.NonTemplatedInputDirException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_1201():
    bytes_0 = b"\xef\xc0\xc7\x8b\xea"
    list_0 = [bytes_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1202():
    int_0 = 2578
    module_0.find_template(int_0)


def test_case_1203():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1204():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1205():
    exception_0 = module_1.Exception()
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1206():
    bool_0 = False
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    list_0 = [dict_0, dict_0, bool_0]
    tuple_0 = (bool_0, bool_0, non_templated_input_dir_exception_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1207():
    float_0 = 1360.7
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1208():
    int_0 = -634
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1209():
    base_exception_0 = module_1.BaseException()
    set_0 = {base_exception_0}
    bool_0 = False
    dict_0 = {bool_0: set_0, base_exception_0: base_exception_0}
    tuple_0 = (base_exception_0, set_0, bool_0, dict_0)
    module_0.find_template(tuple_0)


def test_case_1210():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1211():
    bytes_0 = b"J\xfc\xf1D\x19\xea\r\x9eF\x98\x1a^\xcc\xab\xdb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1212():
    exception_0 = module_1.Exception()
    bool_0 = True
    tuple_0 = (exception_0, exception_0, exception_0, bool_0)
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *tuple_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1213():
    bytes_0 = b"\xf9\xbd'\x1b\xb3>\xbaf\x90U"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1214():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1215():
    float_0 = -435.942
    list_0 = [float_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1216():
    int_0 = 1038
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1217():
    str_0 = "t\x0c[-Y#OLv+"
    str_1 = "SO"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1218():
    complex_0 = 1119.61327 + 696.235971j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1219():
    complex_0 = -1036 + 3346j
    bytes_0 = b"\xa1%,\xb7\x81\x84{\x99\x9f\x81-\x0e\xf2f\x00\xed\x99"
    tuple_0 = (complex_0, complex_0, bytes_0, complex_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1220():
    int_0 = -1173
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1221():
    none_type_0 = None
    module_1.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1222():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1223():
    bytes_0 = b"c\x17u\xa2TZq>`\xd3\xf5Q\xa4{\x109"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1224():
    int_0 = -2791
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1225():
    float_0 = 1113.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1226():
    float_0 = -2366.3032
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1227():
    int_0 = -918
    list_0 = [int_0, int_0, int_0, int_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1228():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    set_0 = {non_templated_input_dir_exception_0, none_type_0, none_type_0, none_type_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1229():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_1.Exception(*non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1230():
    int_0 = 5073
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1231():
    int_0 = -2990
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1232():
    bytes_0 = b"\x19"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1233():
    int_0 = -2928
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1234():
    float_0 = 76.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1235():
    float_0 = 2932.0003
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1236():
    int_0 = 1143
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1237():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1238():
    str_0 = 's%#/k~q754H"'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1239():
    str_0 = "0Ejvv@&u$\x0by8BFV+"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1240():
    str_0 = "&}R9^Urr~Z}{;JA"
    dict_0 = {str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1241():
    str_0 = "CCF"
    module_2.CookiecutterException(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_1242():
    none_type_0 = None
    str_0 = "d"
    str_1 = "JDt"
    dict_0 = {str_0: none_type_0, str_1: str_0, str_0: none_type_0}
    module_2.NonTemplatedInputDirException(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1243():
    str_0 = "gPNy4`n5^"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1244():
    str_0 = "^xs\x0c-EasD6\x0b\rt1gKXD\"'"
    set_0 = {str_0}
    cookiecutter_exception_0 = module_2.CookiecutterException(*set_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1245():
    int_0 = 1131
    list_0 = [int_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1246():
    bytes_0 = b"\x9c8\xd2kS4rJD"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1247():
    int_0 = -2794
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1248():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1249():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1250():
    base_exception_0 = module_1.BaseException()
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1251():
    bytes_0 = b"\x96C\x9d\x1a\xc1\xe1|s\xdc\xf4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1252():
    bytes_0 = b"$e\x94\x9e\xd0\x1aDQ\x97"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1253():
    bytes_0 = b"\xa2\xd8\xd8\x0b"
    module_0.find_template(bytes_0)


def test_case_1254():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1255():
    int_0 = 1799
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1256():
    none_type_0 = None
    module_2.CookiecutterException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1257():
    float_0 = -2464.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1258():
    list_0 = []
    str_0 = "a"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1259():
    str_0 = "D%\n"
    bool_0 = True
    dict_0 = {str_0: str_0, bool_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1260():
    float_0 = 322.509742
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1261():
    complex_0 = 1878.7 - 1839.931j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1262():
    int_0 = 783
    bool_0 = False
    list_0 = [bool_0]
    tuple_0 = (int_0, bool_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1263():
    int_0 = 580
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1264():
    int_0 = 3732
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1265():
    float_0 = -1589.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1266():
    int_0 = 3074
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1267():
    int_0 = -1599
    module_0.find_template(int_0)


def test_case_1268():
    object_0 = module_1.object()


@pytest.mark.xfail(strict=True)
def test_case_1269():
    str_0 = "8\nYy"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1270():
    float_0 = -2893.443321
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1271():
    int_0 = -523
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1272():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {}
    list_0 = []
    bytes_0 = b"9\xb3a\x82\xcc\xc7=\xb2w\x9a7"
    tuple_0 = (non_templated_input_dir_exception_0, dict_0, list_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1273():
    int_0 = -188
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1274():
    str_0 = "?\npe(v2t"
    module_2.CookiecutterException(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_1275():
    str_0 = "T@)M?v\r9=m\x0c"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1276():
    bytes_0 = b"\x1c"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1277():
    bytes_0 = b'"\xe4\xc4pX\xa6|[4\xd2\x83\xd2\xf2\xf0'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1278():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1279():
    none_type_0 = None
    module_1.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1280():
    str_0 = "=a$x!#"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {str_0: str_0, str_0: non_templated_input_dir_exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1281():
    str_0 = "35IaeL9Fj"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1282():
    str_0 = "Kx4"
    list_0 = [str_0, str_0]
    dict_0 = {}
    module_1.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1283():
    complex_0 = 54.84611 + 719.5154j
    set_0 = {complex_0, complex_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1284():
    bytes_0 = b'W&\x19D\x90\x10yoy\xce\x1c\xa1\xa0"\x83(\xb6m\x91'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1285():
    dict_0 = {}
    base_exception_0 = module_1.BaseException(**dict_0)
    int_0 = -303
    list_0 = []
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    tuple_0 = (base_exception_0, int_0, cookiecutter_exception_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1286():
    bool_0 = False
    str_0 = "_mGimCwB&`^-mE |<"
    bool_1 = False
    set_0 = set()
    list_0 = [str_0, bool_1, set_0]
    list_1 = [list_0, set_0, bool_0, bool_1]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_1)
    tuple_0 = (bool_0, bool_0, str_0, cookiecutter_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1287():
    bytes_0 = b"\x9c\xea\xdf\x15n"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1288():
    str_0 = "]I;b}g Ip V"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1289():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    int_0 = -2344
    bytes_0 = b"\x05Y'w@\x93\xa7\x95m\xc0'\x83NyvC$\xd9"
    tuple_0 = (cookiecutter_exception_0, cookiecutter_exception_0, int_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1290():
    bytes_0 = b"\xa9\xc5\x8f)\t@\x08l\n5\xb5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1291():
    complex_0 = 1668.52 - 2181.877j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1292():
    bytes_0 = b"(S"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1293():
    str_0 = "W\tyt!18&"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1294():
    str_0 = "X;y\\tk72C"
    list_0 = [str_0, str_0, str_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1295():
    bytes_0 = b"\xdeB\xa0\x0eF\xf3"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1296():
    float_0 = 2204.689
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1297():
    bytes_0 = b"\xdd\x85F\xa1l}\xa8C*<\x8eW\x11\x9d\xf1(\xb5a\x89"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1298():
    none_type_0 = None
    module_2.NonTemplatedInputDirException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1299():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1300():
    str_0 = "\\&3PMFLQP*\r\x0b%p0"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1301():
    float_0 = -457.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1302():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1303():
    float_0 = 2200.597
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1304():
    bytes_0 = b"\xd0\xb7\xf1\xd4>\xbc%<\x94\x11"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1305():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    base_exception_0 = module_1.BaseException(*list_0)
    list_1 = [base_exception_0, none_type_0, none_type_0]
    module_1.object(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_1306():
    float_0 = -2618.806342
    list_0 = [float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1307():
    exception_0 = module_1.Exception()
    set_0 = {exception_0, exception_0, exception_0, exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1308():
    str_0 = "R|FK?wpaM"
    str_1 = "Gd\x0bw\x0cs\t~{q{"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1309():
    int_0 = 1383
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1310():
    int_0 = 1411
    list_0 = [int_0, int_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1311():
    bytes_0 = b"\xc4"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *bytes_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1312():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1313():
    int_0 = 4186
    list_0 = [int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1314():
    str_0 = "cGxFF+-<%X\x0cC"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1315():
    int_0 = -1986
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1316():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (non_templated_input_dir_exception_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1317():
    str_0 = 'O\rK9eGAE>a7\x0b"T]C'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1318():
    bool_0 = True
    cookiecutter_exception_0 = module_2.CookiecutterException()
    bool_1 = True
    set_0 = {bool_0}
    tuple_0 = (bool_0, cookiecutter_exception_0, bool_1, set_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1319():
    bytes_0 = b"\xf4\xc7\xfc\xd2\xff"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1320():
    exception_0 = module_1.Exception()
    set_0 = {exception_0}
    tuple_0 = (exception_0, exception_0, exception_0, set_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1321():
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(**dict_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1322():
    none_type_0 = None
    module_0.find_template(none_type_0)


def test_case_1323():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_1324():
    int_0 = 2127
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1325():
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(**dict_0)
    bytes_0 = b"\xf2W\xeb"
    tuple_0 = (cookiecutter_exception_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1326():
    str_0 = "\x0c`XsVAd=J0Qk ,)"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1327():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1328():
    int_0 = -3891
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1329():
    str_0 = "x/vF\x0c2v!\x0bd"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1330():
    str_0 = "CPQMK\x0b@A^HIC~\t/\x0bI'BV"
    bool_0 = False
    int_0 = 82
    tuple_0 = (bool_0, int_0)
    dict_0 = {str_0: tuple_0, int_0: int_0, int_0: tuple_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1331():
    bytes_0 = b"3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1332():
    str_0 = "G"
    str_1 = '`@"T^.%'
    str_2 = "|z4,r\x0b9\n@-Pw )vwHaF"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1333():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1334():
    str_0 = "-~jg21Ui-Yw#IX1@\\F%"
    str_1 = "/%rYVA3>3jcjSB]+"
    str_2 = "i?\n0j'"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1335():
    list_0 = []
    dict_0 = {}
    exception_0 = module_1.Exception(*list_0, **dict_0)
    int_0 = -475
    bool_0 = True
    tuple_0 = ()
    tuple_1 = (exception_0, int_0, bool_0, tuple_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_1336():
    str_0 = "!K\x0c(iNB4qC6Z"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1337():
    bytes_0 = b"\x9dDuj\xd0d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1338():
    str_0 = "3'vf="
    str_1 = "@pHEk"
    str_2 = ";"
    list_0 = [str_0, str_0, str_1]
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1, str_0: list_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1339():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [cookiecutter_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1340():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1341():
    float_0 = 3673.618
    list_0 = [float_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1342():
    bytes_0 = b"\x14\xde\x08\xf1\x846\xaa=\x03d\x02B\xf9\x84\xcbP\xce\x8fo"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1343():
    str_0 = "\x0clnp5 4|?87\x0bVr"
    list_0 = [str_0]
    exception_0 = module_1.Exception(*list_0)
    list_1 = [exception_0, exception_0, list_0, str_0]
    module_2.CookiecutterException(*list_1, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_1344():
    int_0 = -92
    module_2.NonTemplatedInputDirException(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_1345():
    bytes_0 = b"c\xec\xab\xe1\xeeXL\xc3\xb1m\xfc\xd1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1346():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1347():
    bytes_0 = b"\t\x08\xf4\xcbcl\xacF{\xdc\x02$\x90\xc4\xa4\x03Xf\xa1V"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1348():
    str_0 = "Uu%&wS1Fa4\\>"
    float_0 = 192.625
    list_0 = [str_0, str_0, float_0, str_0]
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0, **dict_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1349():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1350():
    int_0 = -1823
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1351():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [cookiecutter_exception_0, cookiecutter_exception_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1352():
    float_0 = 809.105984
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1353():
    str_0 = "v1$g),w!0o"
    str_1 = "lPCD? :FYmDh^"
    str_2 = "'1k_ .\\XW"
    str_3 = "/]C\x0b1Z"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0, str_3: str_1}
    module_1.BaseException(**dict_0)


def test_case_1354():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1355():
    object_0 = module_1.object()
    list_0 = [object_0, object_0]
    exception_0 = module_1.Exception(*list_0)
    tuple_0 = (exception_0,)
    tuple_1 = (tuple_0, tuple_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_1356():
    int_0 = 3021
    list_0 = [int_0, int_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1357():
    str_0 = "D%<jt\\>,+XR+yeNb7^}h"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1358():
    exception_0 = module_1.Exception()
    tuple_0 = (exception_0, exception_0)
    tuple_1 = (tuple_0,)
    bool_0 = False
    dict_0 = {tuple_1: tuple_0, exception_0: tuple_1, bool_0: exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1359():
    str_0 = ",C\x0cN"
    module_0.find_template(str_0)


def test_case_1360():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    none_type_0 = None
    list_0 = [none_type_0]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_0
    )


@pytest.mark.xfail(strict=True)
def test_case_1361():
    bytes_0 = b"\x067\xf5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1362():
    int_0 = 1062
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1363():
    bytes_0 = b"\x844l"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1364():
    float_0 = -4052.77967
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1365():
    complex_0 = -2548.535055 - 241.435j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1366():
    str_0 = "'P:8&\"DK$ZIH"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1367():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = []
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )
    tuple_0 = (cookiecutter_exception_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1368():
    float_0 = -1553.011394
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1369():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0, exception_0, exception_0]
    module_2.CookiecutterException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_1370():
    exception_0 = module_1.Exception()
    list_0 = [exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1371():
    int_0 = -1616
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1372():
    str_0 = "6W6"
    str_1 = "\x0b~Fv&MjpcG{r/7KON\tM\n"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1373():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1374():
    str_0 = "[XE7V\x0bY>^&k)L@$O?]-{"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1375():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    str_0 = "3X-)80)z=3"
    dict_0 = {str_0: non_templated_input_dir_exception_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1376():
    float_0 = 97.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1377():
    str_0 = "h`D2sIggqsaNX(\x0cvhW"
    str_1 = "'2"
    str_2 = "n?EqxfGpEB|\n[5"
    dict_0 = {str_0: str_1, str_1: str_0, str_2: str_1, str_1: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1378():
    str_0 = "\x0bpKG\n:"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1379():
    bytes_0 = b"Z\xe0\xdcjdx\xe4\x8d\xc4\x81.\x9ft\xd5\n*\xcf\x81B\xb4"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (
        bytes_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    )
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1380():
    str_0 = "#wX^C7!b@"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1381():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    str_0 = "TvAhwxvxe]!ng8Hm^^."
    dict_0 = {str_0: list_0, str_0: str_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1382():
    str_0 = '"`5Bm'
    list_0 = [str_0, str_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_0, list_0]
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.BaseException(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1383():
    str_0 = 'pja|N\t\tucte\ne&d@W"'
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1384():
    str_0 = "jU;<U>;[Jfgf+"
    tuple_0 = (str_0,)
    module_0.find_template(tuple_0)


def test_case_1385():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1386():
    base_exception_0 = module_1.BaseException()
    tuple_0 = (base_exception_0,)
    module_1.Exception(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1387():
    int_0 = -433
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1388():
    bytes_0 = b"\x86\x9e]nE\xda\x9f\xefGcG\xb9\x9e\x82"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1389():
    bytes_0 = b"\x80}"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1390():
    str_0 = "&5\t]s^hZJWOD\nRq"
    str_1 = "=RE\x0cQZF pG-3UD\\#"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1391():
    int_0 = -1102
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1392():
    int_0 = 2247
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1393():
    bytes_0 = b"\x83\x84\x18\x14]\xc8\x102$\x10\xd6\xc2"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1394():
    int_0 = 2785
    module_1.BaseException(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_1395():
    bytes_0 = b"\x87\x9c\xf0\xd5\xbf;\x8b8v2x\xb5\x0b\xa3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1396():
    bytes_0 = b"\xb8\x94\xee\xaa\xd0\xb5\xe9\x9f\x90\x1b4\xc2l"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1397():
    float_0 = -3436.6
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1398():
    float_0 = -526.1
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1399():
    object_0 = module_1.object()
    cookiecutter_exception_0 = module_2.CookiecutterException()
    str_0 = "(ZD@o&\rj@@OeqN\nm=@\\$"
    str_1 = "GVL?;B!%=M$+vuk0#0"
    dict_0 = {str_0: object_0, str_1: object_0, str_1: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1400():
    int_0 = 1112
    module_0.find_template(int_0)


def test_case_1401():
    cookiecutter_exception_0 = module_2.CookiecutterException()


@pytest.mark.xfail(strict=True)
def test_case_1402():
    int_0 = -1265
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1403():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    int_0 = 675
    tuple_0 = (dict_0, dict_0, int_0)
    dict_1 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: tuple_0}
    module_0.find_template(dict_1)


@pytest.mark.xfail(strict=True)
def test_case_1404():
    float_0 = -447.9
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1405():
    str_0 = "4"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1406():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    bytes_0 = b"\x92"
    list_0 = [cookiecutter_exception_0, cookiecutter_exception_0, bytes_0]
    cookiecutter_exception_1 = module_2.CookiecutterException(*list_0)
    list_1 = [cookiecutter_exception_1, cookiecutter_exception_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1407():
    float_0 = 4513.84
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1408():
    bytes_0 = b"\xe3\xc9\x18\xd4\x1coC#\x87p\xe3\xaf\xc6W\x02r"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1409():
    int_0 = -1331
    module_2.NonTemplatedInputDirException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_1410():
    str_0 = "B*7hIA>MhUH`"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1411():
    bytes_0 = b"\x9e\xc9`\xd7\x84\x98"
    module_0.find_template(bytes_0)


def test_case_1412():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1413():
    none_type_0 = None
    module_2.CookiecutterException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1414():
    bytes_0 = b"\xa2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1415():
    float_0 = 1065.46157
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1416():
    none_type_0 = None
    module_0.find_template(none_type_0)


def test_case_1417():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        **dict_0
    )


@pytest.mark.xfail(strict=True)
def test_case_1418():
    float_0 = 858.80313
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1419():
    str_0 = "WyO\nY+O#lt\x0c)isl]t"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1420():
    int_0 = 357
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1421():
    complex_0 = -1764 + 2656.1j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1422():
    str_0 = "R[K>;b3E=:gr"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1423():
    bytes_0 = b"\x07\x00T\x02\x81"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1424():
    int_0 = -3335
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1425():
    object_0 = module_1.object()
    str_0 = 'y}xxQ\r+"=yfU'
    none_type_0 = None
    str_1 = ">6]hE)ASv/\r"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_2.NonTemplatedInputDirException(*object_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1426():
    bytes_0 = b"\xae\xc4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1427():
    int_0 = 766
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1428():
    str_0 = "zI]`}>mY=~K|`'"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1429():
    str_0 = "o"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1430():
    list_0 = []
    bool_0 = False
    bool_1 = False
    tuple_0 = (list_0, bool_0, bool_1, bool_1)
    list_1 = [tuple_0, bool_1]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1431():
    float_0 = 432.16432
    module_1.BaseException(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_1432():
    base_exception_0 = module_1.BaseException()
    list_0 = [base_exception_0]
    tuple_0 = (list_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1433():
    bytes_0 = b"\xcbs^%\\q\xd2\xdd\xb9\xde\xdc\r\x97\rt"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1434():
    bytes_0 = b"=$\xa08\xe6\xf7\xbd\n,\xdd\x05D\x0b\x1b(&S\x96\xb9"
    bool_0 = True
    set_0 = {bool_0}
    tuple_0 = (bytes_0, set_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1435():
    int_0 = -2177
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1436():
    str_0 = "JPGB"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1437():
    str_0 = "R"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1438():
    int_0 = -1316
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1439():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    float_0 = 2.407717
    list_0 = [non_templated_input_dir_exception_0, float_0, float_0]
    str_0 = "nbL"
    tuple_0 = (str_0,)
    tuple_1 = (non_templated_input_dir_exception_0, list_0, tuple_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_1440():
    int_0 = -3805
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1441():
    bytes_0 = b"\x1e\xcd\xd62?\xa5\xd6\xd2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1442():
    int_0 = 629
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1443():
    complex_0 = -156.990962 + 223.818j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1444():
    int_0 = -3732
    set_0 = {int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1445():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    module_2.NonTemplatedInputDirException(*non_templated_input_dir_exception_0)


def test_case_1446():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1447():
    float_0 = -3905.5655
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1448():
    int_0 = -2
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    list_0 = [dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1449():
    int_0 = -1674
    complex_0 = 910.589 + 1393.799j
    list_0 = []
    dict_0 = {int_0: int_0, int_0: int_0, complex_0: list_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1450():
    dict_0 = {}
    base_exception_0 = module_1.BaseException(**dict_0)
    list_0 = [base_exception_0, base_exception_0, base_exception_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1451():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    module_0.find_template(dict_0)


def test_case_1452():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1453():
    str_0 = "+E6p\r:Ha{, ("
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1454():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, dict_0, dict_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1455():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1456():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    int_0 = 3476
    tuple_1 = (tuple_0, set_0, int_0, int_0)
    list_0 = [tuple_1, int_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1457():
    none_type_0 = None
    module_1.BaseException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1458():
    bytes_0 = b"O\xb8\xbb4\xdd\xd9\x00\x04iz&\xa2\xe7Kg?\xee"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1459():
    int_0 = -309
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1460():
    str_0 = "Z|6/bEb%"
    tuple_0 = (str_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1461():
    str_0 = "CfP|%Vk"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1462():
    bool_0 = True
    bytes_0 = b"\xe3\xc1\x8d\xf1\xe6\x18\xd1\xca\x84\x9d"
    set_0 = {bool_0, bytes_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1463():
    int_0 = -1080
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1464():
    int_0 = -855
    module_2.NonTemplatedInputDirException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_1465():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1466():
    float_0 = -85.03162
    list_0 = [float_0, float_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1467():
    int_0 = -1907
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1468():
    complex_0 = 188.1612 - 408.58j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1469():
    str_0 = "!mEU2,'l&\x0bKEi"
    none_type_0 = None
    str_1 = "x#\n+'\x0c\x0cM"
    str_2 = "oJi@|-j3o: uy"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
    }
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1470():
    str_0 = ",rH%!e_}oXBv"
    dict_0 = {str_0: str_0}
    list_0 = [dict_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1471():
    bytes_0 = b"\xd6\x91\xd6p\x0b\xbc\xa2\x15\x18\xa6\xa9s\xec\r"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1472():
    bytes_0 = b"O\xf9`*2ev"
    list_0 = [bytes_0]
    str_0 = "KA"
    dict_0 = {str_0: bytes_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1473():
    float_0 = -4184.7
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1474():
    str_0 = "&1]?.-FU'*\x0c"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1475():
    float_0 = 1098.955
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1476():
    int_0 = -1065
    module_1.object(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_1477():
    str_0 = "Ek<Qc"
    base_exception_0 = module_1.BaseException(*str_0)
    exception_0 = module_1.Exception()
    set_0 = {base_exception_0, exception_0, exception_0, str_0}
    module_2.CookiecutterException(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_1478():
    bytes_0 = b"7\x8aC\xdf&\xbb\xfc2Oj"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1479():
    int_0 = -1430
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1480():
    str_0 = "eyXgmy9e=4\x0c{`"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1481():
    str_0 = "\\'fZ^+M[F|(gus|8"
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1482():
    int_0 = -22
    bool_0 = True
    tuple_0 = (int_0, int_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1483():
    bytes_0 = b"?@o"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1484():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1485():
    bool_0 = False
    module_2.CookiecutterException(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1486():
    int_0 = 1905
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1487():
    bytes_0 = b"\x92\xeag\xd2c\xff\x86\x80\xd5\xef!\xb9\x03\x8d\x10\xe9\xde"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1488():
    int_0 = 1607
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1489():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_2.NonTemplatedInputDirException(**non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1490():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
    }
    list_0 = [dict_0, dict_0]
    list_1 = [list_0, cookiecutter_exception_0, list_0, cookiecutter_exception_0]
    module_1.Exception(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1491():
    str_0 = "n7(b#"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1492():
    int_0 = 1747
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1493():
    bytes_0 = b"\xfbJ{L"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_0 = False
    tuple_0 = (bytes_0, non_templated_input_dir_exception_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1494():
    str_0 = "oHF[Uv5oQ"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1495():
    int_0 = 1362
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1496():
    bytes_0 = b"\xa2\xad(\x80"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1497():
    complex_0 = 566.19 - 6107.892j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1498():
    bytes_0 = b"\xd3\xbb*\xb4g\xd8\xcfo\xdb\x10k%\xa4m6\x9eW\xbc"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1499():
    str_0 = "ASvvg"
    list_0 = [str_0, str_0]
    str_1 = "{U@&_WW#zJ,uZ={yD\n"
    dict_0 = {}
    str_2 = "jYb\n#Qi"
    dict_1 = {str_0: str_0, str_0: list_0, str_1: dict_0, str_2: list_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_1)


@pytest.mark.xfail(strict=True)
def test_case_1500():
    str_0 = '~"_:wWXy'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1501():
    bytes_0 = b"\xe9\xc5wl\x99u\x19\xe4\xdf"
    module_0.find_template(bytes_0)


def test_case_1502():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1503():
    str_0 = "!|P~R%4;EvQB7{"
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {str_0: cookiecutter_exception_0, str_0: cookiecutter_exception_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1504():
    str_0 = "WeIw\\t[tBgQR="
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1505():
    bool_0 = True
    bytes_0 = b"zK\xe6\x00\xc8\xbd\xe9\xd2"
    list_0 = []
    exception_0 = module_1.Exception(*list_0)
    tuple_0 = (bool_0, bytes_0, exception_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1506():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (dict_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1507():
    float_0 = 67.9649
    set_0 = {float_0}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(*set_0)
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1508():
    float_0 = -455.1
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1509():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1510():
    str_0 = "4Yr,\nQWsk%e9Og9%6%u"
    str_1 = "\r\x0b3="
    str_2 = ":Lp"
    dict_0 = {str_0: str_1, str_1: str_2, str_1: str_1, str_1: str_2}
    dict_1 = {str_0: str_0, str_1: str_1, str_0: str_1, str_2: dict_0}
    module_1.Exception(**dict_1)


@pytest.mark.xfail(strict=True)
def test_case_1511():
    str_0 = "Dlg@F_>O'{K2\x0b"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1512():
    bytes_0 = b"\xb5\x9e\x11\xd9\xdeC\x96\xe5\xd4\x0c\xc3\x8b"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1513():
    bytes_0 = b"D\x1czo"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1514():
    int_0 = 192
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1515():
    int_0 = 2199
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1516():
    list_0 = []
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1517():
    complex_0 = 1608.67 - 96.072j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1518():
    list_0 = []
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1519():
    str_0 = "#E:RpPJ!"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1520():
    bytes_0 = b"\xf2\xab\xcb.#(;\x18T\xbct\xb2\xa3\xac\xbe\xb8g\\\x80\x13"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1521():
    int_0 = 1078
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1522():
    bytes_0 = b"\xbd\xbb\xa7\xa3,Dkh7\xd8\xa5\xb0\xd2\xed\x86"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1523():
    float_0 = -1884.0
    module_0.find_template(float_0)


def test_case_1524():
    exception_0 = module_1.Exception()


@pytest.mark.xfail(strict=True)
def test_case_1525():
    set_0 = set()
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1526():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1527():
    str_0 = "GzeOjk>,"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1528():
    str_0 = "AW(gPK7SX4~x(v'J_\tkZ"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1529():
    dict_0 = {}
    list_0 = [dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1530():
    float_0 = -37.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1531():
    str_0 = "yvRs`[P; 1z9"
    str_1 = 'fX<7"a:gFFv'
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1532():
    complex_0 = -1570 - 765.374095j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1533():
    int_0 = 2705
    list_0 = [int_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1534():
    str_0 = "ZeU"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1535():
    none_type_0 = None
    module_1.Exception(*none_type_0)


def test_case_1536():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1537():
    str_0 = "\x0b%lM{vMpyQ _.9/,dYda"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1538():
    int_0 = -2330
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1539():
    int_0 = 3055
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1540():
    str_0 = "D]>`RP5Uc"
    str_1 = "\n4}@4"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_1: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1541():
    str_0 = "X6V@7"
    str_1 = "J[1h/)'"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1542():
    base_exception_0 = module_1.BaseException()
    dict_0 = {}
    module_1.Exception(*base_exception_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1543():
    str_0 = "Y-}Uxw?\rK\x0be>"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1544():
    str_0 = 'E9"=\tly>=B\n]\txp'
    module_1.Exception(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_1545():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    tuple_0 = (cookiecutter_exception_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1546():
    float_0 = 3765.25775
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1547():
    complex_0 = -1832.8589 - 288.7j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1548():
    float_0 = 2395.030855
    list_0 = [float_0, float_0, float_0]
    str_0 = "gHS,1V'g8q&YRCY\x0c{;3\""
    str_1 = "rdN=|4W8"
    dict_0 = {str_0: float_0, str_1: str_0, str_0: list_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1549():
    str_0 = "y{mu|HEmF"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1550():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1551():
    str_0 = "\npX 'l0\t"
    exception_0 = module_1.Exception()
    set_0 = {str_0, exception_0, exception_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1552():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = (bool_0, set_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1553():
    complex_0 = -1756 - 764.6708j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1554():
    str_0 = "QiS_BnDoKf\x0bjo2O_|e"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1555():
    bool_0 = True
    module_2.CookiecutterException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1556():
    none_type_0 = None
    module_2.CookiecutterException(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1557():
    int_0 = 215
    bytes_0 = b"\xe7\xd8z66\xca\nx\x9f~"
    dict_0 = {int_0: bytes_0, int_0: int_0, bytes_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1558():
    str_0 = "P"
    str_1 = ">+W"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


def test_case_1559():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )


@pytest.mark.xfail(strict=True)
def test_case_1560():
    list_0 = []
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1561():
    bool_0 = False
    str_0 = "w9'b007t>BH^*}\x0c|["
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_2.NonTemplatedInputDirException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1562():
    bytes_0 = b"\x87\xa9\x0e\xc4+\x0c\xb7\x81c\xf5\x9eJ\xd7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1563():
    bytes_0 = b"<\x1d-\x05\x9c\xe6\xd3\x18Q\x9a\x96U\xd0\x07\x0c\x10KTp"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1564():
    list_0 = []
    dict_0 = {}
    object_0 = module_1.object(*list_0, **dict_0)
    module_0.find_template(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1565():
    float_0 = 4961.1856
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1566():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0, exception_0, exception_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1567():
    int_0 = 2187
    list_0 = [int_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1568():
    str_0 = "RKF>w'L7|e*\x0cg~fidz-"
    set_0 = {str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1569():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1570():
    bool_0 = False
    module_1.Exception(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1571():
    int_0 = 1034
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1572():
    bool_0 = True
    set_0 = set()
    list_0 = [set_0]
    str_0 = "Dh\n1;^@\td"
    dict_0 = {str_0: bool_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1573():
    bytes_0 = b"\xb2l\xb3~\xdc\xf7\x87"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1574():
    complex_0 = -1029.771 + 739.96j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1575():
    str_0 = "Ay?"
    module_0.find_template(str_0)


def test_case_1576():
    pass


def test_case_1577():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1578():
    bytes_0 = b"\x0c\x1eb5\xca"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1579():
    int_0 = 2298
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1580():
    str_0 = "Wr;*lce]uRnP"
    module_0.find_template(str_0)


def test_case_1581():
    base_exception_0 = module_1.BaseException()


@pytest.mark.xfail(strict=True)
def test_case_1582():
    bool_0 = True
    dict_0 = {}
    module_2.NonTemplatedInputDirException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1583():
    str_0 = 'mm<90@s|T/Is1Y0kAg"'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1584():
    tuple_0 = ()
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1585():
    str_0 = "Ksh?Xu-S =ExTJ/>X"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1586():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    bool_0 = True
    bytes_0 = b"D\x8c\xd0\x87y\x80\x1f\xa0\xf6te^\x1ehuJ\x8a\x92"
    float_0 = 3253.2
    tuple_0 = (bytes_0, list_0, float_0)
    tuple_1 = (bool_0, tuple_0)
    tuple_2 = (non_templated_input_dir_exception_0, tuple_1)
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_1 = [non_templated_input_dir_exception_0, tuple_2, cookiecutter_exception_0]
    str_0 = "cN`J[GT];uDoR+Eq|j=Q"
    bool_1 = True
    dict_0 = {
        str_0: list_1,
        str_0: cookiecutter_exception_0,
        str_0: bool_1,
        str_0: non_templated_input_dir_exception_0,
    }
    module_1.Exception(*list_1, **dict_0)


def test_case_1587():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_1588():
    list_0 = []
    list_1 = [list_0, list_0, list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1589():
    float_0 = 1199.267607
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1590():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1591():
    exception_0 = module_1.Exception()
    module_2.NonTemplatedInputDirException(*exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1592():
    bytes_0 = b"uI\x01\xcb\x99\xd3\xf6\x83\x81\xa3\xe2"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1593():
    str_0 = 'DJmkh4E[f",0.]:+!'
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    set_0 = {str_0, non_templated_input_dir_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1594():
    int_0 = -3823
    set_0 = {int_0, int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1595():
    int_0 = 1944
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1596():
    bytes_0 = b"\x85ux\x06"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1597():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1598():
    complex_0 = 1847.1 - 593.83515j
    dict_0 = {complex_0: complex_0}
    tuple_0 = (dict_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1599():
    bytes_0 = b"j\xcc\xf7\x0f\xe7H"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1600():
    str_0 = "#3>v:u)\nz_4tZ=)h=Kh"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1601():
    bool_0 = False
    set_0 = {bool_0}
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: set_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1602():
    float_0 = -5564.905845
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1603():
    list_0 = []
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1604():
    bytes_0 = b"\xff\xd8\xd3\xbcT\xb2\xaeg\x89\xb4\x97\xbe\x83/2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1605():
    str_0 = "u]';169\"OU%jQ&uDG\x0c#H"
    str_1 = "5E4\toP43V)W"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1606():
    exception_0 = module_1.Exception()
    list_0 = [exception_0]
    tuple_0 = (list_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1607():
    str_0 = "yQ(b:E"
    str_1 = "i6JayJZQ&mlv\x0bK9"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1608():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1609():
    int_0 = 1546
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1610():
    float_0 = 1589.26576
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1611():
    int_0 = 2244
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1612():
    bytes_0 = b'\xf0V\xac\xee#\xf9\xfa\x9e\x17o\xd5i&"+\xd3'
    tuple_0 = (bytes_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1613():
    str_0 = "4s>'&\x0bD@>|:\x0cY5;U\rqE"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1614():
    str_0 = "S:zCx3?1mC!B+<\\Td*"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1615():
    object_0 = module_1.object()
    list_0 = [object_0, object_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1616():
    str_0 = 'Qts\r:u}-"LB9z~}]A'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1617():
    none_type_0 = None
    module_1.Exception(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1618():
    str_0 = "h;,DXJJ \\';'\"`"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1619():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1620():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1621():
    complex_0 = 1479 + 3424.99892j
    str_0 = "-wp|shS2a+f"
    dict_0 = {complex_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1622():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1623():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    dict_1 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
    }
    module_2.CookiecutterException(*dict_1, **non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1624():
    str_0 = "<z5C4f\x0b7"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1625():
    int_0 = -386
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1626():
    float_0 = 4003.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1627():
    str_0 = "qG|?K;"
    dict_0 = {str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1628():
    bytes_0 = b"\xa7'{=s\x1biJDz>^"
    bytes_1 = b"2a\xdf\rAM\x1f^\x02,\\\xeb\xb1"
    tuple_0 = (bytes_0, bytes_1, bytes_0)
    set_0 = {bytes_0, bytes_0, bytes_1}
    int_0 = 1236
    tuple_1 = (tuple_0, set_0, int_0, bytes_1)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_1629():
    bool_0 = True
    tuple_0 = (bool_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1630():
    tuple_0 = ()
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1631():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {cookiecutter_exception_0: cookiecutter_exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1632():
    complex_0 = -3197.484 + 663.7j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1633():
    complex_0 = 2017.97203 - 610.347j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1634():
    float_0 = 513.2
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1635():
    str_0 = "Z"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1636():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1637():
    str_0 = ">wTv=u"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1638():
    int_0 = -890
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1639():
    str_0 = "`dXA\t^7Q6\\TXvP\\:k"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1640():
    int_0 = 58
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1641():
    bytes_0 = b"\x88\xf4k\xb8d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1642():
    bytes_0 = b'`"\xccQ\x1e\xd9C6x\xaf~6\x842\xcd\xc9\x89\xb7'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1643():
    float_0 = -2633.6038
    set_0 = {float_0, float_0, float_0, float_0}
    tuple_0 = (set_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1644():
    float_0 = 1954.8806
    module_0.find_template(float_0)


def test_case_1645():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1646():
    str_0 = ">#=E.y"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1647():
    dict_0 = {}
    tuple_0 = (dict_0, dict_0, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1648():
    bytes_0 = b"\x85\xb9\xe3\xfa\x17\xdf\x17Q"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1649():
    bool_0 = True
    module_2.NonTemplatedInputDirException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1650():
    str_0 = "\\o=\x0br"
    str_1 = "gV.{}q~xX0^:}R?.Ln"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1651():
    str_0 = "Z|w"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1652():
    int_0 = -112
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1653():
    str_0 = "%X(z1J9&xy"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1654():
    int_0 = -319
    tuple_0 = (int_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1655():
    int_0 = 596
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1656():
    bytes_0 = b"\xf7\x04\xd7\xa1s\xf2\x08n\x86\x84#\xbc\x80\xe7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1657():
    int_0 = 313
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1658():
    list_0 = []
    str_0 = "D=VlIX"
    none_type_0 = None
    str_1 = "Z\r(&\nuO)K\t\x0b^IQ\\\n$wSK"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: none_type_0}
    module_1.BaseException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1659():
    str_0 = "bPFWmD4B"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1660():
    bytes_0 = b"<\xd8\xe1'\xc6a\x91\x8a\xf2T\xc9\x1f\x7f\t.\xc0\xb2\xfb\x91w"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1661():
    str_0 = "wQ.+HhRPzv}$m!'"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1662():
    int_0 = -1779
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1663():
    bool_0 = True
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {}
    float_0 = -2561.941
    tuple_0 = (bool_0, cookiecutter_exception_0, dict_0, float_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1664():
    int_0 = -495
    module_2.CookiecutterException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_1665():
    float_0 = -1536.818019
    base_exception_0 = module_1.BaseException()
    set_0 = set()
    int_0 = 243
    dict_0 = {
        float_0: base_exception_0,
        base_exception_0: set_0,
        int_0: set_0,
        float_0: set_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1666():
    bytes_0 = b"\x147\xcc]\xdb\xd6\x9a\x04\x85\xeb_\x83"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1667():
    bytes_0 = b"\xf4\x9d|\x15\xc2I\xb4\xce\xfcO%\x16\x8f\x1d\xc6\xa0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1668():
    bytes_0 = b"\xda\x95)\x0f\xf8bi\xb1(\xfd\x9d\x88\x98\x97\x06\xed\xfd\x80\xe6"
    set_0 = {bytes_0, bytes_0, bytes_0}
    list_0 = [set_0, bytes_0, bytes_0]
    exception_0 = module_1.Exception(*list_0)
    tuple_0 = (bytes_0, set_0, exception_0, bytes_0)
    bool_0 = False
    list_1 = [tuple_0, list_0, bool_0, exception_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1669():
    float_0 = 2734.16
    list_0 = [float_0, float_0, float_0]
    str_0 = "%a"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1670():
    str_0 = "X=6RE1QQr"
    set_0 = {str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1671():
    int_0 = -487
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1672():
    bytes_0 = b"\xc4\xaeY\xff\xe3\xcd\x81\xc8_\xe3-%\xcb5|mC"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1673():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1674():
    int_0 = -2877
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1675():
    int_0 = -4311
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1676():
    bytes_0 = b"\x02\xb6\xb1\x1a\xdf\x94\x92)"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1677():
    bytes_0 = b"\xd1~\x91fH}\xc1\x8a"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1678():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1679():
    str_0 = ""
    set_0 = {str_0, str_0, str_0, str_0}
    list_0 = [set_0, set_0, set_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1680():
    str_0 = "CM^[B2;1FS2L @ck2W+"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1681():
    list_0 = []
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1682():
    int_0 = 3084
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1683():
    bool_0 = False
    float_0 = 666.32
    bool_1 = True
    str_0 = "MVY."
    tuple_0 = (bool_0, float_0, bool_1, str_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1684():
    str_0 = "#tFWQubk"
    bool_0 = True
    str_1 = "v~eqEPDKJz|"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: bool_0, str_1: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1685():
    str_0 = '9A5.!"hfL'
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1686():
    bytes_0 = b"i)"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1687():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0, exception_0, exception_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1688():
    bytes_0 = b"\xeb\x17\x9a\x01\x98%\xb3\xcc\x06\x89\xafb0\x85C"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1689():
    str_0 = "_qDdS$1=&S="
    none_type_0 = None
    str_1 = "'rbjB,ENX/^qj,"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
    }
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1690():
    float_0 = 36.7
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1691():
    exception_0 = module_1.Exception()
    str_0 = "B"
    bool_0 = True
    str_1 = "b)1e$1k}5\n"
    dict_0 = {str_0: bool_0, str_0: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1692():
    str_0 = "s;,|}Q9da2a6"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1693():
    bytes_0 = b"\xe7\xd8\x82}\xbb\xab\xb0\x1fz\xb4T\xad\xc2\xac"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1694():
    str_0 = "sl%qJ"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1695():
    bool_0 = False
    module_2.NonTemplatedInputDirException(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1696():
    float_0 = 589.69
    list_0 = [float_0, float_0, float_0, float_0]
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0, **dict_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1697():
    str_0 = "%(t"
    module_2.NonTemplatedInputDirException(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_1698():
    int_0 = 1073
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1699():
    bytes_0 = b"M\xf1o\xbd(\xbd\xdb\xed\x9f\xd6I\xf1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1700():
    int_0 = -1607
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1701():
    str_0 = "A1N:J\x0bR8Dz\rLD`T>},"
    str_1 = ',m]\r$\\\t";wywr\nN+\n5'
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1702():
    bool_0 = False
    list_0 = [bool_0]
    base_exception_0 = module_1.BaseException(*list_0)
    tuple_0 = (list_0, base_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1703():
    int_0 = -484
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1704():
    base_exception_0 = module_1.BaseException()
    str_0 = "^x\nyYyZ"
    list_0 = [base_exception_0, base_exception_0, str_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    str_1 = "#e#dU^"
    str_2 = "<U"
    dict_0 = {str_1: str_0, str_2: str_1, str_2: str_1}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1705():
    str_0 = "Nrmn{K]Qx"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1706():
    bytes_0 = b"\x1a\xc0f\x80\xab\xab\xbc\x1c"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1707():
    str_0 = "^DG"
    set_0 = {str_0, str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1708():
    list_0 = []
    str_0 = "r@d\x0b|9X"
    dict_0 = {str_0: list_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1709():
    bytes_0 = b"J\xbc\xfe\xbd\x05\x18\x9eB\xd75\x01Ld\xbd\x94\xf3"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *bytes_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1710():
    str_0 = "7roK!GGq"
    module_0.find_template(str_0)


def test_case_1711():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1712():
    str_0 = "[7v#AQ^\rv@Z"
    str_1 = "X"
    str_2 = "H(>M4"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0, str_2: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1713():
    float_0 = 3686.428
    set_0 = {float_0, float_0, float_0}
    module_1.BaseException(**set_0)


def test_case_1714():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1715():
    str_0 = "b"
    module_0.find_template(str_0)


def test_case_1716():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1717():
    str_0 = "ZC4}Y0X7^mh:fJ"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1718():
    str_0 = "&[\\#Mj_\x0c>f0\t-#cfC"
    dict_0 = {str_0: str_0, str_0: str_0}
    dict_1 = {str_0: str_0, str_0: dict_0, str_0: dict_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_1)


@pytest.mark.xfail(strict=True)
def test_case_1719():
    str_0 = '0oa/rD`{Di7";Cj_E[r|'
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1720():
    int_0 = 1878
    dict_0 = {int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1721():
    int_0 = -954
    list_0 = [int_0, int_0]
    dict_0 = {}
    exception_0 = module_1.Exception(*list_0, **dict_0)
    dict_1 = {exception_0: exception_0, exception_0: list_0}
    module_0.find_template(dict_1)


@pytest.mark.xfail(strict=True)
def test_case_1722():
    str_0 = "?gnL\\\\4kds3\nqh{=pD^{"
    list_0 = [str_0, str_0, str_0, str_0]
    none_type_0 = None
    module_2.NonTemplatedInputDirException(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1723():
    exception_0 = module_1.Exception()
    set_0 = {exception_0, exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1724():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    set_0 = set()
    str_0 = "8x<H!z/;9z6 \x0bq%U`"
    str_1 = "..WFFfVG"
    dict_0 = {str_0: set_0, str_1: cookiecutter_exception_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1725():
    base_exception_0 = module_1.BaseException()
    bytes_0 = b"S\xed\xd0\x1ea\x9aBl\x00|\xd3\x9243,:\xde%"
    tuple_0 = (base_exception_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1726():
    int_0 = -511
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1727():
    int_0 = -1847
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1728():
    none_type_0 = None
    module_1.BaseException(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1729():
    exception_0 = module_1.Exception()
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1730():
    bytes_0 = b"1DX\x8c\n[(\xe4\x02"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1731():
    int_0 = 2411
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1732():
    int_0 = 917
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1733():
    bytes_0 = b"z\xf8\xa8(I\\\xe8\xf0\xc3\xd5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1734():
    int_0 = 1693
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1735():
    str_0 = "Q{MJ%Q ZVPg"
    str_1 = "TH+rW~<v>c0G\t!"
    float_0 = 1680.932
    dict_0 = {str_0: str_0, str_1: str_0, str_1: float_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1736():
    str_0 = "Q5"
    dict_0 = {str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1737():
    complex_0 = -425.663042 - 3167.38226j
    module_1.BaseException(**complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1738():
    str_0 = '|$\x0c"zwbb^f]'
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1739():
    str_0 = ":Lfz"
    tuple_0 = (str_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1740():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1741():
    int_0 = 3001
    set_0 = {int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1742():
    str_0 = "xGuWL("
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1743():
    str_0 = "6D-)5\r UWM"
    str_1 = "0~Sf^BT"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1744():
    int_0 = 202
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1745():
    bytes_0 = b"\xcf"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1746():
    bytes_0 = b'\x95"L\x17J\xea`'
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1747():
    float_0 = -2171.68
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1748():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1749():
    int_0 = 2961
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1750():
    float_0 = 1037.86
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1751():
    str_0 = "AJLjA\rECG4Y]M"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1752():
    bool_0 = True
    module_2.NonTemplatedInputDirException(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1753():
    str_0 = ".BY#uX`"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1754():
    str_0 = "4xF?Qq*K. "
    dict_0 = {str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1755():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0, tuple_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1756():
    str_0 = "T9r\\,):#H2cZ_F8oD"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1757():
    int_0 = -3361
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1758():
    str_0 = "BPaw"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1759():
    str_0 = "q9\\6n!Yp"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1760():
    bytes_0 = b"\x9a\xc6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1761():
    int_0 = 2349
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1762():
    str_0 = "X;"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1763():
    float_0 = 1922.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1764():
    base_exception_0 = module_1.BaseException()
    module_2.NonTemplatedInputDirException(**base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1765():
    bytes_0 = b"\xc03\xb7\xbc\xf0-\xbe\x95\xd8o\xa3G\x9f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1766():
    bytes_0 = b"\xdb~1\xfd\xe0\xb5m\x7f\xca\x06\xa7\xf0w"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1767():
    str_0 = "vT3\\4c){qW~"
    none_type_0 = None
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1768():
    str_0 = "Oc y(kU34ci\x0bZ\r/V"
    str_1 = "vI\x0c.-]"
    int_0 = -1808
    dict_0 = {str_0: str_0, str_1: str_1, str_1: int_0, str_1: int_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1769():
    str_0 = "egb=@\x0bPKi@%99DUEGf"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1770():
    str_0 = "'=sB69qjSi{u~1KdM&]N"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1771():
    int_0 = 1741
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1772():
    bytes_0 = b"\xac\xcbji\xd7&\x04\x93\x9fq?\xd6Gb\x12"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1773():
    str_0 = "'+5]"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1774():
    str_0 = "<2C@/GXl3"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1775():
    bytes_0 = b"$\xf2\xbb\xf3BZr\x8c\x9bf\x83RRN\xc3\xa8\x92\xcdGz"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_1.Exception(*list_0, **cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1776():
    int_0 = 1853
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1777():
    bytes_0 = b"\xb5\xc0pK\xacqe\x0f[r\x83\xbb\xa7\xf4V\x83C"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1778():
    str_0 = "WyW"
    str_1 = "tO(]Y53-?+8K4MGR"
    dict_0 = {str_0: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1779():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    module_1.Exception(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_1780():
    str_0 = "kQ8:E>/V"
    list_0 = [str_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1781():
    list_0 = []
    module_1.Exception(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_1782():
    str_0 = "y6e"
    str_1 = "<ra`yvcbv[DN'"
    list_0 = [str_1]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    dict_0 = {
        str_0: str_0,
        str_1: str_0,
        str_0: cookiecutter_exception_0,
        str_0: cookiecutter_exception_0,
    }
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1783():
    bytes_0 = b"\xbb\xc2\xe8\xc8s\x13P\x9aM\xa4`p\xe6\x9aC1\xd3z\x81"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1784():
    float_0 = -98.439064
    list_0 = [float_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1785():
    bytes_0 = b"\xb1\x1f#\xca\xf1\xbd\x0bi"
    dict_0 = {bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1786():
    str_0 = "v|jLXzobA@Ea\x0b"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1787():
    str_0 = ":q5J88P/HHmD\x0bZ"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1788():
    int_0 = 501
    module_1.BaseException(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_1789():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1790():
    int_0 = -1939
    list_0 = [int_0, int_0]
    module_2.NonTemplatedInputDirException(*list_0, **int_0)


@pytest.mark.xfail(strict=True)
def test_case_1791():
    int_0 = -1708
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1792():
    int_0 = -1773
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1793():
    str_0 = "61~9=Zj"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1794():
    bool_0 = True
    module_0.find_template(bool_0)


def test_case_1795():
    cookiecutter_exception_0 = module_2.CookiecutterException()


@pytest.mark.xfail(strict=True)
def test_case_1796():
    str_0 = "],+G\th}_-CP\nF31@\\Xb"
    str_1 = "*n0ugw}v"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1797():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    set_0 = {cookiecutter_exception_0, cookiecutter_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1798():
    float_0 = -2905.3
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1799():
    tuple_0 = ()
    str_0 = "p;M{qB`h<I7?-Ej"
    tuple_1 = (tuple_0, str_0)
    module_0.find_template(tuple_1)


def test_case_1800():
    list_0 = []
    base_exception_0 = module_1.BaseException(*list_0)
    list_1 = [base_exception_0, base_exception_0, list_0]
    exception_0 = module_1.Exception(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_1801():
    float_0 = 688.945
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1802():
    float_0 = 477.18
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1803():
    complex_0 = -1695.214944 - 1282.4815j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1804():
    str_0 = "'\t&P</Gy0_RaOZtg"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1805():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1806():
    bool_0 = False
    int_0 = 3025
    str_0 = "F~-&b_o\x0c\\Cg@:!r#m"
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_0 = (bool_0, int_0, str_0, cookiecutter_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1807():
    bytes_0 = b"\xb0\x00C\x9dDU|\x9bw\x94\xbe\x8fZ\n\xac9"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1808():
    bytes_0 = b"\xd8"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1809():
    int_0 = 2904
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1810():
    int_0 = -318
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1811():
    int_0 = -954
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1812():
    bool_0 = True
    list_0 = [bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1813():
    str_0 = "a8xno@]<1zUG"
    set_0 = {str_0}
    list_0 = [set_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1814():
    int_0 = -3205
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1815():
    float_0 = 1360.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1816():
    int_0 = -4495
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1817():
    list_0 = []
    exception_0 = module_1.Exception(*list_0)
    module_1.object(**exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1818():
    str_0 = "\\C;9X9ddg\"'ZdW.%b1G"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1819():
    float_0 = 3063.6799
    set_0 = {float_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1820():
    bytes_0 = b"\xa7\xfc\xb3\xf2\xc5\xc1\x05\x0c\x9b"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1821():
    int_0 = 1235
    list_0 = [int_0, int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1822():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = ()
    str_0 = "+K&d/3$w?rx"
    tuple_1 = (non_templated_input_dir_exception_0, tuple_0, str_0)
    float_0 = 1012.636515
    tuple_2 = (set_0, bool_0, tuple_1, float_0)
    list_0 = [tuple_2, non_templated_input_dir_exception_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1823():
    float_0 = 383.65
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1824():
    int_0 = 145
    list_0 = [int_0, int_0]
    str_0 = "ZTG"
    str_1 = "$x:9cUH"
    dict_0 = {str_0: int_0, str_0: int_0, str_1: str_1, str_1: int_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1825():
    complex_0 = -793.7 - 1190.3546j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1826():
    tuple_0 = ()
    base_exception_0 = module_1.BaseException(*tuple_0)
    module_0.find_template(base_exception_0)


def test_case_1827():
    pass


def test_case_1828():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1829():
    int_0 = 2201
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    module_2.NonTemplatedInputDirException(*dict_0, **int_0)


@pytest.mark.xfail(strict=True)
def test_case_1830():
    str_0 = "}3Ac\t7on"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1831():
    none_type_0 = None
    module_2.NonTemplatedInputDirException(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1832():
    str_0 = "*me-"
    none_type_0 = None
    str_1 = "o^{rAK=mZV"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1833():
    int_0 = -3183
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1834():
    set_0 = set()
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1835():
    float_0 = -637.493
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1836():
    bytes_0 = b"\x8c{\xf5"
    tuple_0 = (bytes_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1837():
    bool_0 = True
    set_0 = {bool_0}
    list_0 = [bool_0, bool_0, set_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1838():
    list_0 = []
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )
    list_1 = [non_templated_input_dir_exception_0]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_1839():
    float_0 = -3453.005105
    tuple_0 = (float_0,)
    dict_0 = {tuple_0: float_0, float_0: tuple_0, float_0: float_0, tuple_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1840():
    bytes_0 = b"\x08"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1841():
    bytes_0 = b"\xc5\xb6J\xc3\xf4U<\x83\x14\x19\x96\xae\x10\x88\xd7\x8f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1842():
    str_0 = "lSd$\r\nQnn,za!"
    module_2.NonTemplatedInputDirException(*str_0, **str_0)


@pytest.mark.xfail(strict=True)
def test_case_1843():
    float_0 = -2309.6504
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1844():
    list_0 = []
    str_0 = "dr +:Y"
    dict_0 = {str_0: list_0}
    module_1.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1845():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    str_0 = "}"
    dict_0 = {str_0: str_0, str_0: none_type_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1846():
    int_0 = -4738
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1847():
    int_0 = 2783
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1848():
    int_0 = 706
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1849():
    str_0 = 'K#fC7\r"F `r[jM!>?Z'
    tuple_0 = (str_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1850():
    str_0 = "QEmS[L\r'9kAGOd)|jRFz"
    bool_0 = False
    list_0 = [bool_0, str_0, str_0, str_0]
    list_1 = [str_0, list_0, bool_0, str_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1851():
    str_0 = 'ja"'
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1852():
    str_0 = "9kX:F:+YsTWSE"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1853():
    bytes_0 = b"\xc0\xd8\x1f|\x1f\xa1\re\xf7A\xb6\x81"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1854():
    int_0 = 977
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1855():
    str_0 = "GD/\\QR\rM(:M@ V~\tE"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1856():
    object_0 = module_1.object()
    module_2.NonTemplatedInputDirException(**object_0)


@pytest.mark.xfail(strict=True)
def test_case_1857():
    bool_0 = True
    module_2.CookiecutterException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1858():
    str_0 = "s\ttj4fXVA9H6Q_@6\x0cU"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1859():
    int_0 = -1726
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1860():
    bytes_0 = b";\xca|4\xc8"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1861():
    str_0 = "1M>~Y"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1862():
    int_0 = 1207
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1863():
    str_0 = "#R@R)'wUaN!+*ST@0z<"
    str_1 = "/I\x0c\n3=:F"
    str_2 = "TY|\n<WOl3clImu]kN&g\r"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1864():
    str_0 = 't!0]Z "dy:(E<if'
    module_2.CookiecutterException(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_1865():
    bool_0 = False
    module_2.CookiecutterException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1866():
    str_0 = "'^fCxT,'+"
    list_0 = [str_0, str_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {str_0: non_templated_input_dir_exception_0, str_0: list_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1867():
    int_0 = -115
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1868():
    int_0 = 2335
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1869():
    bytes_0 = b"\xbf\x1c\x9eL\xd5\xef\xb8\\"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1870():
    str_0 = "M/sw1rtu"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1871():
    base_exception_0 = module_1.BaseException()
    set_0 = {base_exception_0, base_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1872():
    float_0 = -443.7
    module_2.CookiecutterException(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_1873():
    str_0 = 'hqCfg{UqGuR"~.'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1874():
    str_0 = "1}]Cjz"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1875():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1876():
    bytes_0 = b"\xdb\x9e9^\x14\x0fe/\xf5}yo=05\x80"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1877():
    exception_0 = module_1.Exception()
    module_0.find_template(exception_0)


def test_case_1878():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1879():
    int_0 = -907
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1880():
    int_0 = -1214
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1881():
    int_0 = 1070
    list_0 = [int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1882():
    str_0 = "Z[oK!cT0RKR'\r<"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1883():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1884():
    float_0 = 1487.6
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1885():
    float_0 = 1618.8
    list_0 = [float_0, float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1886():
    none_type_0 = None
    list_0 = [none_type_0]
    str_0 = "EPZ=:*"
    str_1 = "+p"
    str_2 = "D}6xv\rsugG\\Ko\\(p*"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0, str_2: str_1}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1887():
    bytes_0 = b"\x8e\x01<5\x1d\x82@\xae"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1888():
    int_0 = 1485
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1889():
    str_0 = "-uR5;"
    str_1 = "0U)w#\x0bW^a0sC6+"
    str_2 = "\nS.g;8t^Mr}O-d!"
    str_3 = "Y>)U#Nx,"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0, str_3: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1890():
    int_0 = 1467
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1891():
    int_0 = 244
    module_2.NonTemplatedInputDirException(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_1892():
    bytes_0 = b"\x8c%\xc1{]\xf1Z5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1893():
    bytes_0 = b"\x8f\x05\x17\x15\xcdD"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1894():
    int_0 = 1316
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1895():
    bool_0 = True
    bytes_0 = b"Tp@A\xc8%\x89iD\xfc\t\x9e\xfc\xe8\xaddJbI"
    tuple_0 = (bytes_0,)
    tuple_1 = (bool_0, tuple_0, bytes_0, tuple_0)
    cookiecutter_exception_0 = module_2.CookiecutterException(*tuple_1)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1896():
    int_0 = -1968
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1897():
    bytes_0 = b"\xa1\xa0\xa12\xb2\xc0\xeb\xcbay"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1898():
    str_0 = "n C}[m>"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1899():
    str_0 = "\tY,>[e%3zR17H"
    str_1 = "wmBx0["
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1900():
    int_0 = 590
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1901():
    int_0 = 467
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1902():
    int_0 = 1979
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1903():
    str_0 = 'V5{:r"iAtfy'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1904():
    str_0 = "]U@z &g}`"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1905():
    str_0 = "vI'La4TX?o(-;Joi}jG`"
    none_type_0 = None
    str_1 = "Il1U_Ge?s1)54\\AX"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_1: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1906():
    str_0 = "'-:O77"
    none_type_0 = None
    str_1 = "@"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


def test_case_1907():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1908():
    float_0 = 3538.802
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1909():
    int_0 = -1453
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1910():
    bool_0 = True
    list_0 = [bool_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1911():
    str_0 = "hd1F?E1y|Q?g*o"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1912():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    set_0 = {
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    }
    list_0 = [set_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    tuple_0 = (cookiecutter_exception_0, list_0, set_0)
    list_1 = [tuple_0, list_0, cookiecutter_exception_0]
    cookiecutter_exception_1 = module_2.CookiecutterException(*list_1)
    module_0.find_template(cookiecutter_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_1913():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1914():
    int_0 = 993
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1915():
    int_0 = 1995
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1916():
    str_0 = "F>]VbHL:fV"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1917():
    str_0 = "+c?zoq:T5U"
    str_1 = "PP|lUW<#o@6"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1918():
    str_0 = "`Vuvq"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1919():
    int_0 = 429
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1920():
    bytes_0 = b"\xeb\xef\xd4\xdc\x1e\xb7\x99>\xbb\x1b\x98\x88x\xd5R\x0c\xce"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1921():
    int_0 = -2905
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1922():
    bytes_0 = b">*f\x1f\xc1\xfd&B5"
    list_0 = [bytes_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1923():
    float_0 = 388.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1924():
    bytes_0 = b"\xc1e\xf6\xd6\x12}\xf6\x19\xf8q"
    str_0 = "8Sg}H?"
    str_1 = "j21>K%E`<I"
    dict_0 = {str_0: bytes_0, str_1: bytes_0, str_0: bytes_0}
    module_1.object(*bytes_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1925():
    float_0 = 1164.57469
    list_0 = [float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1926():
    bytes_0 = b"\xd1\x80E\xd5\xfd\xbe\xf5\xbb\x19\x9c\xa7V6\xc4\xce"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1927():
    str_0 = "=:/AK\raGY8D*0|D&!8\t"
    bool_0 = False
    dict_0 = {str_0: bool_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1928():
    int_0 = -669
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1929():
    int_0 = 841
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1930():
    complex_0 = -1913.4 - 2252.5j
    module_0.find_template(complex_0)


def test_case_1931():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_1932():
    bytes_0 = b"\xf4A>'/${\xe1\xe2s7."
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1933():
    str_0 = "%`.bgw>6/s7T5Grw`<"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1934():
    list_0 = []
    list_1 = [list_0, list_0]
    module_0.find_template(list_1)


def test_case_1935():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1936():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1937():
    int_0 = -2966
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1938():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1939():
    str_0 = "Bm_NwB1\t~\njr~K"
    str_1 = "unTAt}zRC"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1940():
    dict_0 = {}
    bool_0 = True
    bytes_0 = b"\x99\xc9\xfc\xcf\x00Na"
    bool_1 = True
    tuple_0 = (bool_0, bool_0, bytes_0, bool_1)
    tuple_1 = (dict_0, dict_0, bool_0, tuple_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_1941():
    bytes_0 = b"1\xd9\xaar\x87=\x1a;\x17\x01\xa5/^Z"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1942():
    complex_0 = -2602.773 + 2161.51169j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1943():
    str_0 = ")"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1944():
    none_type_0 = None
    module_2.CookiecutterException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1945():
    str_0 = "fLEZYQtq20$P"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1946():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1947():
    bytes_0 = b"9}\x8aS\x04\x96\x1c\x8e9q'\t4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1948():
    complex_0 = -71.4 - 2065.7504j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1949():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bytes_0 = b"VW\xe1\x05\xe7\xfa\xac\xf7v&\xe8\x0ck#"
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        bytes_0: non_templated_input_dir_exception_0,
    }
    list_0 = [dict_0]
    exception_0 = module_1.Exception(*list_0)
    list_1 = [exception_0]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_1950():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1951():
    str_0 = "bW\rr =x|OVso}##5P"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1952():
    str_0 = "p\n\x0c}qwC#e=IqA!7%="
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1953():
    int_0 = -3947
    bytes_0 = b"i\x19\xdb[\xa6p\xac\x95M\x96"
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_0 = (int_0, bytes_0, cookiecutter_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1954():
    int_0 = -322
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1955():
    bytes_0 = b's\xa1\x7f"'
    base_exception_0 = module_1.BaseException()
    tuple_0 = (bytes_0, base_exception_0)
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *tuple_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1956():
    str_0 = "_T$ZL9E>Y\rMq"
    int_0 = -443
    cookiecutter_exception_0 = module_2.CookiecutterException()
    bool_0 = False
    tuple_0 = (bool_0,)
    list_0 = [int_0, tuple_0, str_0]
    tuple_1 = (tuple_0, list_0, list_0, cookiecutter_exception_0)
    tuple_2 = (str_0, int_0, cookiecutter_exception_0, tuple_1)
    cookiecutter_exception_1 = module_2.CookiecutterException(*tuple_2)
    module_0.find_template(cookiecutter_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_1957():
    bytes_0 = b"\x9d\xf2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1958():
    str_0 = "\\wqymxJ\t]k&Z-K"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1959():
    base_exception_0 = module_1.BaseException()
    list_0 = [base_exception_0, base_exception_0, base_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1960():
    int_0 = 5735
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1961():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1962():
    int_0 = 19
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1963():
    int_0 = -922
    list_0 = [int_0, int_0, int_0, int_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1964():
    str_0 = "O~I*HZjj\x0b"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1965():
    dict_0 = {}
    exception_0 = module_1.Exception(*dict_0)
    list_0 = [exception_0, dict_0, dict_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1966():
    int_0 = 112
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1967():
    float_0 = 347.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1968():
    bytes_0 = b"\xa6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1969():
    int_0 = 1064
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1970():
    str_0 = "*wbs/E2+j{UR0~8"
    str_1 = "RTnXN1Ae?S)_C23"
    none_type_0 = None
    str_2 = 'Id"c3v#)Y^}We7'
    str_3 = ""
    dict_0 = {
        str_1: none_type_0,
        str_0: none_type_0,
        str_2: none_type_0,
        str_3: none_type_0,
    }
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1971():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [cookiecutter_exception_0, cookiecutter_exception_0]
    module_0.find_template(list_0)


def test_case_1972():
    cookiecutter_exception_0 = module_2.CookiecutterException()


@pytest.mark.xfail(strict=True)
def test_case_1973():
    int_0 = 1246
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1974():
    str_0 = "dU[\trLWRR1PJ\x0b"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1975():
    int_0 = -1560
    list_0 = [int_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1976():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_1977():
    str_0 = "c&/@jh7`jbO&7dM#|"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1978():
    list_0 = []
    set_0 = set()
    list_1 = [list_0, list_0, set_0, set_0]
    none_type_0 = None
    module_2.NonTemplatedInputDirException(*list_1, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1979():
    bytes_0 = b"\xee\x9d\xce\x7f\xafJwA\xe5\xa1\x10\xf0S\x1a\x04V\xc8"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1980():
    bytes_0 = b"{"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1981():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1982():
    float_0 = 608.97
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1983():
    int_0 = -581
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1984():
    list_0 = []
    module_1.BaseException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_1985():
    str_0 = ")2a-\\j&f`f!1!"
    str_1 = 'jOmu\\>]7\t?F"'
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1986():
    int_0 = -1724
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1987():
    float_0 = 96.39027
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1988():
    str_0 = "F=ShnH"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1989():
    str_0 = "suorfszd%CrsJ"
    list_0 = [str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1990():
    str_0 = "Cwd%YT9"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1991():
    str_0 = "OxlNs@"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1992():
    int_0 = -2797
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1993():
    str_0 = "m;)R;>0X>}s@.*uUl&V."
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1994():
    str_0 = "0ZdvJh`3$d9hLW"
    dict_0 = {str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1995():
    str_0 = "'G-Ry"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1996():
    bytes_0 = b"\xf3n\xcf\xa0\x07\x8c{\xa3O\xbb{\xdc\xff\x7f\xefJ4{\xa1\xbe"
    list_0 = [bytes_0]
    tuple_0 = ()
    tuple_1 = (bytes_0, list_0, tuple_0, bytes_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_1997():
    bytes_0 = b"\xc7\xcb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1998():
    int_0 = -234
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1999():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_1)


def test_case_2000():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_2001():
    int_0 = 127
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2002():
    str_0 = '~<]e%"QgTvG6q'
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2003():
    int_0 = -642
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2004():
    bytes_0 = b"\x16\x9cTq-\x1d!TI\xd0"
    bytes_1 = b"\xf0\x0e\xbb"
    tuple_0 = (bytes_0, bytes_1)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2005():
    base_exception_0 = module_1.BaseException()
    str_0 = "W~Yf5^#bI\nt~=ix="
    none_type_0 = None
    str_1 = ".\rKP&>brw"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2006():
    bytes_0 = b"\xc1\xcd\x9af"
    list_0 = [bytes_0]
    module_2.NonTemplatedInputDirException(*list_0, **bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2007():
    int_0 = -1925
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2008():
    bytes_0 = b"1O:\xb1\xa9\xbe\xe5\xe2\x1f\xd4:\x1b\xb5\x14d/*\xb4\\s"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2009():
    str_0 = ""
    int_0 = -3087
    complex_0 = 1192.27381 + 1353j
    tuple_0 = (str_0, int_0, complex_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2010():
    str_0 = "RXiun(LMsoX=g%6kl"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2011():
    str_0 = "$0I~;a6O`tQWk@"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2012():
    complex_0 = 585.8919 + 901.224j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2013():
    str_0 = "UhF,@"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2014():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    float_0 = 3300.95411
    list_0 = [non_templated_input_dir_exception_0, dict_0, float_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


def test_case_2015():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2016():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2017():
    float_0 = 461.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2018():
    int_0 = 698
    list_0 = [int_0, int_0, int_0, int_0]
    str_0 = ".u=#J'um!-J"
    dict_0 = {str_0: list_0, str_0: str_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2019():
    str_0 = ""
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2020():
    str_0 = "{~W^\x0bFw&(S[Amd\x0b0l+"
    set_0 = {str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2021():
    bool_0 = False
    str_0 = "|GvV7<p^4"
    none_type_0 = None
    str_1 = ""
    str_2 = "Q!bb\x0bqF+,J"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
    }
    module_1.Exception(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2022():
    str_0 = "?$YY|p'4+C5s"
    set_0 = {str_0, str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2023():
    int_0 = 4705
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2024():
    bytes_0 = b"b\xb0N\xc3\x94?\x1bkXCR\xe7\xa3\xb6\x00E\t\x84\xf3Y"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2025():
    str_0 = "})iNiL#>lG-\r"
    object_0 = module_1.object()
    str_1 = "!"
    dict_0 = {str_0: object_0, str_0: str_0, str_1: object_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2026():
    str_0 = "<5~rL88Qr"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2027():
    float_0 = -97.5892
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2028():
    exception_0 = module_1.Exception()
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2029():
    str_0 = "5(cv+\x0b\t"
    str_1 = "17@Tb,T@LVB\n~\x0c"
    str_2 = "ZDM~]PD_\tND@ 3,rz6X:"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2, str_2: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2030():
    bytes_0 = b"\x94T\x984\xbfQ0\xf7\xf6n\xa7'\x00\x83\xfbK\x0e5\xbd"
    exception_0 = module_1.Exception(*bytes_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2031():
    int_0 = -701
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2032():
    complex_0 = 679 + 3429.409302j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2033():
    float_0 = -2148.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2034():
    list_0 = []
    module_2.NonTemplatedInputDirException(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_2035():
    complex_0 = 174.6483 + 2029j
    int_0 = -850
    list_0 = [complex_0, complex_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2036():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2037():
    str_0 = "p,g('-:%H1/b+"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2038():
    int_0 = -603
    module_0.find_template(int_0)


def test_case_2039():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2040():
    str_0 = "}Vo9)\tNB\x0bF\r;b_So6_\r"
    str_1 = 'D\\&K\r,j`dCG<IE"'
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    str_2 = "p0=F:|bs"
    dict_0 = {str_0: str_0, str_1: non_templated_input_dir_exception_0, str_2: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2041():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2042():
    bool_0 = True
    list_0 = [bool_0]
    list_1 = [list_0]
    list_2 = [list_1, bool_0]
    module_0.find_template(list_2)


def test_case_2043():
    pass


def test_case_2044():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_2045():
    bool_0 = False
    list_0 = [bool_0]
    module_2.NonTemplatedInputDirException(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_2046():
    complex_0 = -133.1628 - 371.134359j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2047():
    str_0 = "[C!5P; Go?HB,wE"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2048():
    int_0 = -661
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2049():
    int_0 = 17
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2050():
    int_0 = 3651
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2051():
    int_0 = 2185
    module_2.CookiecutterException(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_2052():
    int_0 = 2063
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2053():
    float_0 = -2351.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2054():
    complex_0 = 857.783 + 312.74j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2055():
    int_0 = 3784
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2056():
    int_0 = -3288
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2057():
    str_0 = "M_]"
    list_0 = [str_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2058():
    int_0 = -1069
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2059():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    int_0 = -120
    str_0 = ""
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    tuple_1 = (non_templated_input_dir_exception_0, str_0, tuple_0)
    tuple_2 = (non_templated_input_dir_exception_0, int_0, tuple_1)
    module_0.find_template(tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_2060():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2061():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_1.object(**cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2062():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2063():
    bytes_0 = b"\x1c\xd9.\x14D\xdd/;\xd4a\x0b\x18\x03>\xcd\xe6\xa2i"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2064():
    str_0 = '0g6njMRf]&~["u]8G%~:'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2065():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_1.object(**non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2066():
    bytes_0 = b"\xf9nY<&\x85\xd2\xfe\xac\xa7\xa0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2067():
    bytes_0 = b"\x87\xc3\x8a\x0b\xe4(Z\xb2{\x7f1\x01~\x99C"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2068():
    bytes_0 = b"<b"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2069():
    float_0 = 1182.50991
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2070():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2071():
    float_0 = 1012.069
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2072():
    str_0 = "Cx<6F~lA/q"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2073():
    base_exception_0 = module_1.BaseException()
    dict_0 = {base_exception_0: base_exception_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2074():
    str_0 = "_b5#m!33},p4rhg*V<N"
    set_0 = {str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2075():
    int_0 = 2177
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2076():
    float_0 = -1134.7999
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2077():
    str_0 = "Zz?6Nl_"
    set_0 = {str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2078():
    str_0 = "gD#{vnz T5T\x0b6 fN\n&V"
    list_0 = [str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2079():
    complex_0 = 2372.66 + 776.0822j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2080():
    str_0 = "sXd\nR:@qS5=y`"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2081():
    str_0 = ""
    str_1 = "Ic8fM;g/}DJsyXN.F"
    str_2 = "GD$k:/( LwW"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: str_2}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2082():
    int_0 = -775
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2083():
    set_0 = set()
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2084():
    bool_0 = True
    module_2.NonTemplatedInputDirException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2085():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_2.NonTemplatedInputDirException(*cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2086():
    str_0 = '"r;@F4O\\^Z3XJ}["'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2087():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_0]
    module_1.object(**list_1)


@pytest.mark.xfail(strict=True)
def test_case_2088():
    int_0 = -1561
    list_0 = [int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2089():
    int_0 = -3376
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2090():
    base_exception_0 = module_1.BaseException()
    tuple_0 = (base_exception_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2091():
    str_0 = "$S9/FTFW\x0c7l>TxW']"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2092():
    int_0 = 4276
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2093():
    int_0 = 1181
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2094():
    int_0 = -1943
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2095():
    int_0 = 3518
    dict_0 = {int_0: int_0}
    list_0 = [dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2096():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2097():
    str_0 = "9}|X#*Ng\rdlmbA_t"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2098():
    bool_0 = False
    module_1.BaseException(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2099():
    str_0 = "+\ty^.uTQJ)k>@/D"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2100():
    bytes_0 = b"\xf3\t"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2101():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0]
    base_exception_0 = module_1.BaseException(*list_0)
    list_1 = [non_templated_input_dir_exception_0, base_exception_0, list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_2102():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2103():
    bytes_0 = b"\xd2\xa6\xe9\x0f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2104():
    str_0 = "C.Kqc"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2105():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2106():
    str_0 = "$o:J20RF5 /{ZF\x0c 6\nHq"
    str_1 = "DCR|{R*l"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2107():
    bytes_0 = b"\xad-'>\xfc\x996\x03\x10\xc5\x8b#\xb5\xf2_j\xf1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2108():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = "wy+K+KxS"
    dict_0 = {str_0: list_0, str_0: bool_0, str_0: list_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2109():
    int_0 = -3935
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2110():
    float_0 = -1030.017569
    str_0 = ':\x0cne]z}"_*~jsd05@nJ?'
    list_0 = [float_0, str_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2111():
    int_0 = 755
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2112():
    complex_0 = 4012.55727 + 748.50146j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2113():
    int_0 = 574
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2114():
    int_0 = -1420
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2115():
    bool_0 = True
    bool_1 = True
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {
        bool_0: bool_1,
        bool_1: bool_1,
        non_templated_input_dir_exception_0: bool_1,
        bool_0: bool_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2116():
    object_0 = module_1.object()
    module_0.find_template(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2117():
    exception_0 = module_1.Exception()
    exception_1 = module_1.Exception()
    dict_0 = {
        exception_0: exception_0,
        exception_0: exception_0,
        exception_0: exception_0,
        exception_0: exception_1,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2118():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bytes_0 = b"R"
    str_0 = "[\\UxB\r%a^I\\xY!\\"
    tuple_0 = (non_templated_input_dir_exception_0, bytes_0, str_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2119():
    str_0 = ""
    str_1 = "|*"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2120():
    int_0 = 1435
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2121():
    int_0 = -507
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2122():
    int_0 = 4252
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [int_0, non_templated_input_dir_exception_0, int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2123():
    str_0 = '\x0c^JMdq6qp"DyPy'
    dict_0 = {str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2124():
    str_0 = "b}h"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2125():
    str_0 = "~d/}#"
    str_1 = "2I\r&8utC@Z o+e"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2126():
    str_0 = '"eD]'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2127():
    bytes_0 = b"'"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2128():
    str_0 = "H"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2129():
    complex_0 = -1176.5278 - 67.4j
    module_2.CookiecutterException(**complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2130():
    int_0 = 417
    list_0 = [int_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    str_0 = "\n"
    dict_0 = {str_0: str_0}
    module_1.BaseException(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2131():
    float_0 = -3.57113
    set_0 = {float_0, float_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2132():
    int_0 = -500
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2133():
    str_0 = "Prrw&"
    bool_0 = True
    set_0 = {str_0, str_0, str_0, bool_0}
    base_exception_0 = module_1.BaseException(*set_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2134():
    list_0 = []
    module_2.CookiecutterException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_2135():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2136():
    str_0 = 'Qo%S"'
    bool_0 = False
    dict_0 = {str_0: str_0, bool_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2137():
    int_0 = -1960
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, int_0}
    tuple_0 = (int_0, set_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2138():
    str_0 = "W7BIYwJp(}P7n\\%o:af\r"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2139():
    bytes_0 = b"\xf2r\x87\xff\xb3\xe3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2140():
    int_0 = -237
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2141():
    str_0 = "AcW"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2142():
    bytes_0 = b"p\xf0\x89"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2143():
    complex_0 = 1343.16 - 190.7919j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2144():
    str_0 = "Q?A}8l>0:Uf0H'pe;+|l"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2145():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2146():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_0]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_2147():
    complex_0 = -698.2309 - 2289.0991j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2148():
    str_0 = "m CGb%&Dl#$'Z\\"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2149():
    str_0 = "gr'`eU\x0c'n$N{$\x0cO8$F/!"
    str_1 = ";1Db~~d\n\t,.V"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_1}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2150():
    list_0 = []
    module_2.CookiecutterException(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_2151():
    int_0 = -2659
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2152():
    exception_0 = module_1.Exception()
    bool_0 = True
    dict_0 = {exception_0: exception_0, exception_0: exception_0, bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2153():
    int_0 = 170
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2154():
    str_0 = "T"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2155():
    int_0 = 4211
    list_0 = [int_0, int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2156():
    none_type_0 = None
    module_2.NonTemplatedInputDirException(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2157():
    bytes_0 = b"#\xf1\xc5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2158():
    str_0 = "e)j(s2FhP<&(\tH6"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2159():
    float_0 = 564.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2160():
    str_0 = ":*Fl?j8/d"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2161():
    bytes_0 = b"K\xda\xff\xe0\xfb\x9a\xc7\x94|\xe0\xc7"
    module_0.find_template(bytes_0)


def test_case_2162():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2163():
    list_0 = []
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2164():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2165():
    int_0 = 1850
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2166():
    none_type_0 = None
    module_1.Exception(*none_type_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2167():
    float_0 = -2315.23986
    none_type_0 = None
    list_0 = [none_type_0]
    exception_0 = module_1.Exception(*list_0)
    dict_0 = {float_0: float_0, float_0: float_0, float_0: exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2168():
    str_0 = "WVuTg_"
    dict_0 = {str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2169():
    int_0 = -1584
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2170():
    complex_0 = 2908.77389 - 2633.64338j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2171():
    bytes_0 = b"\xbd9\xafns\xfd)\x1f\x80a\xe7`"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2172():
    float_0 = -1495.4
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2173():
    float_0 = -360.49748
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2174():
    float_0 = -474.0309
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2175():
    float_0 = 291.15
    module_2.NonTemplatedInputDirException(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_2176():
    bool_0 = True
    float_0 = 2395.3468
    list_0 = [float_0, float_0, float_0, bool_0]
    base_exception_0 = module_1.BaseException(*list_0)
    str_0 = "NS2>8?{gS82"
    tuple_0 = (base_exception_0, str_0, bool_0)
    tuple_1 = (bool_0, float_0, tuple_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2177():
    float_0 = -1758.3472
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2178():
    bytes_0 = b"\xcc\xf6\xcb\x05\xc8\xdf\x0c\xabTX\xdb["
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_2.CookiecutterException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_2179():
    str_0 = "}a[,wN88NO K5(vlwM"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2180():
    list_0 = []
    exception_0 = module_1.Exception(*list_0)
    set_0 = {exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2181():
    float_0 = 860.628
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2182():
    int_0 = -4324
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2183():
    str_0 = "1}MJ!A"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2184():
    str_0 = "bTk33kZ{{kN"
    list_0 = [str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2185():
    complex_0 = 1134.2 + 1187.109j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2186():
    str_0 = '^\x0bAPmP;7p_"K+O'
    set_0 = {str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2187():
    bytes_0 = b""
    list_0 = [bytes_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_0, bytes_0, bytes_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_2188():
    bytes_0 = b"\x8a'"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2189():
    str_0 = "{Fj5S4?\x0cozr6#kN"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2190():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    list_0 = [set_0, bool_0, bool_0, bool_0]
    str_0 = "|A"
    str_1 = "b%!(iYd$$D|F}10h?6\n"
    str_2 = "#TN'tLtTAzrpzY0akmw"
    dict_0 = {str_0: bool_0, str_1: str_0, str_2: str_0, str_2: list_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2191():
    bytes_0 = b"l\xeb\x82|\x9f"
    list_0 = [bytes_0, bytes_0, bytes_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2192():
    int_0 = 146
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2193():
    float_0 = -353.0
    list_0 = [float_0]
    list_1 = [list_0, list_0, list_0, float_0]
    base_exception_0 = module_1.BaseException(*list_1)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2194():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    str_0 = "y#Oa+&MJkL&Jr%t"
    dict_0 = {str_0: bool_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2195():
    bytes_0 = b"\x92\xe96\xcd\xd1\xcd(\xb1\xa3\xe3\x9b\x96"
    dict_0 = {bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2196():
    object_0 = module_1.object()
    list_0 = [object_0, object_0, object_0, object_0]
    str_0 = "=:T+<WYCGk<(E=OsW"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2197():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2198():
    float_0 = -2750.26
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2199():
    str_0 = "`$Q%HXQp\x0c%I\\ "
    str_1 = 'Y5HA"?\\\\SE.M'
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0, str_0: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2200():
    float_0 = -3150.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2201():
    bytes_0 = b'|\xbb\xe4<\xb7"\\N,\x8eh\x13fi\xf4\x92\xb9\n#m'
    list_0 = [bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2202():
    bytes_0 = b"\xe6-\xe8\r"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2203():
    str_0 = ")JS\rSp=as\tt*"
    none_type_0 = None
    str_1 = "iL\x0b^Rs3]C"
    str_2 = "<2Z3\nvL)1O#r+V<"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
    }
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2204():
    int_0 = 502
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2205():
    int_0 = -884
    list_0 = [int_0, int_0, int_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2206():
    bytes_0 = b"\xaa\xfdia["
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2207():
    float_0 = -954.71
    tuple_0 = ()
    tuple_1 = (float_0, float_0, tuple_0)
    module_0.find_template(tuple_1)


def test_case_2208():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2209():
    bool_0 = False
    module_2.NonTemplatedInputDirException(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2210():
    int_0 = -1282
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2211():
    str_0 = "\t^.&~V-c lx$"
    set_0 = {str_0, str_0, str_0, str_0}
    complex_0 = -819.4 + 1562.315j
    tuple_0 = (set_0, complex_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2212():
    int_0 = -3648
    module_1.BaseException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_2213():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_2214():
    int_0 = 1317
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2215():
    complex_0 = 2234.236512 - 647.06j
    set_0 = {complex_0}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(*set_0)
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2216():
    str_0 = "t\n@\t7;[b\rkAo9?P81,"
    list_0 = [str_0, str_0, str_0]
    dict_0 = {str_0: list_0, str_0: list_0, str_0: list_0}
    module_1.BaseException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2217():
    bytes_0 = b"\xaaE\x06Q\x94\t\x1c\x0e\x18\xe7\xbc\x94"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2218():
    bool_0 = False
    str_0 = "SOg0"
    str_1 = "Z:`Me=2BASN*D"
    str_2 = "y? '\r4._+V4KIp\x0c\t_"
    dict_0 = {str_0: bool_0, str_1: str_1, str_2: str_1, str_0: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2219():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2220():
    str_0 = "uzb7E(+e\x0bxtsQ;!0U!b("
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2221():
    float_0 = -2137.05
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2222():
    complex_0 = 2301.204639 - 979.12j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2223():
    str_0 = "02/\x0cfWI9=$XfKHk(|*S"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2224():
    int_0 = 1035
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2225():
    bytes_0 = b"\x1f\xed\x02\x0e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2226():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_0 = (cookiecutter_exception_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2227():
    int_0 = 1841
    module_1.Exception(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_2228():
    int_0 = -4670
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2229():
    str_0 = "^eFSt\t"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2230():
    str_0 = "ewLF>&5\x0cJ\thf;n;@0"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2231():
    int_0 = -3562
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2232():
    bytes_0 = b"\xde\xe0f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2233():
    bytes_0 = b"\x88\x17<\x04\xa2\x88\x97\xabp\xcdj\xcd\x8f\xbbe"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2234():
    complex_0 = 1626 - 3691j
    module_0.find_template(complex_0)


def test_case_2235():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2236():
    float_0 = -484.681
    module_2.CookiecutterException(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_2237():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [list_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_1)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2238():
    float_0 = -1012.0
    tuple_0 = (float_0, float_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2239():
    complex_0 = 3330.88 + 3876j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2240():
    str_0 = "q"
    module_0.find_template(str_0)


def test_case_2241():
    base_exception_0 = module_1.BaseException()


@pytest.mark.xfail(strict=True)
def test_case_2242():
    int_0 = 1522
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2243():
    str_0 = "z<:n5w+-FHd'"
    none_type_0 = None
    str_1 = "=`y]t~\\"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_2.CookiecutterException(**dict_0)


def test_case_2244():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2245():
    bytes_0 = b"\xfb\xce\x83"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2246():
    bool_0 = False
    base_exception_0 = module_1.BaseException()
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2247():
    int_0 = -55
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2248():
    str_0 = "z8+w-x3UVu(p}D\tX)Ni"
    set_0 = {str_0, str_0}
    cookiecutter_exception_0 = module_2.CookiecutterException(*set_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2249():
    int_0 = -2460
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2250():
    str_0 = "VHEc\r6m"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2251():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = "%/owYdp-D)bbib,"
    tuple_0 = (list_0, str_0)
    module_0.find_template(tuple_0)


def test_case_2252():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2253():
    int_0 = 1561
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2254():
    int_0 = 1664
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2255():
    str_0 = "W"
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)
    list_0 = [str_0, str_0, exception_0]
    list_1 = [list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_2256():
    str_0 = "2pO>VDk2[rtn\x0ctP"
    str_1 = "!:dNeew"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2257():
    bytes_0 = b"{\x8aH\xe51+Qs\x93\xa4\x06\xd03\xe8\xc6\xccR@\x7f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2258():
    int_0 = -4362
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2259():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_2.CookiecutterException(*cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2260():
    int_0 = 2501
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2261():
    str_0 = "n\r"
    str_1 = "^LN"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2262():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2263():
    dict_0 = {}
    bool_0 = True
    list_0 = [dict_0, bool_0]
    list_1 = [list_0]
    bool_1 = True
    tuple_0 = (dict_0, bool_0, list_1, bool_1)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2264():
    int_0 = -1394
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2265():
    float_0 = 2562.75227
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2266():
    float_0 = 747.62
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2267():
    exception_0 = module_1.Exception()
    module_0.find_template(exception_0)


def test_case_2268():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2269():
    bool_0 = False
    set_0 = set()
    list_0 = [bool_0, bool_0, set_0]
    list_1 = [list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_2270():
    str_0 = "EDl;?"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2271():
    none_type_0 = None
    module_1.BaseException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2272():
    str_0 = "`8pz"
    bytes_0 = b"\x03S\xce\x1d\xfb\xf8\xfdR\xac\xee\x08\xa3"
    bool_0 = False
    list_0 = [str_0]
    tuple_0 = (str_0, bytes_0, bool_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2273():
    str_0 = "EbO\x0c%\r~pa9$%lvQ.S0"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2274():
    float_0 = -1135.096058
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2275():
    str_0 = "Cpp\t'u@y?#<u<)"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2276():
    bytes_0 = b"\x91\x9f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2277():
    str_0 = "38$]\n[Wo)g-lEG"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2278():
    int_0 = 118
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2279():
    float_0 = 203.2
    list_0 = [float_0, float_0, float_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_2.CookiecutterException(*non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2280():
    float_0 = 499.04904
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2281():
    bytes_0 = b"l\xdb\x0e\xdb\x9c\xab\xf0"
    list_0 = [bytes_0, bytes_0]
    str_0 = '[)ZU"KI(W\x0c\x0c'
    list_1 = [bytes_0, bytes_0, str_0]
    dict_0 = {str_0: str_0, str_0: list_0, str_0: list_1}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2282():
    str_0 = "dJi"
    none_type_0 = None
    str_1 = "@g{"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2283():
    bytes_0 = b"\xa6\xeaa\xd6\x03\xa4\x89S\xa74"
    tuple_0 = (bytes_0,)
    module_2.NonTemplatedInputDirException(*tuple_0, **bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2284():
    int_0 = -414
    list_0 = [int_0, int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2285():
    int_0 = -631
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2286():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    str_0 = "0FZ6X7Rm$IJuz"
    str_1 = ""
    str_2 = "L"
    dict_0 = {str_0: str_0, str_1: none_type_0, str_2: str_1}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2287():
    bytes_0 = b"\x89H\x15\x81H\x99\xe8\xe5\xcf\xb3l%"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2288():
    str_0 = "?v"
    str_1 = "K?kcX0w.N%iK&"
    str_2 = "K0C&<rg"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2289():
    int_0 = 544
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2290():
    base_exception_0 = module_1.BaseException()
    module_2.CookiecutterException(*base_exception_0, **base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2291():
    str_0 = "\x0cskii8uJW0m"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2292():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2293():
    bytes_0 = b"\x992v\xf2\xcdD@"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2294():
    bytes_0 = b"\xf8\xeb\x12\x0bm\xd1\xdc\x96\x83\x8e\x19"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2295():
    str_0 = "9$El'JKi\x0bKd2y&"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2296():
    str_0 = "h?`@Iue91(K'\\7UH\x0b\x0b\""
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2297():
    str_0 = "K#z+:-,my'J\x0bmSN(\x0bsC)"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(*str_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2298():
    exception_0 = module_1.Exception()
    list_0 = [exception_0]
    module_1.Exception(*list_0, **exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2299():
    float_0 = -2480.3
    list_0 = [float_0, float_0, float_0, float_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2300():
    bytes_0 = b"\xfa2\x89P\x9d\xd3\x7f\x95>l8\xb0\xaa\x9f\xba\xb9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2301():
    float_0 = -2851.42
    list_0 = [float_0, float_0, float_0, float_0]
    dict_0 = {}
    list_1 = [list_0, dict_0, float_0, list_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_1)
    list_2 = [
        cookiecutter_exception_0,
        list_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    module_0.find_template(list_2)


@pytest.mark.xfail(strict=True)
def test_case_2302():
    complex_0 = -802.36 - 111.298j
    list_0 = [complex_0, complex_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2303():
    str_0 = "p/U#n\rLz!*l?@;?"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2304():
    str_0 = "HFBty;QO'E\x0cP}xdwL]\"?"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2305():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2306():
    bytes_0 = b"\xbc\xfd\xaal"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2307():
    bytes_0 = b"\xf4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2308():
    int_0 = -2493
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2309():
    bytes_0 = b"\xce[\x9c\xe1`sa"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2310():
    str_0 = "uFrY7iDV,Sde"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2311():
    int_0 = -2367
    tuple_0 = (int_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2312():
    bytes_0 = b"f\xdddL\x15\xa2\x83\xc9\xa4\t\xffn~\x00\xd4\x9d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2313():
    int_0 = -1338
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2314():
    int_0 = -1161
    module_0.find_template(int_0)


def test_case_2315():
    str_0 = "ZDI6adB7YXVXZ\x0cB^(KM"
    list_0 = [str_0, str_0, str_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )


@pytest.mark.xfail(strict=True)
def test_case_2316():
    int_0 = 1818
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2317():
    bytes_0 = b"\xf4\xd1L"
    list_0 = []
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    set_0 = {bytes_0, bytes_0, bytes_0, cookiecutter_exception_0}
    list_1 = [set_0, bytes_0]
    str_0 = ".:\x0bwU"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    str_1 = "QI"
    int_0 = -1990
    dict_0 = {str_0: list_1, str_0: non_templated_input_dir_exception_0, str_1: int_0}
    module_2.NonTemplatedInputDirException(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2318():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    list_0 = [set_0, set_0, set_0, tuple_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2319():
    int_0 = -192
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2320():
    str_0 = "JQ(t@h'b=':/ t&b)(Km"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2321():
    bytes_0 = b"\x02\xab\xc7-"
    tuple_0 = (bytes_0,)
    list_0 = [tuple_0, tuple_0, tuple_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2322():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    int_0 = 2843
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        int_0,
    ]
    module_2.CookiecutterException(*list_0, **int_0)


@pytest.mark.xfail(strict=True)
def test_case_2323():
    int_0 = 1119
    module_0.find_template(int_0)


def test_case_2324():
    cookiecutter_exception_0 = module_2.CookiecutterException()


@pytest.mark.xfail(strict=True)
def test_case_2325():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2326():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (list_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2327():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2328():
    str_0 = "&g\nyIRz#I2$?Cfip"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2329():
    int_0 = 3436
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2330():
    complex_0 = -1147.8 + 2198.9j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2331():
    bytes_0 = b"}D\xa6\x9c4\xf3\xc8\xb2zw\x95L"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2332():
    float_0 = 2348.29266
    module_0.find_template(float_0)


def test_case_2333():
    float_0 = -2174.640811
    list_0 = []
    list_1 = [float_0, list_0, list_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )


@pytest.mark.xfail(strict=True)
def test_case_2334():
    bool_0 = True
    list_0 = []
    tuple_0 = (bool_0, bool_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2335():
    float_0 = 63.81021
    list_0 = [float_0, float_0, float_0]
    exception_0 = module_1.Exception(*list_0)
    module_2.NonTemplatedInputDirException(*exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2336():
    str_0 = "8"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2337():
    complex_0 = -1611.17 + 167.9889j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2338():
    str_0 = "q#\n ];7\x0b\tK?*M%"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2339():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2340():
    str_0 = "*N@S10"
    str_1 = "\rQet"
    str_2 = "w8wT=Z?`YC),"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1, str_1: str_1}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2341():
    bytes_0 = b"\x00\x8a\x9ev@\xe1\xae\xeb\xa9\xed\xfenD2\n\x0e"
    list_0 = [bytes_0, bytes_0, bytes_0]
    list_1 = [bytes_0, list_0, bytes_0, bytes_0]
    exception_0 = module_1.Exception(*list_1)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2342():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2343():
    bytes_0 = b"\xc2\xf5\x80/\xb9\x07\xa2\x85\xe7\xd4\x83\xf4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2344():
    float_0 = -468.3581
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2345():
    bytes_0 = b"P\x8ae\x1e\xc9\x83\xfcD\x0f\xeb\xe11"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2346():
    bytes_0 = b"+\xf3n\xd7z\xb2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2347():
    bytes_0 = b"\xe9%\n\xb8R\xb4Z\x95\xa0k'\xb8Z\xc0\x8d\xa6"
    list_0 = [bytes_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2348():
    dict_0 = {}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2349():
    set_0 = set()
    object_0 = module_1.object(*set_0)
    module_1.Exception(**object_0)


@pytest.mark.xfail(strict=True)
def test_case_2350():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    set_0 = {cookiecutter_exception_0}
    set_1 = set()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        set_1,
    ]
    str_0 = "\nXe"
    tuple_0 = (set_0, set_0, list_0, str_0)
    list_1 = [tuple_0]
    cookiecutter_exception_1 = module_2.CookiecutterException(*list_1)
    module_0.find_template(cookiecutter_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_2351():
    int_0 = 1791
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2352():
    str_0 = "W\x0b)B+To{"
    str_1 = "^|#hpij-|\tTCo`OdL"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2353():
    none_type_0 = None
    module_1.BaseException(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2354():
    complex_0 = 3829.21926 - 169j
    dict_0 = {complex_0: complex_0, complex_0: complex_0, complex_0: complex_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2355():
    bytes_0 = b"\xf4\xa0\xe3\x80\x1b"
    tuple_0 = (bytes_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2356():
    str_0 = "e*%|'m$E"
    dict_0 = {str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2357():
    str_0 = "0 .qyis\t\\?$B1WE\x0cr%"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2358():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2359():
    list_0 = []
    module_2.NonTemplatedInputDirException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_2360():
    tuple_0 = ()
    list_0 = [tuple_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2361():
    bytes_0 = b"\x9e\xb1\xabQ\x86O"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2362():
    int_0 = -1261
    set_0 = {int_0, int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2363():
    bytes_0 = b"\xed\xd78q\xddm\x86n\xed\x82\x12\xcb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2364():
    str_0 = "\nvcGe("
    bytes_0 = b"\xb6\xc5j\\\x91\x19\x1e\x85\x04\xdf\xed"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: bytes_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2365():
    float_0 = -658.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2366():
    int_0 = -3400
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2367():
    bool_0 = True
    bytes_0 = b"ngO"
    int_0 = 3294
    list_0 = [int_0, int_0]
    exception_0 = module_1.Exception(*list_0)
    tuple_0 = (bool_0, bytes_0, int_0, exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2368():
    bytes_0 = b"O=P\xf7\x0bK*"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2369():
    int_0 = -714
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2370():
    bytes_0 = b"\xb0f\x8c=G\xcb\xb2\xef\x96\xa9|\x9e\xd1\x89\xb6\x16"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2371():
    str_0 = "XaD}7wd\x0cSI4"
    none_type_0 = None
    str_1 = 'i-/"|X*fn'
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2372():
    float_0 = -315.1
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2373():
    int_0 = 1619
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2374():
    str_0 = "{]?X+%"
    str_1 = "\r(\x0bed(K_r%C!O3[M:Q"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2375():
    int_0 = 1592
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2376():
    int_0 = -180
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2377():
    bytes_0 = b"\x01T\xdd\xd9m"
    str_0 = "c\r~5U~\ntyKi[$6\\Hf"
    none_type_0 = None
    str_1 = "}j=Er`"
    str_2 = 'cVD,!!i\\Lj"L:Is%\\'
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_2: none_type_0}
    module_1.Exception(*bytes_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2378():
    int_0 = -102
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2379():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2380():
    str_0 = "u="
    tuple_0 = (str_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2381():
    float_0 = 2362.955
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2382():
    bytes_0 = b"/\xe7\xc8M\xc6X.\x00\x8f\xb4P\x81V\xe8q\xb8m"
    module_0.find_template(bytes_0)


def test_case_2383():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_1]
    list_2 = [list_1, non_templated_input_dir_exception_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_2)


@pytest.mark.xfail(strict=True)
def test_case_2384():
    int_0 = -377
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2385():
    int_0 = 975
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2386():
    object_0 = module_1.object()
    dict_0 = {object_0: object_0, object_0: object_0}
    list_0 = [dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2387():
    bytes_0 = b"\xc7On\xb1G4\xa1'"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2388():
    complex_0 = -602.861 + 1961.009j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2389():
    bytes_0 = b";\x08\xa0u\x1f\x94\xb6B]\xa5"
    set_0 = {bytes_0}
    list_0 = [set_0, bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


def test_case_2390():
    base_exception_0 = module_1.BaseException()
    list_0 = [base_exception_0, base_exception_0, base_exception_0, base_exception_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2391():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    tuple_0 = (cookiecutter_exception_0,)
    list_1 = [tuple_0, cookiecutter_exception_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2392():
    int_0 = -1364
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2393():
    str_0 = 'Jd&\nf\ts\tHF"2gDzjyX4o'
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(*str_0)
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2394():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2395():
    int_0 = -2095
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2396():
    bool_0 = False
    module_1.BaseException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2397():
    float_0 = 1615.0
    base_exception_0 = module_1.BaseException()
    list_0 = [base_exception_0, float_0, float_0]
    tuple_0 = (float_0, float_0, base_exception_0, list_0)
    list_1 = [tuple_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_2398():
    bytes_0 = b"3."
    list_0 = [bytes_0]
    module_2.CookiecutterException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_2399():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0, exception_0, exception_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2400():
    float_0 = -1132.0
    module_1.BaseException(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_2401():
    int_0 = -212
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2402():
    bool_0 = True
    list_0 = [bool_0]
    module_2.CookiecutterException(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_2403():
    str_0 = 'aCztX"|T'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2404():
    str_0 = "sAO1{R.Kj;,\x0b"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2405():
    bool_0 = True
    module_2.NonTemplatedInputDirException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2406():
    float_0 = -1026.69434
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    tuple_0 = (dict_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2407():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2408():
    float_0 = 502.29
    list_0 = [float_0, float_0]
    dict_0 = {}
    list_1 = [list_0, list_0, dict_0, list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_2409():
    bytes_0 = b"<\xde\x1f\xba\xb5;\x89d\xa9x\xf6\xd7\xe4\xd4\x96~\xd3\xb2i"
    set_0 = {bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2410():
    bytes_0 = b"\xc9yg\xf1\xdc"
    bool_0 = True
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (bytes_0, bool_0, bytes_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2411():
    int_0 = -161
    list_0 = [int_0, int_0]
    str_0 = "<\x0b\x0cB.!R\x0c{p2-H"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2412():
    int_0 = 772
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2413():
    str_0 = " A!Sq#t[ NC/W:/"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2414():
    dict_0 = {}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2415():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2416():
    str_0 = "\t`At^&z`"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2417():
    bytes_0 = b"\x0b'p\xd9\xbc\xc0[@,\x8a\x80\x08\x12U="
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2418():
    int_0 = 2981
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2419():
    str_0 = "Ajv+@"
    str_1 = "d"
    str_2 = "t\x0c'JrV@M{snh4 V\t:"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_2}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2420():
    float_0 = -2123.07
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2421():
    str_0 = "\x0b^6iik`poO"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2422():
    bytes_0 = b"\xed\re<\x1a\x1b5_[\xe3>\xaa\x1e\x14"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2423():
    str_0 = "&H4it?j5,/"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2424():
    str_0 = "$kuaJ/B9mYh2s_evg;fT"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2425():
    str_0 = "[P_d#&801]i z$^d{EV"
    list_0 = [str_0]
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )
    dict_1 = {
        non_templated_input_dir_exception_0: list_0,
        non_templated_input_dir_exception_0: str_0,
    }
    module_0.find_template(dict_1)


@pytest.mark.xfail(strict=True)
def test_case_2426():
    int_0 = 1920
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2427():
    str_0 = "_\tmU'Xuw<TxMlTVb72\n<"
    list_0 = [str_0, str_0, str_0, str_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2428():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2429():
    str_0 = "MIW^yG9lq\x0bu"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2430():
    str_0 = ""
    none_type_0 = None
    str_1 = "jU-gJDYs\x0b0\x0bbpj5;}."
    str_2 = ";<:\x0bluy,a5_euRg"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
        str_2: none_type_0,
    }
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2431():
    int_0 = -1194
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2432():
    int_0 = 722
    tuple_0 = (int_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2433():
    bytes_0 = b"\x8a[M\x83\x04\r\xe7\x1b\xac\xb6iIVa"
    list_0 = [bytes_0, bytes_0, bytes_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    tuple_0 = (non_templated_input_dir_exception_0,)
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *tuple_0
    )
    module_0.find_template(non_templated_input_dir_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_2434():
    set_0 = set()
    base_exception_0 = module_1.BaseException()
    list_0 = [set_0, set_0, base_exception_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2435():
    float_0 = 2386.184968
    module_0.find_template(float_0)


def test_case_2436():
    list_0 = []
    exception_0 = module_1.Exception(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2437():
    str_0 = '8iz$f.["wSzWS1IN'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2438():
    none_type_0 = None
    module_2.NonTemplatedInputDirException(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2439():
    str_0 = "O!Dk]+$@fA3G\\Y"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2440():
    float_0 = -668.3902
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2441():
    bytes_0 = b'w(\xfb)"\xec\xe2\xcct"\'1'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2442():
    bytes_0 = b"\xff\xdd\xe5Ng\x9f"
    bool_0 = True
    bytes_1 = b"Q\x06\xd5\xdd\xa9Q\xac\xb9\xa7"
    tuple_0 = (bytes_0, bool_0, bool_0, bytes_1)
    list_0 = [tuple_0, bytes_0]
    base_exception_0 = module_1.BaseException(*list_0)
    str_0 = "DLuUO8S\t<$\\0 Gt1*G"
    str_1 = "yl2S?[-E"
    str_2 = "4 UnBq%r%Y|3<"
    str_3 = "/\x0cE9-,+|i/d,z_i\tT\x0c`"
    dict_0 = {str_0: list_0, str_1: bool_0, str_2: str_0, str_3: str_2}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2443():
    bool_0 = True
    float_0 = -3171.3
    set_0 = {bool_0, bool_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2444():
    int_0 = -1265
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2445():
    tuple_0 = ()
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2446():
    float_0 = -2695.33443
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2447():
    complex_0 = -3509.44764 - 2310.136266j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2448():
    int_0 = -2477
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2449():
    int_0 = 1628
    module_0.find_template(int_0)


def test_case_2450():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2451():
    set_0 = set()
    list_0 = [set_0, set_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2452():
    str_0 = "@?y\tk;\n"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2453():
    bytes_0 = b"U\xccc4\n\xea~\t\x8f\xefN\x8a\xcd\x9b<D+\x92"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2454():
    str_0 = "An:cO4+h\rby"
    none_type_0 = None
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2455():
    bytes_0 = b"OS\x9b"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2456():
    complex_0 = -6233.5284 - 2887.931j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2457():
    bool_0 = True
    list_0 = [bool_0]
    bytes_0 = b"\xc7\xacq\xa8"
    list_1 = [list_0, bytes_0, list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_2458():
    str_0 = "K%/^Q"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2459():
    str_0 = "\x0c/',Il8NV2b|H0$%"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2460():
    bytes_0 = b";\xde\xbf\x9b\xc5\xcd\xc0Fk"
    set_0 = {bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2461():
    str_0 = "-*'azB\"\nQrqY!\x0bMSe+"
    list_0 = [str_0, str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2462():
    tuple_0 = ()
    list_0 = [tuple_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_0]
    exception_0 = module_1.Exception(*list_1)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2463():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2464():
    bool_0 = False
    bool_1 = True
    tuple_0 = (bool_0, bool_1)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2465():
    str_0 = "%F=|dYTU8Q@_I\t6&j"
    str_1 = ""
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2466():
    int_0 = -2069
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2467():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {cookiecutter_exception_0: cookiecutter_exception_0}
    list_0 = [dict_0]
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2468():
    str_0 = 'KU@HWeq\x0bezU<V(S">B{'
    str_1 = "+t"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2469():
    int_0 = 475
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2470():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2471():
    float_0 = 466.35913
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2472():
    int_0 = -2144
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2473():
    str_0 = "n'M*v(LwUP-+aF\x0bP"
    list_0 = [str_0, str_0, str_0, str_0]
    module_1.BaseException(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_2474():
    bytes_0 = b"K\xe8\x12\xca@)\xebn\x8f0\x90h{i"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2475():
    str_0 = "Fh\\}Ya6i"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2476():
    str_0 = "j!*l![?v"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2477():
    none_type_0 = None
    list_0 = [none_type_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2478():
    int_0 = -1642
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2479():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2480():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
    }
    list_0 = [
        dict_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2481():
    str_0 = "UH$]^"
    list_0 = [str_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2482():
    list_0 = []
    str_0 = "2P@3hyJ4\x0cc1"
    str_1 = "X#\r''ak{IQf?WHSlq)"
    str_2 = "2#!;]b{*C.EeX\">Z<#'"
    dict_0 = {str_1: str_0, str_2: str_0, str_0: list_0, str_2: str_1}
    dict_1 = {str_0: list_0, str_1: list_0, str_1: dict_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_1)


@pytest.mark.xfail(strict=True)
def test_case_2483():
    bytes_0 = b'm^\xf4\xa7l\xed\xa2\xd0\xbb\xa8\xfd\xf4"\x01T'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2484():
    int_0 = -2913
    module_1.Exception(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_2485():
    bytes_0 = b"A\xc9\x0c\xee\xa0\xef[\xfa\xb2\xb0_&#\n\x1a\xdd{\xdf\xa8"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2486():
    str_0 = "-!Thsc$>w\re+M\\f"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2487():
    bytes_0 = b"8\xfb\x0e\x92\x12\xa4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2488():
    int_0 = -2268
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2489():
    str_0 = "\\~V5m1\\vmrCP"
    str_1 = ""
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2490():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2491():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2492():
    bytes_0 = b"\xc1\xf1\xbeB5x\xb1"
    bool_0 = True
    list_0 = [bytes_0, bool_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


def test_case_2493():
    cookiecutter_exception_0 = module_2.CookiecutterException()


@pytest.mark.xfail(strict=True)
def test_case_2494():
    int_0 = -2227
    dict_0 = {int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2495():
    int_0 = 134
    set_0 = {int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2496():
    bytes_0 = b".\xb9\xd4\xb7\xb4!\xef1\xae\xbc]"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2497():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2498():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2499():
    bytes_0 = b"\x11~\x0fW!fzx\xe2i\x83\x025\x9d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2500():
    str_0 = 'ATz"-u\\l4kW|[%wt=f'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2501():
    int_0 = 951
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2502():
    str_0 = "QGDJ6(RG"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


def test_case_2503():
    cookiecutter_exception_0 = module_2.CookiecutterException()


@pytest.mark.xfail(strict=True)
def test_case_2504():
    float_0 = -1377.294865
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2505():
    bool_0 = False
    list_0 = [bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2506():
    str_0 = "rb&K5O"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2507():
    bool_0 = False
    list_0 = []
    list_1 = [bool_0, bool_0, list_0, bool_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_1)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2508():
    complex_0 = 2730.02 + 1939.738617j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2509():
    bytes_0 = b"N(\xb6\xe1\xd9\x89 "
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2510():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2511():
    float_0 = 1745.8
    module_1.Exception(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_2512():
    bytes_0 = b"[\xe1\xc8A\xe0\xe1BJ"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2513():
    float_0 = -70.1313
    set_0 = {float_0, float_0}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (set_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2514():
    int_0 = 2342
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2515():
    str_0 = "]r/!yHpWF"
    list_0 = [str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2516():
    bytes_0 = b"\x95ms\x11\x0eR\xea\xd3z.\x96"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2517():
    bytes_0 = b"[\x96\xec\x89K"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2518():
    int_0 = -2184
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2519():
    int_0 = 473
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2520():
    str_0 = "yr_aT6.X[8XwC2h"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2521():
    float_0 = 1404.31
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2522():
    none_type_0 = None
    module_1.Exception(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2523():
    bytes_0 = b"\x89\x7f\xd7 "
    set_0 = {bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2524():
    str_0 = "p\tx;"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2525():
    bytes_0 = b"\x9bW\xd9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2526():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2527():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2528():
    bytes_0 = b"\x92c\x16W\x15\xae\xc8\xf4\x9f\x8d\xbf\xbbz\xc6"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0]
    str_0 = "4P[Pg;wsjE\\ba)k#"
    str_1 = "Er3"
    str_2 = "R#"
    dict_1 = {str_0: bytes_0, str_1: dict_0, str_2: str_2, str_1: str_0}
    module_1.Exception(*list_0, **dict_1)


@pytest.mark.xfail(strict=True)
def test_case_2529():
    float_0 = 196.2365
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2530():
    str_0 = ":I"
    tuple_0 = (str_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2531():
    bytes_0 = b"5h!\x1a\x1a\xaa\x15\xd5H\xe5\xfe\x0c\x9bK\xd24\x11\x9a\x7f"
    tuple_0 = (bytes_0,)
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *tuple_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2532():
    str_0 = ":"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2533():
    complex_0 = 2417.076 + 1704.534j
    module_1.Exception(*complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2534():
    str_0 = "j_{Ag"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2535():
    bytes_0 = b"\xaez\x11\xc3\xe1\x87\xce\x1dI\xf5\xaa*\x05_5\x9a\xce"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2536():
    int_0 = -3690
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2537():
    int_0 = 1513
    dict_0 = {int_0: int_0}
    tuple_0 = (int_0, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2538():
    list_0 = []
    base_exception_0 = module_1.BaseException(*list_0)
    dict_0 = {base_exception_0: list_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2539():
    str_0 = "I"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2540():
    str_0 = "tCpi1"
    list_0 = [str_0, str_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    bool_0 = True
    tuple_0 = (cookiecutter_exception_0, bool_0, bool_0, cookiecutter_exception_0)
    set_0 = {tuple_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2541():
    int_0 = -1123
    str_0 = "Y%:wc-ha<A"
    set_0 = {int_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2542():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    bytes_0 = b"\xa0\x17\xc71\xf7x"
    int_0 = -3575
    str_0 = "@"
    bool_0 = False
    tuple_0 = (bytes_0, int_0, str_0, bool_0)
    tuple_1 = (cookiecutter_exception_0, tuple_0, int_0, str_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2543():
    str_0 = "`Ch;Vi`qkJ$9YP?<p/"
    str_1 = "4@)l_:"
    str_2 = "z*0|[pKOe=G9"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1, str_1: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2544():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    str_0 = "7I6$o>=m#"
    none_type_0 = None
    str_1 = "?+0p.RHm:&(2tslt7"
    str_2 = "p\x0cd__\rY<a`J<UywMbam"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_1: none_type_0,
    }
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2545():
    str_0 = "PmlQ:`[Ost"
    base_exception_0 = module_1.BaseException(*str_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2546():
    int_0 = -1542
    module_2.NonTemplatedInputDirException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_2547():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0, bytes_0]
    str_0 = "+ev9y#"
    dict_0 = {str_0: list_0, str_0: list_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


def test_case_2548():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2549():
    str_0 = "8~c p}M]80cG"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2550():
    int_0 = 569
    module_2.CookiecutterException(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_2551():
    int_0 = -1007
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2552():
    str_0 = "VtXqT}sra"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2553():
    str_0 = "f<\x0b4PkG_JxrsU=00"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2554():
    tuple_0 = ()
    str_0 = "3b-\x0c=Hl]"
    str_1 = "-U"
    dict_0 = {str_0: tuple_0, str_0: str_0, str_0: str_0, str_1: tuple_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2555():
    bytes_0 = b"\x1a5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2556():
    bool_0 = False
    list_0 = [bool_0]
    str_0 = "Qk"
    dict_0 = {str_0: str_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2557():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2558():
    str_0 = "\r;f9 \n63\tg|YJ"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2559():
    str_0 = '\rS2_  !ejZF:>j\x0c"H'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2560():
    str_0 = "BCl4F1*+-M"
    list_0 = [str_0, str_0]
    str_1 = "'hpG1P"
    dict_0 = {str_0: list_0, str_0: str_0, str_0: list_0, str_1: str_1}
    module_1.Exception(*list_0, **dict_0)


def test_case_2561():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2562():
    complex_0 = 2105.86869 + 1386.35652j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2563():
    complex_0 = -169 - 293.267j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2564():
    str_0 = "\x0b8#!#x\t-$nKdfKC\t"
    bytes_0 = b"\x07\x937{\xae\xbb\x15&64M\xea\xe5\xaa"
    tuple_0 = (bytes_0,)
    dict_0 = {str_0: tuple_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2565():
    str_0 = "9"
    module_2.CookiecutterException(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_2566():
    bool_0 = True
    str_0 = "\\sbO<)qxORd"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2567():
    none_type_0 = None
    list_0 = [none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2568():
    float_0 = -1584.687
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2569():
    bytes_0 = b"\r\x08\xa4rn\xa9\xb2i"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2570():
    bytes_0 = b"&\x04\x12\xa8\x8a\xaau\xedG\xff\n"
    complex_0 = 1458.1302 - 3331.637j
    str_0 = "=\n:mc-wh\x0bz"
    tuple_0 = (bytes_0, complex_0, str_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2571():
    bytes_0 = b"W\xdbv\xe0\xce\x80\x10\xc7]\xa9\xd0\xb0\x06\x9ao\xbc\x89O"
    set_0 = {bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2572():
    bytes_0 = b"d\x84\\\x89i\xd4}P\x0e\x8cyR\x9b7\x95\x92\x08vk'"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2573():
    int_0 = -380
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2574():
    bytes_0 = b"5S\xecN\x1c0\x91\xb6\xfa\xb5\xaa\xe0X{\xa9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2575():
    str_0 = "\tCvz6kl"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2576():
    none_type_0 = None
    module_2.CookiecutterException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2577():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    tuple_0 = (bool_0, set_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2578():
    int_0 = 678
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2579():
    str_0 = "y "
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2580():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2581():
    int_0 = -2964
    dict_0 = {int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2582():
    bytes_0 = b"\xb5\x82\xc5\xdb\x9b%\xb7\x1bKr\xe3FH\x14\x97"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2583():
    int_0 = 1205
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2584():
    str_0 = "J,F}"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2585():
    bytes_0 = b")\t\xa8\x92\xb6\xb4\x8dip\xe1\x8c/\xa3\xba\xb5"
    str_0 = "n {-"
    dict_0 = {str_0: bytes_0}
    module_2.NonTemplatedInputDirException(*bytes_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2586():
    int_0 = -72
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2587():
    float_0 = 1415.211627
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2588():
    int_0 = -3892
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2589():
    float_0 = -617.44645
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2590():
    str_0 = "(m{g'.,)KEt[B3ns"
    none_type_0 = None
    str_1 = "jg:24SwJ]g^V&D!W"
    str_2 = "w"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
        str_2: none_type_0,
    }
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2591():
    bytes_0 = b"-\x7f\x8a3+\x10\xce\n\xcc\xfe\xf4\xf8\x95x\x8b"
    dict_0 = {bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2592():
    bool_0 = True
    str_0 = "ELZc/};~e0T,C"
    tuple_0 = (str_0,)
    int_0 = -31
    tuple_1 = (bool_0, tuple_0, int_0, int_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2593():
    str_0 = "yCQX!\x0bR]Gj"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2594():
    int_0 = -1615
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2595():
    int_0 = 217
    list_0 = [int_0]
    str_0 = "b}}\x0br47;@z4plhh_qW>"
    dict_0 = {str_0: str_0, str_0: list_0, str_0: int_0, str_0: int_0}
    module_1.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2596():
    float_0 = 2478.38276
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2597():
    str_0 = ">ci;#bQ2}jqej\r/V\\BRo"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2598():
    dict_0 = {}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2599():
    bytes_0 = b'WD\xee\x9aM"\xd9\xe9\x9b\xc6\r:@\xd5\x18}`\x9b!,'
    str_0 = "0h\x0bb @+6&jV\x0cB`:e"
    set_0 = {str_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2600():
    int_0 = -649
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2601():
    base_exception_0 = module_1.BaseException()
    module_2.NonTemplatedInputDirException(*base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2602():
    float_0 = 1848.63
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2603():
    str_0 = "/z\t9NTGqS8"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2604():
    str_0 = "\x0bp'\x0bj\to\x0b;g"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2605():
    list_0 = []
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2606():
    int_0 = -584
    tuple_0 = (int_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2607():
    str_0 = "q*/$--\ry2&x\n`"
    exception_0 = module_1.Exception()
    bool_0 = False
    tuple_0 = (str_0, exception_0, str_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2608():
    complex_0 = -789.161961 + 549.094j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2609():
    bytes_0 = b"\\\xd1!\xa3\xe3\x01"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2610():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2611():
    str_0 = "D[0>{wE> 0cB\n\x0bE@"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2612():
    float_0 = 1083.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2613():
    int_0 = 189
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2614():
    str_0 = "=\r\r~-h%-Bt_\x0b[Ek"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2615():
    bytes_0 = b"D\x92a\xa9\xeez\xfd\xb6\xab\x0ey\xd3\xf9=\xdf?a\xcc\xd5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2616():
    bytes_0 = b"J\xb7"
    tuple_0 = (bytes_0,)
    dict_0 = {tuple_0: tuple_0, bytes_0: bytes_0, bytes_0: tuple_0, bytes_0: tuple_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2617():
    int_0 = -1552
    module_2.CookiecutterException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_2618():
    complex_0 = -1311.095 + 2268.14j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2619():
    bool_0 = False
    str_0 = 'r}"O5<GKKLY'
    str_1 = "S"
    str_2 = "{,F"
    str_3 = "(Y"
    dict_0 = {str_0: bool_0, str_1: str_0, str_2: bool_0, str_3: str_1}
    module_2.NonTemplatedInputDirException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2620():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2621():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2622():
    bool_0 = True
    str_0 = "cF4h \x0c)JudIjWu7&]"
    none_type_0 = None
    str_1 = ":`w*u)X0J9Irf"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_1.BaseException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2623():
    bool_0 = False
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_1 = True
    dict_0 = {
        bool_0: bool_0,
        bool_0: bool_0,
        non_templated_input_dir_exception_0: bool_1,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2624():
    str_0 = "g'"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2625():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2626():
    int_0 = 809
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2627():
    int_0 = -1584
    list_0 = [int_0, int_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2628():
    int_0 = -4679
    list_0 = [int_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2629():
    str_0 = "+w9lIlWL\noH \\"
    list_0 = [str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2630():
    str_0 = "Laa$\n(/yyCk'$31"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2631():
    bytes_0 = b"\xc6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2632():
    int_0 = 4999
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2633():
    str_0 = 'erXH$Y}e^("^/jC+K'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2634():
    int_0 = -924
    list_0 = [int_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2635():
    str_0 = "*BU^)TbZsn\n3gt52"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2636():
    int_0 = -1214
    list_0 = [int_0, int_0, int_0, int_0]
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )
    list_1 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_2637():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2638():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    str_0 = '14)eIh9rD"'
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2639():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2640():
    str_0 = "(sebMh {r"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2641():
    str_0 = "x\rr`M\\U"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2642():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    str_0 = "%tgwBhb#J"
    str_1 = "JQl"
    dict_0 = {
        str_0: non_templated_input_dir_exception_0,
        str_1: non_templated_input_dir_exception_0,
    }
    module_1.BaseException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2643():
    str_0 = "@KcZ9x&FP.#k;+@?uh"
    str_1 = "9M9)eQY3|Xxde"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2644():
    str_0 = "GQC"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2645():
    int_0 = -1915
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2646():
    str_0 = "F>jD\\5\x0can\\N?"
    list_0 = [str_0, str_0, str_0, str_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2647():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    list_0 = [dict_0, dict_0]
    tuple_1 = (list_0, list_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2648():
    int_0 = -1687
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2649():
    int_0 = -2932
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2650():
    float_0 = -1102.9
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2651():
    float_0 = -4139.021
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2652():
    str_0 = "9~`<%Irya<S>&N"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2653():
    str_0 = "'-aTi:H"
    none_type_0 = None
    str_1 = "a"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: none_type_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2654():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_2.NonTemplatedInputDirException(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_2655():
    str_0 = "2c\\,m3d)ODOG\rd"
    str_1 = "sSSG:ow"
    int_0 = -2166
    str_2 = ",TN[G8|f"
    dict_0 = {str_0: str_0, str_1: int_0, str_1: int_0, str_2: int_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2656():
    complex_0 = 93.02 - 2755j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2657():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    dict_0 = {bool_0: bool_0, bool_0: set_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2658():
    int_0 = -1453
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2659():
    str_0 = "X,QIhw&\x0cL<J7{_EIh"
    str_1 = '*/\tjs(5"'
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_1, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2660():
    int_0 = -2765
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2661():
    float_0 = 2259.916
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2662():
    bytes_0 = b"\xc7"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *bytes_0
    )
    module_2.CookiecutterException(**non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2663():
    int_0 = -928
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2664():
    tuple_0 = ()
    bytes_0 = b"Ycj!\xb1\xc9\xf6C~\x003\xd1\n\xd3v\xec"
    list_0 = [bytes_0]
    tuple_1 = (tuple_0, bytes_0, list_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2665():
    int_0 = -2495
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2666():
    int_0 = -839
    module_0.find_template(int_0)


def test_case_2667():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2668():
    str_0 = "p^k~"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2669():
    str_0 = "z|mET{v=3(A\x0cXv.3^<M"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2670():
    bytes_0 = b"\x85\xb1f\x97v\xe1\x90\x93"
    list_0 = [bytes_0, bytes_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2671():
    float_0 = 2260.09653
    module_2.NonTemplatedInputDirException(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_2672():
    int_0 = 2676
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2673():
    str_0 = "'<ce@eh 7Nc'CW"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2674():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2675():
    str_0 = "\r]\\\t?"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2676():
    complex_0 = 238.778 - 1296.95j
    bool_0 = True
    str_0 = 'mC6L0\\3+`"sV85= iwL>'
    tuple_0 = (complex_0, bool_0, str_0, str_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2677():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [list_0, list_0, bool_0, bool_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_2678():
    int_0 = -394
    str_0 = ""
    dict_0 = {str_0: int_0, str_0: int_0, str_0: int_0}
    module_1.object(*int_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2679():
    bytes_0 = b"\xb4\xb5EV\xac_"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2680():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2681():
    str_0 = "~=3tfZ\\2gJ"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2682():
    str_0 = "k/P,r4Lk"
    str_1 = '"3'
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2683():
    str_0 = "@'t=b!]M&%ii"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2684():
    int_0 = -807
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2685():
    bytes_0 = b"?\xba]\xa4LSi\xef\xed\xd5\xd0\x03\xa1\xa6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2686():
    str_0 = "C{98zZ_rwmCyw|"
    str_1 = "+~RZQaBE0)'?=_V<x"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2687():
    str_0 = "@>U=5Xb5>KK\tj"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2688():
    bytes_0 = b"6\xefZ\xf4\xb6\xd7\xba\x8dri.\xcfW|\x956C3"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2689():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    str_0 = "85S'\x0bkriJlog}9^pn"
    str_1 = "z-C/Xf"
    str_2 = "oUq`r+7F"
    str_3 = "3"
    dict_0 = {
        str_0: non_templated_input_dir_exception_0,
        str_1: str_0,
        str_2: str_2,
        str_3: non_templated_input_dir_exception_0,
    }
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2690():
    float_0 = 2981.362
    tuple_0 = (float_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2691():
    str_0 = '6+N]"<FSJ\rI;eZ'
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2692():
    complex_0 = -832.167784 + 1118.5j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2693():
    int_0 = -3510
    list_0 = [int_0, int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2694():
    str_0 = "3tC/"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


def test_case_2695():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2696():
    str_0 = ">LiB?]rNwtLXZ'v\ny"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2697():
    float_0 = 1112.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2698():
    str_0 = "\\hBmuxB-g^Bj;G+Z:Wo"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2699():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bytes_0 = b"\xf9\xdc\x1f\xf5\xadg"
    int_0 = 2939
    tuple_0 = (int_0,)
    bool_0 = True
    tuple_1 = (non_templated_input_dir_exception_0, bytes_0, tuple_0, bool_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2700():
    str_0 = "/Js"
    module_0.find_template(str_0)


def test_case_2701():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_2702():
    float_0 = -2833.159
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2703():
    object_0 = module_1.object()
    list_0 = [object_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2704():
    complex_0 = 2240.28968 + 681.451j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2705():
    bool_0 = False
    list_0 = []
    exception_0 = module_1.Exception()
    tuple_0 = (list_0, exception_0)
    tuple_1 = (bool_0, tuple_0, list_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2706():
    int_0 = -1823
    str_0 = "F"
    str_1 = 'o% A~"C[}Fe#\n|]Hzc'
    str_2 = "b"
    dict_0 = {str_0: str_0, str_1: int_0, str_2: str_0, str_1: str_2}
    module_1.BaseException(*int_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2707():
    float_0 = -1090.859
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2708():
    str_0 = "?=\\UH\t7i|"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2709():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2710():
    bytes_0 = b"\xf8\xbd\x83\x86\xc7\xff\xf7\xbc\xb9\x87y\xe1\xa4}"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2711():
    bytes_0 = b"|\x0b!I"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2712():
    int_0 = -889
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2713():
    float_0 = 1773.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2714():
    float_0 = 979.887
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2715():
    str_0 = '\\-\x0bU]=0/\\)2"RT'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2716():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    tuple_0 = (bool_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2717():
    float_0 = -3149.373227
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2718():
    base_exception_0 = module_1.BaseException()
    list_0 = [base_exception_0, base_exception_0, base_exception_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2719():
    bytes_0 = b"n\x06\xd3\xb5\xf9kQT,\x12"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2720():
    none_type_0 = None
    module_2.NonTemplatedInputDirException(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2721():
    str_0 = "I<\x0bK%!AtV_\r\rx+"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2722():
    float_0 = -2382.82
    module_0.find_template(float_0)


def test_case_2723():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2724():
    int_0 = -1504
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2725():
    bool_0 = False
    module_1.BaseException(*bool_0, **bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2726():
    float_0 = 3195.491
    module_2.CookiecutterException(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_2727():
    bytes_0 = b"O\xf1\x16^h\xe0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2728():
    str_0 = "Jtk@u&WB"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2729():
    str_0 = "&4LZRPwxYi"
    bytes_0 = b"\xe6\xae\xca\x1c\x8d"
    str_1 = "tK\t)&@z@-"
    dict_0 = {str_0: str_0, str_0: bytes_0, str_1: str_1}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2730():
    str_0 = "k8;D"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2731():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2732():
    complex_0 = 27.9 + 3377.062j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2733():
    int_0 = -261
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2734():
    list_0 = []
    float_0 = 180.81
    list_1 = [list_0, list_0, float_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2735():
    float_0 = -4466.3876
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2736():
    int_0 = -244
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2737():
    str_0 = ":>Sg "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2738():
    complex_0 = -1024 + 1731.8j
    set_0 = {complex_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2739():
    int_0 = -860
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2740():
    bytes_0 = b"\xee\x88\x93i\x94"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2741():
    str_0 = "IX~"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2742():
    bool_0 = True
    list_0 = [bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    str_0 = "BE`HEWhtF!}^{%PKK_X"
    none_type_0 = None
    str_1 = "[e8+c#icxn6%(0r\nt1*"
    str_2 = "r!\x0b3@Q&um"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_2: none_type_0}
    module_1.object(*non_templated_input_dir_exception_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2743():
    float_0 = 399.0526
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2744():
    str_0 = "F#C\tjcEFKX.RJ"
    list_0 = [str_0, str_0, str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2745():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_1.object(*list_0, **bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2746():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2747():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    str_0 = "ayFdRR"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.BaseException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2748():
    complex_0 = 652.345 - 3682.11035j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2749():
    bytes_0 = b"E\xe8x\x96"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2750():
    set_0 = set()
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2751():
    float_0 = 1129.2725
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2752():
    str_0 = ")\x0cr91d\t\n {|d3\x0btK9"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2753():
    str_0 = "&.b@w"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2754():
    str_0 = "bxbNhA+B'g@Z\x0c"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2755():
    str_0 = "b!/%h/FG97m?U\x0b"
    none_type_0 = None
    str_1 = "]R!DK)c;jJoL\x0c*V"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2756():
    str_0 = "py\tc,[e"
    base_exception_0 = module_1.BaseException()
    str_1 = "_q})-9EC"
    str_2 = "\\Ig0Zsgk$CZ(_O9\x0b0]+5"
    dict_0 = {
        str_0: base_exception_0,
        str_1: str_1,
        str_2: base_exception_0,
        str_1: str_0,
    }
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2757():
    str_0 = "el\nPw\n"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2758():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2759():
    bytes_0 = b"\xa4(\x06\xc6\xf6X\xcbm"
    module_0.find_template(bytes_0)


def test_case_2760():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2761():
    str_0 = "IQ"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2762():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2763():
    bool_0 = False
    bool_1 = True
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    exception_0 = module_1.Exception(*list_0)
    tuple_0 = (bool_0, bool_1, exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2764():
    int_0 = -202
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2765():
    str_0 = "\\u9-u.cI\tv$C3s=vo"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2766():
    bool_0 = True
    module_2.CookiecutterException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2767():
    str_0 = '+R]Z\x0cP"p'
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


def test_case_2768():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2769():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_1: non_templated_input_dir_exception_1,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2770():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2771():
    float_0 = -3158.347817
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2772():
    bytes_0 = b"\xe5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2773():
    int_0 = -513
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2774():
    str_0 = "o.nEH"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2775():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    float_0 = 903.484
    set_0 = {
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        float_0,
        non_templated_input_dir_exception_0,
    }
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2776():
    float_0 = -1697.63
    bool_0 = False
    dict_0 = {float_0: float_0, float_0: float_0, float_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2777():
    bytes_0 = b"\xa63\xd2\n\xc7\x13\xa0g\xaa\xe4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2778():
    float_0 = 3199.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2779():
    int_0 = -830
    list_0 = [int_0, int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2780():
    list_0 = []
    str_0 = '6p!g\x0bLCJ"c'
    dict_0 = {str_0: list_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2781():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_1.object(*non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2782():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2783():
    str_0 = 'WrovV<nbo1.~:P";'
    set_0 = {str_0}
    list_0 = [set_0, str_0, str_0, set_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2784():
    int_0 = -1484
    set_0 = {int_0, int_0, int_0, int_0}
    bool_0 = False
    list_0 = [set_0, bool_0, bool_0, int_0]
    dict_0 = {}
    module_1.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2785():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2786():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    exception_0 = module_1.Exception(*list_0, **dict_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2787():
    float_0 = -732.46
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2788():
    str_0 = "dI\n+IZ"
    set_0 = {str_0, str_0, str_0}
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.object(*set_0, **dict_0)


def test_case_2789():
    base_exception_0 = module_1.BaseException()


@pytest.mark.xfail(strict=True)
def test_case_2790():
    bytes_0 = b"'>\xe2\xe0\xe6w\x98\x0e\x13@\xa0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2791():
    bytes_0 = b"\xee\xfe\xe9\\{\xfc/x\x0e\xc6$yk"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2792():
    str_0 = "g'&-"
    set_0 = {str_0, str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2793():
    float_0 = 926.5463
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (float_0, non_templated_input_dir_exception_0)
    dict_0 = {
        tuple_0: float_0,
        non_templated_input_dir_exception_0: tuple_0,
        float_0: float_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2794():
    bytes_0 = b"\x84r\xe7[\x1d\x0b\x1b#\xe7\x12*\xcc"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2795():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    bool_0 = True
    tuple_0 = (cookiecutter_exception_0, bool_0)
    list_0 = [tuple_0, bool_0, bool_0, cookiecutter_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2796():
    str_0 = ":n6~4"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2797():
    str_0 = "LlT\rdJtcM{h\n-B"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2798():
    bytes_0 = b"\xfb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2799():
    str_0 = " [TaV\t#EXl\x0c{mv?0j,"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2800():
    int_0 = 5978
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2801():
    int_0 = 226
    tuple_0 = (int_0, int_0, int_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2802():
    int_0 = -659
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2803():
    str_0 = "u!~!W03wF"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2804():
    complex_0 = 984.527072 + 1796.53j
    module_0.find_template(complex_0)


def test_case_2805():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2806():
    int_0 = -3260
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2807():
    int_0 = 2481
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2808():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    bytes_0 = b"\\20\xdaX\x1b"
    dict_0 = {
        cookiecutter_exception_0: none_type_0,
        bytes_0: list_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: none_type_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2809():
    complex_0 = -1532 + 2291.49948j
    bytes_0 = b""
    dict_0 = {complex_0: complex_0, complex_0: complex_0, complex_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2810():
    bytes_0 = b"\xba\xc0\xa1E\x84\xc8Z\xd4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2811():
    bytes_0 = b"\xcb\n\xa2\xb3\t6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2812():
    complex_0 = -765 - 3245.6826j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2813():
    bytes_0 = b"\xb6,\x83\xef\xa3v\xb5\xa7\xc2r\xff\xfa yk\xd9$\xe7"
    set_0 = {bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2814():
    bytes_0 = b"\x18=\x8c\xd0\xd03\x04\xd9S\xf3\n\xa4+\x85\xdb3f\x93["
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2815():
    int_0 = -1115
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2816():
    int_0 = 5375
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2817():
    int_0 = -116
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2818():
    int_0 = -1591
    list_0 = [int_0, int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2819():
    int_0 = -2274
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2820():
    float_0 = 1464.44338
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2821():
    bytes_0 = b"\x0f\x0e\x06\x8f\x8ar\x0e\xf9\xbf\x01"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2822():
    str_0 = "bEC1"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2823():
    base_exception_0 = module_1.BaseException()
    list_0 = [base_exception_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2824():
    str_0 = "R06`"
    list_0 = [str_0, str_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2825():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_1.object(**non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2826():
    str_0 = "e)\\}B`O"
    bool_0 = True
    tuple_0 = ()
    tuple_1 = (str_0, bool_0, tuple_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2827():
    exception_0 = module_1.Exception()
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2828():
    complex_0 = 1970.610995 + 1935.005j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2829():
    bytes_0 = b"("
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2830():
    str_0 = "cNiH\x0bc"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2831():
    bytes_0 = b"\t\x86\xb2O\xd1\xfd\xd4/D\x8b\xc1\x19\xfd\xe2\xcd\xf3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2832():
    int_0 = 705
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2833():
    str_0 = "fXw2,$Bz"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2834():
    int_0 = 1238
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2835():
    float_0 = -713.7265
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2836():
    list_0 = []
    str_0 = '5gJ*x3;nbQsA@Ig]"}'
    none_type_0 = None
    str_1 = "!yV@5_"
    str_2 = "L"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_2: none_type_0,
    }
    module_1.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2837():
    str_0 = "1K7.},5j{"
    list_0 = [str_0, str_0, str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2838():
    str_0 = "K_`GFLT3sKY-8|u':"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2839():
    str_0 = "56Il&YLE*6\x0bG9\x0bM]"
    str_1 = "\\W>3;N~[8QeFAf^vV\x0b"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2840():
    str_0 = "\n\t@"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2841():
    bool_0 = False
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (bool_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2842():
    bytes_0 = b"\x15\xe9V\xec\x8f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2843():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2844():
    bytes_0 = b"\x8e\x1f\xef\xa7n\xb4\xbe\xda\xd4\xd80\xef\x9c\x00a\x13"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2845():
    complex_0 = -2744 + 2628.4j
    tuple_0 = (complex_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2846():
    int_0 = 730
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2847():
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    exception_0 = module_1.Exception(*list_0)
    list_1 = [exception_0, set_0]
    base_exception_0 = module_1.BaseException(*list_1)
    module_1.Exception(*base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2848():
    str_0 = "{ 1Dc$"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2849():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0]
    tuple_0 = (exception_0, list_0, exception_0, exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2850():
    int_0 = -1846
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2851():
    bytes_0 = b"\nx\xb2\xef2\xb2\xd3-\xae..ud:\xea\x87\xe2"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_1.Exception(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_2852():
    float_0 = 1423.756661
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2853():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2854():
    bytes_0 = b"e\x0e\xa4~,"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2855():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        list_0,
        non_templated_input_dir_exception_0,
    ]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_2856():
    int_0 = 987
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2857():
    tuple_0 = ()
    module_2.NonTemplatedInputDirException(*tuple_0, **tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2858():
    int_0 = 1045
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2859():
    str_0 = 'cFl4~OD"XI?q\r={\n'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2860():
    float_0 = 290.358
    dict_0 = {float_0: float_0, float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2861():
    float_0 = 1956.68
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2862():
    bytes_0 = b"R) C\x03\xc7\xea\xc2!\xe5\xa51\x0c\xc29\xf6\x9a\xe1%"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2863():
    float_0 = 941.613583
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2864():
    bytes_0 = b"\xc5n\xa8B\x1d2\xbe\x15\xb4\x11\x9b\xa1\xe0'\xc1"
    module_0.find_template(bytes_0)


def test_case_2865():
    pass


def test_case_2866():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2867():
    str_0 = "C/"
    list_0 = [str_0, str_0, str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2868():
    int_0 = -1776
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2869():
    int_0 = 1147
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2870():
    float_0 = 195.108
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2871():
    int_0 = -1226
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2872():
    float_0 = 2312.3
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2873():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *dict_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2874():
    float_0 = -1730.01777
    tuple_0 = (float_0,)
    tuple_1 = (tuple_0, float_0, float_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2875():
    list_0 = []
    tuple_0 = (list_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2876():
    int_0 = 932
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2877():
    str_0 = "Gdnpb[n2-x"
    list_0 = [str_0, str_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2878():
    bytes_0 = b"\xc0c\xec<\xf8\xbf\xd3\xef\xabQoc\x06"
    set_0 = {bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2879():
    bytes_0 = b"\xe6\xb6{\xea\xacV\x93\x82\x8e\x8c\xec\xc8\x11\x92"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2880():
    int_0 = -1096
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2881():
    complex_0 = 1411.6 - 1168.8j
    float_0 = -466.0
    set_0 = {complex_0, complex_0, complex_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2882():
    bytes_0 = b"\xae\xb2\xdc\xf8\xe4\xec\x8b)\xd1+\xf7\x8f\xcb/\xb9\xdd\xba"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2883():
    str_0 = "I.G'iH\x0c!r"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2884():
    base_exception_0 = module_1.BaseException()
    complex_0 = 1861.1 + 2567j
    tuple_0 = (base_exception_0, complex_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2885():
    bool_0 = True
    list_0 = [bool_0]
    dict_0 = {bool_0: list_0}
    tuple_0 = (list_0, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2886():
    float_0 = -200.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2887():
    complex_0 = 3747 - 2060.9j
    set_0 = {complex_0, complex_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2888():
    list_0 = []
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2889():
    str_0 = "Er,.$Qg]EzdS"
    none_type_0 = None
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2890():
    str_0 = "?"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2891():
    str_0 = "O.1<]"
    str_1 = 'h"}B$B;!C>C0\tfyp`}n.'
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2892():
    str_0 = "\\SxjZNr:?.>"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2893():
    str_0 = "h"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2894():
    float_0 = -80.95
    list_0 = [float_0, float_0, float_0, float_0]
    list_1 = [list_0]
    list_2 = [list_1]
    module_0.find_template(list_2)


@pytest.mark.xfail(strict=True)
def test_case_2895():
    str_0 = "{(g!&.h8.D~"
    str_1 = "I5"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2896():
    int_0 = -1025
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2897():
    str_0 = "HvB"
    dict_0 = {str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2898():
    int_0 = 1824
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2899():
    str_0 = "ATL88`)=Axo@"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2900():
    str_0 = "68i&)tu83KN1O Y9d2"
    module_0.find_template(str_0)


def test_case_2901():
    float_0 = 1133.047371
    list_0 = [float_0, float_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )


@pytest.mark.xfail(strict=True)
def test_case_2902():
    str_0 = ";H?|\rcrXr;s"
    int_0 = -627
    dict_0 = {str_0: int_0, str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2903():
    float_0 = -2274.62
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2904():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [list_0, list_0, list_0]
    base_exception_0 = module_1.BaseException(*list_1)
    module_0.find_template(base_exception_0)


def test_case_2905():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2906():
    int_0 = -1003
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2907():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2908():
    str_0 = "-s^uQ|li6HK&`\x0bY3"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2909():
    str_0 = "0!9aPB\\Otm\\i!U"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2910():
    float_0 = 3619.6
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2911():
    str_0 = "AJ9&^/1"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2912():
    int_0 = 5456
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2913():
    bytes_0 = b"K\x13\xbc1"
    list_0 = [bytes_0, bytes_0, bytes_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2914():
    bytes_0 = b"^\x07"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2915():
    str_0 = "/Bf!"
    set_0 = {str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2916():
    int_0 = -752
    list_0 = [int_0, int_0, int_0, int_0]
    module_0.find_template(list_0)


def test_case_2917():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2918():
    str_0 = "D"
    list_0 = [str_0, str_0, str_0]
    module_2.NonTemplatedInputDirException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_2919():
    int_0 = -120
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2920():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {}
    tuple_0 = (non_templated_input_dir_exception_0, dict_0)
    list_0 = [tuple_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2921():
    bytes_0 = b"\xa3\xd8\xa3I\xca\xd5\x14T\xb0K\x88\x15\r#\xae"
    bytes_1 = b"\xddkh\x83\x02m\x8cS\x89\x1c"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_1]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2922():
    exception_0 = module_1.Exception()
    dict_0 = {
        exception_0: exception_0,
        exception_0: exception_0,
        exception_0: exception_0,
    }
    list_0 = [dict_0]
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2923():
    bytes_0 = b";\xb6\xf0\xaf\xd9\xf1\xc1\xb6\xfcx\xb5^\x86\xd7\x8dMj"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2924():
    int_0 = -22
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2925():
    int_0 = 330
    tuple_0 = (int_0,)
    dict_0 = {tuple_0: int_0, int_0: tuple_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2926():
    bytes_0 = b"!\xa3\xa2W\x935\xd3\xa4\x7f\xc0\xb5\xa38\x11\x19"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2927():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = []
    cookiecutter_exception_1 = module_2.CookiecutterException(*list_0)
    set_0 = {
        cookiecutter_exception_0,
        cookiecutter_exception_1,
        cookiecutter_exception_1,
    }
    base_exception_0 = module_1.BaseException(*set_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2928():
    float_0 = -3967.7
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2929():
    float_0 = 161.24
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2930():
    bytes_0 = b'\xa00\xc7\x19\xc2"%M'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2931():
    str_0 = "pr"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2932():
    complex_0 = 425.9 + 4271.1j
    tuple_0 = (complex_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2933():
    float_0 = -3444.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2934():
    bytes_0 = b"\xed\xae\x13\xd8\x9f\x84\xb5\x11\xff\x8c1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2935():
    str_0 = "k&>.X-.]^P=O!HI4"
    none_type_0 = None
    str_1 = "#3^<*6+\npx28c{"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2936():
    str_0 = "&<dT"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2937():
    int_0 = 1686
    module_1.object(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_2938():
    bytes_0 = b"\x94:\xce\xef\xd1\xab\xd7i\xe9\x89\xda\xdc\xe1\xaal)l\xd9\xac"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2939():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2940():
    complex_0 = 1700.0639 + 3070.888j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2941():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    set_0 = {non_templated_input_dir_exception_0, non_templated_input_dir_exception_0}
    tuple_0 = (set_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2942():
    int_0 = 2154
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2943():
    complex_0 = 1100.32 - 451.88j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2944():
    bytes_0 = b"\xc27>\xb7\x93@2u\xf2\xd3\xb2]\xbc\n"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2945():
    bytes_0 = b"\x07\xa7\x95\xd9@\xef\x16\xf0\x08"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2946():
    str_0 = "4\x0c\\Z!"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2947():
    bytes_0 = b'$\xea"\xff\xb2\xac\xc3\xe0\\\x12\x99\x8c'
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2948():
    str_0 = "er^_"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2949():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    dict_0 = {}
    tuple_0 = (list_0, dict_0, list_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


def test_case_2950():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2951():
    bytes_0 = b"\x05\xd9\xc6s!\x9e\xfd\x91\xf2\xa3\xe3"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2952():
    bool_0 = False
    dict_0 = {}
    module_2.NonTemplatedInputDirException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2953():
    int_0 = 2304
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2954():
    str_0 = "n`L+R8E\x0bv\x0c"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2955():
    bool_0 = True
    str_0 = "\x0b"
    str_1 = "<{h\n"
    object_0 = module_1.object()
    dict_0 = {str_0: bool_0, str_1: object_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2956():
    bytes_0 = b"\\\x9e\xb4\xa9\x1f\xc1\x9c3\xd2?\x04\xe1\x01E\xba\xcd\xbf\xa8"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2957():
    float_0 = 118.630741
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2958():
    none_type_0 = None
    list_0 = [none_type_0]
    str_0 = "g~N&6\tw\x0b$Zwx77Jzbc!"
    dict_0 = {str_0: none_type_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2959():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2960():
    str_0 = "r}/o"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2961():
    float_0 = -1444.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2962():
    str_0 = "dh:rMHSV@_K"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2963():
    int_0 = 1765
    set_0 = {int_0, int_0}
    module_1.BaseException(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_2964():
    bytes_0 = b""
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2965():
    str_0 = "GGSI Z5?"
    str_1 = "Xv@j/Az"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2966():
    bool_0 = True
    module_1.object(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2967():
    str_0 = "C}[Ug9=':p8e `U}:"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2968():
    float_0 = -2649.0
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_0 = (float_0, cookiecutter_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2969():
    bytes_0 = b"\x1a\xae\x1e\xf5V;\xe0x\x02\x0b@,l"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2970():
    str_0 = "s1oD8,7d"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2971():
    float_0 = -2568.332
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2972():
    exception_0 = module_1.Exception()
    set_0 = {exception_0, exception_0}
    exception_1 = module_1.Exception(*set_0)
    module_0.find_template(exception_1)


@pytest.mark.xfail(strict=True)
def test_case_2973():
    exception_0 = module_1.Exception()
    dict_0 = {exception_0: exception_0, exception_0: exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2974():
    object_0 = module_1.object()
    module_1.BaseException(*object_0)


@pytest.mark.xfail(strict=True)
def test_case_2975():
    int_0 = -1676
    str_0 = ",AnCX]8"
    exception_0 = module_1.Exception()
    str_1 = "N+IfB4$F6?K\x0b?U0jUu7J"
    dict_0 = {str_0: exception_0, str_1: str_1, str_0: exception_0}
    module_1.BaseException(*int_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2976():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2977():
    int_0 = 484
    module_0.find_template(int_0)


def test_case_2978():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2979():
    str_0 = "q*e$=LCwn"
    str_1 = "Oa/gV%\x0bK4)wtP,?OOP"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2980():
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(**dict_0)
    module_2.NonTemplatedInputDirException(**cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2981():
    str_0 = "h2\x0b)\tP"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2982():
    str_0 = "N ch+"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2983():
    int_0 = -1920
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


def test_case_2984():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2985():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2986():
    int_0 = 1390
    list_0 = [int_0, int_0, int_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_2987():
    bytes_0 = b"\x81\x0fch\x16\xc7Bt\x0b\x062k@\xc5\x88y"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2988():
    int_0 = 1660
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2989():
    str_0 = "-v\\4us0%"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2990():
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(**dict_0)
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2991():
    object_0 = module_1.object()
    str_0 = "I<e+X+b[41<X\x0c(n@"
    dict_0 = {object_0: object_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2992():
    int_0 = -236
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2993():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    str_0 = "00GzK_0$N}&w"
    str_1 = "[f{52\x0b837wzr"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2994():
    bytes_0 = b"\xdc\x8aUq\xe5#{\xed\x84\n\x1ad\x92"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2995():
    str_0 = "YS^r\x0bz_\x0bLAC`%"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2996():
    float_0 = -386.9212
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2997():
    str_0 = "G26~*H!~K\x0bAd@EuTG\nUh"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2998():
    str_0 = "W|<{xDv"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2999():
    str_0 = "p\r<o"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3000():
    list_0 = []
    str_0 = "Sx$r2Bsy"
    str_1 = "KoY4"
    str_2 = "ws\tI\tQ"
    str_3 = "9:5|V~&&7IsX?n\rB\\G["
    dict_0 = {str_0: list_0, str_1: str_1, str_2: str_1, str_3: str_2}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3001():
    str_0 = "3~l0-}fKlGP^+:x'__tP"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3002():
    str_0 = "hBLjsGK\x0c 7d0%avquF"
    set_0 = {str_0, str_0, str_0, str_0}
    module_0.find_template(set_0)


def test_case_3003():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_3004():
    int_0 = -2421
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3005():
    complex_0 = -4728.89326 + 1634j
    tuple_0 = (complex_0,)
    list_0 = [tuple_0, complex_0, tuple_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3006():
    str_0 = 'r\x0cR\n!qVDCP`_rb#/5`"'
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3007():
    str_0 = "j9k*"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3008():
    bytes_0 = b"\xae\xc6\x1d\x95wY\xf5@\xf3tc"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *bytes_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3009():
    str_0 = "\nvHp{]UH`05lT/kw["
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3010():
    bool_0 = False
    str_0 = "c\x0b:{"
    tuple_0 = (bool_0, str_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3011():
    str_0 = "J?,#=-"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3012():
    bytes_0 = b"\xdd\x1ftP\x10\x80\\v\x0ev-0"
    exception_0 = module_1.Exception(*bytes_0)
    module_2.CookiecutterException(**exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3013():
    list_0 = []
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0, **dict_0)
    bool_0 = True
    list_1 = [cookiecutter_exception_0, dict_0, bool_0, list_0]
    str_0 = ".`]?~gYy+4+'QTLl&5'"
    str_1 = "[=Q(mp2T[&:kJ~/p'X?"
    dict_1 = {str_0: bool_0, str_0: bool_0, str_1: list_0}
    module_2.CookiecutterException(*list_1, **dict_1)


@pytest.mark.xfail(strict=True)
def test_case_3014():
    bool_0 = False
    module_1.BaseException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3015():
    str_0 = "Ool}[![bbM1BZs{2"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3016():
    bytes_0 = b"\xc2\xff\x8c\x02Bk\xc7\xb0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3017():
    str_0 = "]9F}"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3018():
    int_0 = 1687
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3019():
    str_0 = "hF"
    str_1 = "]^"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3020():
    str_0 = "\tZEm=mg>:y\r3l9"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3021():
    int_0 = -805
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3022():
    str_0 = "9K5"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3023():
    str_0 = ";*q)njw$"
    tuple_0 = (str_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3024():
    str_0 = "C@zy~\nR;s"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3025():
    str_0 = "ErU:tQ'"
    tuple_0 = (str_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3026():
    str_0 = '&A?s@`rN#F"&k+7'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3027():
    str_0 = "Bnr\x0c`DMPJMWl=;wkdb"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3028():
    int_0 = 303
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3029():
    int_0 = 5320
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3030():
    bytes_0 = b"n\xd8E\x8ccG\x8dPd\x1e\xba\xb5T*"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3031():
    str_0 = "@@QD&Qu'@VJ%PEqd"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3032():
    int_0 = 1231
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3033():
    float_0 = -2252.0
    list_0 = [float_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3034():
    int_0 = -1024
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3035():
    float_0 = 5971.1222
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3036():
    bytes_0 = b"\x86\x03:\x02\xac\xfd\xbf\x99\xf1t3P\xd4\x9d\xe6\x80\xfe\x9f\xb4\x92"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3037():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    )
    module_0.find_template(tuple_0)


def test_case_3038():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_3039():
    int_0 = -600
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3040():
    bool_0 = True
    tuple_0 = (bool_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3041():
    complex_0 = 1185.6986 + 566.2203j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3042():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_1.object(*list_1, **non_templated_input_dir_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_3043():
    int_0 = -2416
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3044():
    float_0 = 1690.05
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3045():
    bytes_0 = b"+\xeb\x11\x87\xe2\x1b\xe0U\x8f\xd6z\xfb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3046():
    str_0 = "J5RF%zPgD1"
    str_1 = "rX1S%{I#dUH<3m{>"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3047():
    str_0 = "(N}b34[>W\x0b'x/wF44nI"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3048():
    bytes_0 = b"$\x15"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3049():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = "!J{_jh"
    dict_0 = {str_0: list_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3050():
    none_type_0 = None
    str_0 = "+h:&2ptHA"
    dict_0 = {str_0: none_type_0}
    module_1.BaseException(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3051():
    str_0 = "\\*nJQ"
    module_0.find_template(str_0)


def test_case_3052():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3053():
    float_0 = -4785.3879
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3054():
    int_0 = -1245
    tuple_0 = (int_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3055():
    str_0 = "ph"
    module_0.find_template(str_0)


def test_case_3056():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3057():
    float_0 = -383.8206
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3058():
    exception_0 = module_1.Exception()
    bool_0 = True
    set_0 = {exception_0, bool_0, bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3059():
    float_0 = 1841.234
    bool_0 = False
    set_0 = {float_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3060():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3061():
    int_0 = -1267
    set_0 = {int_0, int_0, int_0, int_0}
    list_0 = [set_0, set_0, set_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3062():
    float_0 = -3841.6376
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3063():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3064():
    int_0 = 945
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3065():
    float_0 = -925.806177
    list_0 = [float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3066():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    bool_0 = True
    tuple_0 = (cookiecutter_exception_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3067():
    float_0 = -2792.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3068():
    bool_0 = True
    tuple_0 = (bool_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3069():
    str_0 = "v"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3070():
    int_0 = -125
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3071():
    float_0 = -895.0
    tuple_0 = (float_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3072():
    str_0 = "F}Rz$0<']XIEZ]M"
    set_0 = {str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3073():
    complex_0 = 1240.7295 - 775.55j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3074():
    str_0 = "pcQ"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3075():
    str_0 = "XQyv]emT(Z$&vURsU"
    str_1 = "gRcpq)(\x0bgaI\\"
    str_2 = "WIJ<C,~#pX tUk3"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3076():
    str_0 = ";!OaoNs"
    list_0 = [str_0, str_0, str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3077():
    int_0 = -3350
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3078():
    list_0 = []
    str_0 = "h^CnfA`IK.?<~vb;C"
    dict_0 = {str_0: list_0}
    module_1.BaseException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3079():
    str_0 = "DA..a_m-WQCOR|O'q>"
    bool_0 = False
    set_0 = {str_0, bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3080():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_0, list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3081():
    str_0 = '0Vg"'
    str_1 = "?[\n!?\nt%F9u"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {str_0: str_0, str_1: str_0, str_1: non_templated_input_dir_exception_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3082():
    float_0 = -2024.9
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3083():
    str_0 = 'm<,"6CKkGA|CJYpFX"G'
    str_1 = '0^"v/.{'
    str_2 = "o)cz;D9[+_"
    dict_0 = {str_1: str_0, str_2: str_2, str_2: str_2}
    dict_1 = {str_0: str_0, str_1: str_1, str_2: dict_0}
    module_2.CookiecutterException(**dict_1)


@pytest.mark.xfail(strict=True)
def test_case_3084():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3085():
    dict_0 = {}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3086():
    complex_0 = -941 - 345.2j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3087():
    str_0 = "`bo%J]GD\x0cY7# WL@*m"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3088():
    str_0 = "<7*c"
    bool_0 = True
    dict_0 = {str_0: bool_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3089():
    complex_0 = 4299.71 + 456.8j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3090():
    float_0 = 1763.1391
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3091():
    complex_0 = 442 + 1436.354j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3092():
    bytes_0 = b"#\xfe\x00\xcf\x13\xb4\xfc,\x01\x14\x86\xee"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3093():
    int_0 = 981
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3094():
    int_0 = 1447
    dict_0 = {int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3095():
    str_0 = "zbo0R#'&\\0S_;"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3096():
    bool_0 = True
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_1 = True
    dict_0 = {
        non_templated_input_dir_exception_0: bool_0,
        non_templated_input_dir_exception_0: bool_0,
        non_templated_input_dir_exception_0: bool_1,
    }
    tuple_0 = (bool_0, non_templated_input_dir_exception_0, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3097():
    int_0 = -75
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3098():
    bytes_0 = b'{\x9d"\xdf\xca\x1aUi\xb8'
    tuple_0 = (bytes_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3099():
    float_0 = 3010.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3100():
    bytes_0 = b"\xc3\xeb\x1bu\xa0\x98\x1f\x12="
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3101():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3102():
    int_0 = -638
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3103():
    float_0 = -729.053
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3104():
    float_0 = 151.5
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3105():
    float_0 = -1950.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3106():
    int_0 = 2643
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3107():
    int_0 = -3795
    str_0 = "\r\t1YQ~]kf"
    str_1 = ""
    str_2 = "g~eH1ym4,^J\\"
    dict_0 = {str_0: int_0, str_1: str_0, str_2: int_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3108():
    int_0 = -601
    set_0 = {int_0, int_0, int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3109():
    str_0 = "ni5JMt"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3110():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    none_type_0 = None
    module_2.CookiecutterException(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3111():
    int_0 = -2315
    list_0 = [int_0, int_0, int_0, int_0]
    tuple_0 = (list_0,)
    str_0 = "^q6#P2"
    list_1 = [tuple_0, str_0, tuple_0, str_0]
    list_2 = [list_1, list_1, list_1, tuple_0]
    module_0.find_template(list_2)


@pytest.mark.xfail(strict=True)
def test_case_3112():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    base_exception_0 = module_1.BaseException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3113():
    base_exception_0 = module_1.BaseException()
    module_2.NonTemplatedInputDirException(*base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3114():
    int_0 = 3000
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3115():
    float_0 = -3529.5439
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3116():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    str_0 = "py?{zJtF&9M{/"
    dict_0 = {
        none_type_0: none_type_0,
        str_0: str_0,
        none_type_0: none_type_0,
        none_type_0: none_type_0,
    }
    dict_1 = {str_0: none_type_0, str_0: str_0, str_0: dict_0}
    module_1.Exception(*list_0, **dict_1)


@pytest.mark.xfail(strict=True)
def test_case_3117():
    complex_0 = -3677.0856 + 1077.2267j
    bytes_0 = b"i\x8ef\xfe\xc0R"
    tuple_0 = (complex_0, complex_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3118():
    int_0 = 859
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3119():
    complex_0 = -698.75 + 2734j
    module_2.NonTemplatedInputDirException(**complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3120():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0]
    str_0 = "+D[|KU\tL$Q\x0cl|<0q2+m"
    str_1 = "W3bTAbA=Srg"
    dict_0 = {
        str_0: str_0,
        str_0: non_templated_input_dir_exception_0,
        str_0: str_0,
        str_1: list_0,
    }
    module_1.Exception(*list_0, **dict_0)


def test_case_3121():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3122():
    int_0 = 1132
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3123():
    str_0 = "wq&eOln+"
    str_1 = "!,`AL"
    bool_0 = False
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1, str_1: bool_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3124():
    bytes_0 = b"\x99"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3125():
    str_0 = "1hYURwF%"
    list_0 = [str_0]
    module_0.find_template(list_0)


def test_case_3126():
    dict_0 = {}
    base_exception_0 = module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3127():
    bytes_0 = b"F\x9f\x0f\xb3\xb6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3128():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3129():
    float_0 = -2918.6
    module_2.CookiecutterException(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_3130():
    float_0 = -2121.27
    set_0 = {float_0, float_0, float_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3131():
    bytes_0 = b"\xd0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3132():
    float_0 = -1634.4
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3133():
    str_0 = "dTSM92,0"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3134():
    int_0 = 992
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3135():
    str_0 = "\x0cY+[{DA:ErD[1qb\\"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3136():
    int_0 = -340
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3137():
    str_0 = ":\\{(=@.%Lx\x0by]?(Utq"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3138():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [cookiecutter_exception_0]
    cookiecutter_exception_1 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_3139():
    bytes_0 = b"\xb9\xf0y\xb6]"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3140():
    str_0 = "\n\x0b{_J4*ozo"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3141():
    float_0 = -3523.546516
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3142():
    str_0 = ")Y-hK4.}PPT3\t\x0chx*;dt"
    str_1 = 'k2m*"qHE\r4OyA8M#'
    str_2 = "UN?~v^,z,0?*(>"
    dict_0 = {str_0: str_0, str_0: str_1, str_2: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3143():
    int_0 = -1397
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3144():
    bytes_0 = b"\xc9\xa2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3145():
    bool_0 = False
    set_0 = set()
    tuple_0 = (bool_0, set_0, bool_0)
    list_0 = [tuple_0, tuple_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3146():
    str_0 = "("
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3147():
    float_0 = 145.36098
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3148():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3149():
    int_0 = 969
    set_0 = {int_0, int_0, int_0, int_0}
    module_0.find_template(set_0)


def test_case_3150():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3151():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3152():
    bytes_0 = b"\xf2t\xb6\xd7\x12\xf6\x89\xe1\xbf\x95\xdc"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3153():
    bytes_0 = b"\xd6i[,\x1d\xb7d\x93\x97"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3154():
    float_0 = 1896.999
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3155():
    complex_0 = -882.79574 + 162.399146j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3156():
    complex_0 = 129.3195 + 224.508j
    list_0 = [complex_0, complex_0]
    dict_0 = {}
    exception_0 = module_1.Exception(*list_0, **dict_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3157():
    str_0 = 'ozd\t6R"Rv?bU;V'
    tuple_0 = (str_0,)
    set_0 = {tuple_0, str_0, str_0}
    module_2.CookiecutterException(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_3158():
    dict_0 = {}
    base_exception_0 = module_1.BaseException(**dict_0)
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_1 = {base_exception_0: non_templated_input_dir_exception_0}
    module_0.find_template(dict_1)


@pytest.mark.xfail(strict=True)
def test_case_3159():
    float_0 = -2883.76
    list_0 = [float_0, float_0, float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3160():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [cookiecutter_exception_0]
    str_0 = "\tH`g29[qt8"
    str_1 = "Oj%4l}3"
    dict_0 = {str_0: list_0, str_0: cookiecutter_exception_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3161():
    complex_0 = -1683.8 + 253.7j
    set_0 = {complex_0, complex_0, complex_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3162():
    int_0 = 2172
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3163():
    str_0 = ":/}/o<pSo<>uEG_"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3164():
    str_0 = "WBJs& \\6"
    set_0 = {str_0, str_0, str_0}
    list_0 = [set_0, str_0, set_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3165():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3166():
    str_0 = "hzwrXn(7j\x0c"
    str_1 = ')KZ."|xQK(qJs]I'
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_1}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3167():
    int_0 = -1990
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3168():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_1.BaseException(**non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3169():
    exception_0 = module_1.Exception()
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3170():
    int_0 = 5686
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3171():
    str_0 = ";%k#sM\t\x0bRT/OJ\tc<%zy"
    tuple_0 = ()
    str_1 = "-r NNl!3"
    dict_0 = {str_0: tuple_0, str_1: str_1, str_1: str_1, str_1: tuple_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3172():
    bytes_0 = b":\x93\x98\xbd\xe2\x85o$\xeeC\xdeM9\xfb8U\x9eC\xbb\xf1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3173():
    int_0 = -1964
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3174():
    int_0 = 247
    list_0 = [int_0, int_0, int_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3175():
    set_0 = set()
    int_0 = 1291
    tuple_0 = (set_0, set_0, int_0)
    list_0 = [tuple_0, tuple_0, int_0, tuple_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3176():
    bytes_0 = b"\xdd\xcb\xb1\xdf\x12\x85S\x93\x90\x88L\xed\x84"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3177():
    int_0 = -469
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (int_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3178():
    str_0 = "\x0b,-Gu%M@\x0b)s!)%7\\\t`"
    none_type_0 = None
    str_1 = "!']c4+l~<%c9"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3179():
    float_0 = 2071.245553
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3180():
    exception_0 = module_1.Exception()
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3181():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {non_templated_input_dir_exception_0: non_templated_input_dir_exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3182():
    int_0 = -3364
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3183():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_2.NonTemplatedInputDirException(*cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3184():
    int_0 = -36
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3185():
    str_0 = "#\tBsiZ-'u"
    list_0 = []
    str_1 = ";z/+WU4^2f,wc"
    dict_0 = {str_0: list_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3186():
    int_0 = 684
    module_2.NonTemplatedInputDirException(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_3187():
    int_0 = -374
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3188():
    str_0 = "jv"
    list_0 = [str_0, str_0]
    tuple_0 = (str_0, str_0, list_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3189():
    int_0 = -5059
    str_0 = "Z\x0b\x0bFD.)lz"
    str_1 = 'e"JhR[g"~KMw\'a'
    str_2 = "j##zo1^lUdZS-\n0:1"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1}
    module_1.BaseException(*int_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3190():
    str_0 = '~k:\\L&w-"(~27dHH}u'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3191():
    bytes_0 = b"\x88"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3192():
    str_0 = "wR)=.WRNEDFH\n=p5>%1J"
    str_1 = "$[\t432CQ7|c .nL"
    str_2 = "k7a1du3"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1, str_0: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3193():
    int_0 = -1580
    tuple_0 = (int_0,)
    module_2.CookiecutterException(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3194():
    int_0 = -849
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3195():
    bytes_0 = b"\xe8\xf1g\x9a}\xbfA\x1f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3196():
    complex_0 = -3514.133 + 720.4186j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3197():
    str_0 = "Z3\tY"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3198():
    bytes_0 = b"!\xa4\xf3\xde?\xca\xcf\xb7I<g"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3199():
    int_0 = -1366
    dict_0 = {}
    module_2.NonTemplatedInputDirException(*int_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3200():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_2.NonTemplatedInputDirException(**cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3201():
    str_0 = "*ydHn"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3202():
    str_0 = "MkK"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3203():
    str_0 = "Vt\\I3O)e,I"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3204():
    int_0 = -2287
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3205():
    int_0 = -3554
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3206():
    str_0 = "r"
    list_0 = [str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3207():
    float_0 = 3972.23
    module_0.find_template(float_0)


def test_case_3208():
    pass


def test_case_3209():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3210():
    str_0 = "|sfN!;.&Q'q4"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3211():
    int_0 = -1941
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3212():
    str_0 = "^!%+>``!."
    str_1 = "7]\\u03Wugi.2"
    str_2 = "a,Y[{z+7v4HZHdb){"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3213():
    str_0 = "#4}=S"
    list_0 = [str_0]
    bytes_0 = b"\xda\xcd\x05p\x12Nm\xdb\x9a\xa7\x92"
    tuple_0 = (list_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3214():
    set_0 = set()
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [set_0, set_0, set_0, cookiecutter_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3215():
    int_0 = -609
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3216():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, bool_0, bool_0, dict_0]
    list_1 = [list_0]
    module_1.object(**list_1)


@pytest.mark.xfail(strict=True)
def test_case_3217():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_0 = True
    tuple_0 = (non_templated_input_dir_exception_0, bool_0)
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *tuple_0
    )
    set_0 = {non_templated_input_dir_exception_1, non_templated_input_dir_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3218():
    str_0 = "J"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3219():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    str_0 = "]FE#"
    str_1 = "-YC7/rP"
    str_2 = "'}K;OJ@57_B0\r\ror)X"
    dict_0 = {
        str_0: non_templated_input_dir_exception_0,
        str_1: non_templated_input_dir_exception_0,
        str_2: str_2,
    }
    module_2.CookiecutterException(*non_templated_input_dir_exception_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3220():
    complex_0 = 825.9 + 443.7j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3221():
    bool_0 = True
    str_0 = "Fune50O\x0cp!/0B<yqvaM"
    int_0 = 2324
    tuple_0 = (bool_0, str_0, int_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3222():
    int_0 = -470
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3223():
    bytes_0 = b"\xc7Yd\xb7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3224():
    complex_0 = -1041.3 - 1578.1j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3225():
    int_0 = -43
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3226():
    str_0 = 'Stsd]W@q{w3Pk5eY/"1'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3227():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)
    bytes_0 = b"\x93\xb2\xc3\x82!f\x9b*\n\xcc\xaf:T\xb4\xfd\xe2\x9a`\x1c"
    tuple_0 = (bytes_0, exception_0)
    module_0.find_template(tuple_0)


def test_case_3228():
    str_0 = "//"
    with pytest.raises(module_2.NonTemplatedInputDirException):
        module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3229():
    str_0 = "@-\x0bP(tEL"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3230():
    bytes_0 = b"\xde\x98=\x0b/_\x1a\x12*\xba\x94\x84@\xec^"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3231():
    bytes_0 = b")\x93"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3232():
    str_0 = "r4ERv2^R&XeV("
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3233():
    str_0 = " eUd!c"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3234():
    bytes_0 = b"\xc1\x86\x0cz"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3235():
    int_0 = -1807
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3236():
    int_0 = 816
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3237():
    int_0 = -241
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3238():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3239():
    bytes_0 = b"\x9c\x95a\xad}\xd6=s\x0fSvc\xf9"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3240():
    str_0 = "t\nJ*s6xr5&ME`>(/Y\x0cV"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3241():
    int_0 = 1349
    set_0 = {int_0, int_0, int_0}
    tuple_0 = (int_0, set_0)
    tuple_1 = (tuple_0,)
    module_0.find_template(tuple_1)


def test_case_3242():
    exception_0 = module_1.Exception()


@pytest.mark.xfail(strict=True)
def test_case_3243():
    int_0 = -37
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3244():
    list_0 = []
    str_0 = "BbMtGK$+T+7"
    dict_0 = {str_0: str_0, str_0: list_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3245():
    str_0 = "qCk<"
    list_0 = [str_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3246():
    str_0 = '%sq\x0c\\~I@")],?'
    dict_0 = {str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3247():
    float_0 = 1433.49443
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3248():
    bytes_0 = b"\xab r\xd9\x1d*n\xfb\xe8\xf33\xe1e\x12\xc9"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


def test_case_3249():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3250():
    bytes_0 = b"\xb45-\xec\xf7;"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3251():
    int_0 = -257
    module_0.find_template(int_0)


def test_case_3252():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3253():
    bytes_0 = b"\xaeD\xb2\xf2\x1f\xf9\xc9\xd7\xc3\xe7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3254():
    int_0 = -2504
    module_0.find_template(int_0)


def test_case_3255():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_3256():
    int_0 = 162
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3257():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_0, none_type_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3258():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    bool_0 = False
    dict_0 = {
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
        bool_0: bool_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3259():
    str_0 = "{K.lHFVmnN=S."
    module_0.find_template(str_0)


def test_case_3260():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3261():
    int_0 = -957
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3262():
    list_0 = []
    str_0 = "{l\n;\nIBx+j\tFt@]gf"
    dict_0 = {str_0: list_0, str_0: str_0}
    module_1.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3263():
    str_0 = 'n\tz/"/HC\n'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3264():
    list_0 = []
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3265():
    str_0 = "Fs49}Nty0nYW6"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3266():
    float_0 = 1730.41
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3267():
    int_0 = -5294
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3268():
    str_0 = "\nRe\x0cJfST0l kIi"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3269():
    bytes_0 = b"3\xb3\x84CO\xd6\xd2\xdd-gAg\x18"
    dict_0 = {bytes_0: bytes_0}
    list_0 = [bytes_0, dict_0]
    module_1.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3270():
    bytes_0 = b"\x1b]\x82\xc3\xa1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3271():
    int_0 = -2758
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3272():
    bytes_0 = b"\xc5\xd6\x7fG\xaf>\x1bf\x9fj"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3273():
    float_0 = 2198.6288
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3274():
    float_0 = -3026.239
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3275():
    str_0 = "s5J'vviJU5@oH\rIHE#"
    module_0.find_template(str_0)


def test_case_3276():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3277():
    base_exception_0 = module_1.BaseException()
    set_0 = {base_exception_0}
    list_0 = [set_0, set_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3278():
    float_0 = -1851.57
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3279():
    bytes_0 = b"q\x8eW\xb6\x03\x84\x12"
    int_0 = 22
    bool_0 = True
    dict_0 = {bytes_0: bytes_0, int_0: bytes_0, bytes_0: bytes_0, int_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3280():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    str_0 = ";DlVp>FN+W#\r)MlduQ"
    dict_0 = {str_0: list_0, str_0: str_0, str_0: list_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3281():
    str_0 = "Ev3T=uR x1Y7=YVG"
    none_type_0 = None
    str_1 = "B+<l8z=fBXM"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3282():
    int_0 = 208
    str_0 = '")kMj|u\x0c1n'
    list_0 = [int_0, int_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    tuple_0 = (int_0, str_0, cookiecutter_exception_0, cookiecutter_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3283():
    str_0 = "b{*@t)-,0?QiRUw!~X6"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3284():
    float_0 = 489.9
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3285():
    complex_0 = -1663.3486 + 2049.35j
    module_2.NonTemplatedInputDirException(*complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3286():
    int_0 = -183
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3287():
    str_0 = "QQywQ%4\\>"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3288():
    int_0 = 4616
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [int_0, non_templated_input_dir_exception_0, int_0, int_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3289():
    str_0 = "9gnJ!?"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3290():
    bytes_0 = b"\xf4\xc0\xd1\x19\x19\xe4R\xdf\xa1W8rX"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3291():
    str_0 = "+(cM|b!yR+?"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3292():
    int_0 = -380
    list_0 = [int_0, int_0]
    str_0 = '"jX'
    str_1 = "?cMk5}q?D`(c/\t,"
    dict_0 = {str_0: list_0, str_0: int_0, str_1: int_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3293():
    str_0 = "]QSz*r?B@"
    bool_0 = True
    str_1 = "AU6}N&rZygt+5 z ["
    dict_0 = {str_0: str_0, str_0: bool_0, str_1: bool_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3294():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0, exception_0]
    list_1 = [list_0, exception_0, exception_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3295():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    bytes_0 = b"\xc9\x1e\x98\x03\x8a\xed\xcb|()\xeev8\x0f\xc1>Q\x0c\xf5"
    str_0 = ""
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    tuple_0 = (
        str_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_1,
    )
    dict_0 = {bytes_0: tuple_0, str_0: non_templated_input_dir_exception_0}
    tuple_1 = (dict_0, dict_0, non_templated_input_dir_exception_1)
    tuple_2 = (
        bool_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        tuple_1,
    )
    module_0.find_template(tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_3296():
    str_0 = "hKFo%sEOppBo"
    str_1 = "QpsPq<"
    str_2 = "?"
    str_3 = "'iT##AtOP%ivhe[/za"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2, str_3: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3297():
    str_0 = "a~\t"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3298():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    str_0 = 'Wo35;p))Z]`,\\"=sPN'
    dict_0 = {str_0: list_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3299():
    str_0 = "WMo%}SKJpG>%I}U?Y"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3300():
    str_0 = "ml8'6uX*x0g"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3301():
    int_0 = 748
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3302():
    bytes_0 = b"\x9b\x96\xe7\xba/!\xd7\xffv /\x04|;\xfau\x95\xcf"
    module_0.find_template(bytes_0)


def test_case_3303():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_3304():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3305():
    bytes_0 = b"\x95\x85JK\xff"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3306():
    int_0 = 2461
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3307():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {non_templated_input_dir_exception_0: non_templated_input_dir_exception_0}
    list_0 = [dict_0, non_templated_input_dir_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3308():
    str_0 = "^Ed|1(}TrNB;_"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3309():
    bytes_0 = b"\x07j\xb5\t.d\xb8\x9b}{B\x00-"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3310():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3311():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_1.object(**non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3312():
    str_0 = "EVP\t} $b"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3313():
    bytes_0 = b"k\xdf"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_0 = False
    list_0 = []
    tuple_0 = (
        bool_0,
        non_templated_input_dir_exception_0,
        list_0,
        non_templated_input_dir_exception_0,
    )
    str_0 = "|pc?O(X7\nuNq-)"
    bool_1 = True
    str_1 = "k TF"
    str_2 = "gZ`"
    str_3 = '!N"2s ;et|8(/\x0bpnDr'
    dict_0 = {str_0: bool_1, str_1: tuple_0, str_2: list_0, str_3: bytes_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3314():
    str_0 = 'z6L/gS!Zw"8wFc'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3315():
    int_0 = 1053
    module_1.Exception(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_3316():
    str_0 = "7f!g>v#^ qY"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3317():
    str_0 = "B'ZQ`z^V"
    none_type_0 = None
    str_1 = "l4eO(T2+_/\x0c sAc%y#?"
    str_2 = "`\x0bIn|Ee/lj$4"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_0: none_type_0,
    }
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3318():
    bytes_0 = b"\xf5\x07\x01\xbb!\xc3=u\xa4\xf1\xa8^\xd8\xcb\x9bN\xf9"
    set_0 = {bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3319():
    int_0 = -426
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3320():
    base_exception_0 = module_1.BaseException()
    str_0 = 'lZV`y:"mJ^kR(6|[l'
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3321():
    str_0 = "_"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3322():
    float_0 = -519.97425
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3323():
    str_0 = ";^"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3324():
    bytes_0 = b"\xda\x83\xbe\xc7vE&\x9a"
    module_2.NonTemplatedInputDirException(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3325():
    bytes_0 = b"\xcc/\xba\xbb>~\x1b\xe3\xc9\xd6\x95^{"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3326():
    bytes_0 = b"\xcb\xb1\xa3\x82\x1f\xa4\\\x954\xae\xd5\xd4\xf7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3327():
    complex_0 = -1025.429345 - 803j
    dict_0 = {}
    module_2.NonTemplatedInputDirException(*complex_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3328():
    bool_0 = True
    module_1.BaseException(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3329():
    bytes_0 = b"2\xf6\x91\xcf\xe6\xadu\xfep7L"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3330():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3331():
    bytes_0 = b"\x05\xd8\x10\xdcS\xc3\x01\xae\xa4\xe6\x93o\r \x0c"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3332():
    str_0 = "A2<^'\n*|Q\"[`"
    none_type_0 = None
    str_1 = "s|nmWXfY"
    str_2 = "Re5aDJ\t?k{\r*bH\x0c985ZF"
    str_3 = "G*k7UEO8"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_3: none_type_0,
    }
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3333():
    int_0 = 42
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3334():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_2.CookiecutterException(*cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3335():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    exception_0 = module_1.Exception(*list_1)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3336():
    int_0 = 1161
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3337():
    str_0 = "ur/_@-\x0b^]PG#"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3338():
    str_0 = "^.E1)J9.{L0vtj_K."
    base_exception_0 = module_1.BaseException()
    dict_0 = {
        str_0: str_0,
        str_0: base_exception_0,
        str_0: base_exception_0,
        str_0: base_exception_0,
    }
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3339():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3340():
    bytes_0 = b"\x8f8\xa0\xf0r'\x90\xf1h\x80\xd5\xda\xd4\x15\"\x86)"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3341():
    int_0 = 2494
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3342():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    str_0 = " h8\x0b5<HbUUE6 "
    dict_0 = {str_0: list_0}
    module_2.CookiecutterException(*list_0, **dict_0)


def test_case_3343():
    dict_0 = {}
    base_exception_0 = module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3344():
    str_0 = "]v!\n$j[5hyqR9\nK"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3345():
    float_0 = 3153.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3346():
    complex_0 = 800.221738 + 551.858538j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3347():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    int_0 = -723
    list_0 = [cookiecutter_exception_0, int_0, cookiecutter_exception_0]
    tuple_0 = (cookiecutter_exception_0, int_0, list_0, int_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3348():
    bytes_0 = b"\xf1\xe75\xd0u\xf9\x93T"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3349():
    bytes_0 = b"\xb9\xd7"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3350():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3351():
    str_0 = "z\x0b[1E"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3352():
    complex_0 = 3525.925066 + 1141.0838j
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [complex_0, complex_0, complex_0, cookiecutter_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3353():
    none_type_0 = None
    list_0 = [none_type_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3354():
    int_0 = -750
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3355():
    complex_0 = -1666 - 1691.115224j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3356():
    str_0 = "&"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3357():
    int_0 = -356
    str_0 = "Xbr"
    bytes_0 = b"Z\xb4\t}\xf4\xdda#"
    tuple_0 = (int_0, str_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3358():
    str_0 = "Zy^\r\x0b8zboVqI*wVo"
    str_1 = "zGZh>Bm[87(hM:\\{"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1}
    module_1.BaseException(**dict_0)


def test_case_3359():
    exception_0 = module_1.Exception()


@pytest.mark.xfail(strict=True)
def test_case_3360():
    str_0 = 'pX"&:J4'
    str_1 = "O) O*lESBQ"
    str_2 = "25*G|..we"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3361():
    bool_0 = True
    list_0 = [bool_0]
    module_2.NonTemplatedInputDirException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_3362():
    bytes_0 = b"\xcb\xa0QKD\x95\xdc/n~\x19\x97\x93"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3363():
    str_0 = "9:\x0b3Fc,yL/+"
    str_1 = "\x0b5=s/gou"
    str_2 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_2}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3364():
    int_0 = -405
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3365():
    bytes_0 = b"\xb0d;4\x82\x05\x86\xcd\xd8\xa5\x13 \x82\x17\x08\x80\xff\xcc\x87\xc3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3366():
    float_0 = -2308.49161
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3367():
    str_0 = 'uAYj}"k3~'
    list_0 = []
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )
    bool_0 = False
    tuple_0 = (str_0, non_templated_input_dir_exception_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3368():
    bool_0 = False
    module_1.BaseException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3369():
    str_0 = "{$%#f"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3370():
    str_0 = "/Qcs>/1"
    module_2.NonTemplatedInputDirException(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_3371():
    int_0 = -343
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3372():
    bytes_0 = b"g\xbd\x89"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3373():
    bool_0 = False
    str_0 = "f~;U\n;gaZb-)D~My^s\x0bO"
    dict_0 = {str_0: str_0, str_0: bool_0}
    module_1.Exception(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3374():
    bytes_0 = b"\xbbIv6!\xaf\x14s[\xd1$\xbcq+\xba\x8cr\xfe"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3375():
    str_0 = 'ou#{"z{7JQ1[(E/$'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3376():
    float_0 = 169.3446
    set_0 = {float_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3377():
    str_0 = "!r|U+#CR2"
    str_1 = "#% "
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3378():
    int_0 = 3147
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3379():
    int_0 = -3435
    set_0 = {int_0}
    tuple_0 = (set_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3380():
    bytes_0 = b"\xb8\x9d\xa5\xa7\x87\xeei\xb15\x9f\x9f"
    float_0 = -2218.4
    bool_0 = True
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (bytes_0, float_0, bool_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3381():
    none_type_0 = None
    module_2.CookiecutterException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3382():
    str_0 = "Q5\r|0"
    str_1 = "C0>FLjq;{;5*T"
    str_2 = "F(28pW)7FC ;>2e\x0cHzy!"
    str_3 = "I)( \x0bK/hc*ZDW"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1, str_3: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3383():
    int_0 = 834
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3384():
    str_0 = "fbTWAV"
    module_0.find_template(str_0)


def test_case_3385():
    exception_0 = module_1.Exception()


@pytest.mark.xfail(strict=True)
def test_case_3386():
    bytes_0 = b"\x0fr\xd7\x9d\xac\x8eR\xb1\xe9>3\xad\xfd\x8c\xb2_\x1ep\xee6"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3387():
    bytes_0 = b"=&\xba\xe4J\xfb\xd0\xfd\xe4\xc7\x9a\xe2\xbb=\xd2"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3388():
    str_0 = "bqJYK]%l"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3389():
    int_0 = -189
    list_0 = [int_0]
    str_0 = ")\r(5@JWG!cg"
    str_1 = "oQC's)J\tWJ<k\x0cL~/=9R"
    str_2 = "2E22EO(yL"
    dict_0 = {str_0: str_0, str_1: int_0, str_2: str_2}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3390():
    complex_0 = 3680.6239 - 40.729994j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3391():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_2.NonTemplatedInputDirException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_3392():
    int_0 = 1380
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3393():
    bytes_0 = b"dt3l\xdcO\x81\xc4\xcclR\xe4\xa0"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3394():
    str_0 = ".ZYEpKuma4&"
    module_1.BaseException(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_3395():
    int_0 = 1960
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3396():
    bytes_0 = b"7\xdd\xae\xc4J\xb6\xff\xc7\xf0\x0f \xcb"
    module_0.find_template(bytes_0)


def test_case_3397():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3398():
    set_0 = set()
    list_0 = [set_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


def test_case_3399():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3400():
    base_exception_0 = module_1.BaseException()
    tuple_0 = (base_exception_0, base_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3401():
    int_0 = 1216
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3402():
    str_0 = "Zx"
    list_0 = [str_0, str_0]
    str_1 = "x|O83DVC;-4dnh\\ou["
    str_2 = ">rv~MQ.E8hlhZ^;?"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3403():
    bytes_0 = b"\xa6p\x91\xa2|"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3404():
    str_0 = "]+2BlebB9w]!j"
    list_0 = [str_0, str_0, str_0, str_0]
    str_1 = '?\x0b0hJ=!%"r@a\x0bm'
    str_2 = "/6JR<w[FKo4;"
    dict_0 = {str_1: list_0, str_2: list_0, str_1: str_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3405():
    bytes_0 = b"\x9b\xdd,\xca.<\x02R\x19\xcc\xddqm\x02\xaa~"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3406():
    str_0 = "g&SxgN9"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3407():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    int_0 = 1721
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: int_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3408():
    float_0 = 1140.03
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3409():
    int_0 = 708
    set_0 = {int_0, int_0, int_0}
    list_0 = [set_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3410():
    str_0 = "_L%m"
    float_0 = -2492.02519
    list_0 = [str_0, str_0, float_0, float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3411():
    str_0 = "\t[07x+g)\\q,L"
    str_1 = "&'Bk=[P<0*':yz(r;Ih"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


def test_case_3412():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3413():
    str_0 = "7I"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3414():
    bool_0 = False
    list_0 = [bool_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_1.BaseException(**cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3415():
    bool_0 = True
    float_0 = -2024.341
    set_0 = {bool_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3416():
    float_0 = -6332.0
    list_0 = [float_0, float_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3417():
    float_0 = -2440.3297
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3418():
    bytes_0 = b"\x1b"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3419():
    bytes_0 = b"\xa3\xda\xf5\x15lXG\x7f\xa2\xb6M\xcc\x1eww\x0f\xd7\n5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3420():
    bytes_0 = b"\x07\t\x89\xc4\xd2\xb0\xdas$\x8a!Q\x98L"
    int_0 = -2604
    tuple_0 = (bytes_0, int_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3421():
    str_0 = "6[Xza[.8Myi+1b0_Gk"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(*str_0)
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3422():
    float_0 = 3341.87
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3423():
    bool_0 = True
    int_0 = 931
    base_exception_0 = module_1.BaseException()
    tuple_0 = (bool_0, int_0, base_exception_0)
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [tuple_0, tuple_0, cookiecutter_exception_0, cookiecutter_exception_0]
    list_1 = [list_0, list_0, cookiecutter_exception_0, cookiecutter_exception_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3424():
    str_0 = "Jr_'\r"
    str_1 = ""
    dict_0 = {str_0: str_0, str_0: str_1, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3425():
    str_0 = "~\x0b11C[d9)qaF]\x0b]boC#"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3426():
    str_0 = ""
    int_0 = 5134
    dict_0 = {str_0: int_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3427():
    int_0 = 1145
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3428():
    str_0 = "/! WrCF\t"
    none_type_0 = None
    str_1 = "bZ>pOg>l?"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3429():
    bytes_0 = b"y\xfe"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3430():
    bytes_0 = b"R\xbf\x91\x95\xdc\xe6^hp\xb1"
    list_0 = [bytes_0]
    str_0 = "M?9akJ(%^iAmNyx0="
    none_type_0 = None
    str_1 = ""
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3431():
    str_0 = "{x5/oct:O>WRDmeI"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3432():
    int_0 = -1866
    set_0 = {int_0, int_0, int_0}
    dict_0 = {int_0: int_0, int_0: int_0, int_0: set_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3433():
    str_0 = " ;3N\n"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3434():
    str_0 = "t"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3435():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    str_0 = "x,4 (W$"
    dict_0 = {str_0: none_type_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3436():
    bytes_0 = b"AOp\xe1\xd6Hx\x9cU\x07\x1e]Z\x9a\x8d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3437():
    bytes_0 = b"\xb8K\xed\xcf\xeb\x06\xdfJP\x86\xfa\xbb\x88\xd6\xf1\xff\xec\xfa|\\"
    module_0.find_template(bytes_0)


def test_case_3438():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_3439():
    int_0 = -2167
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3440():
    exception_0 = module_1.Exception()
    bytes_0 = b"\xe7\xed\xe7V\x96y-N;\x92j\xba\xfb\xb7\x19\xdb\xf5"
    list_0 = [exception_0, exception_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3441():
    str_0 = "QTHQ[In\\Y"
    cookiecutter_exception_0 = module_2.CookiecutterException()
    str_1 = "dO%Kz'g)("
    dict_0 = {str_0: cookiecutter_exception_0, str_1: cookiecutter_exception_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3442():
    str_0 = "L(%7aEo{z"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3443():
    str_0 = "{\t`"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3444():
    str_0 = "-h,0LVVpDoz^y/pfq"
    none_type_0 = None
    str_1 = 'yF"K5n+u'
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3445():
    bytes_0 = b"\xe8\xfd"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3446():
    str_0 = "b|&. y^|XP\n+2\x0c*jL\t "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3447():
    bool_0 = False
    set_0 = {bool_0}
    list_0 = [set_0, set_0, set_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3448():
    exception_0 = module_1.Exception()
    module_2.CookiecutterException(*exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3449():
    int_0 = -296
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3450():
    bytes_0 = b"\x96\xf9\xbc?m\xd7\xeb"
    base_exception_0 = module_1.BaseException(*bytes_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3451():
    bool_0 = True
    int_0 = -1063
    tuple_0 = (bool_0, int_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3452():
    int_0 = -59
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3453():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [cookiecutter_exception_0, cookiecutter_exception_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [
        non_templated_input_dir_exception_0,
        cookiecutter_exception_0,
        non_templated_input_dir_exception_0,
        list_0,
    ]
    int_0 = 828
    str_0 = "2Fe`7ii??"
    tuple_0 = (list_1, int_0, str_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3454():
    float_0 = -1838.055063
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3455():
    str_0 = "|2W?3X"
    set_0 = {str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3456():
    str_0 = "|2+E.,U(OA\rRwL4Z&a;"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3457():
    str_0 = "`Ge"
    str_1 = ")6/."
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3458():
    complex_0 = -748.2 + 817.428803j
    module_2.NonTemplatedInputDirException(**complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3459():
    complex_0 = -1497.9177 - 3130.500087j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3460():
    bool_0 = True
    bool_1 = True
    set_0 = {bool_0, bool_0, bool_1, bool_1}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3461():
    str_0 = '"hvWOH=\'}"1bpK\rjBN'
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(*str_0)
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3462():
    float_0 = 522.4303
    module_2.CookiecutterException(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_3463():
    int_0 = 748
    bytes_0 = b"y#\xb3a-@\xd0\xaa\xe5e\x97GB'\xada\xb9\x0eN\x86"
    tuple_0 = (int_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3464():
    float_0 = -893.038
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3465():
    bytes_0 = b"\x84\xcd?K\xdf\xe3\x8f\xfb\xa6\xfa\xa26\x87\xbce\xac\xed\xc5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3466():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3467():
    str_0 = "ie(68k%[)\r\\:~"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3468():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3469():
    tuple_0 = ()
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3470():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    list_1 = [list_0]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_3471():
    float_0 = -1853.2
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3472():
    int_0 = 1753
    tuple_0 = (int_0, int_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3473():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bytes_0 = b"\x11"
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        bytes_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: bytes_0,
        non_templated_input_dir_exception_0: bytes_0,
    }
    exception_0 = module_1.Exception(*dict_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3474():
    float_0 = -1486.721
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3475():
    int_0 = 970
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3476():
    str_0 = "Nf)L?Ne\r9<#Q6\x0b9&cuBy"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [dict_0, str_0]
    list_1 = [list_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3477():
    bool_0 = True
    module_2.NonTemplatedInputDirException(*bool_0, **bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3478():
    int_0 = -879
    list_0 = [int_0, int_0, int_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3479():
    complex_0 = -4371.165739 - 847.37j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3480():
    bytes_0 = b"\x12\x05\xe9\xa9\xf7\x82BHOQG"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3481():
    float_0 = 513.62
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3482():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3483():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    module_1.object(*set_0)


@pytest.mark.xfail(strict=True)
def test_case_3484():
    float_0 = 2051.4
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3485():
    float_0 = -1465.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3486():
    str_0 = "VwY;;y:70~C(Y%kbK"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3487():
    complex_0 = -52 + 3054j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3488():
    int_0 = -982
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3489():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3490():
    int_0 = -3262
    set_0 = {int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3491():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    float_0 = -2097.531977
    tuple_0 = (cookiecutter_exception_0, float_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3492():
    set_0 = set()
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3493():
    bytes_0 = b"~\xac_W~$"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3494():
    bytes_0 = b"Q\x12\xca\xddq\xce\xff\xb1\xe4\xdb\xe9\x0e^\xaf\xf1\x9a\xca\xfa\x9c\x1b"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3495():
    int_0 = 2966
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3496():
    int_0 = -5326
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3497():
    int_0 = -2644
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3498():
    str_0 = "T\x0ci_"
    list_0 = [str_0, str_0, str_0, str_0]
    exception_0 = module_1.Exception()
    dict_0 = {str_0: exception_0, str_0: exception_0}
    module_1.BaseException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3499():
    bytes_0 = b"\xe1>\xd3\x13\xe8\x89;\xdfK\x17xUW\xf0'\xbbI\xa9"
    exception_0 = module_1.Exception(*bytes_0)
    list_0 = [exception_0, bytes_0, exception_0, exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3500():
    str_0 = 'bf0#X)u"+\x0bD"_\x0b'
    str_1 = "'f$fF"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {
        str_0: str_0,
        str_1: non_templated_input_dir_exception_0,
        str_0: non_templated_input_dir_exception_0,
    }
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3501():
    int_0 = 2299
    set_0 = {int_0, int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3502():
    str_0 = ":%lcV[L'kY"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3503():
    bytes_0 = b"\xf3\xeb\xaa\xb1\xdc\xeb\xb9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3504():
    bytes_0 = b"\x1c\t\xcb\xb9\x82I\x15\xf8\xa6\x18\xaa\x90v"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3505():
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)
    tuple_0 = (exception_0, dict_0)
    list_0 = [tuple_0, dict_0, dict_0, tuple_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3506():
    none_type_0 = None
    module_1.BaseException(*none_type_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3507():
    str_0 = "k*e4X[V<!"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3508():
    bytes_0 = b"Xs^|\x19.\xd4U\xb8\xfb\x14\xd0\xb7&YU"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3509():
    int_0 = -1594
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3510():
    tuple_0 = ()
    object_0 = module_1.object(*tuple_0)
    module_0.find_template(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3511():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3512():
    bytes_0 = b"\xa3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3513():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3514():
    str_0 = 'FnK(gEhSBXsZ"H:{'
    tuple_0 = (str_0,)
    dict_0 = {tuple_0: tuple_0, tuple_0: str_0}
    module_0.find_template(dict_0)


def test_case_3515():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )


@pytest.mark.xfail(strict=True)
def test_case_3516():
    str_0 = "{`AI\x0c\x0b4pg"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3517():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = "[f|#+GC2>O_J6^B"
    none_type_0 = None
    str_1 = "L.-~4N"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
    }
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3518():
    float_0 = 57.38
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3519():
    float_0 = -1262.10711
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3520():
    int_0 = -4695
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3521():
    float_0 = 389.11
    float_1 = 3104.749196
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_1}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3522():
    complex_0 = -2479.0354 - 645j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3523():
    int_0 = -3084
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3524():
    bytes_0 = b"\xae\xce\x07\xc9\x01\xa9\x0c\x88\xc2\x1f\xf84@5\xf8\x19\xb0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3525():
    float_0 = 328.9685
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3526():
    float_0 = -3103.3382
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3527():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3528():
    int_0 = -1455
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3529():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_2.NonTemplatedInputDirException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_3530():
    int_0 = 3591
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (non_templated_input_dir_exception_0,)
    list_0 = [int_0, int_0, int_0]
    tuple_1 = (int_0, tuple_0, int_0, list_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_3531():
    bytes_0 = b"\xe3\\"
    tuple_0 = (bytes_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3532():
    bytes_0 = b"\x00\x06\xa2+P\xe7\xa073]\xb4|\x15"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3533():
    bytes_0 = b"\xe7\x13$\xc6\xe86"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3534():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    set_0 = {
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    }
    list_0 = [set_0, non_templated_input_dir_exception_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3535():
    str_0 = "Z|"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3536():
    bytes_0 = b"\xcff\x8e<\x05l\xb0\xf8qH\xad\xcb\x19\x84\xf8\x87\xf7\x92\x08\xe0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3537():
    float_0 = 1273.546
    list_0 = [float_0, float_0]
    bool_0 = True
    tuple_0 = (list_0, bool_0, float_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3538():
    bytes_0 = b"\x97o\xc7\x92\xb6R\xc3\xeb\x9b@\x8c\xa6\x00\x92\xc6\xf2O=3\xe9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3539():
    object_0 = module_1.object()
    int_0 = -1036
    dict_0 = {object_0: int_0, object_0: int_0, object_0: object_0, int_0: object_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3540():
    float_0 = 1401.279141
    module_0.find_template(float_0)


def test_case_3541():
    cookiecutter_exception_0 = module_2.CookiecutterException()


@pytest.mark.xfail(strict=True)
def test_case_3542():
    int_0 = -2834
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3543():
    str_0 = "q"
    list_0 = [str_0, str_0, str_0]
    base_exception_0 = module_1.BaseException(*list_0)
    tuple_0 = (str_0, str_0, list_0, base_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3544():
    str_0 = "vC|w6h)7|}=5yb{8\\"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3545():
    int_0 = -3935
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3546():
    str_0 = 'Jr"#Z5$:#p'
    str_1 = "N,f/A{L8="
    dict_0 = {}
    dict_1 = {str_0: str_0, str_0: str_0, str_1: str_0, str_1: dict_0}
    module_1.BaseException(**dict_1)


@pytest.mark.xfail(strict=True)
def test_case_3547():
    float_0 = -5309.75837
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3548():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3549():
    int_0 = 1116
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3550():
    str_0 = "XNxV;VB})FbcBV"
    exception_0 = module_1.Exception()
    str_1 = "~;]%%IbA\rf5(Ll>x"
    str_2 = "VxK&\t}jF~Rl\\P[$="
    dict_0 = {str_0: exception_0, str_0: str_0, str_1: exception_0, str_2: exception_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3551():
    bool_0 = False
    str_0 = "9iYP`\n||\nZA"
    none_type_0 = None
    str_1 = ".a"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
    }
    module_2.NonTemplatedInputDirException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3552():
    str_0 = "hPr.q8X0ZL`^(GPp&"
    str_1 = "C`x}J.9!p)\t.=z$0S>SK"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3553():
    bytes_0 = b""
    module_1.BaseException(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3554():
    str_0 = "2>OwB>_9+"
    list_0 = [str_0, str_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3555():
    int_0 = -2045
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3556():
    bytes_0 = b"\xf3\xdd\x8a\xcaB\xe9\x0c\xddz\xa7\xfd"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3557():
    int_0 = 1560
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3558():
    str_0 = "XTA\n85F_uN VYH"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3559():
    str_0 = "VbU~0"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3560():
    str_0 = "Eah]4:H"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3561():
    str_0 = "H_94X/\\]"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3562():
    str_0 = "emi'|"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3563():
    float_0 = 876.4
    set_0 = {float_0, float_0, float_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3564():
    float_0 = -950.496
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3565():
    complex_0 = 1659.893 + 543.39j
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (complex_0, non_templated_input_dir_exception_0)
    set_0 = {tuple_0, complex_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3566():
    base_exception_0 = module_1.BaseException()
    list_0 = [base_exception_0, base_exception_0, base_exception_0, base_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3567():
    bool_0 = True
    module_2.NonTemplatedInputDirException(*bool_0)


def test_case_3568():
    object_0 = module_1.object()


@pytest.mark.xfail(strict=True)
def test_case_3569():
    bytes_0 = b"\x15\xed_:\x91sg\xbe\xfa\xe2\xcd<\xe26\xee9'"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3570():
    complex_0 = 142.92527 + 1475j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3571():
    str_0 = ""
    dict_0 = {str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3572():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3573():
    str_0 = "iY]h!5E!1z49@)"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3574():
    int_0 = 168
    module_1.Exception(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_3575():
    float_0 = 1193.1
    set_0 = {float_0, float_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3576():
    complex_0 = -104.64 - 4148.684j
    tuple_0 = (complex_0,)
    list_0 = [tuple_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    dict_0 = {cookiecutter_exception_0: tuple_0}
    list_1 = [dict_0]
    base_exception_0 = module_1.BaseException(*list_1)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3577():
    bool_0 = False
    list_0 = [bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    tuple_0 = (non_templated_input_dir_exception_0,)
    tuple_1 = (bool_0, tuple_0, bool_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_3578():
    bytes_0 = b"\xc7!6&Y\x8021'"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3579():
    float_0 = -1939.84054
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3580():
    bytes_0 = b"\xa8\xd9\x01q\xb7\x8f\xcb\xfd\n\xefFu`\xfbZ"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3581():
    bytes_0 = b"\xeeZ\xe5.\xda9\x12\xc2\xa5\xba\x1bV0R"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3582():
    str_0 = "#Nm!2B:z"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3583():
    int_0 = 1114
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3584():
    str_0 = "HDR"
    str_1 = "q.r\x0b?'><)gX(\"h:"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3585():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3586():
    bytes_0 = b"{p`\xe0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3587():
    float_0 = -1565.9324
    list_0 = [float_0, float_0]
    str_0 = "yOs\nb)`(j:"
    str_1 = "|0fbsdT"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3588():
    str_0 = ">d'\x0b\t-'D9B_a7.V7$"
    str_1 = "wrUA"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3589():
    int_0 = -2960
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3590():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_3591():
    float_0 = 165.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3592():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bytes_0 = b"\x98\xa0\xccr- /"
    dict_0 = {non_templated_input_dir_exception_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3593():
    int_0 = -2400
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3594():
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(*dict_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3595():
    str_0 = "\ns|0MV=)GQ\r}r4|np"
    str_1 = ":zE4p'"
    list_0 = []
    str_2 = "vJ"
    dict_0 = {str_0: str_0, str_1: list_0, str_2: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3596():
    str_0 = "sNZfDl&"
    none_type_0 = None
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3597():
    int_0 = 2092
    module_2.NonTemplatedInputDirException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_3598():
    str_0 = "1{zh,~L"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3599():
    bytes_0 = b"\x8d\xae\x9b\xea"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    exception_0 = module_1.Exception(*list_0)
    list_1 = [exception_0, exception_0, exception_0]
    str_0 = ""
    str_1 = "S\nPN\\9/m\\1E =ZCQ*0."
    dict_0 = {str_0: bytes_0, str_0: str_0, str_0: bytes_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3600():
    float_0 = 1158.9
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3601():
    bytes_0 = b"\x00\xdc\xfe\x02&\xbd\xb7Q\xd7\xbeG\xedX\x04\xdc\xfb\xab\xcc\x95"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3602():
    int_0 = -1063
    set_0 = {int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3603():
    int_0 = -2072
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3604():
    int_0 = -616
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3605():
    complex_0 = 312.11753 - 1899.5628j
    set_0 = set()
    list_0 = [complex_0, complex_0, set_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3606():
    int_0 = 1393
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3607():
    bytes_0 = b"(i\xd7I\xa8\x16:L\x95\xbeO\xd3\xcf\xfaC\xfa"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (bytes_0, dict_0, bytes_0)
    module_1.BaseException(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3608():
    bytes_0 = b"\xab\x17\x96\xf4\xf1\xa6\x9b(\x9c\xad/Kb2\xeb\xb1'"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3609():
    str_0 = "-6?5o5#6j|y`$"
    tuple_0 = (str_0,)
    tuple_1 = (tuple_0,)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_3610():
    float_0 = 2055.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3611():
    base_exception_0 = module_1.BaseException()
    bool_0 = True
    list_0 = [base_exception_0, bool_0, base_exception_0, bool_0]
    list_1 = [list_0, base_exception_0, list_0, list_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_1)
    list_2 = [cookiecutter_exception_0]
    module_0.find_template(list_2)


@pytest.mark.xfail(strict=True)
def test_case_3612():
    bool_0 = True
    module_1.Exception(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3613():
    str_0 = '"?F4:RucX7'
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3614():
    none_type_0 = None
    module_2.CookiecutterException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3615():
    float_0 = -1274.41049
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3616():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3617():
    float_0 = -563.726
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3618():
    int_0 = -1681
    list_0 = [int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3619():
    bytes_0 = b'\xaac\\\xa3hM\xd0L\x82\xe0"\xac\xde"\x1a\xfa\x1a\xe2'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3620():
    int_0 = 337
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3621():
    float_0 = 2330.037
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3622():
    bytes_0 = b"\xbe\x17\xda\x99\x11\x7fl\xf3\x86?dUg\xda\xf0\xcb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3623():
    exception_0 = module_1.Exception()
    str_0 = "kG!;,F"
    str_1 = "}KFb]O&1~\\\nufYh'?T "
    str_2 = "5LU2?;$M\\'"
    dict_0 = {str_0: exception_0, str_1: str_0, str_2: str_2, str_2: str_1}
    module_2.CookiecutterException(*exception_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3624():
    bytes_0 = b"\xd2\x83\xd1\x07\xeb\xdcw\xe1o\xe2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3625():
    str_0 = "{&x9\r%(#\\:3&O#jm7X["
    module_0.find_template(str_0)


def test_case_3626():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )


@pytest.mark.xfail(strict=True)
def test_case_3627():
    complex_0 = -1453 - 890.991924j
    dict_0 = {complex_0: complex_0, complex_0: complex_0, complex_0: complex_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3628():
    complex_0 = 4576.94 - 3314.21j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3629():
    float_0 = -1542.5267
    module_0.find_template(float_0)


def test_case_3630():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3631():
    str_0 = "Zzl9N,]ul]gQ;?{S"
    list_0 = [str_0]
    dict_0 = {str_0: list_0, str_0: list_0, str_0: list_0, str_0: list_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3632():
    str_0 = "s\\I{kSM&)orudS/P"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3633():
    int_0 = 7114
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3634():
    int_0 = -4470
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3635():
    complex_0 = 897.59647 - 1989j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3636():
    int_0 = 1504
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3637():
    bytes_0 = b"\x92\xc4 v"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3638():
    str_0 = "e(/'41bOC0"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3639():
    str_0 = "*,#8mt!;L)f"
    dict_0 = {str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3640():
    str_0 = "4<\rM,S+}aB"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3641():
    complex_0 = 1804.889693 + 1950.007556j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3642():
    int_0 = 2610
    list_0 = [int_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3643():
    complex_0 = 21.83572 - 868.1902j
    list_0 = [complex_0, complex_0]
    list_1 = [list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3644():
    float_0 = 2377.736
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3645():
    bytes_0 = b"~\xf8\xb8Y\xc0\xbeX\x07&\xf2/a\xcdD6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3646():
    str_0 = "\nW7%B%Z**qb"
    none_type_0 = None
    str_1 = "iH"
    str_2 = "&bFL#GE?Q *."
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
    }
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3647():
    str_0 = "M;$I\x0b>i1(u:QE19:a/4)"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3648():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3649():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    list_0 = [non_templated_input_dir_exception_0, dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3650():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3651():
    bytes_0 = b"l\x8ep\xf1\x1aSq\x86\xa3\xc28"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3652():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_0 = False
    set_0 = set()
    tuple_0 = (
        non_templated_input_dir_exception_0,
        bool_0,
        set_0,
        non_templated_input_dir_exception_0,
    )
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3653():
    str_0 = "/("
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3654():
    str_0 = "D`JG'"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3655():
    str_0 = "7!Nv8R40>(2>"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3656():
    list_0 = []
    str_0 = ";Q(tl"
    none_type_0 = None
    str_1 = "AFPBL}O1)=H,"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3657():
    bool_0 = False
    bytes_0 = b"s\xcdv\xfb"
    list_0 = []
    tuple_0 = (bool_0, bytes_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3658():
    bytes_0 = b":\xbd"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3659():
    bytes_0 = b"\xf8H\n\xa2\xb4B\x8by\x0b\xa6|/\xaf\xc8\x97\xff\xe6\xc9\x0e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3660():
    complex_0 = -1847.192613 + 3689.7789j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3661():
    bytes_0 = b".\xc5\xdf"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3662():
    str_0 = "PmcKY'_%\\wn/]QGM~cr"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3663():
    exception_0 = module_1.Exception()
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3664():
    int_0 = 1567
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3665():
    str_0 = ";my955%|"
    str_1 = "!nBQX`OI|J]2c\\gQ|k"
    set_0 = {str_1, str_1, str_0}
    tuple_0 = (str_0, str_1, set_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3666():
    float_0 = 3005.477466
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3667():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3668():
    str_0 = "G'DL/O\\{r"
    module_2.NonTemplatedInputDirException(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_3669():
    tuple_0 = ()
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3670():
    float_0 = -442.1
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3671():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3672():
    complex_0 = -2852.8094 - 74.374471j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3673():
    str_0 = "<l&~ W(W=KX-"
    str_1 = 'cH"\\\\3\\DRg\x0cyu;MFg)\rJ'
    str_2 = ""
    str_3 = "\x0b@3 ,z[<=za'}!&VN"
    str_4 = "P@,\\AGm{IQz"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_3, str_4: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3674():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3675():
    str_0 = "Y9<m/C*\x0cK-\r;S5s+zU"
    str_1 = "K\r:"
    str_2 = "Q.]-"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3676():
    float_0 = 778.98
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3677():
    int_0 = 704
    module_1.Exception(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_3678():
    str_0 = "7z` ([s[1\x0cxlg\x0c(h5C"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3679():
    int_0 = -737
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3680():
    bytes_0 = b"\xdb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3681():
    bytes_0 = b"\x17\xd7\xb9\x9bFVNm\x1d\x0e\xab;\x00"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3682():
    str_0 = "k{5U{+bJ&yP:"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3683():
    complex_0 = 10.054084 + 2444.91957j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3684():
    tuple_0 = ()
    module_1.object(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3685():
    int_0 = 2505
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3686():
    str_0 = "GO&>Y0t*RCu:VQ(;)V"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3687():
    float_0 = 1948.68886
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3688():
    bool_0 = False
    none_type_0 = None
    list_0 = [none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    tuple_0 = (bool_0, bool_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3689():
    str_0 = "G>L9\roMP"
    set_0 = {str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3690():
    str_0 = "dm9,odQ"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3691():
    bytes_0 = b"\x8d\x85r\xfbgd\xca\x1d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3692():
    int_0 = 2159
    module_2.NonTemplatedInputDirException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_3693():
    int_0 = -73
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3694():
    complex_0 = 747.404 + 309.98846j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3695():
    complex_0 = 187.28959 + 2057.5j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3696():
    str_0 = "9*sg&\x0c?Q9G\\P\nS2}v\t+i"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3697():
    bytes_0 = b"\x13dQ\x1b\xb9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3698():
    int_0 = -585
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3699():
    bytes_0 = b"Z\xddP("
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3700():
    str_0 = "(eg6jd\x0c>p4h"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3701():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3702():
    int_0 = -894
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3703():
    int_0 = 672
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3704():
    float_0 = 2624.0
    list_0 = [float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3705():
    str_0 = "\reFxZ{Td[T\\Q@y,"
    tuple_0 = (str_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3706():
    int_0 = 3808
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3707():
    str_0 = "x;"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3708():
    tuple_0 = ()
    module_2.CookiecutterException(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3709():
    float_0 = -4658.4668
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3710():
    float_0 = -910.04585
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3711():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_2.NonTemplatedInputDirException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_3712():
    int_0 = 79
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3713():
    str_0 = "E?V.]2\rDyT|bN"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3714():
    int_0 = 5
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3715():
    object_0 = module_1.object()
    set_0 = {object_0, object_0}
    list_0 = [set_0, object_0, set_0]
    tuple_0 = (list_0,)
    tuple_1 = (set_0, set_0, tuple_0)
    list_1 = [tuple_1, list_0, tuple_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    list_2 = [non_templated_input_dir_exception_0, list_1]
    module_0.find_template(list_2)


@pytest.mark.xfail(strict=True)
def test_case_3716():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3717():
    int_0 = 1803
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3718():
    str_0 = "ogCM"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3719():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_2.NonTemplatedInputDirException(*non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3720():
    int_0 = -544
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3721():
    int_0 = 4338
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3722():
    bytes_0 = b"\xe46#\xb1\xa4\x1d\x10\x9c\xeb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3723():
    complex_0 = -3588.4 - 2957.54593j
    module_1.BaseException(*complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3724():
    str_0 = "'8\nT"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3725():
    str_0 = "\x0c>."
    str_1 = "p\tc|e8EqeGA+\n{W"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3726():
    bool_0 = True
    dict_0 = {}
    module_2.NonTemplatedInputDirException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3727():
    str_0 = "VsX)wc"
    module_0.find_template(str_0)


def test_case_3728():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3729():
    complex_0 = -87.797 + 928.98394j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3730():
    bool_0 = True
    tuple_0 = (bool_0, bool_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3731():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    set_0 = {non_templated_input_dir_exception_0, non_templated_input_dir_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3732():
    str_0 = "hL(~\x0ba<0b6&}|}A^aK"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3733():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3734():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3735():
    bytes_0 = b"1\x1eC\xf1\x03\\\x02\xd9\x8f,\xc2`\xf2\x0c\x15"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3736():
    bytes_0 = b"~o\x1d\xe6\xa4\x05\xfd\x02w\xda"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3737():
    str_0 = "bdq\x0c*2\x0bu&f`6bY5fie"
    list_0 = [str_0, str_0, str_0, str_0]
    str_1 = "Ij=a\x0cZ"
    str_2 = "3t8li!f"
    dict_0 = {str_0: list_0, str_0: list_0, str_1: list_0, str_2: str_1}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3738():
    float_0 = -4380.0
    set_0 = {float_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3739():
    str_0 = "+DK}^&W-<IDa\n&ArW"
    tuple_0 = (str_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3740():
    bool_0 = False
    set_0 = set()
    list_0 = [bool_0, bool_0, set_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3741():
    bytes_0 = b"2\xcaf{J'\x03\x90\x07\x9am\x14"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3742():
    complex_0 = -2606.3 + 1913j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3743():
    bytes_0 = b"\x0e\tX"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3744():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3745():
    str_0 = "Y"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3746():
    str_0 = "U7O5"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3747():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3748():
    int_0 = -932
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3749():
    none_type_0 = None
    str_0 = '\rL=8IYX,RXM\rUeo"9Yl'
    str_1 = "kIi:Knb{Zvs"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_2.CookiecutterException(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3750():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3751():
    int_0 = -812
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3752():
    bytes_0 = b"\x0e\xcbW\xf8F %\x9bt"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3753():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3754():
    float_0 = 1623.9
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3755():
    bytes_0 = b"\xfa\x899\xe8/\xc4E\xea\x99M<\x03\xf4,\xc8\xce`>"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3756():
    int_0 = -451
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3757():
    str_0 = ']ZOTbBX\\&<G+"'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3758():
    bytes_0 = b"\x8e\x1e\xae\xcaU\x0b\x0f\x1e\x82LW\xc1\xf1q\x89\xbe\xce\xab\xd4\x06"
    set_0 = {bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3759():
    str_0 = "p!P%fwY_\np?upAm5\t"
    module_1.Exception(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_3760():
    str_0 = "]%"
    list_0 = [str_0]
    str_1 = "*/Km6m?V-{e>T["
    dict_0 = {str_0: str_0, str_0: list_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3761():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
    }
    list_0 = [dict_0, cookiecutter_exception_0, dict_0, dict_0]
    module_1.BaseException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3762():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    str_0 = "67&"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3763():
    int_0 = 1307
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3764():
    list_0 = []
    str_0 = "4K"
    none_type_0 = None
    str_1 = "\x0bwodG\\c!5WUCX"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.BaseException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3765():
    bytes_0 = b"r\xab\x8e\xfe\xf5KY0d\xad\xbe#\xf57\x9a\xe3\xbbL"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3766():
    bool_0 = False
    int_0 = -1548
    set_0 = {bool_0, bool_0, int_0}
    list_0 = [bool_0, bool_0, bool_0, set_0]
    list_1 = [list_0, set_0, list_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3767():
    int_0 = -1039
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3768():
    str_0 = "W/&Z"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3769():
    int_0 = 708
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3770():
    str_0 = "0#}\x0c]"
    list_0 = [str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3771():
    str_0 = "N,Z%("
    int_0 = -533
    dict_0 = {str_0: int_0, str_0: int_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3772():
    bytes_0 = b"\x8f\xc5\xab\xd9I)\xf0\xd7OKJB"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3773():
    str_0 = "U\x0beFdL"
    list_0 = [str_0, str_0, str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3774():
    float_0 = 1378.371
    set_0 = {float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3775():
    base_exception_0 = module_1.BaseException()
    list_0 = [base_exception_0, base_exception_0]
    str_0 = "Md}1y&t5;+\\C2\tF"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3776():
    set_0 = set()
    tuple_0 = (set_0,)
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3777():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {non_templated_input_dir_exception_0: non_templated_input_dir_exception_0}
    list_0 = [dict_0]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_1, list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3778():
    float_0 = -1629.06
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3779():
    bool_0 = False
    str_0 = ""
    set_0 = {str_0, bool_0}
    tuple_0 = (bool_0, str_0, set_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3780():
    int_0 = 1876
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3781():
    bool_0 = False
    list_0 = [bool_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3782():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3783():
    int_0 = 338
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3784():
    str_0 = "KfN"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3785():
    str_0 = "X/w\x0bHAL}`y' n-2r)-X"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3786():
    float_0 = 88.49793
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3787():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_0, list_0, list_0, list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3788():
    str_0 = "k-0~"
    base_exception_0 = module_1.BaseException()
    dict_0 = {str_0: base_exception_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3789():
    int_0 = -1525
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3790():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    set_0 = {non_templated_input_dir_exception_0, non_templated_input_dir_exception_0}
    list_0 = [
        set_0,
        non_templated_input_dir_exception_0,
        set_0,
        non_templated_input_dir_exception_0,
    ]
    str_0 = "mEcQ9_<G/ ,?fbY7Lv"
    bool_0 = True
    dict_0 = {str_0: bool_0, str_0: bool_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3791():
    str_0 = "UC2A^6Htit\\ab2JF2_"
    str_1 = "<%@5PU/iAUwm\x0b:("
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3792():
    bytes_0 = b"\x01h\xbdh\xbe\xb1\x0b"
    list_0 = [bytes_0]
    tuple_0 = (list_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3793():
    str_0 = "cyZ\\1%nUWA[lj=1"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3794():
    dict_0 = {}
    object_0 = module_1.object(**dict_0)
    list_0 = [object_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3795():
    float_0 = 754.1879
    set_0 = {float_0, float_0, float_0}
    list_0 = [set_0, set_0, set_0]
    str_0 = ""
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3796():
    str_0 = "qr4V"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3797():
    int_0 = -297
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {int_0: non_templated_input_dir_exception_0}
    bool_0 = True
    tuple_0 = (non_templated_input_dir_exception_0, dict_0, bool_0)
    dict_1 = {int_0: int_0, int_0: tuple_0, int_0: bool_0}
    module_0.find_template(dict_1)


@pytest.mark.xfail(strict=True)
def test_case_3798():
    float_0 = 1395.735
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3799():
    int_0 = -568
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3800():
    bytes_0 = b"\xbau\x98L\xbey\x8bl#fc\xcb~;\xa2\x9cy"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3801():
    int_0 = 1673
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3802():
    exception_0 = module_1.Exception()
    str_0 = "c.p7xVl<CWEv9bOlIV"
    dict_0 = {exception_0: exception_0, str_0: str_0, str_0: exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3803():
    float_0 = 388.049331
    list_0 = [float_0]
    str_0 = "ccz\n|?$gX@1yd*"
    none_type_0 = None
    str_1 = "Jn"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3804():
    str_0 = "}YmDt]#R"
    str_1 = ""
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3805():
    str_0 = "AB_f;$x{YKMV=:M["
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3806():
    str_0 = ");\t "
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3807():
    float_0 = 1078.83
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3808():
    bytes_0 = b"\xd1\x87\x9f\xe2\xfe\xf8k\xcc\x1b\xec\xeb}f\x96\xba8\xb72q\x9e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3809():
    int_0 = -1985
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3810():
    tuple_0 = ()
    set_0 = {tuple_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3811():
    bytes_0 = b"Y\x856\x19\xfb\xd2=0\xe3\xed\x14\x97z"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3812():
    str_0 = "%pg(<3'Y\x0b#r"
    str_1 = "P1(LEsqdn\\"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3813():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    module_1.Exception(*list_0, **non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3814():
    str_0 = "h\tUJ<6uj#0ubz9"
    list_0 = [str_0]
    module_1.BaseException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_3815():
    float_0 = 133.25574
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3816():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3817():
    str_0 = ""
    list_0 = [str_0, str_0, str_0, str_0]
    str_1 = "2]a-;P:% &0"
    dict_0 = {str_1: str_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3818():
    str_0 = "W=-\x0bs['W'S\"@eR\x0cK97"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3819():
    int_0 = -856
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3820():
    bytes_0 = b"\x9a\xc4\x89"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3821():
    bytes_0 = b"\xeb\x94h{\xc2\xdc7\xfen\x84\xab\xef"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3822():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3823():
    bytes_0 = b"\x9e\xc9y\x99K|6\xba-\xc1\t\xc08\xc9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3824():
    str_0 = "CC(d"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3825():
    complex_0 = -914.37 - 731.9354j
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3826():
    str_0 = "xH6"
    str_1 = "r."
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3827():
    float_0 = 720.7358
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3828():
    bytes_0 = b"\x0c\xac\xa1\xd7\x9dE\xc9"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


def test_case_3829():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3830():
    int_0 = -315
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3831():
    bytes_0 = b"Ri\xf6\xca\x13w\x8f\xa5\xd1\xd8\xaf\xf8"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    list_0 = [set_0, set_0, bytes_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3832():
    bytes_0 = b"*\xffze\xbc_\xbcS\x89"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3833():
    bytes_0 = b"\xf5\x7f}s\xd8\xfc\x7f["
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3834():
    str_0 = "GG2f'H"
    none_type_0 = None
    str_1 = "5`."
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3835():
    str_0 = "))76g`(fQiEUK"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3836():
    bytes_0 = b"\x00D''\xe9\xf4\xde\x01\x94\xd4\x12I_2\x0b*\x05"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3837():
    str_0 = "{:F"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3838():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3839():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3840():
    str_0 = "5v,)9r*|88\x0bMYQ4"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3841():
    bytes_0 = b"\x98x\xc4\xc4\x1f\xed\xa6\xc8(\xd2B\x03\xa1\x1e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3842():
    str_0 = "\x0bJF,7rN}^MY~tuI?eoBM"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3843():
    int_0 = -2216
    tuple_0 = (int_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3844():
    str_0 = "uR tXqUgRa5]9&es#%E"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3845():
    str_0 = "\tmDD3;$$|=kxR"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3846():
    float_0 = 6517.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3847():
    bool_0 = False
    int_0 = -245
    exception_0 = module_1.Exception()
    tuple_0 = (bool_0, int_0, exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3848():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3849():
    float_0 = 232.844
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3850():
    float_0 = 5585.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3851():
    bytes_0 = b"\xbf\xceT\x0c\xec\x1b$'\xd8\x92\xea{\xd3i1\x05"
    list_0 = [bytes_0]
    str_0 = "Fk)PN;Q+6~"
    str_1 = "d.2N8C#\t6"
    str_2 = "hK(S\nZETAxp}[?r"
    dict_0 = {str_0: bytes_0, str_0: str_0, str_1: list_0, str_2: bytes_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


def test_case_3852():
    float_0 = 1959.0
    list_0 = [float_0, float_0, float_0]
    base_exception_0 = module_1.BaseException(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3853():
    bytes_0 = b"A\x1c\xb9\x9e"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3854():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3855():
    bytes_0 = b"bwl"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3856():
    bytes_0 = b"\xa7\t>\xe7\xf7\xf5\xbd\x96"
    module_2.CookiecutterException(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3857():
    object_0 = module_1.object()
    dict_0 = {object_0: object_0, object_0: object_0, object_0: object_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3858():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    set_0 = {
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    }
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3859():
    float_0 = 2568.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3860():
    none_type_0 = None
    module_2.NonTemplatedInputDirException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3861():
    int_0 = -2890
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3862():
    int_0 = -1429
    list_0 = [int_0, int_0, int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3863():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bool_1 = True
    tuple_0 = (bool_0, bool_0, dict_0, bool_1)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3864():
    bytes_0 = b"R\x1c.\x8d\x19\x00\xd4U"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3865():
    float_0 = 61.05
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3866():
    complex_0 = 3676.5787 + 1833.8j
    module_2.NonTemplatedInputDirException(*complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3867():
    none_type_0 = None
    str_0 = "]zac4o9#n"
    dict_0 = {str_0: none_type_0}
    module_1.object(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3868():
    str_0 = "+>}m=XA"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3869():
    bytes_0 = b"\xa8\xc3\x16\x0e\x96Ba2\x8a\x14\x11-\x94^\xe6\xced"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3870():
    float_0 = 1542.9222
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3871():
    str_0 = "CSk"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3872():
    str_0 = ""
    str_1 = "]kje?\n?Qf6OwNBCa"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_1: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3873():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3874():
    str_0 = "e?jGJu.s+sn?tW2]Q"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3875():
    float_0 = -1724.453
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3876():
    int_0 = -3218
    module_1.BaseException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_3877():
    base_exception_0 = module_1.BaseException()
    tuple_0 = (base_exception_0,)
    dict_0 = {tuple_0: base_exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3878():
    float_0 = 330.677
    str_0 = "Q_'l\x0c9g{VokQ:s"
    dict_0 = {str_0: float_0, str_0: str_0, str_0: float_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(*float_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3879():
    bytes_0 = b"e\xdc\xad\r\r\x0c\xcdD\xf6\x0f\xe7]\x96\x96\x8f'\x83\x84"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3880():
    complex_0 = 1004.135385 - 4472j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3881():
    str_0 = "k?"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3882():
    float_0 = -2216.9565
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3883():
    bytes_0 = b"k\xbe\xd2\xd4C\xfa"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3884():
    float_0 = 2017.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3885():
    float_0 = 3849.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3886():
    bytes_0 = b"\xdc\x92x\x02\x8c\xa3br\x1e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3887():
    str_0 = "H`{Y4p{M^lK`Zsfa/xwh"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3888():
    str_0 = "ZySwn%)n;Uw.Jg&<7"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3889():
    bool_0 = True
    object_0 = module_1.object()
    dict_0 = {bool_0: object_0, object_0: bool_0, bool_0: object_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3890():
    float_0 = -2386.8
    module_0.find_template(float_0)


def test_case_3891():
    exception_0 = module_1.Exception()


@pytest.mark.xfail(strict=True)
def test_case_3892():
    str_0 = "f)3+'p[F~"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3893():
    complex_0 = 767.80768 - 5289.5525j
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (complex_0, non_templated_input_dir_exception_0)
    set_0 = {tuple_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3894():
    base_exception_0 = module_1.BaseException()
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3895():
    int_0 = -413
    dict_0 = {int_0: int_0}
    tuple_0 = (int_0, dict_0)
    list_0 = [tuple_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3896():
    str_0 = "n"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3897():
    object_0 = module_1.object()
    dict_0 = {
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3898():
    int_0 = -711
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3899():
    str_0 = "GF@;;N\x0cy"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3900():
    str_0 = "'8\x0c!Gw':"
    str_1 = "JJ.y9hP"
    str_2 = "'ga-\"lRY35{HAI+@\n("
    str_3 = "s/{C>J#)y"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2, str_3: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3901():
    bytes_0 = b"|-\x1d=t\xb4`\x90"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3902():
    str_0 = "CX\\P8"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3903():
    bytes_0 = b"\x15\xfe@Yb\xcf o"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3904():
    bytes_0 = b"rr\xc4\xd52\x08\xed\x0c\xa2|\xed"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3905():
    float_0 = 2766.9
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3906():
    bytes_0 = b"\xab\xedT\xd73N\x13>^'\xf6\xdd\x14\xd9\x0f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3907():
    str_0 = "6C[g\nz"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3908():
    str_0 = "C|B*E /&~&QFDAuc"
    dict_0 = {str_0: str_0, str_0: str_0}
    dict_1 = {str_0: dict_0, str_0: str_0}
    module_1.object(**dict_1)


@pytest.mark.xfail(strict=True)
def test_case_3909():
    bytes_0 = b"\xd7\xdf\xf7\xcd\x98"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3910():
    str_0 = ",d"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3911():
    int_0 = -906
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3912():
    float_0 = 356.8
    list_0 = [float_0, float_0, float_0, float_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3913():
    str_0 = "X1r\x0c='Lg2nA&"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (
        str_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    )
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3914():
    base_exception_0 = module_1.BaseException()
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3915():
    bytes_0 = b"\x88%U\xf3(\x0b6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3916():
    int_0 = 1298
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3917():
    bytes_0 = b"&X\xff\x1eTB\xb8\xc3\xaePU\x14\xfa\xce\xe7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3918():
    str_0 = "86t"
    list_0 = [str_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3919():
    bool_0 = True
    str_0 = "}("
    dict_0 = {str_0: bool_0, str_0: bool_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3920():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    dict_0 = {}
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )
    list_1 = [non_templated_input_dir_exception_1]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3921():
    int_0 = -2029
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3922():
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)
    set_0 = {exception_0}
    list_0 = [set_0, dict_0, dict_0, dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3923():
    int_0 = -1531
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3924():
    float_0 = -1373.73
    list_0 = [float_0]
    str_0 = "@1:i\x0b"
    str_1 = "6jItP~Rgl0<3&`JsHw"
    dict_0 = {str_0: list_0, str_1: list_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3925():
    exception_0 = module_1.Exception()
    tuple_0 = (exception_0,)
    list_0 = [tuple_0, tuple_0]
    base_exception_0 = module_1.BaseException(*list_0)
    cookiecutter_exception_0 = module_2.CookiecutterException()
    bool_0 = True
    bytes_0 = b"\x0c\x82\x97\xe9Z\x0b\x17\xeaI$\xf7\x14\x89Sm\xe0\xc1"
    tuple_1 = (base_exception_0, cookiecutter_exception_0, bool_0, bytes_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_3926():
    none_type_0 = None
    module_1.Exception(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3927():
    str_0 = '0E"SR\t>'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3928():
    float_0 = 1189.71948
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3929():
    int_0 = -1606
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3930():
    bytes_0 = b'\xbe\xf1-\xf8\xe0h\xe3]\xd9\xc8\xcbT"\x0b@6'
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_2.NonTemplatedInputDirException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_3931():
    int_0 = -719
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3932():
    str_0 = "\\&k)GKV,m%AH9&.;W>N"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3933():
    int_0 = 1776
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3934():
    bytes_0 = b"`\x87\t\xfd\xc6\x17c@\xab\x07\x87\x04\xd2\x0e\x97\x03\x9fN"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3935():
    str_0 = '|u`Z/x:CCq-."'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3936():
    int_0 = -676
    dict_0 = {int_0: int_0, int_0: int_0}
    int_1 = 3024
    list_0 = [dict_0, int_0, int_0, int_1]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3937():
    complex_0 = -942.0095 - 1386.12558j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3938():
    bytes_0 = b"(L\xdf_0\xa5\x0e\xd0\xd7F5\xd6j\xaa"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3939():
    str_0 = "~aUe\x0b&Ubj4uew>H0hM"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3940():
    str_0 = "zz"
    str_1 = "]hTyA,J-G@w)YL\x0bpo.\x0b"
    str_2 = "?l"
    str_3 = "1-"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_3}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3941():
    int_0 = 246
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3942():
    int_0 = -1339
    str_0 = "ouGXuG0EarjdMH\x0b+"
    str_1 = ""
    str_2 = "@&cU?0b'A"
    dict_0 = {str_0: str_0, str_0: int_0, str_1: str_2, str_1: str_0}
    module_1.Exception(*int_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3943():
    int_0 = 4123
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3944():
    none_type_0 = None
    str_0 = "D9"
    dict_0 = {str_0: none_type_0}
    module_2.NonTemplatedInputDirException(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3945():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    exception_0 = module_1.Exception(*list_0)
    dict_0 = {
        exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: exception_0,
        exception_0: non_templated_input_dir_exception_0,
        exception_0: non_templated_input_dir_exception_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3946():
    object_0 = module_1.object()
    list_0 = [object_0]
    list_1 = []
    module_2.CookiecutterException(*list_0, **list_1)


@pytest.mark.xfail(strict=True)
def test_case_3947():
    str_0 = "_lMZYZ~"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    complex_0 = 2269.596752 - 345.46841j
    tuple_0 = (str_0, non_templated_input_dir_exception_0, complex_0)
    bool_0 = True
    tuple_1 = (str_0, tuple_0, bool_0)
    dict_0 = {tuple_1: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3948():
    float_0 = 2005.9
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3949():
    float_0 = -327.83
    list_0 = [float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3950():
    bool_0 = True
    module_2.CookiecutterException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3951():
    int_0 = 847
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3952():
    bytes_0 = b"=\x1c\xc9J\x1am\x8c\x13\xa6/\x88Xf\x078\x9a\xdf\x0e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3953():
    str_0 = 'v;"(.\nh8'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3954():
    int_0 = -3452
    list_0 = [int_0, int_0, int_0, int_0]
    list_1 = [list_0, int_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3955():
    bytes_0 = b"\x8a/\xa5\xe2h_g\xe0\x10d\x83\xae"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3956():
    bytes_0 = b"O@oC\x95)\x96\xc84\x05\xae\xe4\x15\xbb\xfe\xc7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3957():
    bytes_0 = b".\x84\xe71\xc6\x1b4z;B)\xe4\x13\xa7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3958():
    bytes_0 = b"\t\\\x1a\xe2\x11\xe7VW\x16\x8f\xbc\x90c\xe3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3959():
    float_0 = -714.740838
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3960():
    float_0 = -3470.0
    set_0 = {float_0, float_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3961():
    bytes_0 = b"\x96;c\xd8P\xf5\xe8!\x1e|\x85"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3962():
    none_type_0 = None
    list_0 = [none_type_0]
    base_exception_0 = module_1.BaseException(*list_0)
    str_0 = "j7^\x0byKP=E\x0c}V\\H1\rrJ"
    dict_0 = {str_0: base_exception_0, str_0: none_type_0, str_0: base_exception_0}
    module_2.CookiecutterException(*base_exception_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3963():
    str_0 = "(vK`\x0bK?u_*"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3964():
    str_0 = "]fU"
    set_0 = {str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3965():
    bytes_0 = b"~\xa42m\x8e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3966():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    bytes_0 = b"~{\x81\x11/o?\xf6\xc1\xd9\xa1"
    list_0 = [set_0, bytes_0, bytes_0, set_0]
    base_exception_0 = module_1.BaseException(*list_0)
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    tuple_0 = (
        base_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    )
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3967():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0]
    module_2.NonTemplatedInputDirException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_3968():
    str_0 = "K(o]d ]CEMPLn"
    list_0 = [str_0, str_0]
    str_1 = ":@"
    dict_0 = {str_1: str_0}
    module_1.BaseException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3969():
    int_0 = 1605
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3970():
    int_0 = 1033
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3971():
    bytes_0 = b"Q\x16W"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3972():
    str_0 = "?"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3973():
    bytes_0 = b"\x9a\x9b:\x81\xc2\xe0tB\xe1<\x93&\xcd7\x84\xf4\\%\x1d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3974():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    bytes_0 = b"G\x03\x90/\x9b\xbd\xc3\xba\xb1\xc1\x88~\xc7\xed\xe1"
    dict_0 = {}
    tuple_0 = (cookiecutter_exception_0, list_0, bytes_0, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3975():
    bytes_0 = b"\xfd\xb7\xe3W\x9f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3976():
    str_0 = "6-5Ro.!xtUS"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3977():
    bytes_0 = b"J\x8b"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3978():
    bool_0 = False
    module_1.object(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3979():
    bool_0 = True
    float_0 = 703.0
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3980():
    float_0 = 1116.093
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3981():
    bytes_0 = b"O\xd3\xa4s"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3982():
    float_0 = -1212.924
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3983():
    str_0 = "JG\x0bQ-_~$["
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3984():
    float_0 = 1072.1
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3985():
    float_0 = -1429.16396
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3986():
    int_0 = 1008
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3987():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3988():
    list_0 = []
    str_0 = "ts*8eq_NwJ%3u9PL"
    str_1 = ""
    dict_0 = {str_0: str_0, str_0: list_0, str_1: list_0, str_1: list_0}
    module_1.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3989():
    float_0 = 3355.84214
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3990():
    set_0 = set()
    module_2.NonTemplatedInputDirException(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_3991():
    str_0 = 'ocsZ.8~T)6g*LM"'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3992():
    float_0 = 431.8
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3993():
    str_0 = '".RtFp\r^wT'
    module_0.find_template(str_0)


def test_case_3994():
    pass


def test_case_3995():
    bytes_0 = b"\x96\xae/\xe8:d}\xf1y\xf2"
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *bytes_0, **dict_0
    )


@pytest.mark.xfail(strict=True)
def test_case_3996():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    int_0 = 320
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        int_0,
    ]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    list_1 = [non_templated_input_dir_exception_0, cookiecutter_exception_0, int_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3997():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    list_0 = [set_0, set_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_3998():
    float_0 = 2268.41
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3999():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    exception_0 = module_1.Exception(*list_0)
    set_0 = {exception_0, exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4000():
    str_0 = "Q"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4001():
    bytes_0 = b"\xf8\x16\xac\xd4\xbf\xa6<6\xe3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4002():
    str_0 = "OPkD\\"
    str_1 = "=v^|L#W"
    str_2 = "tB2kZshA9G:C'-}LE4x4"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
    module_2.NonTemplatedInputDirException(**dict_0)


def test_case_4003():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4004():
    bytes_0 = b"\x8d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4005():
    bytes_0 = b"X\x9f\x95\xc6\x08\xb4\x1f\x18\x11\xed\xdd\x07\x06"
    module_0.find_template(bytes_0)


def test_case_4006():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4007():
    str_0 = "Vn=b_OyZ"
    none_type_0 = None
    str_1 = "xC%L</b<JmDy"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4008():
    float_0 = 1844.0
    module_0.find_template(float_0)


def test_case_4009():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4010():
    bytes_0 = b"\xa1c\x919\\\xd6\x0c\xf7\x1a\x0e\x0f/"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4011():
    bytes_0 = b"CDI\xaf\xc2\x92\xf1\xb5+\xba\xbcZ\x99\xab"
    base_exception_0 = module_1.BaseException(*bytes_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4012():
    str_0 = "^HigFpD!o<_;"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4013():
    int_0 = 1576
    module_0.find_template(int_0)


def test_case_4014():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4015():
    bytes_0 = b"\xda9\xf8\xddl\x1a"
    module_0.find_template(bytes_0)


def test_case_4016():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4017():
    float_0 = -1487.946863
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4018():
    bytes_0 = b"}\x19s\xb8\xb5\x8a\xb5\xb3N\x8b\xb8\xcc"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4019():
    str_0 = "P.@"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4020():
    str_0 = "lyB~;E{SAYV@"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4021():
    bytes_0 = b"\x97\xc7\x81S\x05-`j"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4022():
    bytes_0 = b","
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4023():
    str_0 = "K"
    module_0.find_template(str_0)


def test_case_4024():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4025():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4026():
    bytes_0 = b"\xcc\xa7\xfd\xc8\x00\xc9\x19\xe8\xc3w>(^"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4027():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4028():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    bool_0 = False
    tuple_1 = (tuple_0, dict_0, bool_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4029():
    bytes_0 = b"\xe1\xc2#{\xbe\xaa\x99\xcb\x1fNJ0\x90G-1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4030():
    str_0 = "Foy8shH(|UM"
    str_1 = '"\\_IHerH?|tI~ejjl'
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4031():
    float_0 = -106.08598
    module_0.find_template(float_0)


def test_case_4032():
    exception_0 = module_1.Exception()


@pytest.mark.xfail(strict=True)
def test_case_4033():
    bytes_0 = b"S1\x06[iI\x93\x89\xc2\x04\x0cT\x19\xac\x85*N\x7f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4034():
    str_0 = "SEZ\\J6i\x0b=zO"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4035():
    exception_0 = module_1.Exception()
    module_2.NonTemplatedInputDirException(*exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4036():
    int_0 = -249
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4037():
    float_0 = 1992.9
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4038():
    int_0 = 2197
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4039():
    int_0 = 2436
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4040():
    complex_0 = -1724 + 3849.16068j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4041():
    int_0 = 2819
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4042():
    bytes_0 = b"4q\xbb\xfe"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4043():
    str_0 = "A%9\n:gqe'dGC0]"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4044():
    str_0 = "ip[Ap+.4d(s_/l'J"
    int_0 = -153
    str_1 = "Wvt$/V}C+f\\:vq|\n\thO"
    dict_0 = {str_0: str_0, str_0: int_0, str_1: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4045():
    bytes_0 = b"Z\xba\xc1\xb9\xe8O\xc7\t\x92\x0fD\x92\xbaR"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4046():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4047():
    bytes_0 = b"dO\xf9\xd3\xa4j-\xa9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4048():
    float_0 = -1582.565065
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4049():
    int_0 = 1873
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4050():
    str_0 = "V/tgA~mM|12Mc=<]z5$"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (non_templated_input_dir_exception_0,)
    dict_0 = {str_0: str_0, str_0: str_0, tuple_0: tuple_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4051():
    complex_0 = 641 + 2919.9j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4052():
    float_0 = 1305.27112
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4053():
    int_0 = 1161
    list_0 = [int_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4054():
    int_0 = 398
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4055():
    str_0 = "ght*n:?%Y+8"
    cookiecutter_exception_0 = module_2.CookiecutterException()
    str_1 = "OEF=X"
    dict_0 = {
        str_0: cookiecutter_exception_0,
        str_0: str_0,
        str_1: cookiecutter_exception_0,
    }
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4056():
    int_0 = 1220
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4057():
    int_0 = -612
    list_0 = [int_0, int_0, int_0]
    dict_0 = {}
    base_exception_0 = module_1.BaseException(*list_0, **dict_0)
    set_0 = {base_exception_0, base_exception_0, int_0, int_0}
    list_1 = [set_0, set_0, base_exception_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_4058():
    int_0 = -866
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4059():
    int_0 = -944
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4060():
    str_0 = 'Hy;T[04D"B.o7&5G~:'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4061():
    complex_0 = -1359.07 + 794.334j
    bytes_0 = b"\xa1S\xcbx$\xd7\x80P\xc1X4\xe23"
    set_0 = {bytes_0, complex_0}
    str_0 = "9R$c5Myp0"
    str_1 = ""
    dict_0 = {}
    bool_0 = False
    tuple_0 = (dict_0, bool_0)
    dict_1 = {str_0: set_0, str_1: tuple_0}
    module_2.NonTemplatedInputDirException(**dict_1)


@pytest.mark.xfail(strict=True)
def test_case_4062():
    base_exception_0 = module_1.BaseException()
    set_0 = {base_exception_0, base_exception_0, base_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4063():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    list_1 = [list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_4064():
    str_0 = "yw-_R\\\r8"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4065():
    bytes_0 = b"\\K\xcc\xdf\xd9\x91\xf0=\x12\xa4\xa8\xc3\n\xf2:\xfb\x1a\xf3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4066():
    bytes_0 = b"\xff\x80\xdd\xb1g:9\xb6H\xd45\xd5\xac5u\x83"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4067():
    str_0 = "U("
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4068():
    complex_0 = -1876.2 - 458.918632j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4069():
    float_0 = 772.777
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4070():
    str_0 = "moOt ZN ('+^!X\rc."
    str_1 = "|eGI'd"
    object_0 = module_1.object()
    dict_0 = {str_0: str_0, str_1: str_1, str_0: object_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4071():
    int_0 = 4638
    set_0 = {int_0, int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4072():
    int_0 = -1052
    tuple_0 = (int_0,)
    list_0 = [int_0, int_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    set_0 = {tuple_0, tuple_0, non_templated_input_dir_exception_0}
    list_1 = [set_0]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_4073():
    bytes_0 = b"\x9e\xb9\xed\xcf/v$\xf0$\xcc\x84P9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4074():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4075():
    bytes_0 = b"\xf4\xe3*\xac\x16\x13.+\xac\xaeo`"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4076():
    str_0 = "SWv@EtH=>O'zGaf8P# "
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {str_0: cookiecutter_exception_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4077():
    bytes_0 = b"2D\x92n'\x8d\xa73\x93\xea\xf0a3pP"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4078():
    str_0 = "{V2"
    str_1 = "+u&4;f]7o\\%~EI\nJ}"
    str_2 = "\n?&<;HexLCmWG_LP"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4079():
    bytes_0 = b"R\xac\xbb\xe1\xccO\xf1_\x04l\x84\xa5\xa9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4080():
    str_0 = "Uaf/FuE0?LN_\tP=0=6X"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4081():
    complex_0 = 2991 + 729.34851j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4082():
    bytes_0 = b"\xbf9\x8d\xc3\xbb\xe4\xae\xb0\x1d\xdb\x89\x8a"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4083():
    bool_0 = False
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    int_0 = -405
    tuple_0 = (bool_0, non_templated_input_dir_exception_0, int_0)
    list_0 = [tuple_0, tuple_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4084():
    none_type_0 = None
    module_2.CookiecutterException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4085():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [cookiecutter_exception_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    set_0 = {cookiecutter_exception_0, non_templated_input_dir_exception_0}
    list_1 = [set_0, cookiecutter_exception_0, non_templated_input_dir_exception_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_4086():
    bytes_0 = b'B\xab\xc7\xdd\xc8"\xc3V'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4087():
    complex_0 = -3169.520417 + 1255.4j
    list_0 = [complex_0, complex_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4088():
    float_0 = 3316.6
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4089():
    str_0 = "K\x0cz?p8!4"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4090():
    int_0 = -1151
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4091():
    exception_0 = module_1.Exception()
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4092():
    bytes_0 = b"_\xddq\xee\xa8\xd9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4093():
    str_0 = "B9;G\r3z4R"
    bool_0 = False
    str_1 = ""
    dict_0 = {str_0: str_0, str_0: bool_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4094():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4095():
    float_0 = -2234.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4096():
    bytes_0 = b"\xa1\x83\xa4\xe5"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4097():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    str_0 = "] \x0b^V"
    list_0 = [cookiecutter_exception_0, cookiecutter_exception_0, str_0]
    list_1 = [list_0, cookiecutter_exception_0, list_0, cookiecutter_exception_0]
    str_1 = "ykEQ"
    str_2 = '[?}=*M"&\tEK"'
    list_2 = [cookiecutter_exception_0, list_0, str_1, str_2]
    str_3 = "n<I~ [`0+`9fq"
    dict_0 = {str_1: str_0, str_2: list_2, str_2: list_1, str_3: str_0}
    module_2.NonTemplatedInputDirException(*list_1, **dict_0)


def test_case_4098():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4099():
    bool_0 = False
    list_0 = [bool_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4100():
    list_0 = []
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0, **dict_0)
    tuple_0 = (
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    )
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4101():
    str_0 = "h5nx0a-qquBv,Aeg1\tn"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4102():
    list_0 = []
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    tuple_1 = (dict_0, dict_0)
    list_1 = [list_0, list_0, tuple_1]
    base_exception_0 = module_1.BaseException(*list_1)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4103():
    int_0 = -1072
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4104():
    int_0 = -3429
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4105():
    complex_0 = 2100 + 634.9j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4106():
    base_exception_0 = module_1.BaseException()
    set_0 = {base_exception_0, base_exception_0, base_exception_0}
    list_0 = [set_0, set_0, set_0, set_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4107():
    str_0 = ';f2GkTWh?qVbkg*"v['
    module_0.find_template(str_0)


def test_case_4108():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4109():
    exception_0 = module_1.Exception()
    bytes_0 = b"\x9f[\xed"
    float_0 = -246.12
    int_0 = 1431
    tuple_0 = (exception_0, bytes_0, float_0, int_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4110():
    int_0 = -168
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4111():
    int_0 = -569
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4112():
    bytes_0 = b"\xdaB\x1e\xb6Ne\xaa\nR"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4113():
    str_0 = "P];\t36&EhE<n\x0b=d[O\r`w"
    none_type_0 = None
    str_1 = "S:\x0c;eN+u\x0b)xs84\x0bh]E"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4114():
    bytes_0 = b"\x1dD\xfb\xa8Q\xa6\xcc6\xe2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4115():
    str_0 = ";"
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4116():
    bool_0 = False
    str_0 = "4gz>p\x0b\x0bp]=pD"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_2.NonTemplatedInputDirException(*bool_0, **dict_0)


def test_case_4117():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4118():
    int_0 = -877
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4119():
    str_0 = ""
    str_1 = "|x@}.CFu8!l"
    str_2 = "\nAH#maj%{jh4us"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4120():
    complex_0 = 2741.985 - 3205j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4121():
    bytes_0 = b"1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4122():
    bool_0 = False
    set_0 = {bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4123():
    int_0 = 1957
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4124():
    str_0 = "]j-/\t\x0bYaJ(;Mk"
    str_1 = ""
    str_2 = "#Z5)3'A#R(7"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_2: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4125():
    float_0 = -954.44798
    dict_0 = {float_0: float_0, float_0: float_0}
    tuple_0 = (float_0, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4126():
    str_0 = "l(/IZ~a*AF"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4127():
    float_0 = -3190.68
    module_0.find_template(float_0)


def test_case_4128():
    exception_0 = module_1.Exception()


@pytest.mark.xfail(strict=True)
def test_case_4129():
    int_0 = -1723
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4130():
    str_0 = "MwR`6v3Y`G\\WNU}j"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4131():
    int_0 = 1570
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4132():
    int_0 = -3917
    bool_0 = False
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [int_0, bool_0, bool_0, non_templated_input_dir_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4133():
    bool_0 = False
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    bytes_0 = b"\xd6\xd9\xac\xe6\x95\x88\xd3\xf2"
    tuple_0 = (
        bool_0,
        non_templated_input_dir_exception_0,
        bytes_0,
        non_templated_input_dir_exception_0,
    )
    bytes_1 = b"\xf4L5\x86\xe1\xd7\x0e\xd3o\x8c\xc1;"
    list_1 = [tuple_0, list_0, bytes_1, non_templated_input_dir_exception_0]
    module_1.Exception(*list_1, **list_1)


@pytest.mark.xfail(strict=True)
def test_case_4134():
    str_0 = '&YB("Y>5.\n{4A|L'
    str_1 = '&9f\x0czsbX"@A]8S'
    str_2 = "r>Cb\x0b_LE|!\rAp.O.b"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2, str_2: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4135():
    str_0 = ""
    set_0 = {str_0, str_0, str_0, str_0}
    exception_0 = module_1.Exception()
    list_0 = [exception_0]
    tuple_0 = (exception_0, list_0, list_0)
    tuple_1 = (set_0, tuple_0, set_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4136():
    str_0 = "=2jV;fP/j)M\t\x0bv\nl6"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4137():
    str_0 = '"!5X#zM!9'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4138():
    bytes_0 = b"\xa0\xb2\xd7%"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4139():
    str_0 = "<QU%)I\\/w"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4140():
    int_0 = -3528
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4141():
    str_0 = "E\tqpkYm`"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4142():
    str_0 = "W ymiq_?D&I\\"
    str_1 = "XFd"
    cookiecutter_exception_0 = module_2.CookiecutterException(*str_0)
    str_2 = 'b0Z5">1<8)?ZzS.'
    dict_0 = {str_0: str_0, str_1: cookiecutter_exception_0, str_2: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4143():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4144():
    int_0 = -18
    tuple_0 = (int_0, int_0)
    list_0 = [tuple_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4145():
    bytes_0 = b"}\xcaI\xbc"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4146():
    bytes_0 = b"\x1c\xd7\x14\x91\xedy!\xeb\xfa\xb7y\xdd\x10"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4147():
    complex_0 = 2159 + 324.62j
    set_0 = {complex_0, complex_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4148():
    bool_0 = False
    tuple_0 = (bool_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4149():
    int_0 = 662
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4150():
    int_0 = 2188
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4151():
    str_0 = "i-}/y1#"
    set_0 = {str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4152():
    float_0 = -2754.6
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4153():
    float_0 = -2507.405
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4154():
    str_0 = "\x0ble9&_L"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4155():
    str_0 = 'MAEG"lh,/3o>I'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4156():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4157():
    bytes_0 = b"\xf2Ud\xe2\xb0\xc92\x7f\x16\xd6\x0b\xfau\x8a[8"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4158():
    int_0 = -941
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4159():
    int_0 = -1327
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4160():
    bytes_0 = b"A"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4161():
    int_0 = -886
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4162():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4163():
    list_0 = []
    str_0 = "q"
    str_1 = ""
    str_2 = "s\tsvv6mMQ-s 2v4ut"
    str_3 = '2^)\n RNd)}K&(9T"'
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1, str_3: str_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4164():
    str_0 = ",\x0c$5n\x0cz8w>[u"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4165():
    str_0 = ";Q;L/]<<"
    int_0 = -995
    str_1 = "K/pD$\t1QfY^]<8H$DkF)"
    bytes_0 = b"xnCt\xf7\xf0i\xddVb"
    bool_0 = False
    dict_0 = {str_0: int_0, str_1: bytes_0, str_1: int_0, str_1: bool_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4166():
    str_0 = "+CUC<;:w!zW'9.C}45"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4167():
    str_0 = "9_ehAnd({Qe]KkTJXzj9"
    str_1 = ";bu<rs0zM)\rD"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4168():
    str_0 = "\n0-[@x9/rGX"
    none_type_0 = None
    str_1 = "\tC6sxy"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4169():
    exception_0 = module_1.Exception()
    dict_0 = {exception_0: exception_0, exception_0: exception_0}
    list_0 = [dict_0, dict_0, dict_0, exception_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [non_templated_input_dir_exception_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_4170():
    str_0 = "E'm*GX,\\\"<V"
    bytes_0 = b"yzg\xdb\xb7\xf3\xa6\xadq\xe3B"
    set_0 = {str_0, bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4171():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0, exception_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_2.CookiecutterException(*non_templated_input_dir_exception_0)


def test_case_4172():
    dict_0 = {}
    list_0 = [dict_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4173():
    bytes_0 = b"\x8b\x01\xe4\x92:\xfd"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4174():
    str_0 = "#aih><NB5>~\\*::=Dk!_"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4175():
    str_0 = "W I6sp3\x0b-7%Zi)\"8'[zS"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4176():
    str_0 = ""
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4177():
    bytes_0 = b"\xf7\xecX\x8f\x8c\xff\xa1h4l#\x92\xe1q\xe5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4178():
    int_0 = -206
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4179():
    int_0 = -301
    set_0 = {int_0}
    list_0 = [set_0, set_0, int_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4180():
    str_0 = "8_X:'(pRZ\nu:V|6\\"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4181():
    bytes_0 = b"\xab\xcf\xea\xc5\xc7\xd9\x0b\xb8\x8f\xcc\x04\xb0\xcb1\x10\xfbE\xb0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4182():
    str_0 = 'PNz"#7\rbBZ'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4183():
    bytes_0 = b"\xa7\xf0~\xc3\xf8l\x8cs\x1fI\xbb"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4184():
    str_0 = "G0"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4185():
    complex_0 = 2113 - 984.7j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4186():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4187():
    int_0 = 1755
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4188():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_2.NonTemplatedInputDirException(*cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4189():
    float_0 = -1214.37841
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4190():
    bytes_0 = b'\x08/"\xa9\xe0'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4191():
    int_0 = -592
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4192():
    bytes_0 = b"\xdf\x94I"
    set_0 = {bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4193():
    float_0 = 994.099
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4194():
    int_0 = -5248
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4195():
    bytes_0 = b"I\xc6u\x95\x86C"
    module_0.find_template(bytes_0)


def test_case_4196():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_4197():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    list_0 = [non_templated_input_dir_exception_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4198():
    str_0 = "FzxnML!:|4oXrp"
    str_1 = "FvS.h@nBJcO"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4199():
    bool_0 = False
    module_1.Exception(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4200():
    str_0 = "C\x0czfGA.r4B(]p)/? "
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4201():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0]
    str_0 = '/B6G~"8. \rbq4o\n2'
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_1.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4202():
    complex_0 = 2683.087885 + 2069.2j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4203():
    str_0 = "PFt"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4204():
    bool_0 = True
    exception_0 = module_1.Exception()
    set_0 = {bool_0, bool_0, exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4205():
    list_0 = []
    str_0 = ']L>0[WFVJ*?\t"%.'
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4206():
    object_0 = module_1.object()
    bool_0 = True
    set_0 = {object_0, object_0, bool_0, object_0}
    list_0 = [set_0, set_0, bool_0, set_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4207():
    bytes_0 = b"\xf1\x93-\x1e\x15\xdbS\x97\xe4\xae\xfb\xcd\xe5)\xee\xc2\x16\x8c\x05}"
    module_0.find_template(bytes_0)


def test_case_4208():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4209():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4210():
    int_0 = -3069
    list_0 = [int_0, int_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4211():
    int_0 = -2104
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4212():
    str_0 = "(\x0bG,bLC^{NS.npgPgqz"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4213():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4214():
    bool_0 = False
    module_2.NonTemplatedInputDirException(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4215():
    bytes_0 = b")\x06$\xfa)$\xa9\xf1\x1ct"
    tuple_0 = (bytes_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4216():
    tuple_0 = ()
    module_1.Exception(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4217():
    bytes_0 = b"5\x1eT\x8d$\xba\x11\xe4A7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4218():
    bool_0 = False
    float_0 = -2031.8395
    dict_0 = {bool_0: bool_0, bool_0: bool_0, float_0: bool_0, bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4219():
    str_0 = "9&z\\y\r =6e(d~q_"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4220():
    int_0 = -2525
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4221():
    str_0 = 'Oj"A6\x0coQ\nu;`'
    bool_0 = True
    dict_0 = {str_0: bool_0, str_0: str_0}
    module_0.find_template(dict_0)


def test_case_4222():
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4223():
    int_0 = 989
    set_0 = {int_0, int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4224():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    str_0 = ""
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        str_0: str_0,
    }
    list_0 = [dict_0, non_templated_input_dir_exception_0, str_0]
    list_1 = [list_0]
    module_2.CookiecutterException(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4225():
    str_0 = 'w "R3l2L@+{L\t'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4226():
    float_0 = -2225.4
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4227():
    complex_0 = 1993.4 + 119.148798j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4228():
    str_0 = "\tVt[\\@<nGNimjYSQ=LO\x0c"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4229():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4230():
    bytes_0 = b"x\x12\xb7\x01\x88ef*\xe3]"
    set_0 = set()
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: set_0}
    list_0 = []
    tuple_0 = (bytes_0, dict_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4231():
    int_0 = -1449
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4232():
    str_0 = "\rH>\\|B*Y4V\x0c/ADae1"
    bool_0 = True
    list_0 = [str_0, str_0, bool_0]
    dict_0 = {}
    tuple_0 = (list_0, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4233():
    bytes_0 = b"y\xf7YS"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4234():
    bytes_0 = b";\xc8"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4235():
    int_0 = -197
    list_0 = [int_0, int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4236():
    bytes_0 = b"\xa7I"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4237():
    bytes_0 = b"d%+Y\xd4\x86t}\x039q\x8e\xd0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4238():
    float_0 = -764.45956
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4239():
    str_0 = "V"
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4240():
    int_0 = 670
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4241():
    str_0 = "E8@Wa"
    bytes_0 = b"\x9c\x8b\xe2\x83p\xc9"
    str_1 = "F\x0cG/>FOQj'`]"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: bytes_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4242():
    float_0 = -3135.0612
    module_0.find_template(float_0)


def test_case_4243():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4244():
    str_0 = "pYk)Ba$5uNL"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(*str_0)
    module_1.Exception(**non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4245():
    bytes_0 = b"\xa9\xdf\x18\xf7\xe6\xfd\xc1ntxY\xe4\xa9\xea!+d\x1c\x80"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4246():
    str_0 = ""
    none_type_0 = None
    str_1 = ",MQo<HuT5VT"
    str_2 = "Y$~lawJ8HC4:O}PS+f"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_2: none_type_0,
    }
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4247():
    float_0 = -322.9923
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4248():
    bytes_0 = b"\x10}\xbe^;`yZb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4249():
    float_0 = 1896.7824
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4250():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_0 = True
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: bool_0,
        non_templated_input_dir_exception_0: bool_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4251():
    str_0 = "\x0c'1ce2\"m66Z_yPV C"
    none_type_0 = None
    str_1 = "S<jy\nqx"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4252():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4253():
    bytes_0 = b"\x15\x8f\xddm&\x02\x1eRKU\x93\xbdV\xd2."
    dict_0 = {bytes_0: bytes_0}
    module_0.find_template(dict_0)


def test_case_4254():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4255():
    str_0 = "e6;9SLoc+>b@`"
    str_1 = "$~"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4256():
    int_0 = 1131
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4257():
    bool_0 = True
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (bool_0, list_0, list_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4258():
    bytes_0 = b"\x12\x8d\xc2\x95\x13\x16vXV"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4259():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4260():
    bytes_0 = b"\xc5\xe2\\\xc9Z\x8b\x90\x15\xeb\x1a\xafn\x9f"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    str_0 = "\x0c?&;"
    dict_0 = {str_0: list_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4261():
    int_0 = 2652
    set_0 = {int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4262():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4263():
    bytes_0 = b"\xb2\x1f\xb6\x9aZ\xf0\x1f"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_1.Exception(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_4264():
    int_0 = 786
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4265():
    str_0 = ""
    str_1 = "66k`Pd"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4266():
    float_0 = 173.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4267():
    int_0 = 1458
    bool_0 = True
    set_0 = {int_0, int_0, bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4268():
    int_0 = 102
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4269():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4270():
    bytes_0 = b"O\x01\xee{"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4271():
    int_0 = -5299
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4272():
    str_0 = "bO"
    str_1 = "x"
    str_2 = ":Qq@5LX)NTz\\"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4273():
    str_0 = "t:n<"
    list_0 = [str_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4274():
    bytes_0 = b"xa-LSbT[\x0c\x9a\xbb.B="
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4275():
    int_0 = -3049
    list_0 = [int_0, int_0, int_0]
    str_0 = ",#`dl\tC"
    list_1 = [int_0, list_0]
    str_1 = "v}g(N\r"
    str_2 = "-TqH@(e#+F;Xv\\noN'i}"
    dict_0 = {str_0: list_1, str_1: int_0, str_2: str_0, str_0: list_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4276():
    bytes_0 = b"p\xf7|\xe5\x12["
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4277():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4278():
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(**dict_0)
    bytes_0 = b"\xdc[i\xac\x91\x9dn\xa6\x88"
    str_0 = "\\r:|~%;s?DM[[%=JZ/>y"
    tuple_0 = (cookiecutter_exception_0, bytes_0, str_0, cookiecutter_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4279():
    float_0 = 2333.42
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4280():
    int_0 = -13
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4281():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4282():
    str_0 = ";nJ$%R&\x0bW/p"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4283():
    str_0 = "-G"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4284():
    str_0 = "ZMDxk(ijvrA=(d7lVw&C"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4285():
    str_0 = '%hvilQ"\x0cvU\tF3`\ta'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4286():
    int_0 = -2524
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4287():
    int_0 = -1572
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4288():
    str_0 = 'rkw8"ivzO#wAK[(9F5'
    module_0.find_template(str_0)


def test_case_4289():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4290():
    int_0 = 509
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4291():
    str_0 = "mLl,s"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4292():
    list_0 = []
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4293():
    base_exception_0 = module_1.BaseException()
    set_0 = {base_exception_0, base_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4294():
    str_0 = "WYhzC\nPL+\rK^1"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4295():
    bytes_0 = b"_(\xaa%M/k\x80J\x87`ARVL\xff\xbf\xe7\xf7\x1d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4296():
    bool_0 = True
    str_0 = "]>/1+SQ9*Rny"
    tuple_0 = ()
    list_0 = [tuple_0, bool_0, tuple_0, str_0]
    tuple_1 = (bool_0, str_0, list_0)
    list_1 = [tuple_1, tuple_1]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    list_2 = [non_templated_input_dir_exception_0]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_2
    )
    module_0.find_template(non_templated_input_dir_exception_1)


@pytest.mark.xfail(strict=True)
def test_case_4297():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4298():
    str_0 = "tsRP=\nbO1Fp~zP)\rB"
    str_1 = "\\./Kt\\xZU{"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0, str_1: str_1}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4299():
    int_0 = 4
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4300():
    int_0 = 2609
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4301():
    str_0 = ",b:?+\\Nb$7e.N9"
    bool_0 = True
    tuple_0 = (str_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4302():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    set_0 = {
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    }
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4303():
    str_0 = "!\n"
    module_0.find_template(str_0)


def test_case_4304():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4305():
    bool_0 = True
    module_0.find_template(bool_0)


def test_case_4306():
    dict_0 = {}
    base_exception_0 = module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4307():
    str_0 = 'Z"n'
    str_1 = "-t_2CtJMQ7zT:c"
    int_0 = -599
    dict_0 = {str_1: int_0, str_0: str_0}
    tuple_0 = (str_0, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4308():
    bytes_0 = b"\n\xd6@\xc6"
    module_0.find_template(bytes_0)


def test_case_4309():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4310():
    bytes_0 = b"\xaa!\xa6\xbdA\xe4Djo\x93\x16t"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4311():
    str_0 = "p]:{#935W|L"
    str_1 = ".eJ*e=_xci8<Ic "
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0, str_1: str_1}
    module_1.Exception(**dict_0)


def test_case_4312():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4313():
    bytes_0 = b"\xdf\xbe\xa8?\xc5\x19\xc2\xd5O"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4314():
    int_0 = -23
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4315():
    int_0 = 4296
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4316():
    tuple_0 = ()
    list_0 = [tuple_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4317():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    module_2.CookiecutterException(*list_0, **tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4318():
    str_0 = ",3XMUc\r{OI?yvvvG,!"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4319():
    bytes_0 = b"?_N\xe2&\xc3<XX\xeb*%.\xac\xce\xc4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4320():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_0 = True
    list_0 = [non_templated_input_dir_exception_0, bool_0]
    module_0.find_template(list_0)


def test_case_4321():
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4322():
    str_0 = "f/Yf7N6j)aAz"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4323():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_2.NonTemplatedInputDirException(*none_type_0)


def test_case_4324():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4325():
    complex_0 = 2819.0128 - 3562.86953j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4326():
    bytes_0 = b"\xa5n1\xc6\xc3\xb49pxf\x9a\xbbx\xcf\x88J[c"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4327():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    base_exception_0 = module_1.BaseException()
    dict_0 = {bool_0: non_templated_input_dir_exception_0, base_exception_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4328():
    bytes_0 = b"~\x9c\x9b \xc8\x95\xbeM\xe77"
    list_0 = [bytes_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4329():
    int_0 = -660
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4330():
    bool_0 = False
    module_2.NonTemplatedInputDirException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4331():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    list_0 = [set_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4332():
    int_0 = -19
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4333():
    str_0 = "FwK1xx;fw-$':"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4334():
    bytes_0 = b"\x82\xbd\x1bNkY\x82l\xfd\xc3\xded\xbf\x8bM"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4335():
    int_0 = 1963
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4336():
    bool_0 = True
    bool_1 = True
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {bool_0: bool_0, bool_1: bool_1, cookiecutter_exception_0: bool_0}
    tuple_0 = (bool_0, bool_1, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4337():
    int_0 = -4062
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4338():
    complex_0 = -1384 + 217.6324j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4339():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4340():
    int_0 = 1000
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4341():
    bool_0 = False
    bytes_0 = b'&"\xb2}\xe4z\xb8\xe3\xc1\xbc\xb9\x1f\xd7(A\x7f\x93'
    bool_1 = True
    list_0 = [bool_1, bytes_0]
    base_exception_0 = module_1.BaseException(*list_0)
    tuple_0 = (bool_0, bytes_0, base_exception_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4342():
    list_0 = []
    str_0 = "/'#(N3\tCXpp"
    str_1 = ":~f*Dq|-x\x0cW,6Xht"
    dict_0 = {str_0: list_0, str_1: str_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4343():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_2.CookiecutterException(*non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4344():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4345():
    bytes_0 = b"LO\x13o7\x1b\xfd\xa8"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4346():
    str_0 = "#=Sw$zC"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4347():
    list_0 = []
    dict_0 = {}
    exception_0 = module_1.Exception(*list_0, **dict_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4348():
    str_0 = "mbF@G2X>&Hz."
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4349():
    str_0 = "k\x0b#*zO"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4350():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    float_0 = -704.4843
    tuple_0 = (non_templated_input_dir_exception_0, float_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4351():
    str_0 = "0?Q-\x0cLR"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4352():
    bytes_0 = b"\xde8?\x90j\xdc\x85\x16<qU"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4353():
    none_type_0 = None
    list_0 = [none_type_0]
    str_0 = "h-tG|9G(,7%5JJbn"
    dict_0 = {str_0: str_0, str_0: list_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4354():
    int_0 = 3933
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4355():
    bytes_0 = b"\x04\xbe\xeb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4356():
    str_0 = ".!@=%m"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4357():
    base_exception_0 = module_1.BaseException()
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4358():
    float_0 = 110.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4359():
    str_0 = "y) giq0"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4360():
    float_0 = -2718.9186
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4361():
    bool_0 = True
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_0 = (bool_0, cookiecutter_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4362():
    set_0 = set()
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4363():
    str_0 = "j."
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4364():
    bytes_0 = b"G"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4365():
    float_0 = 2377.243
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4366():
    int_0 = -147
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4367():
    float_0 = -4051.734757
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4368():
    bytes_0 = b"\xb3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4369():
    dict_0 = {}
    bool_0 = True
    tuple_0 = (dict_0, bool_0, dict_0)
    module_1.object(*tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4370():
    int_0 = -1647
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4371():
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(**dict_0)
    tuple_0 = (cookiecutter_exception_0, dict_0)
    list_0 = [tuple_0, cookiecutter_exception_0, dict_0, tuple_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4372():
    bool_0 = False
    str_0 = "^X|IpmQ1j"
    none_type_0 = None
    str_1 = "%C2\r\teg:=<1+la~dkII"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_2.CookiecutterException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4373():
    int_0 = -409
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4374():
    bytes_0 = b"p\xf4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4375():
    int_0 = 1696
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4376():
    str_0 = "}LF-+UC}"
    set_0 = set()
    list_0 = [str_0, str_0, set_0]
    dict_0 = {str_0: str_0, str_0: str_0, str_0: list_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4377():
    int_0 = -1410
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4378():
    bytes_0 = b"<\x82\x03\x16\x9eS\x16\x7f\\[\x80\xc5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4379():
    bytes_0 = b"\xee\x82\x87Z\xacK\x98k\xcb\x80\xd4\xee:\x99BX"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4380():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4381():
    int_0 = 222
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4382():
    int_0 = -1639
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4383():
    bytes_0 = b"'Y\xf2o\xfd\xf8\xdf\xb2\xef\x9b\xef\xf5\x83t"
    float_0 = -797.358
    tuple_0 = (bytes_0, bytes_0, float_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4384():
    str_0 = "q<2?"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4385():
    str_0 = "RihZy!c|,Hm}_\t+A$h|g"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4386():
    float_0 = 1261.484
    set_0 = {float_0, float_0, float_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4387():
    int_0 = 2008
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4388():
    int_0 = -1021
    list_0 = [int_0, int_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4389():
    str_0 = "Kq\x0c5M1qW%io!QX"
    str_1 = "`\x0bVw!Psx]S(\\Zphk37[!"
    str_2 = ".I,x:S~6b%"
    str_3 = "Fp1si%Le?`1tPv\\RE"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2, str_3: str_3}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4390():
    str_0 = "n)+d6=!g,ZxTx"
    list_0 = [str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4391():
    str_0 = "utk0BL/6>:"
    str_1 = "+\x0cB)wz^M="
    exception_0 = module_1.Exception(*str_0)
    dict_0 = {str_0: str_0, str_1: str_1, str_0: exception_0, str_1: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4392():
    bytes_0 = b"\xaa\x81\x12\x93\x1c\x83\xfd\xd1\xc9i\x1b\x89\xfbB\xe6\xcd\xa1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4393():
    bytes_0 = b"|\x7fN\xd9\x8e\x12m\x9b\xe4\x1c\xb3\x96\xe1o\x8f\x89\x01\x15\xdb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4394():
    int_0 = 653
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4395():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    exception_0 = module_1.Exception(*list_0)
    list_1 = [exception_0]
    base_exception_0 = module_1.BaseException(*list_1)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4396():
    bytes_0 = b"'\xb6i\xa8\xda<\x8e\xe6\xd3\xb4"
    module_0.find_template(bytes_0)


def test_case_4397():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )


@pytest.mark.xfail(strict=True)
def test_case_4398():
    int_0 = -2375
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4399():
    bytes_0 = b"\xc9\xa2s\xa7\xebx\xb5T\x81\xbcQ\xdd\x86\xe8J`\xff "
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4400():
    bytes_0 = b"\xf0&\xf0<Z\xd4`m\x9c\x0e\xd0\xba\x98J"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4401():
    str_0 = "}wMXc5fvc/>2&@{{0"
    list_0 = [str_0, str_0, str_0]
    none_type_0 = None
    module_2.NonTemplatedInputDirException(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4402():
    none_type_0 = None
    module_2.CookiecutterException(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4403():
    float_0 = -2693.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4404():
    int_0 = 1070
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4405():
    str_0 = "(n6b:%(OzW;3\nF\tyEW"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4406():
    set_0 = set()
    list_0 = [set_0]
    str_0 = "j|\ng\r~9BKzgz&a}s`G"
    str_1 = "Q"
    dict_0 = {str_0: set_0, str_0: str_0, str_1: str_1}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4407():
    int_0 = -1879
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4408():
    int_0 = -16
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    float_0 = 589.87
    list_0 = [dict_0, float_0, int_0]
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4409():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4410():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4411():
    int_0 = -2792
    str_0 = "/H RqE"
    tuple_0 = (int_0, str_0, int_0)
    bool_0 = True
    tuple_1 = (int_0, tuple_0, bool_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4412():
    float_0 = 4078.31
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4413():
    complex_0 = 551.246002 + 1665.974008j
    module_0.find_template(complex_0)


def test_case_4414():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4415():
    str_0 = "9{l|]~I!RIxanzN:4/2$"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4416():
    str_0 = "_P}d\x0b\n`o:9dn22hr2"
    str_1 = "\x0cB\\[$Y}rviW)Wa"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4417():
    int_0 = -706
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4418():
    int_0 = 1137
    module_2.NonTemplatedInputDirException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_4419():
    list_0 = []
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4420():
    bytes_0 = b"\xfdec\xf7\x03L\xa22"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4421():
    bytes_0 = b"U+\xae\xf8\xd5\xf2i"
    set_0 = {bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4422():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    exception_0 = module_1.Exception(*list_0)
    module_1.BaseException(*exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4423():
    bytes_0 = b'\x07\xaf\xb1\\\x7f=\xd3"2\x10'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4424():
    bytes_0 = b"0f\x99\x96P\xe1)\xd6A\xd0f\x94"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4425():
    int_0 = 3151
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4426():
    int_0 = 231
    set_0 = {int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4427():
    str_0 = ":y-mUd<}ow3mnwy7S"
    str_1 = "O'}OkQWZr2R%b\x0cIm_Ki"
    int_0 = -1439
    dict_0 = {str_0: str_0, str_1: str_1, str_1: int_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4428():
    complex_0 = -214 - 2222.577684j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4429():
    bytes_0 = b"6F\x06\x14/\t\xcf\x92\x18n\x925\x95"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4430():
    int_0 = 1709
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4431():
    int_0 = -4243
    exception_0 = module_1.Exception()
    dict_0 = {exception_0: exception_0}
    tuple_0 = (int_0, exception_0, int_0, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4432():
    int_0 = 1942
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4433():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4434():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
    }
    exception_0 = module_1.Exception()
    int_0 = 1019
    list_0 = [dict_0, dict_0, exception_0, int_0]
    tuple_0 = ()
    float_0 = -2471.98273
    tuple_1 = (list_0, tuple_0, float_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4435():
    int_0 = 583
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4436():
    str_0 = "9n==x80+|>},:`r&e5a"
    str_1 = "MsMtevq6@fDE\nft3KOM"
    str_2 = "1iyl2Obm9vq(nri#Y"
    str_3 = "1'[6 fl"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1, str_3: str_2}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4437():
    str_0 = "%!I!C;4\x0cXSKcm"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4438():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4439():
    bytes_0 = b"\xa06u\x86\xd9B\xf2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4440():
    complex_0 = -261.68 - 231.17211j
    set_0 = {complex_0}
    list_0 = [set_0, complex_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4441():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4442():
    float_0 = -3019.0
    module_0.find_template(float_0)


def test_case_4443():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4444():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4445():
    complex_0 = -1270.5 + 71.205j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4446():
    bool_0 = True
    float_0 = -33.29858
    tuple_0 = (bool_0, float_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4447():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4448():
    float_0 = 612.7725
    dict_0 = {}
    module_2.NonTemplatedInputDirException(*float_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4449():
    int_0 = -1682
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4450():
    bytes_0 = b"4\xd0\x02t\xae;\xa2o?\xb6AI\xfb\x9d\xf6\xee\t"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4451():
    str_0 = "}}dr{#"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4452():
    bytes_0 = b"\t"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4453():
    bool_0 = True
    bool_1 = True
    list_0 = [bool_0, bool_0, bool_1]
    module_0.find_template(list_0)


def test_case_4454():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4455():
    str_0 = "3NA\x0bt-q\x0bg"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4456():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *dict_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4457():
    int_0 = 2273
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4458():
    str_0 = "svl`Hq^pe#T%u.~!"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4459():
    bool_0 = False
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    bool_1 = True
    dict_0 = {
        bool_0: bool_0,
        bool_0: bool_0,
        non_templated_input_dir_exception_0: list_0,
        bool_1: list_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4460():
    float_0 = -1741.0
    list_0 = [float_0, float_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4461():
    str_0 = "Eaf3Gs,~3|BX\rpE"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4462():
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(**dict_0)
    str_0 = "(;x5E{s#i8ZU:DOBVt5"
    tuple_0 = (cookiecutter_exception_0, str_0, cookiecutter_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4463():
    float_0 = -1669.0
    dict_0 = {float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4464():
    str_0 = "8Qy*QBU/ IB$Go"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4465():
    str_0 = "gKhUr$("
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {str_0: non_templated_input_dir_exception_0, str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4466():
    base_exception_0 = module_1.BaseException()
    object_0 = module_1.object()
    dict_0 = {base_exception_0: object_0, object_0: object_0}
    module_0.find_template(dict_0)


def test_case_4467():
    cookiecutter_exception_0 = module_2.CookiecutterException()


@pytest.mark.xfail(strict=True)
def test_case_4468():
    int_0 = 1789
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4469():
    complex_0 = -617.74532 - 847.3029j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4470():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4471():
    bytes_0 = b"\xeb\xef\x86\xe0TZ\xc7)b\xad\x93\xb4\x01\xea\x1d\xe0\xdd"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4472():
    bytes_0 = b"\xca\xb0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4473():
    str_0 = "[m)V#Mty}R]L"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4474():
    float_0 = -1232.39042
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4475():
    exception_0 = module_1.Exception()
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4476():
    str_0 = "$uVB2X'/PN&K~oA!Ge&x"
    str_1 = "R"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


def test_case_4477():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4478():
    str_0 = "E7zC'"
    str_1 = "\rT_"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0, str_0: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4479():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    str_0 = "'*pP|9;\r5"
    dict_0 = {str_0: str_0}
    module_1.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4480():
    float_0 = -513.95
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4481():
    bytes_0 = b"w\r"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4482():
    str_0 = "Y++8BL5k@wZmK"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4483():
    str_0 = "]K@i0[^Ac\x0bd\t|$S"
    list_0 = [str_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    str_1 = "7l~j|tU8:V1F"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {
        str_0: cookiecutter_exception_0,
        str_0: cookiecutter_exception_0,
        str_1: non_templated_input_dir_exception_0,
        str_1: non_templated_input_dir_exception_0,
    }
    module_2.NonTemplatedInputDirException(**dict_0)


def test_case_4484():
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4485():
    bytes_0 = b"}WG\xfa\xfa\xce\xc73\xef\xc5\x1ao\x07\xd0\xbdg"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4486():
    bytes_0 = b"<\xb6\x03\xc8q\x80\xb1+\xcf_\x96+\xaf\xf8"
    str_0 = "=\t^V0&vwL\x0b}<]"
    str_1 = ")X,DqstS`t?W'B*"
    dict_0 = {str_0: str_0, str_0: bytes_0, str_1: str_1, str_1: str_1}
    module_1.Exception(*bytes_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4487():
    str_0 = "eP"
    none_type_0 = None
    str_1 = "Z5NOewlmRIS9+E+Pzb\r"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
    }
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4488():
    bytes_0 = b"8`\xf0Z\x15\xa4\x1a\xda\x9d\xd6\x93\xf1|"
    set_0 = {bytes_0, bytes_0}
    module_0.find_template(set_0)


def test_case_4489():
    list_0 = []
    object_0 = module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4490():
    complex_0 = -3111.923507 + 3787.16849j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4491():
    int_0 = 2857
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4492():
    str_0 = "ySS:#7\rIodxB4"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4493():
    bytes_0 = b"\xd0\x0bW\x1eM-pys\x96\xb1\x82\xa4\xbe\xc9\x18@\xe3\xc5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4494():
    bytes_0 = b"\xfb\r\x97\xfc@\xdb\x03\x1dk\xa7*\x93zE"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4495():
    str_0 = " v^T{(iy+hjhh=U)oJ"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4496():
    float_0 = 824.487
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4497():
    base_exception_0 = module_1.BaseException()
    str_0 = "~d\nAC=&5"
    tuple_0 = (base_exception_0, base_exception_0, str_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4498():
    str_0 = "[=7\\'\x0c-'=/(xq`["
    list_0 = [str_0, str_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4499():
    int_0 = -321
    set_0 = {int_0, int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4500():
    bytes_0 = b"\x0e4.\xf9eI"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4501():
    str_0 = "[kaM*Go2v(6f;BoU.Q9\r"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4502():
    float_0 = 3976.317
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4503():
    bytes_0 = b"\xf55\x91l\xdfL\x07@4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4504():
    complex_0 = 664 - 2218.395558j
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4505():
    int_0 = 79
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4506():
    float_0 = 1343.712
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4507():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    str_0 = "@GV-=ha?0+}"
    str_1 = "\tg(`/bPSY_qXyrP"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4508():
    str_0 = "\n<]\x0b/5M7w[,:"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4509():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4510():
    float_0 = -1804.06
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4511():
    str_0 = "c\ro9+:f9AhWFw zE"
    str_1 = ""
    str_2 = "`"
    list_0 = []
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0, str_2: list_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4512():
    str_0 = "W)+x,gB(B'9]A"
    set_0 = {str_0, str_0, str_0}
    module_0.find_template(set_0)


def test_case_4513():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4514():
    bool_0 = True
    str_0 = "\tc'i@~\tFLSyix]NOy\rZ"
    none_type_0 = None
    str_1 = "MwHV\x0baQ66U"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_2.NonTemplatedInputDirException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4515():
    int_0 = 3073
    bool_0 = True
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_0 = (int_0, bool_0, cookiecutter_exception_0)
    list_0 = [tuple_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4516():
    bytes_0 = b"\xc0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4517():
    str_0 = "OST5"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4518():
    bytes_0 = b"v\xdb\x0f\xbc\xcc%\x98F\xc3M\xb0\xf7@\xe7\xbdR\x7f\x1e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4519():
    str_0 = "ZB+L*Pg43{0f{6|r7?"
    list_0 = [str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4520():
    float_0 = -1485.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4521():
    complex_0 = -2055.1741 - 153.88j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4522():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4523():
    bytes_0 = b"0\x93\xdfx\x03"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4524():
    object_0 = module_1.object()
    list_0 = [object_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4525():
    float_0 = 605.498
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4526():
    str_0 = " S}"
    list_0 = [str_0, str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4527():
    int_0 = 3209
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4528():
    str_0 = ">1ZqG\x0c"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4529():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    set_0 = {non_templated_input_dir_exception_0, non_templated_input_dir_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4530():
    str_0 = "j!Yl[47ihX3<\nW"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4531():
    bytes_0 = b"`\x8a\xd6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4532():
    str_0 = "q%k{s5+OeWe/?.\tbs5}"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4533():
    none_type_0 = None
    list_0 = [none_type_0]
    module_1.object(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4534():
    str_0 = "9OHEtE-!"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4535():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4536():
    str_0 = "6VD=QT\x0cHPFGz(~"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4537():
    tuple_0 = ()
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4538():
    str_0 = "\tIL$\x0c,IM"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4539():
    int_0 = 808
    str_0 = 'q"`!*q(a+%B~?ay'
    str_1 = "rFdp  lH8KyCC2<"
    str_2 = "Z6ZJxbO.z"
    dict_0 = {str_0: str_0, str_1: int_0, str_2: int_0, str_0: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4540():
    int_0 = -2614
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4541():
    str_0 = ":=?l6]bEf&'*id31"
    set_0 = {str_0, str_0, str_0, str_0}
    dict_0 = {str_0: set_0, str_0: set_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4542():
    bytes_0 = b"\xee8n8\xb2\xf42\x88\xe7\xde\xa0k\xbd85\x03\xaa\x87x"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4543():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
    ]
    dict_0 = {}
    base_exception_0 = module_1.BaseException(*list_0, **dict_0)
    module_2.CookiecutterException(**base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4544():
    str_0 = ";<l/\x0c*Q[LWN:F"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4545():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [list_0, list_0, list_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    tuple_0 = (non_templated_input_dir_exception_0, non_templated_input_dir_exception_0)
    list_2 = [list_1, tuple_0]
    base_exception_0 = module_1.BaseException(*list_2)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4546():
    float_0 = -4514.4
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4547():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_0 = False
    tuple_0 = (
        non_templated_input_dir_exception_0,
        bool_0,
        non_templated_input_dir_exception_0,
    )
    bool_1 = True
    tuple_1 = (
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        tuple_0,
        bool_1,
    )
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4548():
    float_0 = 1817.42
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4549():
    str_0 = ";;\t)1 wFX\n\nTr+\"E'"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4550():
    bytes_0 = b"\xe1\xf8'\x1b^c\xcc\x16\x02G$\xa0(w"
    set_0 = {bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4551():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    str_0 = "{HK(ld)funVqOc>E9"
    bytes_0 = b"e?\x12\xef\xd96\xf5\xc4\x9b\xae!i\xdaS"
    str_1 = ""
    str_2 = ""
    str_3 = "H bPY(*iA"
    dict_0 = {str_0: bytes_0, str_1: list_0, str_2: str_0, str_3: list_0}
    module_1.Exception(*list_0, **dict_0)


def test_case_4552():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4553():
    float_0 = -1494.0
    list_0 = [float_0, float_0, float_0]
    module_1.Exception(*list_0, **float_0)


@pytest.mark.xfail(strict=True)
def test_case_4554():
    str_0 = "g\rWkptJ}NWi "
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4555():
    int_0 = -187
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4556():
    float_0 = 1897.4
    dict_0 = {float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4557():
    str_0 = "PaP"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4558():
    str_0 = "g9\x0bAst/\x0cQ*UfKy_d)=}"
    dict_0 = {str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4559():
    object_0 = module_1.object()
    list_0 = [object_0, object_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4560():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4561():
    int_0 = 3566
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4562():
    str_0 = "\\sdB,cwlar4D\tujCBU"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4563():
    float_0 = 1161.76494
    set_0 = {float_0, float_0, float_0}
    tuple_0 = (float_0, set_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4564():
    exception_0 = module_1.Exception()
    bool_0 = True
    module_2.NonTemplatedInputDirException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4565():
    str_0 = ";ek '<H~0\nVU=K\"xSI"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4566():
    str_0 = "P:\nOe2G<MZ)V\rka`SfN"
    str_1 = "e9"
    str_2 = ""
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4567():
    float_0 = -2067.274159
    list_0 = [float_0, float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4568():
    bytes_0 = b"\xecvO\xf6#\xb0oa\xf4\x0b H\xcc\x0b\x8f\xa7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4569():
    int_0 = -233
    list_0 = [int_0, int_0]
    exception_0 = module_1.Exception(*list_0)
    list_1 = [exception_0, exception_0]
    base_exception_0 = module_1.BaseException(*list_1)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4570():
    int_0 = -3244
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4571():
    str_0 = "LEG4@L4!2'1E5C\t7"
    str_1 = "\r^![:``>`ia"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4572():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4573():
    float_0 = -4340.96
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4574():
    str_0 = "L\n^T];U:ShSiW"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4575():
    str_0 = "8a\t"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4576():
    str_0 = "eJDi!=;uw(K^S@\r"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4577():
    bytes_0 = b"f\x83\xde"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4578():
    float_0 = 2929.705
    int_0 = 890
    list_0 = [float_0, int_0, int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4579():
    list_0 = []
    str_0 = "nmHEXktSw#h:Y2|m_BL"
    str_1 = "T\nI\t}gZKoe%TB\n~7^"
    dict_0 = {str_0: str_0, str_0: list_0, str_1: str_0}
    module_1.BaseException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4580():
    bytes_0 = b" &\t\xb6\xc1\x7fH"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4581():
    none_type_0 = None
    str_0 = "DHC9R^prU_N"
    str_1 = "3 c)"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4582():
    str_0 = ""
    str_1 = '"K+rqF7AVQV-#-o'
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4583():
    str_0 = 'x}Qe7s}z"'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4584():
    bytes_0 = b"\xb1\x96\x83\x0fO\xc0\xbc\x12\xfb\xb0\xdd\xe39\xd1\xb8$\x0c\x03"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4585():
    str_0 = "]Hg%"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4586():
    bytes_0 = b"\xc1\x1a\xfe$#"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4587():
    int_0 = 1228
    tuple_0 = (int_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4588():
    str_0 = "\x0c{"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4589():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_0 = (cookiecutter_exception_0,)
    complex_0 = -355.3 - 1619.3j
    set_0 = {tuple_0, cookiecutter_exception_0, complex_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4590():
    complex_0 = -920.1 + 1153.735j
    module_2.CookiecutterException(**complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4591():
    str_0 = "X '9"
    list_0 = [str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4592():
    str_0 = "!i:i{q4#P"
    str_1 = "aU;\n\\do*u#=JR"
    str_2 = ")mjIKS3P ?"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4593():
    list_0 = []
    bytes_0 = b"Tm)<\x1f\x05\xeaj\x1c\x88\xad"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (list_0, bytes_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4594():
    str_0 = "z8"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4595():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [
        non_templated_input_dir_exception_0,
        list_0,
        non_templated_input_dir_exception_0,
        none_type_0,
    ]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_4596():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0, exception_0]
    str_0 = ">Hvo[&Zfcm:h3+9^z"
    str_1 = "\npKo\x0b.v.7q+Su:Yd"
    dict_0 = {str_0: list_0, str_0: str_0, str_1: exception_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4597():
    int_0 = -468
    module_0.find_template(int_0)


def test_case_4598():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_4599():
    complex_0 = 4805 + 3698.862j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4600():
    base_exception_0 = module_1.BaseException()
    list_0 = []
    module_2.CookiecutterException(*list_0, **base_exception_0)


def test_case_4601():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4602():
    bool_0 = True
    set_0 = set()
    tuple_0 = (set_0, set_0, bool_0)
    tuple_1 = (bool_0, tuple_0, bool_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4603():
    bytes_0 = b"\xd0\x87\xdc\xd9\xde\xe9\xe6\xc85<"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4604():
    int_0 = -113
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4605():
    float_0 = 3170.974893
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bytes_0 = b"<C\xf4\x95\x82u\xb3\xb5\x9a\x97`\x8f"
    tuple_0 = (float_0, non_templated_input_dir_exception_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4606():
    bytes_0 = b"\xcdbO\xd5\x05X|\xe9\xfd\xc9\x14\xc63Z\xee\xdd\xadU\xab"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4607():
    str_0 = "1`/=l Wp'Z`f]8/mMy"
    exception_0 = module_1.Exception()
    dict_0 = {str_0: exception_0, str_0: exception_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4608():
    int_0 = 2806
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4609():
    bytes_0 = b"X\xb7P\x07C\xb0j\x9d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4610():
    bytes_0 = b'}3\x8b\x0c\xa0"\x80I\xe7,\x8aI\xa8\xc2|\xe0\x83'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4611():
    bytes_0 = b"v\xec\xafS\xa0%9\xd3`"
    dict_0 = {bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4612():
    str_0 = ')<JU{DJ(>EKUtr"?l>l'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4613():
    bytes_0 = b"\xc9a\x05rl\x11"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4614():
    float_0 = -1395.2952
    str_0 = "_n\n[QF]lEZy[AGi)"
    set_0 = {float_0, float_0, str_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4615():
    bytes_0 = b"\x9c\xc9\xdc\xd5\x84}\xc1/CB\x10\xff"
    set_0 = {bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4616():
    int_0 = 2715
    module_2.CookiecutterException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_4617():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    bool_0 = True
    dict_0 = {
        cookiecutter_exception_0: bool_0,
        bool_0: bool_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
    }
    module_2.CookiecutterException(*dict_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4618():
    float_0 = 413.1335
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4619():
    complex_0 = -3319.695183 + 976.827j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4620():
    str_0 = "Kd33.b.\x0cf'Dn5"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4621():
    complex_0 = 606.238 + 1657j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4622():
    str_0 = "zq;"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4623():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4624():
    int_0 = -74
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4625():
    int_0 = -836
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4626():
    float_0 = -3705.9227
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4627():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4628():
    str_0 = "8CV"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4629():
    str_0 = "XB=.'D"
    bool_0 = False
    str_1 = "Ynl^~~DWc"
    dict_0 = {str_0: bool_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4630():
    float_0 = 572.6295
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4631():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    )
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4632():
    str_0 = "/ "
    float_0 = -595.11378
    str_1 = " Kr?}0"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: float_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4633():
    object_0 = module_1.object()
    str_0 = "=sUkvb="
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4634():
    int_0 = -2889
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4635():
    bytes_0 = b"\xe9\xb5\x00\x90\xec\x88\x8e\xaa%?U\xe2t"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4636():
    str_0 = "Lj5~ o"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4637():
    bytes_0 = b"J\x089D\xb3\x8cGT\xfe"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4638():
    str_0 = ""
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4639():
    bytes_0 = b"\xda\x06\xb9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4640():
    bytes_0 = b"/\xccZF%\xe2Ui\x0c8e'\t\xce\x08\x04,"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


def test_case_4641():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4642():
    str_0 = ";.qn-'\x0c3M{\\B^~SL"
    str_1 = "U6hL"
    bytes_0 = b""
    dict_0 = {str_0: str_0, str_1: bytes_0, str_1: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4643():
    str_0 = ".v!~N~;1"
    list_0 = [str_0, str_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4644():
    bytes_0 = b"\xed\x99f\x06"
    cookiecutter_exception_0 = module_2.CookiecutterException()
    bytes_1 = b"H8\xd8"
    tuple_0 = (bytes_0, cookiecutter_exception_0, bytes_1, cookiecutter_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4645():
    bool_0 = False
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {
        bool_0: bool_0,
        bool_0: bool_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
    }
    tuple_0 = (bool_0, bool_0, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4646():
    str_0 = "\\\x0b+g[auDunx')@"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4647():
    float_0 = 738.0
    list_0 = [float_0]
    str_0 = "3VP\x0bqw4"
    str_1 = "y&JhF%6H`I"
    dict_0 = {str_0: float_0, str_0: str_0, str_0: float_0, str_1: float_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4648():
    str_0 = '}e[\x0cT\x0b\n/<5 *"'
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4649():
    str_0 = "ec0"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4650():
    int_0 = 2074
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4651():
    str_0 = "|G_YLYkGj\x0b%"
    bytes_0 = b"Y \x1c+\x13\xd9Z\x8d\x88\x82\x92wX\xf9\xf8\xa4"
    dict_0 = {str_0: bytes_0, str_0: bytes_0, str_0: str_0}
    tuple_0 = (str_0, dict_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4652():
    bytes_0 = b"m\xb6^\xe1S\x06"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4653():
    int_0 = -271
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4654():
    str_0 = "97&-(N"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4655():
    bytes_0 = b"f/\xc2\xcc\xc3%\xb6\xde]\xc9\x9ey\xdb\xc1}VW\xd6\x01\xbc"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4656():
    int_0 = -533
    tuple_0 = (int_0,)
    base_exception_0 = module_1.BaseException(*tuple_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4657():
    complex_0 = 926.1779 - 2380.581j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4658():
    int_0 = -4230
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4659():
    str_0 = "p=PNP?5Y4x\x0b "
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4660():
    complex_0 = 2789.109 + 50.108j
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4661():
    bytes_0 = b"\xfa\xae\xf9|\x10\xf7\xf2\x9d\x1e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4662():
    bytes_0 = b'\xac\x13\x18\xfb"sK{=\x07j\n)\x866\x7f\xcc?\x98\xc3'
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *bytes_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4663():
    float_0 = 1514.13348
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4664():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    set_0 = {non_templated_input_dir_exception_0, bool_0}
    list_1 = [set_0, non_templated_input_dir_exception_0, list_0]
    module_2.NonTemplatedInputDirException(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4665():
    int_0 = -20
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4666():
    bytes_0 = b"z\xca\xec\x94\xfb\x1a\x95\x1b(p_\xd3\xa3\xc2Oq\xcdT#\xa4"
    module_0.find_template(bytes_0)


def test_case_4667():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4668():
    str_0 = "&[T2"
    set_0 = {str_0, str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4669():
    int_0 = -2569
    module_1.Exception(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_4670():
    bytes_0 = b"\x9a\xd5R\x9d@\xfed\xa4\xe1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4671():
    object_0 = module_1.object()
    list_0 = [object_0, object_0, object_0, object_0]
    list_1 = [list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_4672():
    float_0 = 544.28
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4673():
    bytes_0 = b"t\x162\x04@\xcf\x8e\xa7\x14\x95\xef\xe7\x0f\x8b9r\xef\xee"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4674():
    float_0 = 1663.94
    float_1 = -949.0
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_1, float_1: float_1}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4675():
    str_0 = "L1"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4676():
    int_0 = 490
    set_0 = {int_0, int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4677():
    bool_0 = False
    list_0 = [bool_0]
    list_1 = [bool_0]
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_1, **dict_0)
    list_2 = [list_0, cookiecutter_exception_0]
    module_0.find_template(list_2)


def test_case_4678():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4679():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4680():
    int_0 = -370
    module_0.find_template(int_0)


def test_case_4681():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4682():
    bytes_0 = b"e\xd2U"
    module_2.CookiecutterException(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4683():
    int_0 = 900
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4684():
    str_0 = "a*JW~\n\r"
    bytes_0 = b"\x1e"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: bytes_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4685():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4686():
    complex_0 = 1358.97 + 2962.5199j
    tuple_0 = (complex_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4687():
    float_0 = -76.807032
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4688():
    bytes_0 = b"\xc0\xd8`\xfc6\xf3\xb3\xf9\x0e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4689():
    bytes_0 = b"\x8c\xae\xa8m\xde\x80\xa3TX*\x11`d\xd4\xe83s\xe6\xd5"
    list_0 = [bytes_0, bytes_0]
    bytes_1 = b"\xcar\xb5\xfbx\xe0\xbb\x81"
    set_0 = {bytes_0}
    tuple_0 = (list_0, bytes_1, bytes_0, set_0)
    list_1 = [bytes_0, tuple_0, tuple_0, tuple_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    set_1 = {non_templated_input_dir_exception_0}
    module_0.find_template(set_1)


@pytest.mark.xfail(strict=True)
def test_case_4690():
    bytes_0 = b":\xedR\xd99\xcb5(>\x1d(\xe2\xbc\x99\xe5\x9e{\xc3\x17\xa6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4691():
    str_0 = "@&%nO!&.maGjZ\\`"
    str_1 = "+Qdt@`]"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4692():
    int_0 = 1949
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4693():
    int_0 = 4936
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4694():
    none_type_0 = None
    list_0 = [none_type_0]
    module_2.NonTemplatedInputDirException(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4695():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_2.CookiecutterException(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4696():
    float_0 = -2007.285758
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4697():
    str_0 = "}6kJ|&\nV9i $@%9|U&"
    dict_0 = {str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4698():
    str_0 = ""
    str_1 = "[*9LN"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4699():
    bytes_0 = b"\xbcz\xe6\xa0\x91>&\xe4\xb0\xdb\xb4lL\xca\x90\x04"
    str_0 = "5?aLf\r?L"
    set_0 = {bytes_0, bytes_0, str_0, bytes_0}
    list_0 = [set_0, bytes_0, set_0]
    tuple_0 = ()
    tuple_1 = (list_0, tuple_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4700():
    list_0 = []
    exception_0 = module_1.Exception(*list_0)
    list_1 = [exception_0, exception_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4701():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4702():
    bool_0 = False
    int_0 = -1711
    list_0 = [bool_0, bool_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    bytes_0 = b"\x11\xf1\xe0(^\x18\xe9|\x06S\xf7gp."
    tuple_0 = (non_templated_input_dir_exception_0,)
    set_0 = {int_0, tuple_0, tuple_0}
    tuple_1 = (non_templated_input_dir_exception_0, bytes_0, set_0, bytes_0)
    list_1 = [tuple_1, int_0, set_0, list_0]
    base_exception_0 = module_1.BaseException(*list_1)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4703():
    bytes_0 = b"\x18r\xd5<y/\xbd\x9a[.\x05\xe3\xe7\xe1\xf4\xd3"
    module_2.NonTemplatedInputDirException(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4704():
    bytes_0 = b"N\xfc\x0c\x95FD"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4705():
    bool_0 = True
    set_0 = {bool_0}
    list_0 = [set_0, bool_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    list_1 = [cookiecutter_exception_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_4706():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    str_0 = "Dpy(,\x0br1?("
    dict_0 = {str_0: bool_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4707():
    bytes_0 = b"8;\xd9\x1d\x95^\x1b\xb6\x8dC\xf6\x13Q\xa3\x16\x8e;"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4708():
    str_0 = 'rCN0OuKXG2"gm$V9'
    tuple_0 = (str_0,)
    dict_0 = {tuple_0: tuple_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4709():
    int_0 = -486
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4710():
    bytes_0 = b"rO\xf7\xd6\xfb'\x12\xe2\x9a\xd4\xe6\xe1\xbeQ-\xad\x05|"
    str_0 = "Kkv}JNX>^(+M?V8"
    list_0 = [bytes_0, bytes_0, bytes_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4711():
    bytes_0 = b"\xf6\xc8\xb7\xa3\x05\x16\xcd\xe4]'|\x9d\x91)\xb9\xd2\x0fDu"
    set_0 = {bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4712():
    bytes_0 = b"\x85\xb2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4713():
    bytes_0 = b"^\xa6t\xda\x9f\xf4\x80T\xf8\xe0\xb3b\xb8"
    list_0 = [bytes_0, bytes_0]
    exception_0 = module_1.Exception(*list_0)
    list_1 = [bytes_0, exception_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_1)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4714():
    str_0 = "E'W\\)0vk5[D\"zl&x|H"
    list_0 = [str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4715():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    str_0 = "/'OK+Ai}"
    dict_0 = {str_0: non_templated_input_dir_exception_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4716():
    str_0 = "5&Y"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4717():
    complex_0 = -1354 - 161.43j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4718():
    set_0 = set()
    bool_0 = True
    tuple_0 = (bool_0,)
    tuple_1 = (set_0, bool_0, tuple_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4719():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    complex_0 = 119.839 + 3484.6j
    int_0 = -663
    tuple_0 = (non_templated_input_dir_exception_0, complex_0, int_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4720():
    str_0 = "`\x0c|S2vn"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4721():
    float_0 = -2003.88151
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4722():
    float_0 = -3103.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4723():
    int_0 = -2085
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    bool_0 = True
    tuple_0 = (int_0, dict_0, dict_0, bool_0)
    module_2.NonTemplatedInputDirException(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4724():
    int_0 = -2579
    set_0 = {int_0, int_0, int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4725():
    bytes_0 = b"\xfff\xb6\xc3\xdb\xdc\x15:\\w["
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4726():
    complex_0 = -2763.9 + 1391.85j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4727():
    str_0 = '2Gyx6:U"n'
    str_1 = ";\n\tL\x0cfEltp;f2"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4728():
    bytes_0 = b"\\\xf2\xfa\x1a\xed\x92\xd5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4729():
    bytes_0 = b"\xccQ~wcKQ\xdc8.A\xeem\xe5\x07\xda\xab\xab@"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4730():
    float_0 = -1195.9
    list_0 = [float_0, float_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4731():
    complex_0 = 727.5 + 1506.123011j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4732():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4733():
    int_0 = 1448
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4734():
    object_0 = module_1.object()
    list_0 = [object_0, object_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4735():
    str_0 = ""
    list_0 = [str_0, str_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4736():
    bytes_0 = b"v\x8bv\xd2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4737():
    str_0 = "+v<_"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4738():
    int_0 = 1375
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4739():
    str_0 = "\n*6_2e)-G"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4740():
    bytes_0 = b""
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4741():
    str_0 = "P\x0cPM%d]qaV"
    none_type_0 = None
    str_1 = "4W:]-{GP;"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4742():
    float_0 = -157.3
    dict_0 = {float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4743():
    float_0 = -1278.855
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4744():
    str_0 = "QqLd)@e,\n1(o"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4745():
    str_0 = "v_SUfEvT"
    str_1 = "b&bEQ\rjXfVtZae\\*"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4746():
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_1.Exception(*non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4747():
    float_0 = -2503.957106
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4748():
    int_0 = -2413
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4749():
    dict_0 = {}
    list_0 = [dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4750():
    str_0 = 'U=1"p|Zm5cUg0\x0c'
    str_1 = '\t`p2Z[XkfY"oh4xqO#('
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4751():
    bytes_0 = b"\xcb>\xc2\x87\xedy\xa6\x9f5\xea\xccR\xdc[Xfo\xd0\xf8\x87"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4752():
    bytes_0 = b"\xbc\xf5\x06\xee\xa1\x9d{\x86Z\xa1\xe4\xa0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4753():
    str_0 = "GrES\x0c| UKdri'Zun!E\to"
    module_0.find_template(str_0)


def test_case_4754():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4755():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    int_0 = -2582
    list_0 = [cookiecutter_exception_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4756():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4757():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4758():
    bytes_0 = b""
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    int_0 = -2116
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_0 = (
        bytes_0,
        non_templated_input_dir_exception_0,
        int_0,
        cookiecutter_exception_0,
    )
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4759():
    str_0 = "+\x0bJ'<`[7IM4h=z"
    str_1 = ".O1"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4760():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    tuple_0 = (dict_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4761():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4762():
    bytes_0 = b".\xa6\xd7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4763():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    list_1 = [list_0, list_0]
    list_2 = [list_1]
    module_0.find_template(list_2)


@pytest.mark.xfail(strict=True)
def test_case_4764():
    object_0 = module_1.object()
    module_2.NonTemplatedInputDirException(*object_0)


def test_case_4765():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4766():
    str_0 = "C+[(23"
    int_0 = -1571
    dict_0 = {str_0: str_0, str_0: int_0, str_0: int_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4767():
    float_0 = 1980.2
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4768():
    str_0 = "O*0L[5<&\\|"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4769():
    bytes_0 = b"\x04\xb4E\x96)Y\xc4c\xac\x02\x94\xa5\x13\x1a\x8a\xef\xb1\xa05"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4770():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4771():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0, exception_0]
    module_2.NonTemplatedInputDirException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_4772():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = [
        non_templated_input_dir_exception_0,
        bool_0,
        non_templated_input_dir_exception_0,
    ]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_4773():
    bytes_0 = b"\xc1\xb3^\xcc\x06\x02\x163m^\xb7qV\xfeN\xc6e\x08"
    str_0 = "b3X'j.^h+Ed!j#%\"JP"
    dict_0 = {str_0: bytes_0}
    module_1.object(*bytes_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4774():
    int_0 = -2293
    dict_0 = {int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4775():
    str_0 = "O{"
    str_1 = "eUu7~9\no)M%)aNit\\ha~"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4776():
    int_0 = -219
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_0 = False
    tuple_0 = (int_0, non_templated_input_dir_exception_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4777():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4778():
    int_0 = 200
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4779():
    int_0 = -462
    module_2.CookiecutterException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_4780():
    int_0 = 1097
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4781():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    str_0 = ""
    str_1 = "2"
    str_2 = "}"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: non_templated_input_dir_exception_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4782():
    list_0 = []
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4783():
    bytes_0 = b"\x8e\xd0\xc0)\xc9\x08\xa4}\xc2B"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4784():
    float_0 = -113.21037
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4785():
    float_0 = -2699.27372
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4786():
    str_0 = "viI&XdQ"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4787():
    exception_0 = module_1.Exception()
    list_0 = [exception_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    dict_0 = {cookiecutter_exception_0: exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4788():
    bytes_0 = b"\xce\xdd\xc4\xe6\xafe'\x19\x97\xa2d W\xdb?|"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4789():
    int_0 = -1742
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4790():
    exception_0 = module_1.Exception()
    set_0 = {exception_0, exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4791():
    str_0 = " NX9=\x0bS7t"
    base_exception_0 = module_1.BaseException()
    dict_0 = {str_0: str_0, str_0: base_exception_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4792():
    int_0 = -1600
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4793():
    bytes_0 = b"\x12\x02\x9a\x96\xa2-\x8d\xfa\xc2\x0b"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4794():
    int_0 = 810
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4795():
    base_exception_0 = module_1.BaseException()
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4796():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_2.NonTemplatedInputDirException(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4797():
    bytes_0 = b"\x15\x80"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4798():
    str_0 = "2}h-7"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4799():
    list_0 = []
    str_0 = "YO^#xt"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4800():
    str_0 = "B\rgMKR8L\rIUn|<Cm~[=k"
    str_1 = "&Q22U];`F4Yl,?H"
    int_0 = -2316
    dict_0 = {str_0: str_0, str_1: int_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4801():
    int_0 = 953
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4802():
    int_0 = 353
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4803():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4804():
    int_0 = 1878
    list_0 = [int_0, int_0, int_0, int_0]
    module_1.object(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_4805():
    bytes_0 = b"N;b!(\xdf\xf9&Lt\x82\xec\xad\xaa\xbak"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4806():
    str_0 = "!3SKH>\x0c;-\x0cA5"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4807():
    bytes_0 = b"c\xbc\xe4\x00\xa0\x85z^\xd9+\xf3UO\n\xbeV"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4808():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    list_1 = []
    list_2 = [
        non_templated_input_dir_exception_0,
        list_0,
        list_1,
        non_templated_input_dir_exception_0,
    ]
    module_0.find_template(list_2)


@pytest.mark.xfail(strict=True)
def test_case_4809():
    bytes_0 = b"\xdc\x9eu]\x85\x9f\x84"
    str_0 = "m6j)bjQ.wB|i#M"
    dict_0 = {str_0: bytes_0, str_0: bytes_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4810():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    str_0 = "b\n6\x0b3h[kVBfil)QrJfK"
    str_1 = "KR"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4811():
    bool_0 = True
    tuple_0 = (bool_0,)
    set_0 = {tuple_0, tuple_0, bool_0, bool_0}
    bool_1 = False
    tuple_1 = (set_0, bool_0, bool_1)
    list_0 = [tuple_1]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4812():
    bytes_0 = b"\xa2\xcd)_\x1e\xaeM\xf7\xbe\xdbi\xc2u\x7fc\xe2\x17\xceB\xea"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4813():
    bytes_0 = b"\xb6p(\x92\xf4\x05\xb1\xe1\x08\xe0\x83\xf1\x8b7\x06\x96\x89"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4814():
    int_0 = 1830
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4815():
    complex_0 = 1838.3 + 1081j
    dict_0 = {complex_0: complex_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4816():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    set_0 = {cookiecutter_exception_0, cookiecutter_exception_0}
    list_0 = [set_0, set_0, cookiecutter_exception_0, set_0]
    module_1.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4817():
    bytes_0 = b"u8\xa9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4818():
    int_0 = -1641
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4819():
    bytes_0 = b"\\\xdaLi"
    module_0.find_template(bytes_0)


def test_case_4820():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )


@pytest.mark.xfail(strict=True)
def test_case_4821():
    complex_0 = -618.28 + 918.55j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4822():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bytes_0 = b""
    tuple_0 = (dict_0, non_templated_input_dir_exception_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4823():
    float_0 = -5605.307
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4824():
    float_0 = 1116.93
    module_2.NonTemplatedInputDirException(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_4825():
    bytes_0 = b"\x93\xab\xd759\xa1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4826():
    str_0 = "k3m\t@@:\ng!i0ROcC2D3"
    module_0.find_template(str_0)


def test_case_4827():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4828():
    int_0 = 218
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4829():
    complex_0 = 356.01496 + 441.575297j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4830():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_0 = True
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        bool_0: bool_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4831():
    int_0 = 2560
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4832():
    dict_0 = {}
    base_exception_0 = module_1.BaseException(**dict_0)
    set_0 = {base_exception_0, base_exception_0}
    str_0 = '{G\t{@dQ."GfKo'
    tuple_0 = (set_0, set_0, str_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4833():
    int_0 = 1922
    set_0 = {int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4834():
    bytes_0 = b"\t\x10g@K=\xfbI\xea\xb4\x808W("
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4835():
    bytes_0 = b"\xf26\\"
    base_exception_0 = module_1.BaseException()
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_0 = (bytes_0, base_exception_0, bytes_0, cookiecutter_exception_0)
    str_0 = "V[qqB-{+>\n/1Ne'"
    tuple_1 = (tuple_0, cookiecutter_exception_0, str_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4836():
    exception_0 = module_1.Exception()
    tuple_0 = ()
    set_0 = {exception_0, tuple_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4837():
    str_0 = "stA0\x0c3!\x0bJs+m~H."
    str_1 = "6d_W=/`Y~QvhrKYr\r:"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4838():
    float_0 = 2069.91
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4839():
    int_0 = 109
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4840():
    bytes_0 = b"]=\xc1\x80"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4841():
    complex_0 = -939 + 122.11j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4842():
    int_0 = -1836
    module_0.find_template(int_0)


def test_case_4843():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4844():
    int_0 = 2802
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4845():
    str_0 = 'X\\lYP"$!IAPl'
    str_1 = "n\\Oqh"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4846():
    float_0 = 526.02063
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4847():
    float_0 = -428.8
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4848():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4849():
    bytes_0 = b"\xa5$]\x90z\x0fyT\x97\xf4\xce\x9f\xb6\xdf\xee"
    tuple_0 = (bytes_0, bytes_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4850():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *dict_0, **dict_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4851():
    bytes_0 = b"C@\x01\x95\xedD\x89S\x90i\xb9;\xcd\xc1"
    module_2.NonTemplatedInputDirException(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4852():
    int_0 = -2737
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4853():
    bytes_0 = b"\xc4?\xa5k\xa8\x8c\xe7\xc4\x197\xdd\xdb\xc5\xca \xab\xbe"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4854():
    str_0 = "ElF"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4855():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4856():
    str_0 = "j"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4857():
    str_0 = '{`0j,LI4A6"lTyg:|#SY'
    str_1 = 'FvODx"n^&i:SV5u|\x0cikI'
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4858():
    set_0 = set()
    tuple_0 = (set_0, set_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4859():
    str_0 = "B,v:"
    tuple_0 = (str_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4860():
    str_0 = "I.dTCF3[87P\r!"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4861():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    bytes_0 = b"\xb1\t\xeaj\xf6\xef1\xb4\xe8"
    dict_0 = {
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: bytes_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4862():
    int_0 = 227
    module_2.NonTemplatedInputDirException(*int_0, **int_0)


@pytest.mark.xfail(strict=True)
def test_case_4863():
    float_0 = 1017.638417
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4864():
    str_0 = "X3Q{bT]"
    str_1 = ">4sV"
    str_2 = "\nrH\r@E"
    str_3 = "hH7%Na(dV\x0b?Bpsg*eS"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0, str_3: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4865():
    str_0 = "KqBZruj@b"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4866():
    str_0 = "A,~|:\x0b)Qg!GFB+"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4867():
    str_0 = "AwyQ6lxg<WH\r`"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4868():
    bool_0 = False
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    tuple_0 = (bool_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4869():
    int_0 = 5345
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4870():
    str_0 = "b\t\x0c;_[SLFy"
    dict_0 = {str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4871():
    exception_0 = module_1.Exception()
    list_0 = [exception_0, exception_0]
    str_0 = "7^op\t\x0by?"
    dict_0 = {str_0: exception_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4872():
    int_0 = -819
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4873():
    float_0 = 962.476719
    list_0 = [float_0, float_0, float_0, float_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4874():
    complex_0 = 430.989 + 156j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4875():
    str_0 = "\\{(b"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4876():
    complex_0 = 4097.39 + 2949.401j
    tuple_0 = (complex_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4877():
    str_0 = "f7Qj lW&"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4878():
    bytes_0 = b"\x0b\x1d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4879():
    bytes_0 = b"d\xe6"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4880():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4881():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4882():
    str_0 = "\x0c~Fx2jo(@#_WBY"
    exception_0 = module_1.Exception()
    str_1 = "zX_j=s"
    dict_0 = {str_0: str_0, str_0: exception_0, str_1: exception_0}
    module_1.object(**dict_0)


def test_case_4883():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4884():
    bytes_0 = b"#Ts:n\r\x84\xc8<N\xb5\xf9\x04\xa9\n"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


def test_case_4885():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4886():
    str_0 = "3Mi&u[=r\rc"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4887():
    str_0 = "t =)Y%I"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4888():
    str_0 = "ZHmqtz\t\x0cq2"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4889():
    str_0 = "$c#j#8L"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4890():
    str_0 = "K{gt"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4891():
    int_0 = -2929
    module_2.NonTemplatedInputDirException(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_4892():
    bytes_0 = b"\xabG\xd6\x02\xb5\xe2\x87\xca\xfbX\x94\xdf\xa3\x9f\xc2\xc6z\xef"
    tuple_0 = (bytes_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4893():
    str_0 = 'aI"h"9%e\x0c%o,\tqu/IK!'
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4894():
    str_0 = 'VAi\x0c\x0b@>i&V9Qy"/OJ'
    bytes_0 = b"&\xc7H\xa7\x15\xd6\x83\xf2\xa4;;"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    tuple_0 = (str_0, bytes_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4895():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4896():
    str_0 = "]\\=c5X+IOe--a"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4897():
    float_0 = 1171.812
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4898():
    str_0 = "BONDre/"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4899():
    bytes_0 = b"\xe5\x01\x17,-\x7f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4900():
    bytes_0 = b"moL\xddS%"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4901():
    complex_0 = 1472.7952 + 3532.7j
    set_0 = {complex_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4902():
    bytes_0 = b"\xce/\xe9\xa7L\x07\x00\xba\xb3\xa5\xca\xe1"
    list_0 = [bytes_0]
    list_1 = [list_0, bytes_0]
    exception_0 = module_1.Exception(*list_1)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4903():
    complex_0 = -3466 - 638.894j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4904():
    complex_0 = -2171.11 - 1651.114j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4905():
    bytes_0 = b"u\x12\x9e\r\xdc\xbax\x01z(\r\xc5g7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4906():
    none_type_0 = None
    module_2.CookiecutterException(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4907():
    complex_0 = 507.73 - 2143j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4908():
    int_0 = 1416
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4909():
    float_0 = -254.94591
    set_0 = {float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4910():
    bytes_0 = b"\xa6\xa7\x82/\xfb\xed\x041"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4911():
    float_0 = -2178.59177
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4912():
    str_0 = "@*;E&@t'PMHv"
    module_0.find_template(str_0)


def test_case_4913():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4914():
    str_0 = ""
    str_1 = "rCky,H"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4915():
    int_0 = 1022
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4916():
    float_0 = -430.649211
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4917():
    str_0 = "e*r) {V"
    dict_0 = {str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4918():
    bytes_0 = b'\xfbfs\xb5\x1ee"\xa7U\xf5'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4919():
    int_0 = 560
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4920():
    int_0 = -669
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4921():
    float_0 = -2085.01
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4922():
    bytes_0 = b"/\xf0\xf3i\x1d\xf0~\x13b\xfa\x92\xc23\xc3\xe5z}\xae"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4923():
    bytes_0 = b"\x17\xfa\xbf\xc1\xc2wkm[\x85\x1a\x8c%+F\xd14\x8c"
    dict_0 = {bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4924():
    str_0 = "!E)-g\x0b,Ifk|.%v8L[VM"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4925():
    int_0 = -197
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4926():
    exception_0 = module_1.Exception()
    dict_0 = {
        exception_0: exception_0,
        exception_0: exception_0,
        exception_0: exception_0,
        exception_0: exception_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4927():
    bytes_0 = b"\xf5\xa0\xb1\x95b\xd3\x02|MI\xadg\xd6eB\xc7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4928():
    int_0 = -723
    set_0 = {int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4929():
    int_0 = -702
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4930():
    bytes_0 = b"=\x81H]:"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4931():
    bytes_0 = b"\xca\xf88v?\xfb\x08\xd3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4932():
    bytes_0 = b"=\x96\x16G"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4933():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    ]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4934():
    bytes_0 = b"`\xa9\xdb\xeau\x1b\x8c\x17\x86\x88iW\xbb2<\r\\\xe1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4935():
    int_0 = -2454
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4936():
    str_0 = "\tu[9U_6q&lV1A"
    str_1 = "J"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4937():
    list_0 = []
    str_0 = "m9{"
    str_1 = "S\tUmO"
    dict_0 = {str_0: list_0, str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4938():
    float_0 = -2673.13
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4939():
    int_0 = -1283
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4940():
    str_0 = "0cQKf6tB{D"
    set_0 = {str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4941():
    bytes_0 = b"\x1a\x8c\x03\x12\xf6\xab$\xa5Ii\x0f*1]I\xb3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4942():
    none_type_0 = None
    module_1.BaseException(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4943():
    bytes_0 = b"\xd4\xf9\xc6\x88H"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4944():
    float_0 = -3043.3
    set_0 = {float_0, float_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4945():
    none_type_0 = None
    module_1.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4946():
    complex_0 = 149.30464 + 13.142j
    list_0 = [complex_0]
    module_1.Exception(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_4947():
    complex_0 = -866.7 + 97.35097j
    module_0.find_template(complex_0)


def test_case_4948():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4949():
    int_0 = 1745
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4950():
    bytes_0 = b"\x99\xff\xee\xb0\x9b\xf1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4951():
    str_0 = "=Xu%\r.3CN"
    module_0.find_template(str_0)


def test_case_4952():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4953():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4954():
    int_0 = -904
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4955():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4956():
    bytes_0 = b"\xd7\xc6\x84^nj"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4957():
    str_0 = "M>?&5^FyPKe"
    tuple_0 = (str_0,)
    list_0 = [tuple_0]
    module_0.find_template(list_0)


def test_case_4958():
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    exception_0 = module_1.Exception(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4959():
    complex_0 = -4615.954 + 332.358j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4960():
    str_0 = "P`2|\\!>LE+`^`1%8<"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4961():
    float_0 = -259.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4962():
    bytes_0 = b"A\xb7\xe6\x06\x13)\xe5Q\xdc\xd2/L\xbb\xe0\x08\xc8\xb2\x9d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4963():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    set_0 = {non_templated_input_dir_exception_0, non_templated_input_dir_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4964():
    float_0 = -2637.8391
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4965():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4966():
    int_0 = -1636
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4967():
    str_0 = "N-'N^d]Whzuoy;.:"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4968():
    str_0 = "n6F}3\t+`*>x-$]"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4969():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4970():
    bytes_0 = b"F4\x8a3\xac\x15\xe4[Y\x92"
    module_0.find_template(bytes_0)


def test_case_4971():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4972():
    str_0 = "hc"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4973():
    bytes_0 = b"\xf7t\x0bo\xa9\x97Oy\x11"
    list_0 = [bytes_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_4974():
    str_0 = "p7=,.dx4`)"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4975():
    float_0 = -1816.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4976():
    bool_0 = True
    module_2.CookiecutterException(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4977():
    str_0 = "1Uq7eGh5gH7yRjD??"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4978():
    str_0 = "_\x0b{\tFTk dje?VQHpV\x0bWx"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4979():
    bytes_0 = b"\xe1W\x9c)\x1c^\x86\xa2"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4980():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {non_templated_input_dir_exception_0: non_templated_input_dir_exception_0}
    list_0 = [dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4981():
    str_0 = "6U\x0cQ\x0b\x0cY+0i-g\x0boxe"
    dict_0 = {str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4982():
    str_0 = "!6S!Kp(c2srX\x0c_j'}R"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4983():
    bytes_0 = b'v\xb8\x14V\xbb:\xe5c\x06S\x99.\x8b$\x1b\xbf"\x83g'
    float_0 = 1251.962096
    tuple_0 = (bytes_0, bytes_0, float_0)
    module_2.NonTemplatedInputDirException(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4984():
    str_0 = "#[ojfkF!iw["
    int_0 = -155
    dict_0 = {str_0: int_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


def test_case_4985():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4986():
    float_0 = 380.69316
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4987():
    float_0 = 4152.303
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4988():
    bool_0 = False
    dict_0 = {}
    dict_1 = {bool_0: bool_0, bool_0: dict_0, bool_0: bool_0, bool_0: dict_0}
    module_0.find_template(dict_1)


@pytest.mark.xfail(strict=True)
def test_case_4989():
    bytes_0 = b"]yh\x1b\xc0|\xc9\xa4\xd1\x0e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4990():
    bytes_0 = b"\x19O\x0c\xd1\xa1\xe3\xa0E\xcd\xa3\xe3LZ\x94\xb2\x91\xf2T\xd2\x8c"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4991():
    int_0 = 1173
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4992():
    str_0 = "Pi2dGc{sz,$Q<09\r}LK"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4993():
    int_0 = 4397
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4994():
    bytes_0 = b"x\xdd\xb9\xa9e\x17V\xd9\xa5]\xbf\xd5\x86"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4995():
    int_0 = -467
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4996():
    int_0 = -2441
    module_1.Exception(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_4997():
    str_0 = "6P&cHgs|{6U/h2]Ib!Y"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4998():
    base_exception_0 = module_1.BaseException()
    set_0 = {base_exception_0, base_exception_0, base_exception_0, base_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4999():
    str_0 = "Y"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5000():
    float_0 = 763.3385
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5001():
    tuple_0 = ()
    cookiecutter_exception_0 = module_2.CookiecutterException(*tuple_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5002():
    str_0 = "qds7HLl:3$~\tvfN^"
    str_1 = "P3A`-e7o]IKYu"
    complex_0 = -1071.22 + 3431.889j
    str_2 = "WLB"
    str_3 = 'nRW>qvSc#AD"J~bn7N'
    dict_0 = {str_0: str_0, str_1: complex_0, str_2: str_2, str_3: str_1}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5003():
    bytes_0 = b'\xa5"\x1b\xb3\x04S\xe4\xd7{\x99\xb3?H#'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5004():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5005():
    int_0 = -800
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5006():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0]
    dict_0 = {}
    module_1.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5007():
    float_0 = -2041.9947
    set_0 = {float_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5008():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5009():
    int_0 = -1238
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5010():
    int_0 = 4938
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5011():
    str_0 = ";;1Z61"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5012():
    int_0 = -1656
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5013():
    int_0 = 0
    list_0 = [int_0, int_0, int_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    set_0 = {non_templated_input_dir_exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5014():
    list_0 = []
    str_0 = "#aH$zL?pKMz"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: list_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5015():
    str_0 = "E#+@,[gO4n;.;Z"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5016():
    str_0 = "+G ^3|=9<HxqT+',ExU"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5017():
    str_0 = "@)z,E"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5018():
    float_0 = -1150.36
    module_0.find_template(float_0)


def test_case_5019():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5020():
    float_0 = 387.604062
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5021():
    bytes_0 = b"\x98T\xa6\x0ff\xa7\x85"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5022():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0]
    module_2.CookiecutterException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_5023():
    int_0 = 2416
    str_0 = "mQ3\na\x0c\r,>gIf&[=CJv0"
    list_0 = [int_0]
    set_0 = set()
    tuple_0 = (int_0, str_0, list_0, set_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5024():
    float_0 = 5157.0
    set_0 = {float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5025():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    str_0 = 'GAbD"\x0b\tG'
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: str_0,
    }
    list_0 = [dict_0]
    base_exception_0 = module_1.BaseException(*list_0)
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5026():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    list_0 = [dict_0, tuple_0, dict_0, tuple_0]
    list_1 = [list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_5027():
    str_0 = "$`"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5028():
    str_0 = "Z3]\x0clV/\\"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5029():
    str_0 = '\n-S&Ys@D\tNY"H7?@'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5030():
    bytes_0 = b"\xb7\xb2D~\x11\xac\x80LI\xe3="
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5031():
    exception_0 = module_1.Exception()
    tuple_0 = (exception_0, exception_0, exception_0, exception_0)
    module_1.object(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5032():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    tuple_0 = (cookiecutter_exception_0,)
    tuple_1 = (cookiecutter_exception_0, cookiecutter_exception_0, tuple_0)
    module_1.Exception(**tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_5033():
    bytes_0 = b"^\xc9\nZ\xe2,s\x1d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5034():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5035():
    bytes_0 = b"Eu`\xe4m5\t\x10\xfbt\\\x83\x03"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5036():
    int_0 = -5870
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5037():
    bytes_0 = b"%]\xb8\x95\xb8\x1c\rD\x8e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5038():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_2.NonTemplatedInputDirException(**cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5039():
    float_0 = -1705.79245
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5040():
    bytes_0 = b"\x15\xe23\x1c\x15\xec\xeb\xf1\x95\xa4\xd8\x8d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5041():
    bool_0 = True
    int_0 = -1877
    list_0 = [bool_0, bool_0, int_0, bool_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5042():
    bytes_0 = b"\xdf\xb5\xf1p\x82(\x91"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5043():
    bytes_0 = b"c{eD$J\xcf"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5044():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5045():
    dict_0 = {}
    tuple_0 = (dict_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5046():
    bytes_0 = b"Ea\xe2\x95"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5047():
    complex_0 = -733.595 - 4220.9714j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5048():
    int_0 = 1788
    module_0.find_template(int_0)


def test_case_5049():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5050():
    str_0 = "@&p'alwG^:|T:+77U"
    module_0.find_template(str_0)


def test_case_5051():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5052():
    str_0 = "Wk^Le y<"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5053():
    bytes_0 = b"@F\xdfc\xbb\xb7Iu4\xfb"
    module_0.find_template(bytes_0)


def test_case_5054():
    list_0 = []
    list_1 = [list_0, list_0, list_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_1
    )


@pytest.mark.xfail(strict=True)
def test_case_5055():
    int_0 = 310
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5056():
    float_0 = -725.60804
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5057():
    int_0 = 335
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5058():
    int_0 = 829
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5059():
    str_0 = "?JjcCEQ0\x0cNZ1`['B"
    set_0 = {str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5060():
    float_0 = -465.92
    list_0 = [float_0]
    module_0.find_template(list_0)


def test_case_5061():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )


@pytest.mark.xfail(strict=True)
def test_case_5062():
    bytes_0 = b"c\x9b\xbbo"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5063():
    bytes_0 = b"U\x1f\xf2_\xa9\x13\xed\xcc\xb9>\x11\xbc\xd5\xf2\x91\x80_"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5064():
    str_0 = ":QB\x0cfoT6*bD!"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5065():
    float_0 = -36.4145
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5066():
    int_0 = 3406
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5067():
    float_0 = -1893.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5068():
    int_0 = 4174
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5069():
    bytes_0 = b"$\xd7\x19\xad\t\x91\xac\xdf\xb0nM"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5070():
    str_0 = "a8?l6[%y9,"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5071():
    float_0 = -859.2822
    str_0 = "\\\x0cr\x0bW/`E7T"
    str_1 = "E"
    str_2 = "nh&\x0b"
    bool_0 = True
    dict_0 = {str_0: str_0, str_1: float_0, str_2: bool_0, str_0: bool_0}
    module_2.NonTemplatedInputDirException(*float_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5072():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = (bool_0, bool_0, set_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5073():
    str_0 = "UK\x0ciSL>"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5074():
    set_0 = set()
    list_0 = [set_0, set_0, set_0]
    list_1 = [set_0, set_0, list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_5075():
    str_0 = "EH}zNRcF;be/"
    module_2.CookiecutterException(**str_0)


def test_case_5076():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5077():
    set_0 = set()
    module_1.Exception(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_5078():
    int_0 = -4454
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5079():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5080():
    str_0 = "Gh=\\k$y\\OooG"
    list_0 = [str_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5081():
    str_0 = "y0VNLw4t_'g`gk"
    none_type_0 = None
    str_1 = "|7BV\nD?"
    str_2 = "G."
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
        str_2: none_type_0,
    }
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5082():
    str_0 = ".s*gRzd/xK!}"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5083():
    str_0 = "B\teQc\x0ciD[4mSSCPsb`D"
    str_1 = ')!"/$6"E'
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_1, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5084():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5085():
    bytes_0 = b"\x92\xbe\x95\xda\x0fE\xfe:\xc1\xad\x82\x93"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5086():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5087():
    complex_0 = 898.7 + 2449.1j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5088():
    str_0 = "/B@GZ"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5089():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_1.BaseException(*non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5090():
    str_0 = "1i"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5091():
    float_0 = -615.27244
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5092():
    none_type_0 = None
    list_0 = [none_type_0]
    str_0 = "^;2x3doYXpe22[d9/mu"
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5093():
    str_0 = 'IYDeG$l\n"xhl(OI|.\n?\x0c'
    str_1 = "3h_tH4f2]t"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5094():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5095():
    str_0 = "pPx"
    str_1 = "7ct^\nFn\\9j|@&syIW"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5096():
    str_0 = "jqe\x0c4'=5+a=8$7Wy"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5097():
    str_0 = "\x0b| Lp+-<("
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5098():
    int_0 = -2491
    list_0 = [int_0]
    list_1 = [list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_5099():
    str_0 = "\r% ]CxrQqR<"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5100():
    bool_0 = True
    bytes_0 = b'\x11c\xa6\x86"}+6;'
    tuple_0 = (bool_0, bytes_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5101():
    str_0 = "a*?%\tc%[Bq8PHUksn"
    set_0 = {str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5102():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    int_0 = -1835
    tuple_0 = (
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        int_0,
    )
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5103():
    str_0 = ".(eWqofa>eM."
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5104():
    float_0 = -589.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5105():
    none_type_0 = None
    list_0 = [none_type_0]
    exception_0 = module_1.Exception(*list_0)
    set_0 = {exception_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5106():
    str_0 = 'pT"^Qi'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5107():
    bytes_0 = b"\x96k|\x07\xa4n\xf2\xfbG\xd3\x7fm\x89a\t~\xa6Zmf"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5108():
    base_exception_0 = module_1.BaseException()
    module_0.find_template(base_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5109():
    str_0 = "!9b-zC?!T=F"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5110():
    bool_0 = False
    bool_1 = False
    list_0 = [bool_0, bool_1, bool_1]
    exception_0 = module_1.Exception(*list_0)
    tuple_0 = (exception_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5111():
    int_0 = -531
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5112():
    str_0 = "m4]0Q8E0D'1)9PVyWv"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5113():
    str_0 = 'N\x0bDX"Ul'
    module_2.CookiecutterException(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_5114():
    str_0 = "-/gx\\vy\n{oz]"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5115():
    str_0 = "hyMw"
    none_type_0 = None
    str_1 = '0%X%82`6i\nH")'
    str_2 = "QA>+1-{W;wX"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_2: none_type_0}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5116():
    int_0 = -388
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5117():
    bytes_0 = b"<\x00\xa9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5118():
    float_0 = 4259.1624
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5119():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5120():
    int_0 = -1249
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5121():
    dict_0 = {}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5122():
    complex_0 = 222.952336 - 872.27j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5123():
    bytes_0 = b"\x08,\x93\xce\x86\xce;e\x9f;4\xb3\x86'\x9e\xc5\xe5"
    list_0 = [bytes_0]
    none_type_0 = None
    module_1.object(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5124():
    bytes_0 = b"D\xa2\x0b\x88\x85\xf1v\x1d\xe8"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5125():
    int_0 = 5278
    module_2.NonTemplatedInputDirException(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_5126():
    str_0 = "lc"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5127():
    str_0 = "c$=2\\BG"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5128():
    str_0 = 'y(<u\x0b^E"ZOqW\t\t*'
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5129():
    bytes_0 = b"\xa7zD\x16\x93\x92\x97GV'"
    tuple_0 = ()
    dict_0 = {bytes_0: bytes_0, tuple_0: bytes_0, tuple_0: bytes_0, tuple_0: bytes_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5130():
    bool_0 = True
    list_0 = []
    str_0 = "ZqEt"
    dict_0 = {str_0: list_0, str_0: bool_0}
    module_2.CookiecutterException(**dict_0)


def test_case_5131():
    base_exception_0 = module_1.BaseException()


@pytest.mark.xfail(strict=True)
def test_case_5132():
    bytes_0 = b"x\x01\xef\xf6`\xe5\xb7A\x12\x1a\xa9>\x92\x9a\xa3H+\x80q"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5133():
    str_0 = "AqplR*T_5+\x0cig&Ah'wX,"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5134():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_0, bool_0, bool_0, bool_1)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5135():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5136():
    int_0 = 2395
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5137():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5138():
    str_0 = "-Zl"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5139():
    bytes_0 = b"\\\x96\x1d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5140():
    int_0 = -3821
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5141():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5142():
    bytes_0 = b"Z\xf0\x80/ \n\xfb\x17\xf9l\xd9H{\x8b\x0f\xd6\x83\xa5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5143():
    bytes_0 = b"\x7fx\"\x03.\xaf7zt\xbc\x1f\xcf'\x03W\x18\x07"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5144():
    str_0 = "&M"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5145():
    bytes_0 = b"\xb0"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5146():
    int_0 = 783
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5147():
    bytes_0 = b"H\x0b\x0e^V/\x96"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5148():
    int_0 = -3890
    list_0 = [int_0, int_0, int_0]
    bytes_0 = b"^\xe5ya\xe0\x1086og\x94\x11Hk\xc56"
    tuple_0 = (int_0,)
    tuple_1 = (list_0, bytes_0, list_0, tuple_0)
    module_1.BaseException(**tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_5149():
    int_0 = 195
    set_0 = set()
    tuple_0 = (int_0, int_0, int_0, set_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5150():
    str_0 = 'P+WqY"Oec~Rz'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5151():
    str_0 = "\x0c$S(Vh"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5152():
    exception_0 = module_1.Exception()
    module_1.Exception(*exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5153():
    float_0 = 709.058132
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5154():
    str_0 = "`BD"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5155():
    str_0 = "|*g@`0aLq$vl=\r"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5156():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    list_1 = [list_0, list_0]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_5157():
    str_0 = "xh*cT~/Y.5&\x0cd|v}oxN"
    set_0 = {str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5158():
    bytes_0 = b"\xb3\x9d\xe6u]\xd8\x12\x11,\xa4\xc1 \xbb\x04\xf7kwk\xb4"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5159():
    bytes_0 = b"\xaeQ6\xee_\xf9\xde\x12\x93\x0bc\xb2\x19\xceO\x18\xcd2\x9d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5160():
    exception_0 = module_1.Exception()
    module_1.object(**exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5161():
    bool_0 = False
    str_0 = ""
    str_1 = "9Qug"
    str_2 = "!F>8"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1}
    module_2.NonTemplatedInputDirException(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5162():
    bytes_0 = b"\xf16\xe5\x88\xfe\xbd&\x08gw\xbb"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5163():
    int_0 = 2205
    module_1.Exception(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_5164():
    bytes_0 = b'\x19Q!+\x08\x9bT\xae:\x1d"Rw\xc0I\xebR\xd7'
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5165():
    bool_0 = False
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)
    tuple_0 = (bool_0, exception_0)
    set_0 = {tuple_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5166():
    str_0 = "17\x0cHrUGg9.q\\a\t!"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5167():
    float_0 = -612.4119
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5168():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5169():
    complex_0 = -3976.34 + 1042.516j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5170():
    str_0 = "b?LM{uCixX|v_\x0b"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5171():
    str_0 = "0IM;lOIioF!`"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5172():
    bytes_0 = b"\xd1\xcf\xca\xed\xea\xe4lF"
    str_0 = "CC)c;ssm)b\x0bY^q"
    tuple_0 = (bytes_0, str_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5173():
    str_0 = "\n/`HOy4'&,-U"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5174():
    str_0 = "k=s*IVR0+f $r"
    module_0.find_template(str_0)


def test_case_5175():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    exception_0 = module_1.Exception(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5176():
    int_0 = -738
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5177():
    bytes_0 = b"\x95`\xbb\x1a\xa2\xf0}\x03"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5178():
    str_0 = "9\"}w'DA*2M_3~W!G7]:"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5179():
    complex_0 = 353.797 + 352j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5180():
    bytes_0 = b"X\x82t\x00\x05\xcb\x02\xf2"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5181():
    float_0 = 3808.9781
    module_0.find_template(float_0)


def test_case_5182():
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5183():
    float_0 = 5345.6808
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5184():
    str_0 = "nsV5)DU\nm'Fi'B0X"
    str_1 = "|M=yjS(vQ=*W`Vg'02A"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_1.Exception(**dict_0)


def test_case_5185():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5186():
    int_0 = -2087
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5187():
    list_0 = []
    str_0 = "ag;WG=#l{+l`C1IbV`sK"
    str_1 = "#Q`'jlP/sye{:_~K,L"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5188():
    bool_0 = False
    module_2.NonTemplatedInputDirException(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5189():
    int_0 = -1680
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5190():
    exception_0 = module_1.Exception()
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5191():
    bytes_0 = b"\x04\xd2"
    list_0 = [bytes_0]
    str_0 = "OY`r/Nc1J^*flp\x0c-A"
    dict_0 = {str_0: bytes_0, str_0: list_0}
    module_2.NonTemplatedInputDirException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5192():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5193():
    str_0 = 'g/?`b05";DNM\r>SYErc7'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5194():
    none_type_0 = None
    module_1.BaseException(*none_type_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5195():
    float_0 = -921.951
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5196():
    str_0 = 'g"'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5197():
    str_0 = "+)0e("
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5198():
    int_0 = 837
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5199():
    complex_0 = -2991 - 182.939j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5200():
    int_0 = -2631
    module_0.find_template(int_0)


def test_case_5201():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_5202():
    int_0 = -4072
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5203():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_2.CookiecutterException(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5204():
    int_0 = 2620
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5205():
    exception_0 = module_1.Exception()
    dict_0 = {
        exception_0: exception_0,
        exception_0: exception_0,
        exception_0: exception_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5206():
    bytes_0 = b"\xff\x12|2\xe8f\xbf9\xc7X\x18E\xcd\x19U="
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5207():
    base_exception_0 = module_1.BaseException()
    dict_0 = {base_exception_0: base_exception_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5208():
    str_0 = "0)MCEA"
    list_0 = [str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5209():
    bytes_0 = b"\xc3\xd6*\xc0JNc\x9d"
    exception_0 = module_1.Exception()
    set_0 = {bytes_0, exception_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5210():
    bytes_0 = b"G%\xae\xce\x85\xbe\xd6;5\xb1\xf7\xd1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5211():
    int_0 = -1919
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5212():
    str_0 = "FA itsJ+.ZGP|ZPx"
    none_type_0 = None
    str_1 = "uV&9otCUzon<_]"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5213():
    bool_0 = False
    str_0 = "v3\x0c\tKtN"
    tuple_0 = (bool_0, str_0, bool_0)
    module_1.Exception(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5214():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_5215():
    str_0 = ")t*}TR`MC> "
    tuple_0 = (str_0, str_0, str_0)
    float_0 = -1537.18092
    list_0 = [tuple_0, float_0, str_0]
    module_0.find_template(list_0)


def test_case_5216():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5217():
    float_0 = 3626.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5218():
    float_0 = -91.46
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5219():
    str_0 = "ka"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5220():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    dict_0 = {}
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0, **dict_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5221():
    bytes_0 = b"c5\xb4>Oj\x03$\x12"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5222():
    str_0 = "I]-"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5223():
    int_0 = 843
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5224():
    str_0 = "\x0c"
    list_0 = [str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5225():
    complex_0 = 918.47806 - 1772.4164j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5226():
    bool_0 = True
    exception_0 = module_1.Exception()
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    dict_0 = {}
    tuple_0 = (bool_0, exception_0, non_templated_input_dir_exception_0, dict_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5227():
    float_0 = -2194.60001
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5228():
    int_0 = -4874
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5229():
    bytes_0 = b"PO.\xa7X\x9a\xfc\xbe"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *bytes_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5230():
    list_0 = []
    base_exception_0 = module_1.BaseException(*list_0)
    bool_0 = False
    tuple_0 = (base_exception_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5231():
    bytes_0 = b"\x06\x9eY\x9d\x9f\x057\x1d\xf2]\xb1\xfb\r\xf5(B~L"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5232():
    bytes_0 = b"\xfbp*,\x85\xe1\xdf\x13\x1bJ'r6\x97\xf2+"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5233():
    str_0 = "k*lDeAOUHbK"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5234():
    bytes_0 = b"\xc7i\x9b\x8f\xd5`@\xf8\xb4\xb6\x8fm"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5235():
    complex_0 = 729.9611 + 2751.7943j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5236():
    bytes_0 = b"*o\xe5d\xba\xd0\xbfz"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5237():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_2.NonTemplatedInputDirException(*non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5238():
    float_0 = -755.37773
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5239():
    complex_0 = 1986 - 1389j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5240():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_2.NonTemplatedInputDirException(*cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5241():
    int_0 = 3247
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5242():
    int_0 = -517
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5243():
    str_0 = "#NXi1?1bYJRZT#Khv6"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5244():
    str_0 = "Py]R"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5245():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5246():
    float_0 = -999.086
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5247():
    str_0 = "$~`=?;>5{"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5248():
    bytes_0 = b"\x01\xeb8R\\\xc6_,`\xd0_\xcc\x07`\x18"
    list_0 = []
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    tuple_0 = (
        bytes_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    )
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5249():
    int_0 = -2966
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5250():
    none_type_0 = None
    str_0 = "\rOF2"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5251():
    str_0 = "BtF|xw.\rH"
    str_1 = "<':w.QP"
    str_2 = "N"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5252():
    str_0 = "\x0c"
    str_1 = "UCaiu;Pr\\7J,4WHnfs[D"
    bytes_0 = b"\x11\x91\x7fT\xd4\xe9\xb0\xa8*\xef\xaaxZz\xcc?9\x05\x12"
    str_2 = "]XqhU@\x0bEY&d<6.1\t-\t="
    dict_0 = {str_0: str_0, str_0: str_0, str_1: bytes_0, str_2: str_1}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5253():
    complex_0 = 1030 - 1211.253j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5254():
    str_0 = "ViZWlW]mFj.]\r"
    none_type_0 = None
    str_1 = "J W,oL\n+ \\I_\x0bF3s.TMG"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
    }
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5255():
    bytes_0 = b"\xc6qL\x11aQ"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5256():
    str_0 = "0mG7u!"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5257():
    int_0 = 2958
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5258():
    int_0 = -92
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5259():
    int_0 = -3978
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5260():
    bytes_0 = b"\xfa\\\x94\xc7\xc0\x1d\xc1<\xb5"
    set_0 = {bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5261():
    bytes_0 = b"\r\x88"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5262():
    str_0 = "r2[LS\x0b:AMe_Kb&p9}d\t'"
    int_0 = -2060
    list_0 = [int_0]
    tuple_0 = (str_0, int_0, int_0, list_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5263():
    bytes_0 = b"\xd08\xf6\x9b\x85\xac\xaa=\x8b\xf5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5264():
    str_0 = "gJPrC{Bsc2_FpF#"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5265():
    float_0 = -1715.396058
    list_0 = [float_0, float_0, float_0, float_0]
    str_0 = "M3VDp9TJ"
    none_type_0 = None
    str_1 = "~&TFy'Vud,^zt=g{\x0bzu"
    str_2 = 'z"Ujs'
    str_3 = "eU_sTG&G{Jp@~zq/a`2"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_3: none_type_0,
    }
    module_1.BaseException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5266():
    str_0 = "*R)6\x0b;Ktnw+bh+Di"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5267():
    float_0 = -1128.44713
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5268():
    str_0 = "%."
    list_0 = [str_0, str_0, str_0, str_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5269():
    str_0 = 'He<AG?x\nkPL_t\n<.Qe-"'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5270():
    dict_0 = {}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5271():
    int_0 = -122
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5272():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    list_0 = [set_0, bool_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5273():
    str_0 = "\x0bBi3kn#6y}"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5274():
    str_0 = "/)l}9L"
    set_0 = {str_0, str_0, str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5275():
    str_0 = "[WQu9:q+/D-H@0x"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5276():
    int_0 = -4235
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5277():
    int_0 = 1003
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5278():
    set_0 = set()
    module_0.find_template(set_0)


def test_case_5279():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_5280():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5281():
    float_0 = 1377.16166
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5282():
    complex_0 = -929.85596 + 553.6313j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5283():
    bool_0 = True
    complex_0 = 3634 + 695.961j
    tuple_0 = (bool_0, bool_0, bool_0, complex_0)
    dict_0 = {tuple_0: complex_0, bool_0: bool_0, complex_0: bool_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5284():
    str_0 = "\x0c,QTu\r\x0c6n\x0b"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5285():
    bytes_0 = b"\xa0\xdf`\xda\xf5^\xa6_1K\xa6\x83"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5286():
    str_0 = "MM>1P-\\!'\x0cNa`(x,kGE"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5287():
    int_0 = -3379
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5288():
    str_0 = "t*%(ie8[c~K,3+l*i"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5289():
    float_0 = 1673.98469
    list_0 = [float_0]
    module_0.find_template(list_0)


def test_case_5290():
    cookiecutter_exception_0 = module_2.CookiecutterException()


@pytest.mark.xfail(strict=True)
def test_case_5291():
    bytes_0 = b"\xf6\xe1N\x9a\x80:#"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5292():
    bytes_0 = b"\xe6A0\xac\x14\x90\xd2\xcf\xf0\xdd\xa93\xd1)\xf5\xfe;e"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5293():
    exception_0 = module_1.Exception()
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5294():
    complex_0 = 2313.2 + 1018.38j
    tuple_0 = (complex_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5295():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    exception_0 = module_1.Exception(*list_0)
    list_1 = [exception_0, list_0, list_0, list_0]
    base_exception_0 = module_1.BaseException(*list_1)
    list_2 = [base_exception_0, list_1, exception_0, list_1]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_2
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5296():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    bool_0 = False
    tuple_0 = (dict_0, list_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5297():
    complex_0 = 930 + 1664.909158j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5298():
    float_0 = -535.10324
    set_0 = {float_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5299():
    bytes_0 = b"q\xd8&\x03\x8d\x9axm\xa4d\xf6"
    dict_0 = {bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5300():
    int_0 = -222
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5301():
    bytes_0 = b"~qg\xd2\xc4h\x13l\xa3\xb1f\x11"
    module_2.CookiecutterException(**bytes_0)


def test_case_5302():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5303():
    int_0 = 1487
    list_0 = [int_0, int_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5304():
    str_0 = "#X`^5"
    str_1 = ""
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5305():
    str_0 = "|b{\x0cI8"
    module_1.BaseException(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_5306():
    str_0 = "UlTh VzFL7N"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5307():
    str_0 = "8\t.Y~<lX>MH5Li`"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5308():
    dict_0 = {}
    exception_0 = module_1.Exception(**dict_0)
    str_0 = ""
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5309():
    float_0 = -4302.612
    tuple_0 = (float_0, float_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5310():
    str_0 = "wb\r=u3e\x0ckM&/WG\t@$0"
    str_1 = "4x#)\n"
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    str_2 = "LBr?Zn1w&L%|ZDmAoXm"
    dict_0 = {
        str_0: str_0,
        str_1: non_templated_input_dir_exception_0,
        str_2: non_templated_input_dir_exception_0,
    }
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5311():
    float_0 = 2583.455868
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5312():
    str_0 = ".@S},-"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5313():
    str_0 = "bOeViJiZ6"
    list_0 = [str_0]
    str_1 = " z|.9$xX`EH@"
    str_2 = "z\x0clTuxJ"
    str_3 = "N"
    bytes_0 = b"ukF[4O\xda\xe5\x0b\xba\xbcz\xe4\x9b\xfa\xc0"
    dict_0 = {str_2: list_0, str_1: list_0, str_3: bytes_0}
    module_1.object(*list_0, **dict_0)


def test_case_5314():
    cookiecutter_exception_0 = module_2.CookiecutterException()


@pytest.mark.xfail(strict=True)
def test_case_5315():
    str_0 = 'I"<aCSr7afmxb&Wkn.'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5316():
    str_0 = "'Evz^\""
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5317():
    str_0 = "\\0QM_5/{*"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5318():
    bytes_0 = b"\xa0C\x9e\xb7\xf2\r\x18[:"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5319():
    int_0 = 3364
    list_0 = [int_0, int_0]
    module_1.BaseException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_5320():
    object_0 = module_1.object()
    dict_0 = {object_0: object_0, object_0: object_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5321():
    str_0 = "w{"
    str_1 = "\n"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5322():
    int_0 = -1233
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5323():
    str_0 = "vaHVYP:(EtZv"
    float_0 = 5024.7
    dict_0 = {float_0: str_0}
    tuple_0 = (dict_0, float_0)
    tuple_1 = (str_0, float_0, tuple_0, str_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_5324():
    str_0 = "F10&y.&lG#I-kL0z"
    str_1 = "_\r&9e\t:'\r?CRQG >"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5325():
    int_0 = -1218
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5326():
    int_0 = 272
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5327():
    int_0 = -792
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5328():
    int_0 = 3341
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5329():
    str_0 = "Hkq:4U*g(5"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5330():
    complex_0 = -1157.2988 + 444j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5331():
    int_0 = 189
    list_0 = [int_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5332():
    float_0 = 206.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5333():
    bytes_0 = b"\xff\tk\xf7"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5334():
    int_0 = -1480
    set_0 = {int_0, int_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5335():
    bool_0 = True
    list_0 = [bool_0]
    str_0 = "&"
    dict_0 = {str_0: list_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5336():
    none_type_0 = None
    module_0.find_template(none_type_0)


def test_case_5337():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()


@pytest.mark.xfail(strict=True)
def test_case_5338():
    complex_0 = 884 - 729.7j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5339():
    bytes_0 = b"\x8b\xce\x1ffM\xba\x98\x89dz"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5340():
    str_0 = "r.A\x0cN"
    module_0.find_template(str_0)


def test_case_5341():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5342():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5343():
    bytes_0 = b"\x17\x11\xdc\x10D\xe0B\xe7B\xf3\xcar\x93\\\xe5\x86L\x04\xde\x9d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5344():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    list_0 = [non_templated_input_dir_exception_0, non_templated_input_dir_exception_0]
    non_templated_input_dir_exception_1 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    bool_0 = False
    tuple_0 = (
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_1,
        bool_0,
        non_templated_input_dir_exception_1,
    )
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: tuple_0,
    }
    int_0 = -713
    tuple_1 = (dict_0, int_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_5345():
    int_0 = 1339
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5346():
    int_0 = -700
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5347():
    bytes_0 = b"\x92\xc1\xaa\x16\x05,"
    list_0 = [bytes_0, bytes_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5348():
    int_0 = 1335
    module_2.CookiecutterException(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_5349():
    str_0 = "OflmC65"
    set_0 = {str_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5350():
    complex_0 = -2644.3 - 600.62705j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5351():
    list_0 = []
    str_0 = ";}`\x0cI#M&m`qcBG}2++tA"
    dict_0 = {str_0: list_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5352():
    bytes_0 = b"\t\xb1\xd1\xaa\xae\x9d4K\xff\xf5 "
    module_0.find_template(bytes_0)


def test_case_5353():
    object_0 = module_1.object()
    list_0 = [object_0, object_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )


@pytest.mark.xfail(strict=True)
def test_case_5354():
    str_0 = "X?ZKI"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5355():
    bytes_0 = b"\xf8N\xbe\x17\xe4}\xc7\xeaj\xc1}$\x8f\x96\xd3\x81c\xf1\xfa"
    list_0 = [bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5356():
    none_type_0 = None
    module_1.Exception(**none_type_0)


def test_case_5357():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5358():
    bytes_0 = b"\\\xe0)\xd0\xaf"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5359():
    int_0 = -2896
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5360():
    int_0 = -2075
    tuple_0 = (int_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5361():
    int_0 = 25
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5362():
    str_0 = "3`8Fv8j\\+}"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


def test_case_5363():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5364():
    str_0 = "\\0w_C"
    str_1 = "j1B;O\rS-12SFL\x0b\\:7"
    str_2 = "@iWr*aQw{mT$"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0, str_2: str_2}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5365():
    float_0 = 2764.957
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {float_0: float_0, float_0: float_0, float_0: cookiecutter_exception_0}
    bool_0 = False
    tuple_0 = (dict_0, bool_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5366():
    list_0 = []
    base_exception_0 = module_1.BaseException(*list_0)
    int_0 = -646
    tuple_0 = (base_exception_0, base_exception_0, int_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5367():
    bytes_0 = b"\xb0T\xb7\xb2iM\x04\xb1a2\x0f"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5368():
    int_0 = 692
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5369():
    str_0 = "M[X< o"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5370():
    str_0 = "/uJRQ1>iT38&OP:E\r\x0b"
    list_0 = [str_0, str_0, str_0, str_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5371():
    str_0 = "},v}-e.dAm:siTh;"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5372():
    bytes_0 = b"\xc3\xfc"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5373():
    str_0 = "[LA9a"
    list_0 = [str_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5374():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    list_1 = [
        cookiecutter_exception_0,
        cookiecutter_exception_0,
        list_0,
        cookiecutter_exception_0,
    ]
    exception_0 = module_1.Exception(*list_1)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5375():
    bytes_0 = b"\x8a\x9f"
    set_0 = {bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


def test_case_5376():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5377():
    float_0 = 4948.4077
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5378():
    str_0 = 'gkUQ`MH"1SNab'
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5379():
    str_0 = "Y_qQ4(lL"
    str_1 = "?ADc9\\uD:"
    str_2 = "KI"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5380():
    bytes_0 = b"@\x08\xa7\x04\x88"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5381():
    bytes_0 = b"\xe5/B\x1by\x9e\x94p<\xe6{"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5382():
    str_0 = "C"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5383():
    int_0 = 2690
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5384():
    bytes_0 = b"\x04`>DfQ"
    set_0 = {bytes_0, bytes_0}
    list_0 = [set_0, bytes_0, bytes_0, set_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5385():
    str_0 = "y<\x0b'"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5386():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5387():
    none_type_0 = None
    module_2.CookiecutterException(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5388():
    bytes_0 = b"\xa8\xeau\xd0hzh \n>"
    module_2.CookiecutterException(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5389():
    float_0 = -22.84281
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5390():
    float_0 = -720.2516
    str_0 = "8w?|cSPw^=5"
    dict_0 = {float_0: float_0, float_0: float_0, float_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5391():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5392():
    float_0 = 331.91898
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5393():
    list_0 = []
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5394():
    int_0 = 1862
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5395():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5396():
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5397():
    str_0 = "[dXz"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5398():
    str_0 = "#|y}\x0c6k"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5399():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5400():
    none_type_0 = None
    str_0 = ".!Au^9X4't\x0bb<+iXf\t."
    str_1 = "c\x0bJDh+f z&"
    str_2 = "\r\x0cU$\x0c)2B7-u[+/"
    bool_0 = False
    dict_0 = {str_0: str_0, str_1: none_type_0, str_0: str_1, str_2: bool_0}
    module_2.CookiecutterException(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5401():
    int_0 = 1437
    dict_0 = {int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5402():
    str_0 = "%J;e{nXGhE=4g{HT6{[{"
    str_1 = "o8S^}gv"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5403():
    bytes_0 = b"\xd4'\xe7K\xc9{\xd9J"
    list_0 = [bytes_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5404():
    bool_0 = False
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5405():
    str_0 = "~]NzkY"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5406():
    bytes_0 = b"r\xcf6"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5407():
    bytes_0 = b"|\xa5:8\x82\xc9F\x1fR\rD\xf6\xba"
    set_0 = {bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5408():
    float_0 = -447.648
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5409():
    complex_0 = 2074 + 1048j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5410():
    str_0 = "\x0c([|Z2\rM"
    dict_0 = {str_0: str_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5411():
    int_0 = -394
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5412():
    none_type_0 = None
    module_1.object(*none_type_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5413():
    str_0 = "$${F_\r\x0bPrKa\\Ih"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5414():
    none_type_0 = None
    list_0 = [none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5415():
    bytes_0 = b"\xaa#\xc9\xa3\x8ad\xb6\xc5\xf4\x8f\x01\xa80\xe7\xf5"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5416():
    float_0 = 809.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5417():
    str_0 = "=V(=6j^GHeS?\\"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5418():
    str_0 = " [GnKu( 4,);L\t5eQ+"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5419():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    module_1.object(**non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5420():
    int_0 = -240
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5421():
    float_0 = -689.246825
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5422():
    str_0 = "R+@xtf\x0bH GY"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5423():
    bool_0 = True
    list_0 = [bool_0]
    module_2.CookiecutterException(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_5424():
    str_0 = "SkWnY>Tx<\x0cjQI,7\"'"
    str_1 = "m/.H4\r]\\!f7qJ\x0cT)["
    dict_0 = {str_0: str_0, str_1: str_1}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5425():
    float_0 = 4704.3634
    dict_0 = {float_0: float_0, float_0: float_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5426():
    str_0 = "25{aR_wM2.cL-G\n'u\x0b"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5427():
    str_0 = "H"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5428():
    int_0 = -1770
    module_0.find_template(int_0)


def test_case_5429():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5430():
    bytes_0 = b"\r\x80hr`u?jM/c\x9d\xf9\xea1"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5431():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
        cookiecutter_exception_0: cookiecutter_exception_0,
    }
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5432():
    int_0 = -921
    dict_0 = {int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5433():
    bytes_0 = b"\x9a\xb4\xea\xd6\xe6\xe4\xc1\x9d'\x08g~\xe5:\x04w\xab"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5434():
    float_0 = 598.0
    set_0 = {float_0, float_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5435():
    int_0 = 3574
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5436():
    float_0 = -452.0183
    module_2.NonTemplatedInputDirException(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_5437():
    bytes_0 = b"u\xb5\x12\x01\xef^$\xff\xe4\x14ss-\x10\xcb\xbe"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5438():
    str_0 = "Qn4!eEYv>00Q+B3Z]7"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5439():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    list_1 = [list_0, bool_0, bool_0]
    list_2 = [list_1]
    module_0.find_template(list_2)


@pytest.mark.xfail(strict=True)
def test_case_5440():
    bytes_0 = b""
    bool_0 = False
    set_0 = {bytes_0, bytes_0, bool_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5441():
    int_0 = -773
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5442():
    bytes_0 = b"\x14\r\x15\x15\x81&\xb6\x02f~\xc5\x18\xba"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    str_0 = "x+D\\CYk<\x0baT$\\x^"
    int_0 = -1144
    tuple_0 = (bytes_0, list_0, str_0, int_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5443():
    int_0 = 751
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5444():
    float_0 = -2997.0
    module_2.CookiecutterException(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_5445():
    int_0 = 932
    exception_0 = module_1.Exception()
    tuple_0 = (int_0, exception_0)
    set_0 = {tuple_0, int_0, tuple_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5446():
    cookiecutter_exception_0 = module_2.CookiecutterException()
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5447():
    bytes_0 = b"\xe3\xbb&\\1\xc5\xba[Sz\xa9\xaf"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5448():
    none_type_0 = None
    list_0 = [none_type_0]
    str_0 = "9pL.z}A"
    dict_0 = {str_0: str_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5449():
    int_0 = -2981
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5450():
    int_0 = 2202
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5451():
    int_0 = 5327
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5452():
    str_0 = "f)GbXN'54(l"
    dict_0 = {str_0: str_0}
    module_1.BaseException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5453():
    bytes_0 = b"R"
    dict_0 = {bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5454():
    bytes_0 = b"\xbe\x8a"
    set_0 = {bytes_0, bytes_0}
    str_0 = "%\x0b)BQ"
    cookiecutter_exception_0 = module_2.CookiecutterException()
    dict_0 = {str_0: set_0, str_0: set_0, str_0: str_0, str_0: cookiecutter_exception_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5455():
    str_0 = "'a^U"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5456():
    set_0 = set()
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5457():
    bytes_0 = b"^\xb2\x01"
    list_0 = [bytes_0, bytes_0, bytes_0]
    exception_0 = module_1.Exception(*list_0)
    module_0.find_template(exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5458():
    str_0 = "aSrnHLfn "
    none_type_0 = None
    str_1 = "Q}7(H}SF="
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_2.CookiecutterException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5459():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_0)
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0, **dict_0
    )
    tuple_0 = (
        cookiecutter_exception_0,
        list_0,
        list_0,
        non_templated_input_dir_exception_0,
    )
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5460():
    bytes_0 = b"\xee\xbf\xda\xf8\xa8p\xd2\x96\xebDE@\xe3"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5461():
    str_0 = "x1PyN"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5462():
    str_0 = "+Q>RnI]mSAM"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5463():
    int_0 = 315
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5464():
    complex_0 = 1481.524098 + 1318.27052j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5465():
    none_type_0 = None
    module_0.find_template(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5466():
    bytes_0 = b"}\xf5\x85\r\xa9\xdb\xf2\x1d"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5467():
    bytes_0 = b"T\x80\xa7\xa7'd\xc6KVg]*\xb8\x1e\xeav~"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.find_template(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5468():
    str_0 = "6fA"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5469():
    bytes_0 = b"\\\xef\x8d\x02}'etx\xb9"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5470():
    int_0 = 485
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5471():
    complex_0 = -2985.07 - 3682j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5472():
    base_exception_0 = module_1.BaseException()
    tuple_0 = (base_exception_0, base_exception_0)
    cookiecutter_exception_0 = module_2.CookiecutterException()
    list_0 = [tuple_0, tuple_0, cookiecutter_exception_0, cookiecutter_exception_0]
    module_0.find_template(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5473():
    str_0 = "t.FH\\rT{b9|))pKg"
    tuple_0 = (str_0,)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5474():
    float_0 = -179.22
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5475():
    complex_0 = 1541.3 + 1260.87j
    module_0.find_template(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5476():
    bytes_0 = b"\x1b\xdd\xcd\xd5\xc8"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5477():
    bytes_0 = b"5\x18\x0eCt"
    str_0 = "9TvU"
    set_0 = {bytes_0, bytes_0, str_0, bytes_0}
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5478():
    bytes_0 = b"\xb7\x04)\xc3\x00_\x9c"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5479():
    bytes_0 = b"\xf6\x9f\x88]\xa1\xde\xe3\x1c\xa5\xe2N\x8c\xaf"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5480():
    bytes_0 = b"\x13K("
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5481():
    str_0 = "<\\;=H\nu"
    dict_0 = {str_0: str_0}
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5482():
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException()
    bool_0 = True
    dict_0 = {
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0: bool_0,
    }
    list_0 = [dict_0]
    list_1 = [list_0]
    list_2 = [list_1]
    module_0.find_template(list_2)


@pytest.mark.xfail(strict=True)
def test_case_5483():
    list_0 = []
    str_0 = "9"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_2.CookiecutterException(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5484():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    bytes_0 = b"+\x99O\xca\x82NZ(u"
    none_type_0 = None
    list_0 = [none_type_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    tuple_0 = (bool_0, set_0, bytes_0, non_templated_input_dir_exception_0)
    module_0.find_template(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5485():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    cookiecutter_exception_0 = module_2.CookiecutterException(*list_1)
    module_0.find_template(cookiecutter_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5486():
    str_0 = "b3m8wQuYr"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5487():
    dict_0 = {}
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        **dict_0
    )
    set_0 = {
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
        non_templated_input_dir_exception_0,
    }
    module_0.find_template(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5488():
    bool_0 = True
    module_0.find_template(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5489():
    int_0 = -1491
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5490():
    bool_0 = False
    int_0 = -506
    bool_1 = True
    dict_0 = {bool_0: bool_0, int_0: bool_0, int_0: bool_0, int_0: bool_1}
    list_0 = [dict_0, int_0]
    list_1 = [list_0, list_0, bool_1]
    module_0.find_template(list_1)


@pytest.mark.xfail(strict=True)
def test_case_5491():
    str_0 = "\x0c_N\r:b JVeB<nd"
    dict_0 = {str_0: str_0}
    module_1.Exception(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5492():
    str_0 = "o;f_tminYp\nzj&CeAEIc"
    none_type_0 = None
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    module_2.NonTemplatedInputDirException(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5493():
    str_0 = '9e"'
    list_0 = [str_0, str_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5494():
    str_0 = "9Yu5lCN$"
    list_0 = [str_0]
    str_1 = '2$gxGFve"'
    str_2 = "Kom\x0cx=?J/}"
    str_3 = 'lRn."F`"M<5<(%&5W'
    dict_0 = {str_1: str_1, str_2: str_0, str_3: str_0}
    module_1.Exception(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5495():
    bytes_0 = b"\x83\xd0\xef\xbf~"
    module_0.find_template(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5496():
    int_0 = -1146
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5497():
    int_0 = 639
    module_0.find_template(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5498():
    str_0 = "X;3ZZjy>(|}ZY}aT<>']"
    list_0 = [str_0, str_0, str_0, str_0]
    non_templated_input_dir_exception_0 = module_2.NonTemplatedInputDirException(
        *list_0
    )
    module_0.find_template(non_templated_input_dir_exception_0)


@pytest.mark.xfail(strict=True)
def test_case_5499():
    str_0 = "CTR_N8P07UJR,(x8id"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5500():
    str_0 = "1t_mMB{j^7F+O.aB"
    module_0.find_template(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5501():
    float_0 = -491.0
    module_0.find_template(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5502():
    str_0 = "JO*sZ}/:sHB\t3\r"
    module_0.find_template(str_0)
