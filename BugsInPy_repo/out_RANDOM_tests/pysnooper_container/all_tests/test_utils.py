# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import abc as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    module_0.object(*none_type_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    int_0 = -1474
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0}
    list_0 = []
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    bool_1 = False
    bool_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    int_0 = -55
    int_0.write(bool_0)


def test_case_6():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7():
    dict_0 = {}
    float_0 = -1639.831446
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = 290
    set_0 = {int_0}
    int_1 = 1828
    list_0 = [int_1, int_1, int_1]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "\x0csrtU#\\u$a;08*a*"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [dict_0]
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_10():
    bool_0 = False
    float_0 = -1460.69699
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_11():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_12():
    int_0 = -2483
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_13():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_14():
    str_0 = "fk3h@\\\tG i2^g&"
    tuple_0 = (str_0, str_0, str_0)
    set_0 = {tuple_0, tuple_0}
    bytes_0 = b"~\x1c\x0f\xc8@\xefi\x1dl\x1f?\x02 Z\x18x\x1bG"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_15():
    bool_0 = True
    a_b_c_0 = module_1.ABC()
    set_0 = {bool_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_16():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"vR}\xc8\xa2\x04\xceHJ\x89[<B\xdf\x13/`"
    bool_0 = False
    dict_0 = {bytes_0: bool_0, bytes_0: bool_0}
    list_0 = [dict_0, bytes_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_17():
    none_type_0 = None
    int_0 = 1716
    list_0 = [int_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_18():
    str_0 = "ML/"
    bool_0 = True
    dict_0 = {str_0: bool_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_19():
    bytes_0 = b"\xebl\xec\x16\x81\x07"
    bytes_1 = b"W"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_20():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_21():
    bool_0 = True
    set_0 = set()
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_22():
    bool_0 = False
    int_0 = 1316
    int_0.write(bool_0)


def test_case_23():
    pass


def test_case_24():
    pass


def test_case_25():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_26():
    none_type_0 = None
    bytes_0 = b""
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_27():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_28():
    bool_0 = True
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_29():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_30():
    list_0 = []
    object_0 = module_0.object()
    int_0 = 416
    list_1 = [int_0, object_0]
    list_2 = [object_0, object_0, list_1]
    list_2.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_31():
    bool_0 = False
    str_0 = '-QPIbrE\x0c=@IBu"#I19e'
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_32():
    bytes_0 = b"&\x0f\xc7\x17VEN\xc0\xa5c\x8b\xfb"
    module_1.ABC(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_33():
    str_0 = "k&Fj:&S\rxpmb"
    set_0 = {str_0, str_0}
    str_1 = "5OJE\\QU,\tk"
    tuple_0 = ()
    str_2 = "&;\rdA{unYqb\t\n=Y"
    dict_0 = {str_0: set_0, str_1: tuple_0, str_2: set_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_34():
    complex_0 = 1636.8 - 1160.72j
    bool_0 = True
    bool_0.write(complex_0)


def test_case_35():
    pass


@pytest.mark.xfail(strict=True)
def test_case_36():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    tuple_0 = (a_b_c_0, a_b_c_0, set_0)
    str_0 = ""
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_37():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_38():
    object_0 = module_0.object()
    bytes_0 = b"U '\x0fN\xcb:\x96\xa3\xad@"
    tuple_0 = (bytes_0,)
    tuple_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_39():
    bool_0 = True
    complex_0 = 1261.088 + 1389j
    float_0 = 2638.407081
    dict_0 = {complex_0: float_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_40():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_41():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    tuple_0 = (bool_0,)
    tuple_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_42():
    list_0 = []
    int_0 = 1421
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_43():
    bool_0 = True
    bool_1 = False
    list_0 = [bool_1, bool_1, bool_1, bool_1]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_44():
    float_0 = 2704.0
    int_0 = 1391
    tuple_0 = (float_0, float_0, int_0)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_45():
    str_0 = "' &Lo1^'`C@e"
    object_0 = module_0.object()
    object_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_46():
    int_0 = -3001
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_47():
    str_0 = "&Hg[\rj"
    list_0 = [str_0, str_0, str_0]
    dict_0 = {}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_48():
    bool_0 = False
    int_0 = 2573
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_49():
    none_type_0 = None
    tuple_0 = ()
    float_0 = 546.607
    set_0 = {tuple_0, float_0, float_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_50():
    str_0 = "Xln,Z"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_51():
    pass


@pytest.mark.xfail(strict=True)
def test_case_52():
    bytes_0 = b"\x1c\xa2\xed="
    float_0 = -3503.38
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_53():
    none_type_0 = None
    float_0 = 4927.7
    dict_0 = {float_0: float_0, float_0: float_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_54():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    bool_1 = True
    bool_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_55():
    bytes_0 = b"\xdf\xf2\xaa4\xf4t\xda\x18\x89w\x1b"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_56():
    bool_0 = False
    bytes_0 = b"\xc2\xa1\x05<-o\x0c\x8c\xbaJ\x99\xf4\xe7v\xd3\xc9wT^"
    list_0 = [bytes_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_57():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_58():
    list_0 = []
    bytes_0 = b"\xa7"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_59():
    str_0 = "\x0b`^MM,a\x0bOGu\t7Pn+1\\"
    bytes_0 = b"eV\xbaz"
    bytes_0.write(str_0)


def test_case_60():
    pass


@pytest.mark.xfail(strict=True)
def test_case_61():
    int_0 = 4662
    bytes_0 = b"\x17 \xbdG\xeb"
    set_0 = {bytes_0, bytes_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_62():
    bool_0 = False
    int_0 = 784
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_63():
    bytes_0 = b" \x90|z\xa7\xc4!\x97\x05H\x17\xc1+#Z"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_64():
    bytes_0 = b"qK\x1bj"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_65():
    int_0 = -3578
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(dict_0)


def test_case_66():
    pass


@pytest.mark.xfail(strict=True)
def test_case_67():
    dict_0 = {}
    bytes_0 = b"\xac@\xf9\xfc\xd7n~"
    str_0 = "U\r"
    str_1 = "\\y\\_zU"
    str_2 = "&n"
    dict_1 = {str_0: bytes_0, str_1: bytes_0, str_2: dict_0}
    module_1.ABC(**dict_1)


@pytest.mark.xfail(strict=True)
def test_case_68():
    float_0 = -760.744154
    bytes_0 = b"\xdf1\x85p"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_69():
    none_type_0 = None
    bytes_0 = b"b\xda\x1b\x9a\x06\xce\xbd\x0e\x9b\x8c\xdd]`FD\x85"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_70():
    none_type_0 = None
    bytes_0 = b"\xd8)\xf1u|\xd3\x08J6k\x1e0:"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_71():
    int_0 = 841
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_72():
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()
    list_0 = []
    list_0.write(a_b_c_1)


@pytest.mark.xfail(strict=True)
def test_case_73():
    str_0 = "SZy0.h"
    int_0 = 123
    int_0.write(str_0)


def test_case_74():
    pass


@pytest.mark.xfail(strict=True)
def test_case_75():
    str_0 = "zXn*A9k"
    none_type_0 = None
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_76():
    bool_0 = False
    list_0 = [bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_77():
    str_0 = "6uO04RB\x0behz,"
    str_1 = "/;<>#A<"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_78():
    set_0 = set()
    int_0 = -2006
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_79():
    list_0 = []
    set_0 = set()
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_80():
    bool_0 = True
    str_0 = ""
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_81():
    none_type_0 = None
    str_0 = "V*8O(&"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_82():
    str_0 = ""
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_83():
    pass


@pytest.mark.xfail(strict=True)
def test_case_84():
    complex_0 = 2415 - 765.8636j
    bool_0 = False
    tuple_0 = (bool_0,)
    tuple_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_85():
    int_0 = -1194
    bool_0 = False
    list_0 = [bool_0, bool_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_86():
    bool_0 = True
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_87():
    bool_0 = True
    int_0 = 688
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_88():
    none_type_0 = None
    int_0 = 1243
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_89():
    str_0 = "n:%d"
    float_0 = -183.379086
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_90():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xfb\x1d\xbf\xfeU\x8f|\x95k\xf1\xf9F,\x1fr\x03\x98f"
    int_0 = 1983
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_91():
    str_0 = " ojrQ>u[KmX"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_92():
    str_0 = ""
    str_1 = "/tcjcS"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_93():
    bool_0 = False
    int_0 = -545
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_94():
    a_b_c_0 = module_1.ABC()
    int_0 = -1420
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_95():
    int_0 = 154
    module_0.object(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_96():
    none_type_0 = None
    str_0 = "8\r-^6|W^30H"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_97():
    int_0 = -2880
    bytes_0 = b"\x1av\x16\x06\xc6\x06\x83;Wo\xc4\xde\xa5\xaf"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_98():
    int_0 = -3300
    set_0 = {int_0, int_0, int_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_99():
    bool_0 = True
    int_0 = -1127
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_100():
    str_0 = "ozGf J8OWf]v3}([KeN"
    str_1 = "_`ljuE5mL?\x0b[L"
    list_0 = [str_0, str_1]
    dict_0 = {str_0: list_0, str_1: str_1}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_101():
    str_0 = ""
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_102():
    none_type_0 = None
    int_0 = 2937
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_103():
    none_type_0 = None
    int_0 = -579
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_104():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_105():
    bool_0 = True
    bool_1 = True
    bool_2 = True
    set_0 = {bool_1, bool_2}
    bool_3 = True
    list_0 = [set_0, bool_1, bool_3, set_0]
    list_1 = [set_0, list_0]
    list_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_106():
    none_type_0 = None
    int_0 = 1040
    list_0 = [int_0, int_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_107():
    none_type_0 = None
    set_0 = set()
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_108():
    bool_0 = False
    list_0 = [bool_0]
    str_0 = "hr8efDK}Ya*l[7"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_109():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    module_0.object(*a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_110():
    none_type_0 = None
    float_0 = -2964.0
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_111():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    dict_0 = {}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_112():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    bool_1 = True
    bool_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_113():
    bytes_0 = b"\xe2\xf9PM\xec\r\x18G\x0b\x12\xbd\xdf\xf1\xd8>\xbeP"
    tuple_0 = ()
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_114():
    bool_0 = True
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_115():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_116():
    int_0 = -4753
    set_0 = {int_0, int_0, int_0}
    bytes_0 = b"\xe1\xd5p&\xe2\xe5\xf9T\xf9"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_117():
    str_0 = ")?S;!"
    none_type_0 = None
    str_1 = '.hM/d"N&V)Hx=mf'
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_118():
    none_type_0 = None
    str_0 = "<b"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_119():
    list_0 = []
    str_0 = ".:X+"
    list_1 = [str_0, str_0]
    set_0 = set()
    tuple_0 = (list_1, set_0)
    str_1 = "9u#7QbUHu5.O@-"
    tuple_1 = (tuple_0, str_1, tuple_0, list_1)
    tuple_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_120():
    none_type_0 = None
    int_0 = 1863
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_121():
    str_0 = "qi"
    set_0 = {str_0, str_0}
    dict_0 = {str_0: set_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_122():
    bool_0 = False
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_123():
    str_0 = "J=0d#J{_$|O7\x0cQlB@O"
    str_1 = "Fz,-Hm\\.v7Jwrm@E\r>J"
    list_0 = [str_0, str_1, str_1]
    str_2 = "]KUBP"
    str_3 = "\x0b`{F{CidF"
    str_4 = "/\x0b%mm@K9XQ!\x0cnIuWjF"
    dict_0 = {str_2: list_0, str_1: str_0, str_3: str_0, str_4: list_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_124():
    complex_0 = 313.73 - 1060.4j
    bool_0 = False
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_125():
    str_0 = "Rk6I8;3_"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_126():
    float_0 = 832.61497
    tuple_0 = (float_0,)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_127():
    bytes_0 = b"\x1d@\x87\x0e2\xc9\xf9"
    dict_0 = {}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_128():
    bytes_0 = b"7\x1e\xb0\xa0e\x96\xb2\xab\xa7"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_129():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    bytes_0 = b""
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_130():
    bytes_0 = b"_\xeab<\x94\xd1\x01\x98\x8bn"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_131():
    int_0 = -3103
    bytes_0 = b"\xd10\x03\xad\xb8&\xb6\xf3\x8d\xaa\x9c\xa5\xa2Q"
    list_0 = [bytes_0]
    list_0.write(int_0)


def test_case_132():
    pass


@pytest.mark.xfail(strict=True)
def test_case_133():
    object_0 = module_0.object()
    dict_0 = {}
    dict_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_134():
    str_0 = "'t#3njllE3nGw"
    str_1 = "EPfqYv@{3u<"
    str_2 = ",?"
    str_3 = "VyV$B?cW2zHtE1_"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0, str_3: str_2}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_135():
    str_0 = "Iym,gGX2~Admi"
    bytes_0 = b"\xfd"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_136():
    float_0 = -1420.6
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, bool_0, bool_0, bool_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_137():
    none_type_0 = None
    int_0 = 1028
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_138():
    int_0 = -896
    bytes_0 = b"\xda\x86^\xe5\xab01-"
    int_1 = 396
    tuple_0 = (int_0, bytes_0, int_0, int_1)
    list_0 = [tuple_0, int_1, int_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_139():
    int_0 = 3914
    dict_0 = {}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_140():
    int_0 = -3043
    tuple_0 = (int_0,)
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_141():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_142():
    str_0 = "\x0c3miE%!>f('S{JJ["
    set_0 = {str_0, str_0, str_0, str_0}
    int_0 = -4279
    tuple_0 = (str_0, set_0, int_0)
    bool_0 = False
    set_1 = {bool_0, bool_0, bool_0}
    set_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_143():
    bytes_0 = b";\x88\xa5\x04$\xfe\x1a\xd6qE!\x9d"
    module_0.object(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_144():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xc0\xc7i\x00\x03Y\x19\xaa \xa3p\xac\x1a\xf9\xb8"
    list_0 = [bytes_0, bytes_0, bytes_0]
    str_0 = "2RbULZ.[T"
    int_0 = -839
    str_1 = "#r=x"
    tuple_0 = (str_0, int_0, str_0, str_1)
    tuple_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_145():
    int_0 = 18
    int_1 = -757
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_146():
    list_0 = []
    bytes_0 = b"q\x0c"
    list_1 = [bytes_0, bytes_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_147():
    none_type_0 = None
    bytes_0 = b"nD\x02#;u\xc7<~\x00ll\xda\x96\xfb"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_148():
    bytes_0 = b"6\x96W\xe9o\xea\x12\x00"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    int_0 = -3610
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_149():
    object_0 = module_0.object()
    list_0 = [object_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_150():
    bool_0 = True
    int_0 = -3371
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_151():
    float_0 = -718.879
    str_0 = "\x0b\rN-5FI|U@L$N#j:}"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_152():
    bytes_0 = b"\xc4\x89"
    module_1.ABC(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_153():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    float_0 = 1288.945642
    bool_0 = True
    set_0 = {float_0, bool_0, bool_0, bool_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_154():
    none_type_0 = None
    bool_0 = False
    list_0 = [bool_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_155():
    str_0 = "5<!DRt n7pv"
    bool_0 = True
    list_0 = []
    str_1 = "H^V"
    int_0 = 2942
    tuple_0 = (bool_0, list_0, str_1, int_0)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_156():
    none_type_0 = None
    int_0 = -4158
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_157():
    bool_0 = False
    bytes_0 = b"e^\x12"
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0}
    tuple_0 = (bytes_0, a_b_c_0, set_0, set_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_158():
    float_0 = -3581.6
    complex_0 = -1988.21 + 1307j
    tuple_0 = (complex_0,)
    tuple_0.write(float_0)


def test_case_159():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_160():
    str_0 = "CibY"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_161():
    bool_0 = True
    list_0 = [bool_0]
    module_1.ABC(*list_0)


def test_case_162():
    pass


@pytest.mark.xfail(strict=True)
def test_case_163():
    none_type_0 = None
    float_0 = -1739.9
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_164():
    str_0 = "["
    module_1.ABC(**str_0)


def test_case_165():
    pass


@pytest.mark.xfail(strict=True)
def test_case_166():
    object_0 = module_0.object()
    bytes_0 = b""
    module_1.ABC(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_167():
    float_0 = 470.0
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_168():
    int_0 = 808
    bytes_0 = b"J\xc4\x10\xcd\x15\\"
    bool_0 = True
    list_0 = [bytes_0, bytes_0, bool_0, bytes_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_169():
    complex_0 = -218.96065 - 263.88j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_170():
    tuple_0 = ()
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_0)


def test_case_171():
    pass


@pytest.mark.xfail(strict=True)
def test_case_172():
    set_0 = set()
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_173():
    bool_0 = False
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0, object_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_174():
    str_0 = "c\x0bj94D8-cn'~PMufkl"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_175():
    str_0 = "[[QWn\t\r4#"
    int_0 = -988
    list_0 = [int_0, int_0, int_0, int_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_176():
    a_b_c_0 = module_1.ABC()
    module_1.ABC(**a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_177():
    bytes_0 = b"f$\xa9\x96\xad\xa9\xa4\xf0$\xe8\x8a\xc4#\x9a\xe0\xf3f\x84\x17"
    list_0 = [bytes_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_178():
    dict_0 = {}
    complex_0 = -2296.43 + 262.54j
    complex_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_179():
    float_0 = -1219.84047
    list_0 = [float_0, float_0, float_0, float_0]
    module_0.object(*list_0, **float_0)


@pytest.mark.xfail(strict=True)
def test_case_180():
    int_0 = 111
    dict_0 = {int_0: int_0}
    bool_0 = False
    set_0 = {bool_0, bool_0}
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_181():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\x0e\xae\xd0\xb1|"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_182():
    str_0 = "wGo\\X1#s"
    str_1 = "]cmFOy;Ix%Lx"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_183():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_184():
    bytes_0 = b"V\x16\x07\xe5\xaa]bO\x8e\x00\x91sYe\xe0"
    object_0 = module_0.object()
    object_0.write(bytes_0)


def test_case_185():
    pass


@pytest.mark.xfail(strict=True)
def test_case_186():
    float_0 = -1411.9
    object_0 = module_0.object()
    object_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_187():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\x9d\x08\x80\xbe\xe9X\xe3:\xb2\xd4\xddG\xb1\xdf\xa7\xb9\x98\xf6\x99q"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_188():
    int_0 = 2518
    str_0 = 'C2"*Rb0S'
    set_0 = set()
    list_0 = [str_0, str_0, str_0, set_0]
    list_1 = [list_0, set_0, list_0]
    list_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_189():
    tuple_0 = ()
    str_0 = "@O\x0b0Mq).D Mr]"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_190():
    a_b_c_0 = module_1.ABC()
    complex_0 = -978.512 - 1239j
    set_0 = {complex_0, complex_0}
    set_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_191():
    bool_0 = False
    bool_1 = True
    int_0 = -5154
    list_0 = [bool_1, int_0, int_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_192():
    float_0 = -914.0
    set_0 = set()
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_193():
    float_0 = -292.203
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_194():
    object_0 = module_0.object()
    bool_0 = False
    bool_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_195():
    none_type_0 = None
    int_0 = 2085
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_196():
    str_0 = "9P\t2\x0c5="
    module_1.ABC(*str_0)


@pytest.mark.xfail(strict=True)
def test_case_197():
    str_0 = "]'Vv\tK<v|"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_198():
    none_type_0 = None
    str_0 = "&{zP4mJWw52m.\x0b{A"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_199():
    none_type_0 = None
    int_0 = -1124
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_200():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_201():
    str_0 = "*duw^>RnWNLW[ /Kg"
    bytes_0 = b"\x95q\xb4\xcb'\x02|\xa0\x82+\x94\x05\xd6\x12kNl\x88"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_202():
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    str_0 = "&AFf|Q%Gb@H$`[."
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_203():
    str_0 = "W\x0c3%O]k"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_204():
    float_0 = -1043.07
    float_1 = -3085.7
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_205():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_0.object(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_206():
    str_0 = "Dd!d"
    int_0 = -2720
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_207():
    str_0 = "5u"
    bytes_0 = b"2\x1a\x9c$6Gm\xb6\xbb\x84\xa2n\xbfe\xf5\x8d\x01\xf5"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_208():
    bool_0 = False
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_209():
    bool_0 = True
    int_0 = -2870
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_210():
    bool_0 = False
    int_0 = 2626
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_211():
    none_type_0 = None
    int_0 = 877
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_212():
    none_type_0 = None
    object_0 = module_0.object()
    object_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_213():
    str_0 = "irk4R}"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    int_0 = -1882
    tuple_0 = (str_0, str_0, dict_0, int_0)
    bool_0 = True
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_214():
    str_0 = "((>"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_215():
    none_type_0 = None
    bytes_0 = b"\xe1\xd7\xd7\xa8\x90z"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_216():
    none_type_0 = None
    bytes_0 = b"\x03K\x00,"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_217():
    none_type_0 = None
    bytes_0 = b"a\xd7\xce\xc0\x91\xb8\x88]\x84\xa6\xb2\x12\x0b\x92\xe6\xd6\xea\xfc"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_218():
    none_type_0 = None
    float_0 = -2510.0
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_219():
    str_0 = "PLq(D;\n\r:R"
    str_1 = "wzkk&qm"
    str_2 = "]6|B(Ym\tN"
    str_3 = "\rMbwZb:Tp[vnX!3"
    dict_0 = {str_1: str_0, str_2: str_2, str_3: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_220():
    int_0 = -1908
    bool_0 = True
    list_0 = [int_0, int_0, bool_0]
    list_1 = [list_0, bool_0, list_0]
    module_0.object(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_221():
    none_type_0 = None
    bytes_0 = b"F"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_222():
    int_0 = 4345
    set_0 = {int_0, int_0, int_0, int_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_223():
    str_0 = "$"
    bytes_0 = b"\x94\x95\x9eD\x03m\xa4\xcf\xb87\xb5\xf8"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_224():
    int_0 = 963
    bytes_0 = b"\x96\xd9\x82\xed(\xcb\xa5(\xb7s\x87"
    bytes_0.write(int_0)


def test_case_225():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_226():
    str_0 = '2"JRX QZPLHF*4e'
    dict_0 = {str_0: str_0}
    tuple_0 = (dict_0,)
    dict_1 = {str_0: tuple_0}
    module_1.ABC(**dict_1)


@pytest.mark.xfail(strict=True)
def test_case_227():
    list_0 = []
    complex_0 = -3021.917 + 1762.2j
    complex_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_228():
    none_type_0 = None
    str_0 = "ow1 xp"
    set_0 = {str_0, str_0, str_0}
    set_0.write(none_type_0)


def test_case_229():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_230():
    bool_0 = True
    bytes_0 = b"n\xf9\xb5\xd0\xba\x83Yn\xd8\x08k\x1f8\x88@>\x1c"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_231():
    none_type_0 = None
    bytes_0 = b"Hc\xdd{\x0bF\xecAs\x8b\xaf\xd9\xc9\xc8"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_232():
    int_0 = -2483
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_233():
    dict_0 = {}
    bytes_0 = b"\x11\xae+\xe6\xaa\xba\xce5\xe3"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_234():
    str_0 = "e<#Wi{]kZ2Xq8VM9VGt"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_235():
    complex_0 = -42.978449 + 584.3578j
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    str_0 = ""
    bool_0 = True
    tuple_1 = (list_0, str_0, bool_0)
    list_1 = [tuple_0, tuple_1]
    list_1.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_236():
    str_0 = "a~d\\(;IYnz!{& Cw)j"
    tuple_0 = (str_0,)
    int_0 = 931
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_237():
    object_0 = module_0.object()
    complex_0 = -40.70553 - 421.3056j
    set_0 = {object_0, complex_0, object_0, complex_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_238():
    str_0 = "8~V"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_239():
    bool_0 = True
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_240():
    int_0 = 2095
    set_0 = {int_0, int_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_241():
    object_0 = module_0.object()
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_242():
    none_type_0 = None
    bytes_0 = b"\xa7U\xc2\x93[\x1b\xe2a\xa8\xe2\xddh"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_243():
    a_b_c_0 = module_1.ABC()
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    complex_0 = 325.494 + 1079.5j
    complex_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_244():
    bytes_0 = b"\x0e\xba[\xb2\xc0\x90\xdf\xba"
    bool_0 = False
    bool_1 = True
    tuple_0 = (bytes_0, bool_0, bool_0, bool_1)
    list_0 = [tuple_0]
    int_0 = 2013
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_245():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_246():
    a_b_c_0 = module_1.ABC()
    str_0 = '"a4T)zpd^2/2)f#'
    str_1 = "lbt"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_247():
    complex_0 = -3162 + 410.595171j
    list_0 = [complex_0, complex_0, complex_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_248():
    int_0 = -558
    module_0.object(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_249():
    bool_0 = False
    str_0 = ".<2p"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_250():
    float_0 = -2187.90066
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    str_0 = "}Q/dn\x0b&uL.9{"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_251():
    str_0 = "i7\n)1 FOf~D3jlW_mM"
    bytes_0 = b"`\x08\xa4\x12["
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_252():
    int_0 = 540
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_253():
    bytes_0 = b"a\xed@"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_254():
    float_0 = -2307.75799
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_255():
    a_b_c_0 = module_1.ABC()
    tuple_0 = ()
    tuple_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_256():
    none_type_0 = None
    bytes_0 = b"j{\xe0"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_257():
    a_b_c_0 = module_1.ABC()
    list_0 = []
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_258():
    object_0 = module_0.object()
    bool_0 = True
    bool_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_259():
    str_0 = "-fnZ06F9euW\\6o\r.PU!"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_260():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    tuple_0 = (bool_0, set_0)
    list_0 = [tuple_0, tuple_0, set_0, set_0]
    float_0 = -2101.08592
    float_0.write(list_0)


def test_case_261():
    pass


@pytest.mark.xfail(strict=True)
def test_case_262():
    str_0 = "?O[/>}FuK"
    bytes_0 = b"\x0b\xea\xc6\xa2I"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_263():
    float_0 = 402.0
    int_0 = -3730
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_264():
    int_0 = 895
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_265():
    bytes_0 = b""
    int_0 = -34
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_266():
    bool_0 = True
    module_0.object(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_267():
    bytes_0 = b"I\x9a\xa0N\xc5iU4\xcf\x93\xbd\x8b"
    bytes_1 = b"\x95@\xeeS\x95L\x08R8\x8d"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_268():
    none_type_0 = None
    list_0 = [none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_269():
    object_0 = module_0.object()
    str_0 = "\ntQ%Uv6`@P\\!D=B"
    set_0 = {str_0, str_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_270():
    int_0 = -996
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_271():
    dict_0 = {}
    str_0 = "l<"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_272():
    str_0 = "cFrW#9/;1;Z8"
    list_0 = [str_0, str_0, str_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_273():
    str_0 = "g)!o["
    object_0 = module_0.object()
    dict_0 = {str_0: object_0, str_0: object_0, str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_274():
    pass


@pytest.mark.xfail(strict=True)
def test_case_275():
    set_0 = set()
    str_0 = "|t~jE#"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_276():
    bytes_0 = b"\x1e03V"
    bool_0 = False
    bool_0.write(bytes_0)


def test_case_277():
    pass


@pytest.mark.xfail(strict=True)
def test_case_278():
    bool_0 = True
    int_0 = 863
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_279():
    int_0 = -554
    set_0 = {int_0, int_0}
    list_0 = [set_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_280():
    none_type_0 = None
    bytes_0 = b"~\x8ap\xb1d\x08G\x14\xc5I\xc8h\x8f\xe7\xa3\xe3\xa2\x14\x0c"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_281():
    a_b_c_0 = module_1.ABC()
    int_0 = -3197
    module_0.object(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_282():
    int_0 = -3021
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    int_1 = -3158
    int_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_283():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_284():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    bool_1 = True
    bool_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_285():
    tuple_0 = ()
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_286():
    bytes_0 = b"\xf7"
    int_0 = 4289
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_287():
    bool_0 = False
    str_0 = "X9PB%=~T\t$2\x0b"
    tuple_0 = (str_0, bool_0)
    dict_0 = {str_0: str_0, tuple_0: str_0}
    tuple_1 = (bool_0, tuple_0, bool_0, dict_0)
    set_0 = set()
    set_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_288():
    int_0 = 2331
    list_0 = [int_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_289():
    bytes_0 = b"\x18\x06B\xd7\xfdP\ta\xfer\n\xc0\xf2"
    complex_0 = 881.997997 - 440.8j
    complex_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_290():
    int_0 = -562
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_291():
    object_0 = module_0.object()
    tuple_0 = ()
    dict_0 = {
        object_0: object_0,
        object_0: object_0,
        object_0: tuple_0,
        tuple_0: tuple_0,
    }
    list_0 = [dict_0]
    module_0.object(*list_0, **object_0)


@pytest.mark.xfail(strict=True)
def test_case_292():
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_1: bool_0}
    str_0 = ""
    set_0 = {str_0}
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_293():
    str_0 = "\x0c'r}l6m/"
    none_type_0 = None
    str_1 = "9ECrgU,wa$Z"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_294():
    none_type_0 = None
    bytes_0 = b"!\xe5\x81N\xf2h#\x8b\xdf\xb1=\x97\xee\xdc"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_295():
    bool_0 = True
    module_1.ABC(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_296():
    int_0 = -820
    bool_0 = True
    list_0 = [bool_0]
    tuple_0 = (list_0, list_0, bool_0)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_297():
    float_0 = 1098.7047
    bytes_0 = b"\xdbK|\x82\xfdy8\x1c\x0e\xe6)\x00\xd2"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_298():
    complex_0 = 545.1 + 1661.149j
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    a_b_c_0 = module_1.ABC()
    tuple_0 = (set_0, a_b_c_0)
    tuple_0.write(complex_0)


def test_case_299():
    pass


@pytest.mark.xfail(strict=True)
def test_case_300():
    str_0 = "DP^Z./f*.^j"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_301():
    bool_0 = True
    str_0 = "\x0chbJz~Ufr"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_302():
    str_0 = "U\rBZM?a\x0ck\rlpMi\x0biZ"
    list_0 = [str_0, str_0, str_0, str_0]
    int_0 = -1000
    dict_0 = {int_0: int_0, int_0: int_0}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_303():
    bool_0 = False
    str_0 = "!%':\x0b@"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_304():
    str_0 = "3&/cW,:NP`Cr4P;"
    bytes_0 = b"wV0\x05\x8d\xa5c\x9e\x19&\x07p\xe6V\x07\xdbW"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_305():
    str_0 = "*'S\x0cmvq\"."
    int_0 = -226
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_306():
    int_0 = -490
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_307():
    float_0 = 907.0
    module_1.ABC(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_308():
    bool_0 = True
    bytes_0 = b"\xe3\xfc\xf0\x10)p} \xc3\x8a\x14\xcd6L\x99\x8e\xe2\x9a\xb2"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_309():
    str_0 = "3\\2ebn^kU'e{_QIlu{r"
    str_1 = "56o&NGyN"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_310():
    bool_0 = True
    int_0 = 1634
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_311():
    bool_0 = True
    bytes_0 = b"\xa9\x06|X\xf2\xfd2\xad)\x9d\x8a\x9a\xd8E02j\x1e\x9ei"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_312():
    complex_0 = -1549.01218 - 3082.345j
    bool_0 = True
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_313():
    a_b_c_0 = module_1.ABC()
    str_0 = "k9}%bvyj"
    str_1 = "~5QT%=kbcfZ`uxzU\rK8 "
    dict_0 = {str_0: str_0, str_1: a_b_c_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_314():
    bytes_0 = b"/\xe9vN\x01O\xd0\x1e\xae\xbc4\xfa\x85\xc3\x994\x82\x86"
    set_0 = {bytes_0}
    int_0 = 1514
    tuple_0 = (int_0,)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_315():
    bytes_0 = b"\x1bvd<ki\xdc\xce\xa8\x0e\x87\x88uhz\x1aa\xbc\xd8\xbb"
    complex_0 = -1716.96438 + 1563j
    complex_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_316():
    float_0 = 689.34
    complex_0 = -561 + 3352.342j
    set_0 = {complex_0, complex_0, complex_0}
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_317():
    bytes_0 = b""
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_318():
    bytes_0 = b""
    bytes_1 = b"\x9b\xd8(\xeb\xa7\xcb\xc2m\xf2k}"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_319():
    bool_0 = True
    object_0 = module_0.object()
    object_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_320():
    none_type_0 = None
    list_0 = []
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_321():
    float_0 = -576.0
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_322():
    none_type_0 = None
    int_0 = -899
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_323():
    bool_0 = False
    int_0 = 909
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_324():
    bytes_0 = b"\x17\xc7\x9c\x83\xf7\xfe\xca3\xc5\xce\x1a\x99D\xbd\xc3\xa2\x04|\x1e"
    int_0 = -40
    dict_0 = {int_0: int_0, int_0: int_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_325():
    str_0 = "\x0b5Knd&Tk7:@\x0b"
    str_1 = "m2j1,8|;\x0c,?{_`oPz18"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_326():
    bool_0 = False
    set_0 = set()
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_327():
    bool_0 = False
    bytes_0 = b"'\xbf\x00\x8c\xd6\xb5.N`\x9b\x97\x15\xa30HV"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_328():
    str_0 = "'n*+^?9\x0cr"
    str_1 = "]$\x0bTQ"
    str_2 = "EvaS"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_329():
    int_0 = 259
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_330():
    bytes_0 = b"*\xf6\xa1.\xee\xa9\x1cha\xaf\x8ac\xee\x88\x90}\xd6"
    list_0 = []
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_331():
    none_type_0 = None
    float_0 = 676.41
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_332():
    bytes_0 = b"\xa3P\xbf\xee\xbb\x0b\xf3o\xd3\xab"
    module_1.ABC(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_333():
    bytes_0 = b"\xd1>\n\x81\x18T\xf1i{\xbf\xb8\x8a\xc2\x8d\x1ev\xdfmQ\x18"
    bytes_1 = b"\x88Q\xe1\xd6\x1fR\x11"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_334():
    bool_0 = True
    bytes_0 = b"]\x98\x00\x12"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_335():
    bytes_0 = b"\xeftS5\xb30\x90\xdbVZ\xa4\x91\nU"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_336():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    str_0 = "oKCOh87%\nVc"
    dict_0 = {str_0: bool_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_337():
    float_0 = -496.275
    float_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_338():
    none_type_0 = None
    bytes_0 = b"\x96i\xef\x8e\x04\x80\x0f\xedg`\x12\xf2\xac2\xe6\xfe\xc16"
    set_0 = {bytes_0, bytes_0, bytes_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_339():
    bool_0 = True
    int_0 = 1099
    tuple_0 = (int_0, int_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_340():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0]
    int_0 = 1646
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_341():
    complex_0 = 1016.8563 + 1909.05712j
    str_0 = "UQ;Dm#\t8ifCD"
    str_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_342():
    str_0 = "]$3J<t5=l7:h=H0\rJuJ^"
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_343():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    str_0 = "EME};}\x0c\\%?~a-X^h6'['"
    str_1 = "sA|352WT*zvCw\n: "
    str_2 = "/e' C"
    dict_0 = {str_0: list_0, str_1: str_1, str_0: none_type_0, str_2: str_1}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_344():
    complex_0 = -1317.318034 - 457.16j
    list_0 = [complex_0, complex_0, complex_0]
    bytes_0 = b"\x0f\xa3\x06\x0f\n"
    list_1 = [bytes_0, bytes_0, bytes_0, bytes_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_345():
    none_type_0 = None
    bytes_0 = b"\x8dI;\x1b\x97{\xf4\x13'S\xf1,B\xc4E"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_346():
    dict_0 = {}
    bytes_0 = b"3<\xd0\x1e\x89#\x8cA\x1cD\x1d\xc3\xe9rj\x9c"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_347():
    none_type_0 = None
    float_0 = 421.82982
    float_0.write(none_type_0)


def test_case_348():
    pass


@pytest.mark.xfail(strict=True)
def test_case_349():
    int_0 = -3344
    set_0 = {int_0, int_0, int_0}
    tuple_0 = (int_0, set_0)
    bool_0 = True
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_350():
    str_0 = '*)IIN`$"'
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_351():
    bool_0 = False
    bytes_0 = b"\xea\xd2\x0e\xd1*\xe5\x94\xf8"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_352():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_353():
    bool_0 = True
    float_0 = -430.969
    list_0 = [float_0, float_0, float_0, float_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_354():
    str_0 = "?4OMTZ>0"
    bytes_0 = b"\xda\xd7\xfe\xc4\x06>o\xc6\x99\xa9\x92M=Z"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_355():
    bool_0 = True
    bytes_0 = b"Z\xabS>B\t\xa9\xc4"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_356():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    bool_0 = False
    bool_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_357():
    none_type_0 = None
    str_0 = '<|N~rU\r&nsmR6"\x0cnR*'
    str_0.write(none_type_0)


def test_case_358():
    pass


@pytest.mark.xfail(strict=True)
def test_case_359():
    bool_0 = False
    dict_0 = {}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_360():
    bytes_0 = b"Ka\xe1"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_361():
    object_0 = module_0.object()
    bool_0 = False
    set_0 = {bool_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_362():
    float_0 = -1536.3505
    bytes_0 = b".\x1f\xef\x86\xb5\xd7\xed"
    bytes_0.write(float_0)


def test_case_363():
    pass


@pytest.mark.xfail(strict=True)
def test_case_364():
    bool_0 = False
    str_0 = ">SyW\x0cK[4qbS7\\{>}Vm"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_365():
    int_0 = 3349
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_366():
    none_type_0 = None
    dict_0 = {}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_367():
    none_type_0 = None
    int_0 = 1466
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_368():
    bool_0 = True
    complex_0 = 2237.31873 - 711.44838j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_369():
    none_type_0 = None
    list_0 = [none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_370():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_371():
    a_b_c_0 = module_1.ABC()
    module_0.object(*a_b_c_0, **a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_372():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    float_0 = -8.3
    set_0 = {float_0}
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_373():
    none_type_0 = None
    int_0 = -5618
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_374():
    bytes_0 = b"O\xc2dI\xb5\xd9&\xf5SD\xcf\xa1p\xde\x91.\xe6\xf3"
    float_0 = -2096.0
    bool_0 = False
    dict_0 = {float_0: float_0, bool_0: bool_0, bool_0: float_0, float_0: bool_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_375():
    none_type_0 = None
    tuple_0 = ()
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_376():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_377():
    none_type_0 = None
    float_0 = -1177.04716
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_378():
    none_type_0 = None
    module_0.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_379():
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_380():
    none_type_0 = None
    bytes_0 = b"vs"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_381():
    bool_0 = True
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_382():
    none_type_0 = None
    float_0 = 1921.353
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_383():
    int_0 = 974
    list_0 = [int_0, int_0, int_0, int_0]
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_384():
    a_b_c_0 = module_1.ABC()
    int_0 = 826
    set_0 = {int_0}
    set_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_385():
    list_0 = []
    float_0 = 1332.0
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_386():
    float_0 = -1651.0
    list_0 = []
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_387():
    bool_0 = False
    bool_1 = False
    object_0 = module_0.object()
    list_0 = [bool_1, bool_1, bool_1, object_0]
    complex_0 = 1141 - 697.302j
    bool_2 = True
    set_0 = set()
    tuple_0 = (list_0, complex_0, bool_2, set_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_388():
    bool_0 = True
    complex_0 = -1256.38 + 1366.115641j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_389():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    bool_1 = False
    dict_0 = {bool_1: bool_1, bool_1: bool_1, bool_1: bool_1}
    list_1 = [bool_1, dict_0, dict_0, dict_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_390():
    int_0 = -737
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_391():
    int_0 = 4757
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_392():
    object_0 = module_0.object()
    int_0 = 620
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_393():
    a_b_c_0 = module_1.ABC()
    list_0 = []
    int_0 = -1556
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_394():
    none_type_0 = None
    float_0 = -534.356555
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_395():
    a_b_c_0 = module_1.ABC()
    int_0 = 996
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_396():
    none_type_0 = None
    int_0 = 454
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_397():
    tuple_0 = ()
    int_0 = 238
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_398():
    str_0 = ""
    int_0 = -2065
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_399():
    none_type_0 = None
    str_0 = "A%u<\\9Tt"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_400():
    bytes_0 = b"Onq!\xc1\x1b!5"
    int_0 = -1267
    int_0.write(bytes_0)


def test_case_401():
    pass


@pytest.mark.xfail(strict=True)
def test_case_402():
    float_0 = -307.6
    dict_0 = {}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_403():
    bool_0 = False
    float_0 = 146.4
    tuple_0 = (float_0,)
    tuple_0.write(bool_0)


def test_case_404():
    pass


@pytest.mark.xfail(strict=True)
def test_case_405():
    str_0 = "ZzL66yv\rcdB"
    module_1.ABC(**str_0)


def test_case_406():
    pass


@pytest.mark.xfail(strict=True)
def test_case_407():
    bool_0 = True
    int_0 = 925
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, int_0: int_0}
    bool_1 = False
    bool_1.write(dict_0)


def test_case_408():
    a_b_c_0 = module_1.ABC()


def test_case_409():
    pass


@pytest.mark.xfail(strict=True)
def test_case_410():
    bytes_0 = b"\xcc\xed\xa7\xecc\xbc\xced/\x8f\xf6\xab\xb5\xa3"
    list_0 = [bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_411():
    str_0 = "[>`\r2}I"
    float_0 = 3206.81516
    tuple_0 = (float_0,)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_412():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    bool_0 = False
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_413():
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_414():
    int_0 = -1902
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_415():
    bytes_0 = b"[\x1d\xde\x8f"
    bytes_1 = b"\x1b\x81\x9d1=\xe1O\xd5\xab\x93\x04.-\xbd\xad\xa2\xc6\xfa"
    dict_0 = {bytes_1: bytes_1}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_416():
    bool_0 = True
    complex_0 = -4096.6 + 2486j
    complex_0.write(bool_0)


def test_case_417():
    object_0 = module_0.object()


def test_case_418():
    pass


@pytest.mark.xfail(strict=True)
def test_case_419():
    str_0 = ""
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


def test_case_420():
    pass


@pytest.mark.xfail(strict=True)
def test_case_421():
    bool_0 = False
    bool_1 = False
    bool_1.write(bool_0)


def test_case_422():
    pass


@pytest.mark.xfail(strict=True)
def test_case_423():
    bytes_0 = b"\\\xe8Q7\xd8\x1cB\xa4\x16\xa58\xe8leSF\x88\xe3\xb1y"
    bool_0 = True
    list_0 = [bool_0, bool_0]
    list_0.write(bytes_0)


def test_case_424():
    pass


@pytest.mark.xfail(strict=True)
def test_case_425():
    str_0 = "M!TOHFX\r!E["
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_426():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    int_0 = -2198
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_427():
    set_0 = set()
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_428():
    none_type_0 = None
    complex_0 = -865.0574 + 1343.183j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_429():
    bool_0 = True
    bool_1 = True
    list_0 = [bool_1, bool_1, bool_1]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_430():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_431():
    bytes_0 = b"g#,\x8fx\rQ\x15A~\xb4\xb3;\xa9\xcd\xaf\xab\x81\xe9"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_432():
    object_0 = module_0.object()
    str_0 = "nSq"
    str_0.write(object_0)


def test_case_433():
    pass


@pytest.mark.xfail(strict=True)
def test_case_434():
    str_0 = "C?z"
    dict_0 = {str_0: str_0}
    tuple_0 = ()
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_435():
    bytes_0 = b"\xff\x8a\t\xc2\xee\xf1\tXXBu\xc72<bO\x0f0\x9a<"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_436():
    none_type_0 = None
    bytes_0 = b"\xc5\xeb\xd1\xa11\x8a\x86\x80\xe9\xe8\x02Hc\xf9g\xce\x8f]"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_437():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xe2\xb0\xc3\xb4'+\xd7\xfc"
    float_0 = 2510.3153
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_438():
    bool_0 = False
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_439():
    none_type_0 = None
    int_0 = -441
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_440():
    a_b_c_0 = module_1.ABC()
    complex_0 = 1324.1 + 2541.171293j
    complex_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_441():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    bool_0 = True
    set_0 = {bool_0}
    set_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_442():
    float_0 = -1790.76916
    module_1.ABC(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_443():
    bytes_0 = b'\x95\xec\x04\xa7\xf5\x9c\xba\xf9t\x99\xd1:\xe9ki6{\xfe"'
    list_0 = []
    list_1 = [bytes_0, list_0, list_0]
    module_1.ABC(*list_1)


def test_case_444():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_445():
    int_0 = -1259
    tuple_0 = (int_0,)
    module_1.ABC(*tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_446():
    bool_0 = True
    int_0 = 4657
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_447():
    none_type_0 = None
    int_0 = -1693
    dict_0 = {int_0: int_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_448():
    dict_0 = {}
    complex_0 = -2482.94 + 2098.60495j
    tuple_0 = (complex_0,)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_449():
    none_type_0 = None
    float_0 = 3702.125875
    float_0.write(none_type_0)


def test_case_450():
    pass


@pytest.mark.xfail(strict=True)
def test_case_451():
    bool_0 = True
    list_0 = []
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_452():
    list_0 = []
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_453():
    str_0 = "\x0c)2mV:nl-oQBSxs"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    str_1 = "g3dso=8z\\B?\t-1"
    dict_1 = {str_1: str_1}
    module_1.ABC(*dict_0, **dict_1)


@pytest.mark.xfail(strict=True)
def test_case_454():
    bool_0 = True
    bytes_0 = b"J\x0c\xf9e0\x8d\xb3\x1b\x87n\xe7Aj\x93\x913"
    tuple_0 = (bool_0, bool_0, bytes_0)
    list_0 = []
    list_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_455():
    bool_0 = True
    int_0 = -249
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_456():
    none_type_0 = None
    bytes_0 = b"\xf6\x9d8\xe2\x10H\xdf3\xb1#\x91X\xc0\x94\x12\xba\x16\x99,\x7f"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_457():
    none_type_0 = None
    dict_0 = {}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_458():
    int_0 = 1296
    tuple_0 = (int_0,)
    float_0 = -6534.2
    float_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_459():
    float_0 = -1252.44
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_460():
    dict_0 = {}
    bytes_0 = b"\x9b\xdb"
    dict_1 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_461():
    str_0 = "r0Jj;CzwK%#\rH%<dH5RW"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_462():
    int_0 = 2197
    complex_0 = -1848.1 + 1460.15j
    complex_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_463():
    int_0 = 1282
    list_0 = [int_0]
    str_0 = "vjd{@_X\x0c5Qd"
    dict_0 = {str_0: int_0, str_0: int_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_464():
    bytes_0 = b"6C\x93\x85\x80"
    object_0 = module_0.object()
    object_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_465():
    str_0 = "B2<8}CxV*put"
    str_1 = "+\x0cha|jJ"
    dict_0 = {str_0: str_1, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_466():
    none_type_0 = None
    bytes_0 = b""
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_467():
    bytes_0 = b'\x86\x86\x01"\x19Q\xd1\xc6\xf31\x8e\x12T`\x1e\n'
    list_0 = [bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_468():
    list_0 = []
    list_1 = [list_0]
    module_0.object(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_469():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_470():
    int_0 = -2713
    dict_0 = {int_0: int_0}
    bytes_0 = b"9\x8a\xb1%\xe7C\x8e3\xabJx\x82o\x04\xde\xb6"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_471():
    int_0 = 2357
    str_0 = "D'uk"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_472():
    int_0 = 1833
    int_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_473():
    none_type_0 = None
    complex_0 = 1675.9 - 1478j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_474():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\x1e\rc\x06T\xe8\xc4*"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_475():
    bool_0 = False
    bytes_0 = b"\x9c\xad\xa1\x98\x9e\x83K\t\xd3\xae\x0f\xefVM\xea\xb2"
    complex_0 = -260.4 + 2614.5143j
    int_0 = -2035
    tuple_0 = (bool_0, bytes_0, complex_0, int_0)
    set_0 = {tuple_0, bool_0}
    tuple_1 = (set_0, tuple_0, set_0)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_476():
    bytes_0 = b"\xd0\xcd\xf6]\xddJC\xae1\xb6\x95Q!\x93OZ"
    dict_0 = {}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_477():
    dict_0 = {}
    set_0 = set()
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_478():
    bool_0 = True
    complex_0 = 529.53 + 800.67925j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_479():
    none_type_0 = None
    complex_0 = -2684.545611 - 1585.459178j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_480():
    none_type_0 = None
    str_0 = "Q//@y\trq0"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_481():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    bytes_0 = b"\x04! \xac\xea\xdeFF\x8fR\xd3\xf4\x07\x1f:v\xf6Z"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_482():
    none_type_0 = None
    str_0 = "En"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_483():
    bytes_0 = b"j\xee\xb1"
    bytes_1 = b"\x7f"
    tuple_0 = (bytes_1,)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_484():
    int_0 = 1091
    bytes_0 = b"\xcfo\xf1\x8f\xc65\x92\x86<?-a\xf1\x05b\x02l"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_485():
    bool_0 = False
    bytes_0 = b"\xe1\xd5\xa0"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_486():
    a_b_c_0 = module_1.ABC()
    str_0 = "]$$B$3"
    list_0 = [str_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_487():
    bytes_0 = b"\xce\x9d"
    str_0 = "fX\r)i"
    str_0.write(bytes_0)


def test_case_488():
    pass


@pytest.mark.xfail(strict=True)
def test_case_489():
    int_0 = -1992
    bool_0 = False
    list_0 = [int_0, bool_0]
    str_0 = ")\t#}%B ]T"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_490():
    str_0 = "E"
    bool_0 = False
    list_0 = [bool_0, bool_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_491():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_492():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bool_1 = True
    dict_1 = {bool_1: bool_1}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_493():
    complex_0 = -6413 - 3437.17677j
    bytes_0 = b"\xff\xdc\xd6\xbav\xff\xe3\xe7\xa1\xa5"
    bytes_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_494():
    int_0 = 1770
    dict_0 = {}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_495():
    object_0 = module_0.object()
    str_0 = "e/\n!L\\"
    set_0 = {str_0, str_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_496():
    object_0 = module_0.object()
    int_0 = 3457
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_497():
    str_0 = ',J"S\x0b'
    module_0.object(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_498():
    bool_0 = False
    list_0 = []
    list_1 = [bool_0, list_0]
    str_0 = "N\n065Qf"
    dict_0 = {str_0: str_0}
    module_1.ABC(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_499():
    none_type_0 = None
    int_0 = -4085
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_500():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, bool_0, dict_0, dict_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_501():
    set_0 = set()
    bool_0 = False
    list_0 = [set_0, bool_0, bool_0, set_0]
    set_1 = set()
    set_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_502():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0]
    a_b_c_1 = module_1.ABC()
    set_0 = {a_b_c_1, a_b_c_1}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_503():
    str_0 = "0|jc,k`lpBHG-]/KH\x0b"
    set_0 = {str_0, str_0, str_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(set_0)


def test_case_504():
    pass


@pytest.mark.xfail(strict=True)
def test_case_505():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_506():
    float_0 = -2818.15
    float_1 = 178.0
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_507():
    bool_0 = False
    float_0 = 3623.0
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_508():
    str_0 = "\\1LRFt4 "
    set_0 = {str_0, str_0, str_0, str_0}
    complex_0 = -1517.265938 + 2876.4j
    complex_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_509():
    bool_0 = True
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_510():
    list_0 = []
    set_0 = set()
    bool_0 = False
    list_1 = [bool_0, bool_0]
    tuple_0 = (set_0, list_1, set_0)
    tuple_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_511():
    none_type_0 = None
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_512():
    float_0 = -312.605
    str_0 = "&jNUD>~Flp4a}X7jP"
    str_0.write(float_0)


def test_case_513():
    pass


@pytest.mark.xfail(strict=True)
def test_case_514():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_515():
    none_type_0 = None
    int_0 = 840
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_516():
    set_0 = set()
    bool_0 = True
    list_0 = [bool_0, bool_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_517():
    none_type_0 = None
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [list_0, bool_0]
    list_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_518():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    bytes_0 = b'\x96\xf0\xc4aEA\x05\xd2\x95\xbez\x07"'
    tuple_0 = (list_0, bytes_0)
    float_0 = -1367.245388
    float_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_519():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_520():
    bool_0 = False
    bytes_0 = b"\xfe\xa1\x9a\xbb"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_521():
    float_0 = 2557.887718
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_522():
    bool_0 = False
    list_0 = []
    list_0.write(bool_0)


def test_case_523():
    pass


@pytest.mark.xfail(strict=True)
def test_case_524():
    complex_0 = -531.54385 - 620j
    module_0.object(**complex_0)


@pytest.mark.xfail(strict=True)
def test_case_525():
    str_0 = "L=pp1\r\rN]#U^r8)CdM"
    list_0 = [str_0]
    complex_0 = -780 + 1183.54516j
    complex_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_526():
    bool_0 = True
    str_0 = "]x<Dp[yP}P"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_527():
    bytes_0 = b"\xaa\x9b\xe9\xfcB\x00=\xff"
    bytes_1 = b"CjG"
    list_0 = [bytes_1]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_528():
    a_b_c_0 = module_1.ABC()
    str_0 = "Wk?U|ncVtFr"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_529():
    bool_0 = False
    module_0.object(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_530():
    none_type_0 = None
    bytes_0 = b"\x97"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_531():
    str_0 = "o7\t=v"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_532():
    bytes_0 = b"\x9e<a\xfb\xa8"
    bytes_1 = b"\x99^k\xfaBT\x84\xdd[\xb0f\xc4\xe6\x9e\xba\x01\xa9"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_533():
    none_type_0 = None
    int_0 = 475
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_534():
    set_0 = set()
    str_0 = "%%+"
    dict_0 = {str_0: str_0, str_0: str_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_535():
    none_type_0 = None
    str_0 = "?"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_536():
    float_0 = 967.766
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_537():
    str_0 = "[\\EV\x0cPjlP5Ieff'HZ,"
    str_1 = "te\r|m{2bA0X=3/"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_538():
    pass


@pytest.mark.xfail(strict=True)
def test_case_539():
    bool_0 = False
    bool_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_540():
    str_0 = "[j@*#"
    str_1 = ">\r^Y{"
    str_2 = "c|"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_2: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_541():
    bool_0 = False
    list_0 = [bool_0]
    dict_0 = {}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_542():
    bool_0 = True
    list_0 = [bool_0]
    bool_1 = False
    tuple_0 = (bool_1,)
    tuple_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_543():
    set_0 = set()
    str_0 = ':]JAbj8o2$"mPu?)[3B8'
    dict_0 = {str_0: set_0}
    list_0 = [set_0, set_0, dict_0]
    int_0 = 546
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_544():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


def test_case_545():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_546():
    str_0 = "Wn^"
    int_0 = -1286
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_547():
    int_0 = -2628
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_548():
    list_0 = []
    list_1 = [list_0]
    module_0.object(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_549():
    str_0 = "8{IScT+9l`lU"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_550():
    bool_0 = True
    str_0 = "{/p?0A~_*j\\o=C]"
    tuple_0 = (str_0,)
    dict_0 = {tuple_0: str_0, tuple_0: tuple_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_551():
    object_0 = module_0.object()
    int_0 = 706
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_552():
    float_0 = 1432.08
    bool_0 = False
    bool_0.write(float_0)


def test_case_553():
    pass


def test_case_554():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_555():
    list_0 = []
    str_0 = "E6tO^_"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_556():
    str_0 = "_?j/K[F"
    list_0 = [str_0, str_0, str_0, str_0]
    str_1 = "o\x0bOg\t}0z,A]"
    dict_0 = {str_0: str_0, str_0: list_0, str_1: str_1, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_557():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_558():
    bool_0 = True
    tuple_0 = (bool_0,)
    bytes_0 = b"\xbd3\xfe\xd7\x1c%\xa6.'\xd2\xfe\xf3#\xaa."
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_559():
    str_0 = ",y][O]?Cpl%qk@uqdc,"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_560():
    none_type_0 = None
    int_0 = -1973
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_561():
    a_b_c_0 = module_1.ABC()
    complex_0 = -1817.77908 - 251.00284j
    list_0 = [complex_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_562():
    int_0 = 1776
    module_0.object(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_563():
    a_b_c_0 = module_1.ABC()
    int_0 = -1856
    bool_0 = True
    list_0 = [bool_0, bool_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_564():
    str_0 = "K!/X`%OxQeae"
    list_0 = [str_0, str_0, str_0]
    float_0 = -496.1
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_565():
    str_0 = "Hr0<JGo,\x0c^eI'f0dr"
    bool_0 = True
    dict_0 = {str_0: str_0, bool_0: str_0}
    a_b_c_0 = module_1.ABC()
    tuple_0 = (bool_0, dict_0, a_b_c_0)
    a_b_c_1 = module_1.ABC()
    tuple_1 = (tuple_0, a_b_c_1, a_b_c_0)
    bool_1 = False
    list_0 = [tuple_1, a_b_c_0]
    tuple_2 = (tuple_1, bool_1, list_0)
    str_1 = "`_JU\tC*"
    tuple_3 = (str_0, tuple_2, str_1, bool_1)
    list_1 = [tuple_3, a_b_c_0]
    list_2 = [bool_1, tuple_2]
    module_1.ABC(*list_1, **list_2)


@pytest.mark.xfail(strict=True)
def test_case_566():
    int_0 = 1013
    set_0 = {int_0, int_0}
    object_0 = module_0.object()
    object_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_567():
    bytes_0 = b"\x9a\xa3\x1e\xd0\xe6\xe3\xc0\xe9\xbalkM\x9a\xa0\xfe\x1b"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_568():
    int_0 = -167
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_569():
    object_0 = module_0.object()
    complex_0 = -2886.12318 - 3337.5j
    complex_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_570():
    bytes_0 = b"\xd4{\xfa\xa5\xfc\xe6\xe8\rk\x05a\x8a\x83\x8ev$,\x89\xe5"
    bytes_1 = b"\xa56\xdb\xc6\xd3\xbe*<\xde\xbb\xa0a\x86"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_571():
    float_0 = 1839.8762
    int_0 = 1071
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_572():
    none_type_0 = None
    str_0 = 'GS";iaovp 2Iy\x0b*Xj'
    bool_0 = True
    a_b_c_0 = module_1.ABC()
    list_0 = [bool_0]
    tuple_0 = (bool_0, a_b_c_0, list_0, list_0)
    bytes_0 = b"\xdeK<y^\x08\xac\xa5\xd0\xd0\x81i\xedR"
    tuple_1 = (tuple_0, bytes_0)
    set_0 = {bool_0}
    tuple_2 = (str_0, str_0, tuple_1, set_0)
    tuple_2.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_573():
    none_type_0 = None
    bytes_0 = b"\x92|?,"
    bytes_0.write(none_type_0)


def test_case_574():
    pass


@pytest.mark.xfail(strict=True)
def test_case_575():
    none_type_0 = None
    bytes_0 = b"\xe5ia\xb6>M\x14\xa7\xe6@Nk\xd15\x89\xf0\xc6\x0cm_"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_576():
    bool_0 = True
    int_0 = -1792
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_577():
    bool_0 = False
    tuple_0 = ()
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_578():
    float_0 = 2650.0
    int_0 = 1351
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_579():
    none_type_0 = None
    str_0 = ""
    bool_0 = False
    tuple_0 = (str_0, bool_0)
    tuple_1 = (tuple_0,)
    tuple_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_580():
    a_b_c_0 = module_1.ABC()
    dict_0 = {}
    module_1.ABC(*a_b_c_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_581():
    str_0 = "k"
    str_1 = "9'S@ZD"
    str_2 = "7:5\rjD?rQwM"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: str_2}
    module_0.object(**dict_0)


def test_case_582():
    pass


@pytest.mark.xfail(strict=True)
def test_case_583():
    object_0 = module_0.object()
    int_0 = 861
    list_0 = [object_0, object_0, object_0]
    tuple_0 = (object_0, int_0, list_0)
    bool_0 = True
    list_1 = [bool_0, bool_0]
    list_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_584():
    list_0 = []
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_585():
    tuple_0 = ()
    tuple_1 = ()
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_586():
    bool_0 = True
    int_0 = 694
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_587():
    tuple_0 = ()
    set_0 = set()
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_588():
    str_0 = "`b;-brd@\r1{"
    float_0 = 1711.87883
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_589():
    float_0 = -1841.985
    tuple_0 = ()
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_590():
    bool_0 = False
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    int_0 = 1951
    set_0 = {object_0, int_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_591():
    bytes_0 = b"3\xc4\xb2S\xb3dP\xc4/W\xb4"
    int_0 = -806
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_592():
    bytes_0 = b"\x13\xad"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_593():
    none_type_0 = None
    bytes_0 = b"\xdb(\x0e:\xa1\x18\xc5\x95\x0b\xf1bF\xb6\xa8x\xee\xbb\xeb"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_594():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_595():
    float_0 = -487.0
    int_0 = 4185
    set_0 = {int_0, int_0, int_0, int_0}
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_596():
    str_0 = "G%dhY5"
    a_b_c_0 = module_1.ABC()
    dict_0 = {str_0: str_0, str_0: a_b_c_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_597():
    int_0 = -843
    module_1.ABC(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_598():
    float_0 = -597.513436
    bool_0 = False
    dict_0 = {float_0: float_0, float_0: bool_0}
    object_0 = module_0.object()
    object_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_599():
    bool_0 = False
    float_0 = 844.79321
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_600():
    int_0 = -2768
    none_type_0 = None
    int_0.write(none_type_0)


def test_case_601():
    pass


@pytest.mark.xfail(strict=True)
def test_case_602():
    dict_0 = {}
    bytes_0 = b"\xd1\x12\x98\x97YR\xa6\xb3\x90\x0c\xb4\xb4\\\xce\xadU\xac"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_603():
    tuple_0 = ()
    bytes_0 = b"G\xbd7\xfb\xc5?]\xf7\xa6\x9f\xa0"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_604():
    object_0 = module_0.object()
    list_0 = []
    list_0.write(object_0)


def test_case_605():
    pass


@pytest.mark.xfail(strict=True)
def test_case_606():
    float_0 = -2055.54
    int_0 = 1968
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_607():
    str_0 = "u\x0c+a\r("
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_608():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    bool_0 = True
    bool_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_609():
    str_0 = "{.2"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_610():
    int_0 = 1781
    str_0 = "4vVg)6|3x3 >:p~imbP"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_611():
    str_0 = "vn3)<g$RJ"
    module_1.ABC(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_612():
    bool_0 = False
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_613():
    bool_0 = False
    float_0 = -1533.9
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_614():
    none_type_0 = None
    bytes_0 = b"w\xd7"
    bytes_0.write(none_type_0)


def test_case_615():
    pass


@pytest.mark.xfail(strict=True)
def test_case_616():
    str_0 = "%@-:@"
    str_1 = "d76A6Q$a2m/+!~(["
    bool_0 = True
    float_0 = 427.0
    tuple_0 = (str_1, bool_0, float_0)
    str_2 = "1MIJ"
    tuple_1 = (str_1, tuple_0, str_2)
    tuple_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_617():
    float_0 = -1696.806
    list_0 = [float_0]
    complex_0 = 1621.7759 - 1000.429j
    int_0 = -733
    list_1 = [int_0, complex_0, int_0]
    int_1 = -3042
    tuple_0 = (int_0, list_1, int_1)
    tuple_1 = (complex_0, complex_0, tuple_0)
    tuple_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_618():
    none_type_0 = None
    bytes_0 = b"\xb1\xe8+\x90\x00 \xaf\xff\xff\xc2Yj\xc1\xe0?\xe6\x1d\x11"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_619():
    bool_0 = False
    str_0 = "*rmn"
    str_0.write(bool_0)


def test_case_620():
    pass


@pytest.mark.xfail(strict=True)
def test_case_621():
    bool_0 = True
    tuple_0 = (bool_0,)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_622():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    set_0 = {bool_0, bool_0}
    set_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_623():
    a_b_c_0 = module_1.ABC()
    str_0 = "Baxw5}"
    none_type_0 = None
    str_1 = "Mz"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
    }
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_624():
    bytes_0 = b"Jb%\xd8RoH\xcb\xc5"
    bytes_1 = b"k\xa2r"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_625():
    int_0 = 2242
    bool_0 = False
    bool_0.write(int_0)


def test_case_626():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_627():
    float_0 = 1019.87136
    int_0 = 1480
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_628():
    none_type_0 = None
    bytes_0 = b"N\x02'\xad\xcb\xd8\xa7D\xd2Vk\xdf.1\xd5\xa3\xb0\xb3"
    bytes_0.write(none_type_0)


def test_case_629():
    list_0 = []
    dict_0 = {}
    a_b_c_0 = module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_630():
    complex_0 = -294.8795 + 3208.774j
    str_0 = "OHaJ"
    str_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_631():
    bool_0 = False
    str_0 = '"O\rp)ki5&ad,'
    str_1 = "o}FyEPsB\x0bl{|kk"
    str_2 = "=36(2"
    dict_0 = {str_0: str_1, str_1: str_0, str_2: bool_0}
    module_0.object(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_632():
    str_0 = "JXqe4c|<G"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_633():
    dict_0 = {}
    int_0 = -2008
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_634():
    bool_0 = False
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_1}
    tuple_0 = ()
    dict_1 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_635():
    set_0 = set()
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_636():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    dict_0 = {}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_637():
    none_type_0 = None
    bytes_0 = b"H\xe07"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_638():
    int_0 = -2449
    str_0 = "\x0c["
    tuple_0 = (str_0,)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_639():
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0, object_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_640():
    a_b_c_0 = module_1.ABC()
    object_0 = module_0.object()
    object_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_641():
    str_0 = "4yoU"
    str_1 = "a4w\rx:@LO/{"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_642():
    str_0 = ">L+6l4@Q~7ghGZ)2|t"
    int_0 = 6165
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_643():
    bool_0 = False
    str_0 = 'z"0P_TiPd"D`_9 z&'
    dict_0 = {str_0: bool_0}
    module_1.ABC(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_644():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_645():
    none_type_0 = None
    float_0 = 378.47
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_646():
    float_0 = 1885.339
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_647():
    bool_0 = True
    str_0 = "l&"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_648():
    object_0 = module_0.object()
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    str_0 = "\x0cJ*8^1q"
    str_1 = "6ulF\\JC"
    str_2 = "{U|6i}t5?+TE"
    str_3 = "m@sU:A4jCq|c\t"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1, str_3: str_3}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_649():
    str_0 = "ryH<<v?"
    str_1 = "'rH\nq{m_@aU:$@\r"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_650():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    module_1.ABC(*a_b_c_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_651():
    dict_0 = {}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_652():
    none_type_0 = None
    str_0 = 'fa\t$k/R ;|"az6B'
    bytes_0 = b"\xd3\xae(\xe2\x86\xb5yRh\xd8w"
    dict_0 = {str_0: bytes_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_653():
    str_0 = "aQ-)Bv5Uqnm%"
    int_0 = -2597
    tuple_0 = (int_0,)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_654():
    str_0 = "%c`ZJ=n&MG"
    list_0 = []
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_655():
    str_0 = "Na\rtjKMG32*"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_656():
    bytes_0 = b"\x96\xba`\x80\x14"
    str_0 = "\tG`@(\t(/T0T+`5ze[v5?"
    dict_0 = {str_0: str_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_657():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    none_type_0 = None
    str_0 = '2fAw@"<GzP<KSvVc.['
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_658():
    object_0 = module_0.object()
    module_0.object(*object_0)


@pytest.mark.xfail(strict=True)
def test_case_659():
    str_0 = "%@5~`+EI*'O\x0bo.=g"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_660():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_661():
    none_type_0 = None
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    tuple_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_662():
    str_0 = "Xl6ZIA2wj"
    str_1 = "X[~?^QTqck0L6hK"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_663():
    none_type_0 = None
    object_0 = module_0.object()
    set_0 = {object_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_664():
    float_0 = -2244.0
    bytes_0 = b"\x8b\xf8@o\xf9\xf2S\xc3\xf8\xe6\xd7"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_665():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    list_0 = [bool_0]
    list_1 = [bool_0, bool_0, list_0]
    module_1.ABC(*list_1)


def test_case_666():
    pass


@pytest.mark.xfail(strict=True)
def test_case_667():
    int_0 = 1216
    int_1 = 2315
    int_1.write(int_0)


def test_case_668():
    pass


@pytest.mark.xfail(strict=True)
def test_case_669():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, dict_0, bool_0, dict_0]
    bool_1 = False
    bool_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_670():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    bool_0 = True
    list_1 = [bool_0, bool_0]
    str_0 = 'bT3X0\nz@ha"\x0ch'
    dict_0 = {str_0: list_1, str_0: str_0}
    module_1.ABC(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_671():
    bool_0 = True
    str_0 = "nIGlrg#N0D"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_672():
    set_0 = set()
    bytes_0 = b"\x0eNS5\xfc\xe2\xe7\x06[\x90\xd6\xdf\x9d\x18\xa7\x00\xcb\xe2\xc7="
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_673():
    float_0 = 1970.0
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_674():
    int_0 = 224
    list_0 = [int_0, int_0]
    tuple_0 = (list_0,)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_675():
    bytes_0 = b""
    int_0 = 2506
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_676():
    list_0 = []
    str_0 = "\t]]&4"
    dict_0 = {str_0: str_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_677():
    none_type_0 = None
    complex_0 = 22.233 + 1059.3328j
    list_0 = [complex_0, complex_0, complex_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_678():
    int_0 = -2237
    str_0 = "UoL%"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_679():
    none_type_0 = None
    bytes_0 = b'\x1c\x11\xe0W\xfd"\n\x8b\xf3\xe7\xa1e\xce'
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_680():
    none_type_0 = None
    str_0 = '<`K2j:{P%lWGo`>r"'
    bool_0 = True
    bytes_0 = b"54o|\xd0fk\xcbB_cf\xb1<<\x1d\x11\xb9"
    tuple_0 = (str_0, bool_0, bytes_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_681():
    bool_0 = True
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_682():
    str_0 = "a"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_683():
    bool_0 = False
    str_0 = "eHiBDx5RQ#"
    tuple_0 = (bool_0, str_0)
    bool_1 = False
    bool_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_684():
    str_0 = ")i}Y=Gc"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_685():
    bool_0 = True
    float_0 = -997.54401
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_686():
    bool_0 = False
    bool_1 = False
    set_0 = set()
    list_0 = [bool_1, set_0, bool_1]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_687():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"R\xbb\x89\x845\xdd\x04\xcaRT\xff\x04"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_688():
    none_type_0 = None
    int_0 = 2178
    str_0 = "pu2Mxi>\rC"
    tuple_0 = (int_0, str_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_689():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_690():
    none_type_0 = None
    module_0.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_691():
    bool_0 = True
    str_0 = '}dY^x""*>\\O}0v'
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_692():
    list_0 = []
    object_0 = module_0.object(*list_0)
    tuple_0 = ()
    tuple_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_693():
    bool_0 = False
    str_0 = '5\n"%<o'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_694():
    int_0 = -2259
    int_1 = -1103
    bytes_0 = b"\x99n\xfd\xac\x87xCT\xc7\xbe\x82\xd6}"
    set_0 = {bytes_0, bytes_0, int_1}
    bool_0 = False
    tuple_0 = (bool_0, set_0)
    bool_1 = False
    list_0 = [bool_1, set_0, bool_1, tuple_0]
    tuple_1 = (int_1, set_0, tuple_0, list_0)
    tuple_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_695():
    complex_0 = -2162.132398 + 3597.4214j
    bytes_0 = b"\x0ePq\t"
    bytes_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_696():
    tuple_0 = ()
    int_0 = -1883
    str_0 = "V+EW"
    str_1 = "pOTL"
    dict_0 = {str_1: str_1, str_0: str_0}
    tuple_1 = (int_0, str_0, dict_0)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_697():
    float_0 = -182.68344
    bytes_0 = b"F\xda\xf3\xa7\xb9\xc2a\xd7\xe9(E\xd1\xd6"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_698():
    int_0 = 80
    bytes_0 = b"\xa8\x8e\x03\x97s\xa8&\t\x81\x1f \\\x9c\xbe"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_699():
    object_0 = module_0.object()
    str_0 = "v#^h'-`)"
    bytes_0 = b"\xe4(T\x1f\x08\xdc\x08\xbf"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_700():
    none_type_0 = None
    float_0 = 2153.453948
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_701():
    none_type_0 = None
    bytes_0 = b"\x18_\xc9\xbb\xde\xe5\x8b\xdb\xe4\xf3A\xb19J\xecO\x10\xb8\x9c"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_702():
    int_0 = 1660
    list_0 = [int_0, int_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_703():
    complex_0 = 3.48 + 1532j
    bool_0 = False
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_704():
    a_b_c_0 = module_1.ABC()
    complex_0 = -1012.992693 + 3123j
    complex_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_705():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    object_0 = module_0.object()
    object_0.write(a_b_c_0)


def test_case_706():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_707():
    list_0 = []
    list_1 = []
    tuple_0 = (list_0, list_1, list_0)
    list_2 = []
    list_2.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_708():
    str_0 = "/i"
    list_0 = [str_0, str_0, str_0]
    str_1 = "Iq\\-LlD=oyZ^A_|>Gw>"
    str_2 = "s(\x0bk/.9"
    dict_0 = {str_0: list_0, str_1: list_0, str_1: list_0, str_2: str_1}
    module_1.ABC(**dict_0)


def test_case_709():
    pass


@pytest.mark.xfail(strict=True)
def test_case_710():
    int_0 = 4150
    str_0 = "k<CeX7fj9\\bP[:C&\\"
    dict_0 = {str_0: str_0, str_0: str_0}
    dict_0.write(int_0)


def test_case_711():
    pass


@pytest.mark.xfail(strict=True)
def test_case_712():
    a_b_c_0 = module_1.ABC()
    set_0 = set()
    set_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_713():
    float_0 = 217.92444
    module_1.ABC(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_714():
    str_0 = "Ti&"
    bytes_0 = b"O\x18\xe6\xb0Y@\x81\x9cg\x13\xf21\x0f\xa9"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_715():
    none_type_0 = None
    complex_0 = -1329 + 732.80788j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_716():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    bool_1 = True
    set_0 = {bool_1, bool_1}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_717():
    int_0 = 194
    str_0 = "Spp&{o6m`J"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_718():
    a_b_c_0 = module_1.ABC()
    float_0 = -79.1
    tuple_0 = ()
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_719():
    str_0 = "UKaf);`X"
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_720():
    str_0 = 'D"L[\x0b#e}c'
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_721():
    bytes_0 = b"\xc4q\x06w\t\xa7\x1d\xa0\xdb\xa0\x19\x9ag\xf0<3\x11"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_722():
    str_0 = "q]a*&\r[dxN"
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_723():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bytes_0 = b"\xddH\xf8\xce`\xb25\xf2\xd2J\x90\x8a*\xeeT\xf0\x07\x93\xad"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_724():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    set_0 = {a_b_c_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_725():
    bool_0 = True
    complex_0 = 746.396 + 967.27162j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_726():
    a_b_c_0 = module_1.ABC()
    float_0 = 1046.5
    float_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_727():
    bool_0 = True
    str_0 = "$e<c4##2<poV:GM(I*"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_728():
    int_0 = 1318
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_729():
    str_0 = "l:]tEZWE'g!`hK"
    str_1 = "YFNj`U3IP"
    str_1.write(str_0)


def test_case_730():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_731():
    bool_0 = False
    int_0 = -1600
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_732():
    bytes_0 = b"$\xe1"
    bytes_1 = b"c\xde\x06]QR\xec\x86]\x883\xc1)w"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_733():
    none_type_0 = None
    float_0 = -2221.24744
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_734():
    set_0 = set()
    bool_0 = True
    tuple_0 = ()
    tuple_1 = (set_0, bool_0, tuple_0, set_0)
    float_0 = 1513.8147
    float_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_735():
    float_0 = -604.32
    dict_0 = {float_0: float_0}
    int_0 = -3638
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_736():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_737():
    none_type_0 = None
    str_0 = "?D2N<wnX2&ppU;<Qhp."
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_738():
    complex_0 = 1750.7 + 1382.5j
    list_0 = []
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_739():
    set_0 = set()
    float_0 = 124.0
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_740():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    bool_1 = False
    bool_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_741():
    list_0 = []
    bytes_0 = b"c\xc0Y\xe0\x84\xc8h}\x13 \x06KP:\xb7"
    bytes_0.write(list_0)


def test_case_742():
    pass


@pytest.mark.xfail(strict=True)
def test_case_743():
    int_0 = -1801
    bytes_0 = b"\xd0"
    bytes_0.write(int_0)


def test_case_744():
    pass


@pytest.mark.xfail(strict=True)
def test_case_745():
    int_0 = 1237
    list_0 = [int_0, int_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_746():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    bytes_0 = b"\xe7\xd2\x9e\xd6\x12\x001\xdb{\xe4y\x06\xe7\x99"
    tuple_0 = (a_b_c_0, bool_0, bytes_0, bytes_0)
    list_0 = [tuple_0, tuple_0, tuple_0]
    bool_1 = False
    tuple_1 = (bool_1,)
    tuple_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_747():
    none_type_0 = None
    float_0 = 914.0
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_748():
    str_0 = '<g"24BYn2ahsNdIz'
    list_0 = [str_0, str_0, str_0]
    module_0.object(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_749():
    none_type_0 = None
    str_0 = "Z.l|{e^#|ep#"
    str_0.write(none_type_0)


def test_case_750():
    pass


@pytest.mark.xfail(strict=True)
def test_case_751():
    none_type_0 = None
    int_0 = 569
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_752():
    float_0 = -155.6454
    bytes_0 = b"Sy\xb6F\xe1V\xbe"
    list_0 = [bytes_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_753():
    str_0 = "ciX>RU4He\x0c\x0cf-"
    str_1 = "\n=8(t5Q+*qt9>*7d9!"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_754():
    dict_0 = {}
    str_0 = "U~<sD1"
    bytes_0 = b"\x19"
    tuple_0 = (str_0, str_0, bytes_0, bytes_0)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_755():
    bool_0 = True
    float_0 = -2205.5741
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_756():
    bool_0 = True
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    tuple_1.write(bool_0)


def test_case_757():
    pass


@pytest.mark.xfail(strict=True)
def test_case_758():
    float_0 = -160.312826
    str_0 = "papB]Tl9Q"
    tuple_0 = (str_0,)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_759():
    a_b_c_0 = module_1.ABC()
    str_0 = ""
    str_1 = "(~1&d"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_760():
    int_0 = 1146
    tuple_0 = ()
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_761():
    bool_0 = True
    str_0 = "G/mE<!H"
    dict_0 = {str_0: bool_0}
    module_1.ABC(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_762():
    dict_0 = {}
    str_0 = "}Q:<e\x0c3"
    dict_1 = {str_0: dict_0, str_0: dict_0}
    module_1.ABC(*dict_0, **dict_1)


@pytest.mark.xfail(strict=True)
def test_case_763():
    dict_0 = {}
    bytes_0 = b"\xca\t\xdc\xa3XK\x94\xe3\xbc\x01O\xda\x10\x19s@\xe4$"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_764():
    float_0 = -1741.0
    bool_0 = False
    tuple_0 = (bool_0,)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_765():
    int_0 = 1216
    int_1 = -1538
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_766():
    complex_0 = -1672.626822 + 955.033j
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    dict_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_767():
    bytes_0 = b"\xe0\xbc\xadPa\xc4\xe0\xe2\xd4c\xcc\x99\xcf"
    set_0 = set()
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_768():
    bytes_0 = b"\xa9\xf9\xa6\xe7L\x8c\xcc%#\x19\x0e\x8f\xa1"
    bytes_1 = b"\xa7\x90u\xeb-\xea"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_769():
    tuple_0 = ()
    dict_0 = {}
    dict_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_770():
    bytes_0 = b"\x03\xca\xcb\x91P\xe6v\xa0f\x1dE\xd0jI"
    float_0 = 849.9
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_771():
    tuple_0 = ()
    bytes_0 = b"\xab4.\x89\x86mq\xb5u\x98\xa1\x11\xa3z"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_772():
    object_0 = module_0.object()
    bytes_0 = b"\xd5\x0e\x92{G\x0b"
    set_0 = {bytes_0, bytes_0}
    list_0 = [set_0, set_0, set_0, set_0]
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_773():
    bytes_0 = b"\xbc\x05\x14K\xe1\xf1a\x07\xf1\xf0\xa8\xe4\x8a\x92\xd8"
    bytes_1 = b"1\xc0\x9dkE\x10"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_774():
    set_0 = set()
    bytes_0 = b"!\x7fr\xce\xbc(6\x94\xd5\x0f\x8at"
    set_1 = set()
    str_0 = "TSo\x0b~G2+uxcRT!YATdv"
    tuple_0 = (set_0, bytes_0, set_1, str_0)
    bool_0 = True
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_775():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    int_0 = 1691
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_776():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_777():
    bool_0 = True
    tuple_0 = (bool_0,)
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    str_0 = "\ny0fK|0Oc"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_778():
    str_0 = " <DN?$kW\\ \x0b"
    str_1 = ""
    str_2 = ""
    int_0 = 3742
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0, str_2: int_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_779():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    str_0 = "7.i4#"
    str_1 = "[ u@TD{vt"
    str_2 = "(NZjr4"
    dict_0 = {str_0: list_0, str_1: str_1, str_2: str_0, str_0: str_2}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_780():
    object_0 = module_0.object()
    a_b_c_0 = module_1.ABC()
    str_0 = "qp(1z78u}=<z5+"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_781():
    float_0 = 691.68096
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    set_0 = set()
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_782():
    bool_0 = False
    str_0 = "\x0b9lh!<"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_783():
    bool_0 = True
    module_0.object(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_784():
    int_0 = 2321
    int_1 = -488
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_785():
    bytes_0 = b"\xffP\xfd\x9f\x93\xa6\x1fx\xbf\xca\xc7D\xe7"
    int_0 = -4067
    dict_0 = {int_0: int_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_786():
    a_b_c_0 = module_1.ABC()
    object_0 = module_0.object()
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_787():
    bool_0 = True
    str_0 = "-F/"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_788():
    set_0 = set()
    int_0 = -236
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_789():
    none_type_0 = None
    bool_0 = False
    list_0 = [bool_0, bool_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_790():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_791():
    bool_0 = False
    str_0 = '"|k:a-gw'
    tuple_0 = ()
    float_0 = 175.73893
    tuple_1 = (bool_0, str_0, tuple_0, float_0)
    list_0 = [tuple_1, bool_0]
    str_1 = "'@l"
    str_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_792():
    none_type_0 = None
    str_0 = 'h`be]@q$K&sw; Z"h3Os'
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_793():
    bytes_0 = b"\xc7*~\xa0\x08w\xd8\xf2\xf5\x97"
    float_0 = -502.08814
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_794():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    bool_0 = False
    int_0 = -1886
    dict_1 = {bool_0: bool_0, bool_0: bool_0, bool_0: int_0}
    dict_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_795():
    bytes_0 = b"F`\xd2\x06lCp"
    int_0 = 831
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_796():
    bool_0 = True
    set_0 = {bool_0}
    int_0 = -2727
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_797():
    int_0 = 1995
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_798():
    str_0 = 'TCvKpb6A"c'
    set_0 = {str_0, str_0, str_0, str_0}
    list_0 = []
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_799():
    bool_0 = False
    int_0 = -1877
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_800():
    bool_0 = False
    float_0 = 1147.66
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_801():
    bytes_0 = b"j^]a\xe5\xfd\x84"
    float_0 = -749.122
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_802():
    int_0 = -140
    str_0 = "%fq3W!o/O9AY 2N*U`<"
    set_0 = {str_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_803():
    bytes_0 = b">\xa3j'\x1f\xa9\x8c\xed\xcf\x14\xffR\xc1C>Ig\xde"
    dict_0 = {}
    list_0 = [dict_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_804():
    int_0 = 1969
    bool_0 = False
    bool_0.write(int_0)


def test_case_805():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_806():
    int_0 = 181
    list_0 = [int_0, int_0]
    int_1 = -758
    dict_0 = {int_1: int_1}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_807():
    bool_0 = True
    str_0 = "`qE"
    set_0 = {str_0, str_0, str_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_808():
    tuple_0 = ()
    dict_0 = {}
    dict_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_809():
    int_0 = -80
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_810():
    bool_0 = False
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_811():
    none_type_0 = None
    bytes_0 = b"!\xddU\xae\x8f\x9e\x16\xb1O\xd3@\x00\xc5\x04D"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_812():
    bool_0 = False
    int_0 = -1798
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_813():
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    str_0 = "%!\\X&:ax<*iavLzkak>m"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_814():
    bytes_0 = b"cu{\xc5\xa3n\x10\xb1\xdc\x18\xa2\x02\xe3Bp\xd2\x9d"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_1 = {}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_815():
    bool_0 = True
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_816():
    int_0 = 2288
    tuple_0 = (int_0,)
    int_1 = 1144
    int_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_817():
    bool_0 = True
    list_0 = [bool_0]
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_818():
    bytes_0 = b"\xbd"
    float_0 = -2342.9641
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_819():
    list_0 = []
    str_0 = "{1M.N\\:"
    str_1 = "#}"
    str_2 = "\x0bY.^(o.EVD"
    dict_0 = {str_0: list_0, str_0: str_0, str_1: list_0, str_2: list_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_820():
    float_0 = 2250.13
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (dict_0,)
    tuple_0.write(float_0)


def test_case_821():
    pass


@pytest.mark.xfail(strict=True)
def test_case_822():
    str_0 = "=1"
    dict_0 = {}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_823():
    bytes_0 = b"\x89\xc9\xe2\xebh\xb5\x1a\x91"
    bytes_1 = b""
    list_0 = [bytes_1, bytes_1, bytes_1, bytes_1]
    bytes_2 = b"\x8cc\xff\xd5\x1e\x13U,\xb4\x84Bu\xf0H\xae"
    tuple_0 = (list_0, bytes_2)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_824():
    str_0 = "0x\\Zms)!"
    str_1 = "<SI'x7*mj"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_825():
    str_0 = ""
    list_0 = [str_0, str_0, str_0]
    tuple_0 = (list_0,)
    str_1 = "+}9_#+B1rC;8[zUj"
    str_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_826():
    bool_0 = True
    list_0 = [bool_0]
    str_0 = "nA^[O:_6I7"
    none_type_0 = None
    str_1 = "{m2nNuCq:"
    str_2 = ""
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
        str_2: none_type_0,
    }
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_827():
    int_0 = 1922
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_828():
    bool_0 = False
    float_0 = 347.9086
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_829():
    bool_0 = False
    bool_1 = True
    set_0 = {bool_1}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_830():
    complex_0 = -1391.395393 + 1510.9j
    bytes_0 = b"\xe8!\xbdN\x94\xb0Pg>\xdf"
    set_0 = {bytes_0, bytes_0, bytes_0}
    list_0 = [set_0]
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_831():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    dict_0 = {}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_832():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\x13\xef\xc9\x9e^&!\xa5\xd8\xbc\xcd\x03"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_833():
    bytes_0 = b""
    int_0 = 4708
    list_0 = [bytes_0, bytes_0, int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_834():
    object_0 = module_0.object()
    str_0 = "DHs`kack*!=,A"
    list_0 = [str_0, str_0, str_0, str_0]
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_835():
    object_0 = module_0.object()
    set_0 = {object_0, object_0}
    tuple_0 = (set_0,)
    tuple_1 = (object_0, tuple_0)
    object_1 = module_0.object()
    object_1.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_836():
    bool_0 = True
    bytes_0 = b"\x88x\x9b\x99Th\xfd\x97\x0e*\xde:\xa2"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_837():
    str_0 = "5^zvW$dM1c'PfHZ-"
    set_0 = {str_0}
    str_1 = ";5A\x0c2TNp<'u"
    set_1 = {str_1, str_1, str_1}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_838():
    int_0 = 70
    list_0 = [int_0]
    float_0 = -1309.57875
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_839():
    bytes_0 = b""
    set_0 = {bytes_0, bytes_0, bytes_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_840():
    str_0 = "xJ2"
    bytes_0 = b"zq'\x97\xc2X\xf1\xefb\x83"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_841():
    int_0 = -229
    tuple_0 = ()
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_842():
    bool_0 = False
    int_0 = -573
    set_0 = {int_0, int_0, int_0, int_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_843():
    object_0 = module_0.object()
    bool_0 = True
    bool_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_844():
    none_type_0 = None
    int_0 = 122
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_845():
    a_b_c_0 = module_1.ABC()
    dict_0 = {}
    a_b_c_1 = module_1.ABC(**dict_0)
    a_b_c_1.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_846():
    int_0 = 1204
    list_0 = [int_0, int_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_847():
    bool_0 = False
    float_0 = 1111.554326
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_848():
    bytes_0 = b""
    int_0 = -1009
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_849():
    a_b_c_0 = module_1.ABC()
    complex_0 = -2561.37014 + 1526.1753j
    complex_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_850():
    float_0 = 332.2
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_851():
    none_type_0 = None
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_852():
    int_0 = -429
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_853():
    int_0 = -4244
    float_0 = 460.609
    set_0 = {float_0, float_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_854():
    float_0 = -1155.36
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_855():
    int_0 = -719
    dict_0 = {int_0: int_0, int_0: int_0}
    int_1 = 2073
    int_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_856():
    str_0 = "L0C$BGf33.yMgB*mvNm"
    object_0 = module_0.object()
    dict_0 = {object_0: object_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_857():
    bytes_0 = b"U\x9b\xe5r\xfb\xcbT\x0ca\x8c\xbc\xbc\x9e>\x11l\x0f\x93^\x9f"
    str_0 = ""
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_858():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_859():
    str_0 = "muv$o-:T"
    list_0 = [str_0, str_0, str_0, str_0]
    float_0 = 497.7599
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_860():
    object_0 = module_0.object()
    none_type_0 = None
    bytes_0 = b"db\xef\r\xbb\xfe\xe9\xd3H\x05\xe6\t\xe0"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_861():
    none_type_0 = None
    float_0 = -1404.231
    set_0 = {float_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_862():
    none_type_0 = None
    int_0 = -101
    int_0.write(none_type_0)


def test_case_863():
    pass


@pytest.mark.xfail(strict=True)
def test_case_864():
    object_0 = module_0.object()
    str_0 = "M|*"
    list_0 = []
    list_0.write(str_0)


def test_case_865():
    object_0 = module_0.object()


def test_case_866():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_867():
    str_0 = "\nT*+5Xt"
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_868():
    complex_0 = 779.6 - 305.99j
    float_0 = 1802.5
    float_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_869():
    bool_0 = False
    set_0 = {bool_0}
    int_0 = -543
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_870():
    none_type_0 = None
    int_0 = -541
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_871():
    bool_0 = True
    str_0 = "1|XtaT<K0Tx\r[Dwj\t"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_872():
    object_0 = module_0.object()
    int_0 = 1182
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_873():
    object_0 = module_0.object()
    str_0 = "z\t\n4l}Wx'"
    str_1 = "9/"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_874():
    bytes_0 = b"*\xb5\xf5\n\x81B&D\xe2\xa4\xcd\x98p_\x9a\xa7b"
    list_0 = []
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_875():
    str_0 = "!aSN"
    str_1 = "WNa"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_876():
    none_type_0 = None
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    object_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_877():
    bool_0 = True
    int_0 = -4889
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_878():
    str_0 = "BMw?"
    str_1 = "}0Hv@o-I"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_1, str_0: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_879():
    float_0 = -1154.0
    bool_0 = True
    list_0 = [float_0, float_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_880():
    complex_0 = -74.96089 - 478.8472j
    int_0 = 990
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_881():
    dict_0 = {}
    bytes_0 = b"\xaeq\xc6\xb6\x1f\x0b\xe9\xe4\x9bTTs\xa9}\xbc"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_882():
    int_0 = -4388
    complex_0 = 477.78833 - 1659.434863j
    set_0 = {complex_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_883():
    none_type_0 = None
    str_0 = "g0#9Y+"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_884():
    str_0 = "zf"
    float_0 = 417.51
    dict_0 = {float_0: float_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_885():
    float_0 = -3366.224
    float_1 = -1638.81043
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_886():
    dict_0 = {}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_887():
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    set_0.write(none_type_0)


def test_case_888():
    pass


@pytest.mark.xfail(strict=True)
def test_case_889():
    dict_0 = {}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_890():
    list_0 = []
    str_0 = "\x0c?\t4|"
    dict_0 = {str_0: list_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_891():
    bool_0 = False
    bytes_0 = b"\x9e\xa9\xbd"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_892():
    bytes_0 = b"\xd7.+\xde&x!\x1a,\xc4"
    bool_0 = True
    list_0 = [bool_0, bool_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_893():
    none_type_0 = None
    bytes_0 = b"U\x11\x8b\xbb\xd4\x03T\x7fa1*%\xb1m"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_894():
    none_type_0 = None
    str_0 = "K72U_}oSJ\tl7F_3K4ZY"
    str_0.write(none_type_0)


def test_case_895():
    a_b_c_0 = module_1.ABC()
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_896():
    bytes_0 = b"\xb3\xf0\x02\xba\xb0"
    tuple_0 = ()
    set_0 = {bytes_0, bytes_0, tuple_0}
    bytes_1 = b"\x97Q\x88\x8a\x1b1\x1b\x0e_\x87w_\xcc\xd3v\xa9y"
    bytes_1.write(set_0)


def test_case_897():
    pass


@pytest.mark.xfail(strict=True)
def test_case_898():
    str_0 = "!o{g_~Ufhb>f/OE.*"
    bool_0 = True
    bool_0.write(str_0)


def test_case_899():
    pass


@pytest.mark.xfail(strict=True)
def test_case_900():
    tuple_0 = ()
    bytes_0 = b"\xd13X\xb6\r}\x17G\x19\x92\xaf\xbc?\xd7/T"
    tuple_1 = (bytes_0,)
    tuple_1.write(tuple_0)


def test_case_901():
    pass


@pytest.mark.xfail(strict=True)
def test_case_902():
    bool_0 = True
    list_0 = [bool_0]
    tuple_0 = (bool_0, list_0)
    int_0 = 2457
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_903():
    int_0 = 2615
    set_0 = {int_0, int_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_904():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_905():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0]
    bytes_0 = b"\x89\xd6\xe8Cs\xc5t\xb0\xd8\x7f\x1d\x9a\x13\x07\xee\xfb9"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_906():
    bool_0 = False
    int_0 = 396
    list_0 = [bool_0, int_0]
    bool_1 = False
    bool_2 = False
    dict_0 = {bool_1: bool_1, bool_1: bool_1, bool_2: bool_2, bool_1: bool_1}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_907():
    int_0 = 3380
    dict_0 = {int_0: int_0}
    str_0 = "vrx$\x0b}xXs6>)0IH@'|"
    tuple_0 = (int_0, dict_0, int_0, str_0)
    int_1 = 3046
    set_0 = {int_1}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_908():
    none_type_0 = None
    bytes_0 = b"\xb8i\xdf\xfbL\r\x89h\xe3\x1b+,N>\x82\x07\x84#V\x0b"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_909():
    none_type_0 = None
    int_0 = -3349
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_910():
    str_0 = "6Hbv<pV[v=I\nr77"
    str_1 = ")4j_r"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_911():
    set_0 = set()
    list_0 = [set_0]
    str_0 = ".q.7["
    str_1 = ""
    dict_0 = {str_0: set_0, str_0: list_0, str_1: str_1, str_0: set_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_912():
    bytes_0 = (
        b"\xba\xcdI\xc6\xe7\x10\xf2\xe9\x12\xc4\xaa\xd4\xe2\x05\x85D\t\xfd\x1b\x00"
    )
    dict_0 = {bytes_0: bytes_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_913():
    bytes_0 = b"4\x1f9I7\xd8\x13g"
    object_0 = module_0.object()
    bool_0 = False
    complex_0 = -3237 - 2367.86189j
    tuple_0 = (object_0, bool_0, complex_0)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_914():
    int_0 = 1505
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_915():
    none_type_0 = None
    int_0 = -1651
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_916():
    set_0 = set()
    bytes_0 = b"\xe20K\\a\xffN\x1d\\z\xc5ZR\x8c\xe7"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_917():
    none_type_0 = None
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_918():
    bool_0 = False
    float_0 = 664.797172
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_919():
    none_type_0 = None
    str_0 = "Vn2*]6t>]:3TI="
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_920():
    bytes_0 = b"\x0b\xca\xa7\xf9\xb7\xea\x8d5\x00\xb7\x0e\xdd\x04"
    float_0 = 381.665852
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_921():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_922():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    float_0 = 460.1932
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_923():
    bytes_0 = b"\xb5\xa8"
    module_1.ABC(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_924():
    set_0 = set()
    str_0 = "Y\r\t.W-"
    bytes_0 = b"\xbd1\x08\xdc~q4"
    int_0 = -681
    tuple_0 = (str_0, bytes_0, int_0)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_925():
    str_0 = "M[;[v+a@w\x0bC\t(5]X"
    tuple_0 = (str_0,)
    bytes_0 = b"\x14\x16\xb2\xfc\xd4{\xda\xb5\xa4\x08\xba\x1dH"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_926():
    a_b_c_0 = module_1.ABC()
    tuple_0 = ()
    bool_0 = True
    tuple_1 = ()
    set_0 = {bool_0, tuple_1}
    dict_0 = {tuple_0: set_0}
    list_0 = [set_0]
    tuple_2 = (tuple_0, dict_0, tuple_1, list_0)
    tuple_2.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_927():
    bytes_0 = b"\xeb\xdd"
    list_0 = [bytes_0, bytes_0]
    module_1.ABC(*list_0, **bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_928():
    int_0 = -1800
    str_0 = "3P[_T^fS8l^B+O&l0"
    list_0 = [str_0, str_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_929():
    none_type_0 = None
    str_0 = "MI+U!`YLq3nIYq"
    int_0 = 1632
    tuple_0 = (str_0, int_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_930():
    int_0 = -335
    bool_0 = True
    tuple_0 = (bool_0,)
    tuple_1 = (bool_0, tuple_0)
    tuple_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_931():
    a_b_c_0 = module_1.ABC()
    list_0 = []
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_932():
    str_0 = "\x0cdt@i=AJEk"
    str_1 = "J_\no\x0c`I\nq91wf`y`{`\\"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_0: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_933():
    bool_0 = True
    int_0 = -518
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_934():
    tuple_0 = ()
    set_0 = set()
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_935():
    complex_0 = 610.867 - 3407.736j
    int_0 = -3220
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_936():
    bool_0 = False
    set_0 = set()
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_937():
    bool_0 = False
    none_type_0 = None
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_938():
    object_0 = module_0.object()
    module_1.ABC(**object_0)


@pytest.mark.xfail(strict=True)
def test_case_939():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    bytes_0 = b""
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_940():
    object_0 = module_0.object()
    bytes_0 = b""
    bytes_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_941():
    str_0 = ""
    tuple_0 = (str_0, str_0)
    dict_0 = {tuple_0: str_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_942():
    str_0 = "*C!TIg`;58"
    complex_0 = -1550.35 - 631.16j
    complex_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_943():
    none_type_0 = None
    int_0 = -4197
    set_0 = {int_0, int_0, int_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_944():
    bytes_0 = b"\xd4\xbb\x9e\x84"
    set_0 = {bytes_0, bytes_0}
    list_0 = [set_0, set_0, set_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_945():
    complex_0 = -2297.1 + 2937.4143j
    bool_0 = False
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_946():
    str_0 = "znK84&hu\tU_"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_947():
    complex_0 = -583.6 + 3024.8j
    bool_0 = True
    bool_0.write(complex_0)


def test_case_948():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_949():
    a_b_c_0 = module_1.ABC()
    str_0 = "U3M\\frbr)*%yNH\n`[lr"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_950():
    none_type_0 = None
    list_0 = []
    list_0.write(none_type_0)


def test_case_951():
    pass


@pytest.mark.xfail(strict=True)
def test_case_952():
    none_type_0 = None
    int_0 = -3123
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_953():
    bytes_0 = b"\xedh\xbb\x9d\x9d%B\xfc\x19\xfa\xccb\x17O8)"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    bool_0 = True
    tuple_0 = (set_0, set_0, bool_0)
    bool_1 = True
    bool_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_954():
    str_0 = "ur3l"
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_955():
    bool_0 = True
    int_0 = 432
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_956():
    bool_0 = True
    bytes_0 = b"\x15"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_957():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    list_0 = [set_0, set_0]
    module_0.object(*list_0, **a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_958():
    none_type_0 = None
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(none_type_0)


def test_case_959():
    pass


@pytest.mark.xfail(strict=True)
def test_case_960():
    bytes_0 = b"v\xbd\x8d|S\xae \xfc\x97\xf8F\x16"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = True
    dict_1 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_1.write(dict_0)


def test_case_961():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_962():
    str_0 = "/D3\r=D3\x0c6l?1lo\tY"
    module_1.ABC(*str_0)


@pytest.mark.xfail(strict=True)
def test_case_963():
    bytes_0 = b"y\xa7\x04\xe3E\xd0\n\x06<\x93q\x92\xbc_\x03\xa9P\xbd\x00"
    int_0 = -1780
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_964():
    none_type_0 = None
    bytes_0 = b"\xc2\x0f\x814"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_965():
    tuple_0 = ()
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bytes_0 = b"\xf1<\xa1~\xae\xf3n"
    tuple_1 = (bool_0, list_0, bytes_0)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_966():
    float_0 = 4835.0
    int_0 = 375
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_967():
    float_0 = -2646.67
    dict_0 = {}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_968():
    bytes_0 = b"\xf0\x91\xdd.r"
    complex_0 = -1195.006 + 1691j
    complex_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_969():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    dict_0 = {}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_970():
    set_0 = set()
    int_0 = 417
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_971():
    object_0 = module_0.object()
    bool_0 = True
    set_0 = {bool_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_972():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    bool_1 = True
    bool_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_973():
    bool_0 = True
    bytes_0 = b"\xba\x86\x99W\xd4?\x14"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_974():
    dict_0 = {}
    bytes_0 = b"B\x0c\x08\x05\xdf\xea\xebb\x9c#\xc2\xda'\xb9\xee\xfb\xc5\xbd\xc3d"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_975():
    list_0 = []
    none_type_0 = None
    module_1.ABC(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_976():
    str_0 = ".sGR-RsT0W}\x0c7"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_977():
    float_0 = -1821.4615
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_978():
    bool_0 = False
    bytes_0 = b"\x11\x19\x85\xe2\x86"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_979():
    int_0 = -3838
    tuple_0 = (int_0,)
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_980():
    str_0 = "tKyrS-7.\n"
    list_0 = [str_0, str_0, str_0, str_0]
    list_1 = [list_0, list_0, str_0]
    bool_0 = True
    bool_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_981():
    bool_0 = False
    bytes_0 = b"\\\xb0"
    bytes_0.write(bool_0)


def test_case_982():
    pass


@pytest.mark.xfail(strict=True)
def test_case_983():
    str_0 = "A"
    str_1 = ""
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_984():
    int_0 = 494
    str_0 = ":+t\x0bOE~"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_985():
    int_0 = -1085
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_986():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    set_1 = set()
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_987():
    str_0 = 'cRU#:o+*,Jv`f"GYvY'
    str_1 = 'Cd]"*I'
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_988():
    str_0 = "E\n,Ez5srJ8!G)GKUv\r"
    str_1 = "({$0vz$'u4sv:;\nns9X1"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_989():
    float_0 = -1426.0
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    object_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_990():
    none_type_0 = None
    int_0 = -3013
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_991():
    bool_0 = True
    bytes_0 = b'\xd5D"\x1c\x8b\xab\xc5H\xf5\xa3\xcb@\xd4G>\xf5'
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_992():
    bool_0 = True
    str_0 = "r?"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_993():
    int_0 = 1034
    list_0 = [int_0, int_0, int_0]
    module_1.ABC(*list_0)


def test_case_994():
    pass


@pytest.mark.xfail(strict=True)
def test_case_995():
    none_type_0 = None
    float_0 = 292.0
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_996():
    bool_0 = False
    bool_1 = False
    set_0 = {bool_1, bool_1}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_997():
    int_0 = -212
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_998():
    none_type_0 = None
    str_0 = ""
    tuple_0 = ()
    bool_0 = True
    tuple_1 = (str_0, tuple_0, str_0, bool_0)
    tuple_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_999():
    none_type_0 = None
    bytes_0 = b'8\x0b\xce)\x81R\xa2k\x1f\xf1\xb4\xfe=\x12"n'
    tuple_0 = (bytes_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1000():
    bool_0 = False
    tuple_0 = (bool_0,)
    dict_0 = {tuple_0: tuple_0, bool_0: bool_0, tuple_0: tuple_0}
    int_0 = -2547
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1001():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1002():
    bytes_0 = b"\x05\x1d\xacbl\xce\xa06\x0e]\x0fb\x88\x98\xa1\n\x8a\xf6\xbc"
    list_0 = [bytes_0, bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1003():
    float_0 = 886.4247
    tuple_0 = (float_0,)
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1004():
    bytes_0 = b"\x98\xe6\xde"
    a_b_c_0 = module_1.ABC()
    tuple_0 = (bytes_0, a_b_c_0)
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1005():
    int_0 = 421
    dict_0 = {}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1006():
    str_0 = "~KYek'N"
    float_0 = -1805.85706
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    tuple_0 = (float_0, dict_0, float_0, dict_0)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1007():
    bool_0 = True
    bool_1 = False
    set_0 = {bool_1, bool_1}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1008():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    tuple_0 = (bool_0,)
    tuple_0.write(a_b_c_0)


def test_case_1009():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_1010():
    bool_0 = False
    int_0 = -1099
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1011():
    int_0 = -5876
    int_1 = 3265
    list_0 = [int_1, int_1, int_1]
    list_0.write(int_0)


def test_case_1012():
    pass


def test_case_1013():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1014():
    str_0 = "%\x0cOF;-KyG0"
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1015():
    none_type_0 = None
    str_0 = "O"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1016():
    set_0 = set()
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1017():
    none_type_0 = None
    complex_0 = -2139.0231 + 3378.268951j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1018():
    a_b_c_0 = module_1.ABC()
    object_0 = module_0.object()
    list_0 = [object_0, object_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1019():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0}
    int_0 = 2507
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1020():
    object_0 = module_0.object()
    float_0 = -2756.4
    float_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1021():
    int_0 = -620
    int_1 = -3041
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1022():
    bool_0 = False
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1023():
    complex_0 = -2785.9337 - 2076j
    module_1.ABC(**complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1024():
    dict_0 = {}
    float_0 = -1056.86917
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1025():
    str_0 = "tST@%d',AJg9CZ-q"
    str_1 = "Y{r<1\\\n="
    str_2 = "ctnw?:F1A"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1026():
    list_0 = []
    bytes_0 = b""
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1027():
    float_0 = 853.0
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1028():
    int_0 = 906
    dict_0 = {int_0: int_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1029():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    list_0 = [set_0]
    str_0 = "2m,yef:j"
    none_type_0 = None
    str_1 = "*Dnj,PeMe]rF\x0bbu~"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1030():
    str_0 = "g!W9wIcB>:"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1031():
    dict_0 = {}
    set_0 = set()
    list_0 = [dict_0, set_0, dict_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1032():
    a_b_c_0 = module_1.ABC()
    int_0 = 600
    bytes_0 = b"3\xb9X\xa0\xbb&]\xac\x01\xb0\xf6\xe4A\x06"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1033():
    object_0 = module_0.object()
    int_0 = 2817
    module_1.ABC(*int_0, **int_0)


@pytest.mark.xfail(strict=True)
def test_case_1034():
    bool_0 = True
    int_0 = 2074
    list_0 = [int_0, int_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1035():
    float_0 = 304.1822
    float_1 = 2156.934
    float_1.write(float_0)


def test_case_1036():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1037():
    int_0 = 2503
    set_0 = {int_0, int_0, int_0, int_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1038():
    list_0 = []
    object_0 = module_0.object(*list_0)
    complex_0 = -4100.430684 - 587j
    bytes_0 = b"\x97\x84\x1a\xe1B\xd2\xf7\xcdd\xa9\x13"
    tuple_0 = (object_0, complex_0, object_0, bytes_0)
    tuple_1 = ()
    dict_0 = {tuple_0: tuple_1}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1039():
    none_type_0 = None
    list_0 = [none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1040():
    bytes_0 = b"R0\x83\xfc\xc7"
    list_0 = [bytes_0, bytes_0, bytes_0]
    list_1 = [list_0, bytes_0]
    bool_0 = True
    str_0 = "Lu>|K##*LB"
    tuple_0 = (list_1, bool_0, str_0, bool_0)
    bool_1 = False
    bool_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1041():
    int_0 = 1086
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1042():
    bytes_0 = b"F3\x98\xe6\xcd\xb4I\xf2O\x9c\x15\xa2\xad\x01DH"
    complex_0 = 3110.3 + 761.578j
    complex_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1043():
    bytes_0 = b"`\xe3\xa4\xa3\xb4G\x8b\xe7\x92\xf1\x1dliZ\x04j1"
    set_0 = set()
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1044():
    float_0 = -2288.5788
    int_0 = -383
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1045():
    none_type_0 = None
    float_0 = -1854.7
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1046():
    bytes_0 = b"6\\\x976\xb2/\xb5\xc7\x0e\x95"
    set_0 = {bytes_0, bytes_0}
    tuple_0 = ()
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1047():
    none_type_0 = None
    int_0 = 2171
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1048():
    object_0 = module_0.object()
    dict_0 = {}
    dict_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1049():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1050():
    bytes_0 = b"\xb9\xab\r\xaaEc\r"
    bool_0 = False
    bool_0.write(bytes_0)


def test_case_1051():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1052():
    str_0 = "qcI'MJ"
    set_0 = {str_0, str_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1053():
    object_0 = module_0.object()
    list_0 = []
    object_1 = module_0.object(*list_0)
    object_1.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1054():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1055():
    none_type_0 = None
    bytes_0 = b"\xe1+de\x03\xc2E\xeff]\x9c\x01\xbc\xd9"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1056():
    dict_0 = {}
    list_0 = [dict_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1057():
    int_0 = -2058
    float_0 = -2980.7722
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1058():
    none_type_0 = None
    bytes_0 = b"r\xd4\x87<\xdeC1\xe1w<\n"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1059():
    complex_0 = 2969.117074 - 730.65189j
    set_0 = {complex_0, complex_0, complex_0}
    list_0 = []
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1060():
    int_0 = -2789
    bool_0 = True
    tuple_0 = (int_0, bool_0)
    int_1 = 2127
    dict_0 = {int_1: int_1}
    dict_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1061():
    int_0 = -890
    bytes_0 = b"\x9e\xa4"
    bytes_1 = b"\x95"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_1}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1062():
    bytes_0 = b"I\x99E\xc9F\xa7"
    str_0 = "<=MH]:B1g'0mE:t.Z"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1063():
    bytes_0 = b"J\xce\x1a\xdb3\xffPG\x187\xf2UJU\xbe\xa1"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1064():
    int_0 = 1651
    int_1 = -527
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1065():
    bool_0 = True
    bytes_0 = b"z\xb6\xdf,\xb7\xf1\x99l\xe1"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1066():
    a_b_c_0 = module_1.ABC()
    set_0 = set()
    set_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1067():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    int_0 = -1708
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1068():
    int_0 = -1924
    list_0 = [int_0, int_0, int_0, int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1069():
    str_0 = "4g?/M\n=vC#\n'H3i&Q\n"
    float_0 = 670.826728
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1070():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1071():
    bytes_0 = b"P_\xd0D"
    int_0 = -1102
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1072():
    object_0 = module_0.object()
    list_0 = [object_0, object_0]
    str_0 = "ytp*Y@Wv\x0b~T{W"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1073():
    list_0 = []
    str_0 = "P3n=x="
    str_1 = "O,J-k^Z'oIKqs7RJoC{"
    bytes_0 = b"\x1a\xee\tH\x7f:\x9d\xa4\xaaKYG\xa3\xf1\n\x14\x8c\xff"
    str_2 = 'N@Id6\nZroGA}B\t"'
    dict_0 = {str_0: list_0, str_1: bytes_0, str_1: str_0, str_2: list_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1074():
    str_0 = "\x0c"
    module_0.object(*str_0, **str_0)


@pytest.mark.xfail(strict=True)
def test_case_1075():
    str_0 = "GnXf94\rfa|"
    none_type_0 = None
    str_1 = "3[#gxxHK2TO7}:/Ih*"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1076():
    dict_0 = {}
    bytes_0 = b"\xd1\x93o"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1077():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0]
    bytes_0 = b""
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1078():
    float_0 = 30.79875
    list_0 = [float_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1079():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1080():
    bool_0 = False
    bool_1 = False
    a_b_c_0 = module_1.ABC()
    list_0 = [bool_1, a_b_c_0, a_b_c_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1081():
    float_0 = 288.75
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1082():
    none_type_0 = None
    bytes_0 = b"\x99\xe0"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1083():
    bool_0 = False
    int_0 = -293
    int_0.write(bool_0)


def test_case_1084():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1085():
    int_0 = -3853
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1086():
    bool_0 = False
    dict_0 = {}
    a_b_c_0 = module_1.ABC(*dict_0)
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1087():
    str_0 = "(i|idO's\x0c=$bw\x0b\x0cGz"
    list_0 = [str_0]
    bytes_0 = b"\xac\xfa(\xe0\x99\xea\r\xc2"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1088():
    bool_0 = True
    bool_1 = False
    set_0 = {bool_0, bool_0, bool_1, bool_0}
    bool_2 = True
    bool_2.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1089():
    none_type_0 = None
    tuple_0 = ()
    bool_0 = False
    dict_0 = {}
    tuple_1 = (tuple_0, bool_0, dict_0)
    tuple_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1090():
    bytes_0 = b"\xbbLgLOW\x9d\xd4\xe2(>\xee\xd0"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1091():
    a_b_c_0 = module_1.ABC()
    int_0 = -2779
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1092():
    str_0 = "qNLzG:QW\t["
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1093():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0]
    int_0 = 2071
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1094():
    none_type_0 = None
    module_0.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1095():
    a_b_c_0 = module_1.ABC()
    complex_0 = 1680.64608 - 2715j
    set_0 = {complex_0}
    tuple_0 = (complex_0, set_0)
    tuple_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1096():
    str_0 = "S;#!;\\TU}'eE}S"
    str_1 = "17n\r\nYtD"
    str_2 = "1'O"
    bool_0 = True
    float_0 = 529.4293
    dict_0 = {str_0: str_0, str_1: str_1, str_2: bool_0, str_2: float_0}
    module_0.object(**dict_0)


def test_case_1097():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1098():
    str_0 = "\x0cA&\r%S5$"
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1099():
    set_0 = set()
    list_0 = []
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1100():
    float_0 = -2990.186
    module_1.ABC(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_1101():
    bool_0 = True
    str_0 = "K"
    none_type_0 = None
    str_1 = "~{To^:j@;36G"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: none_type_0}
    module_1.ABC(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1102():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\x85h\xb8\x87PdQ"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1103():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    str_0 = ",B(C1|2?NdZ"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1104():
    str_0 = "R"
    bytes_0 = b"\x1c\xa0T\x03\xa7F7\xcf\xfd"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1105():
    a_b_c_0 = module_1.ABC()
    str_0 = "!Lw3$lVc5JEdMh<HK2w"
    str_1 = ";*My`K4kkK-WZ,k4&Sw"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1106():
    bool_0 = False
    bool_1 = True
    float_0 = 2209.18
    tuple_0 = (bool_1, float_0, float_0, float_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1107():
    bool_0 = True
    float_0 = -1273.0
    bytes_0 = b"\x87\xde\x1e\xa1"
    dict_0 = {float_0: float_0, bytes_0: bytes_0, float_0: bytes_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1108():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    list_0 = [a_b_c_0]
    int_0 = 629
    bytes_0 = b"'\xe6\xd1B\xf2"
    a_b_c_1 = module_1.ABC()
    dict_1 = {int_0: bytes_0, a_b_c_1: a_b_c_1}
    dict_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1109():
    int_0 = 2381
    bytes_0 = b"\x1e/\xd6\x84\xbdH\xd9\xdb\x8b^\x1c\x9flO\x8fdC\x8b\xad"
    set_0 = {bytes_0}
    tuple_0 = (bytes_0, set_0)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1110():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b""
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1111():
    tuple_0 = ()
    bool_0 = True
    tuple_1 = (tuple_0, tuple_0, bool_0)
    list_0 = [tuple_1, tuple_1, tuple_0]
    str_0 = "TTCA,eX r:'QW"
    str_1 = "b>Xh1^-vT::7ew<~bw"
    dict_0 = {str_0: tuple_1, str_1: bool_0, str_0: tuple_0}
    module_1.ABC(*list_0, **dict_0)


def test_case_1112():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1113():
    dict_0 = {}
    int_0 = 2263
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1114():
    set_0 = set()
    str_0 = ":=Hs\rt9]=B"
    bytes_0 = b'i\xa1\xba\xf4\xb0\x83UC\xb0\xb0\x90\xad"\xbdki'
    tuple_0 = (str_0, bytes_0, str_0, bytes_0)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1115():
    str_0 = "*jRlJ0\ta-nvq-f`F"
    bytes_0 = b"\xa0\xaf\x0e\xf2"
    set_0 = {str_0, str_0, str_0, bytes_0}
    object_0 = module_0.object()
    object_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1116():
    bool_0 = True
    tuple_0 = (bool_0,)
    str_0 = "\x0cmWi2%A7!;E@XLdpV"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1117():
    complex_0 = -979.156 + 1706.22351j
    bool_0 = False
    tuple_0 = (bool_0,)
    list_0 = [tuple_0]
    tuple_1 = (tuple_0, list_0)
    tuple_1.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1118():
    object_0 = module_0.object()
    str_0 = "Dk8R3b"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


def test_case_1119():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_1120():
    bytes_0 = b"\x00i\xd4\xeff\xd5\xf8\x9b\x0b\xf4\xa1"
    float_0 = -743.89
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1121():
    object_0 = module_0.object()
    int_0 = -3327
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1122():
    str_0 = "V|0 "
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1123():
    int_0 = -3159
    int_1 = -743
    int_1.write(int_0)


def test_case_1124():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_1125():
    int_0 = -4699
    set_0 = set()
    bytes_0 = b"\xb8\x1b\xd3\xee_"
    list_0 = [set_0, bytes_0, set_0, set_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1126():
    bool_0 = True
    str_0 = "~nY6S"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1127():
    none_type_0 = None
    bytes_0 = b"\xfa,\x8b"
    list_0 = [bytes_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1128():
    bytes_0 = b"\xca\rA\x97\xe9$V\xc7\xecW\x9391D\x17\xd0"
    list_0 = [bytes_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1129():
    bool_0 = False
    bytes_0 = b"\x00\x07)\xb2\xd0\x8e\x19\xa6X1"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1130():
    int_0 = -1548
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1131():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1132():
    int_0 = -3398
    module_1.ABC(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_1133():
    int_0 = -5078
    list_0 = [int_0]
    list_1 = [list_0, int_0, list_0, list_0]
    bytes_0 = b"\xe9\xd9\xea\xc3\xf9\xb1W\x94\x88\x01g>\x80x\x14L\x87"
    bytes_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1134():
    bool_0 = False
    bytes_0 = b""
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1135():
    bytes_0 = b"\x99F\x1b"
    dict_0 = {bytes_0: bytes_0}
    int_0 = -3053
    int_0.write(dict_0)


def test_case_1136():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1137():
    dict_0 = {}
    list_0 = []
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1138():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    str_0 = 'gobg"mu'
    str_1 = "Fraq\r0?g"
    dict_0 = {str_0: set_0, str_1: set_0, str_1: a_b_c_0, str_1: str_0}
    module_1.ABC(*set_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1139():
    bool_0 = True
    int_0 = -2493
    list_0 = [int_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1140():
    float_0 = 3506.01
    float_1 = 1594.11026
    a_b_c_0 = module_1.ABC()
    list_0 = [float_1, float_1, float_1, a_b_c_0]
    list_1 = [list_0, float_1, list_0]
    list_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1141():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    bool_1 = True
    bool_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1142():
    int_0 = 2094
    bytes_0 = b"-\xedW\xea\xc7\xb3\x1eoF\x8a\x04\xa9\\i#\xdb\x93"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1143():
    int_0 = -277
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1144():
    none_type_0 = None
    int_0 = -3655
    int_1 = -1249
    bytes_0 = b"0j\xca_\xc0"
    bool_0 = True
    tuple_0 = (int_0, int_1, bytes_0, bool_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1145():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    bool_0 = False
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1146():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1147():
    complex_0 = -1232.638 + 2924.1625j
    bool_0 = True
    set_0 = {bool_0}
    tuple_0 = (bool_0, set_0, set_0)
    list_0 = [tuple_0, bool_0]
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1148():
    none_type_0 = None
    str_0 = "[lUqoj"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1149():
    int_0 = -1813
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1150():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1151():
    int_0 = -1346
    int_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1152():
    bool_0 = True
    set_0 = set()
    list_0 = [set_0, set_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1153():
    str_0 = ""
    bool_0 = True
    bool_0.write(str_0)


def test_case_1154():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1155():
    bool_0 = True
    module_1.ABC(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1156():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1157():
    none_type_0 = None
    set_0 = set()
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    tuple_0 = (set_0, bool_0, dict_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1158():
    bytes_0 = b"\xc5\x0bH\x96\x1e\x10j<\x8f7\xc3i\x8biN.\xf0s\xf6\xa4"
    tuple_0 = ()
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1159():
    float_0 = 1288.06
    bytes_0 = b"\xee\x82\xaf\xbd"
    bytes_0.write(float_0)


def test_case_1160():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_1161():
    bytes_0 = b"\xf5|\x81\x8c\x7f\xca\xab"
    set_0 = set()
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1162():
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1163():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    module_1.ABC(*set_0)


@pytest.mark.xfail(strict=True)
def test_case_1164():
    int_0 = 1106
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1165():
    a_b_c_0 = module_1.ABC()
    str_0 = "'mNt:5~]MLJUw|#:?"
    set_0 = {a_b_c_0, a_b_c_0, str_0, str_0}
    module_0.object(*set_0)


def test_case_1166():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1167():
    bool_0 = True
    module_1.ABC(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1168():
    none_type_0 = None
    str_0 = ""
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1169():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    int_0 = -2347
    list_1 = [int_0, int_0, int_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1170():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1171():
    int_0 = 1241
    bool_0 = False
    bool_0.write(int_0)


def test_case_1172():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1173():
    tuple_0 = ()
    str_0 = "6,5Sz"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1174():
    int_0 = -172
    str_0 = "G_Nf#_?"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1175():
    tuple_0 = ()
    bool_0 = True
    bool_1 = True
    dict_0 = {bool_0: bool_0, bool_1: bool_0, bool_0: bool_1, bool_1: bool_1}
    dict_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1176():
    a_b_c_0 = module_1.ABC()
    str_0 = "rqMLfW[=zvk"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1177():
    float_0 = -498.937201
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1178():
    str_0 = "K{;.2qi"
    int_0 = 932
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1179():
    tuple_0 = ()
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1180():
    int_0 = -1625
    float_0 = -308.5633
    tuple_0 = (float_0,)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1181():
    complex_0 = 2793.3 - 708.4166j
    dict_0 = {}
    dict_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1182():
    int_0 = -219
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1183():
    int_0 = -1630
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1184():
    float_0 = -852.79399
    list_0 = [float_0, float_0, float_0]
    str_0 = "=a~H\t'OfBe]b#9{]"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1185():
    float_0 = 2550.196027
    list_0 = [float_0, float_0, float_0, float_0]
    complex_0 = 4117.9711 + 1654.228185j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    tuple_0 = (complex_0, set_0)
    tuple_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1186():
    bool_0 = False
    set_0 = {bool_0}
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1187():
    set_0 = set()
    int_0 = 2507
    dict_0 = {int_0: int_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1188():
    bool_0 = True
    object_0 = module_0.object()
    tuple_0 = (bool_0, object_0)
    bytes_0 = b"\xe9\xc2\xfd\xafq"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1189():
    int_0 = 2209
    int_1 = -594
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1190():
    a_b_c_0 = module_1.ABC()
    object_0 = module_0.object()
    list_0 = [object_0]
    a_b_c_1 = module_1.ABC()
    tuple_0 = (list_0, a_b_c_1)
    tuple_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1191():
    object_0 = module_0.object()
    bool_0 = False
    tuple_0 = (object_0, bool_0)
    float_0 = -389.858
    float_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1192():
    bool_0 = True
    str_0 = "Ud\x0cEU"
    tuple_0 = (str_0,)
    list_0 = [tuple_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1193():
    str_0 = "F!m*Cbo3]Rh"
    str_1 = "k:n4PA?HoK`;\\MN"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1194():
    none_type_0 = None
    set_0 = set()
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1195():
    object_0 = module_0.object()
    set_0 = {object_0}
    list_0 = [set_0, object_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1196():
    str_0 = "/A} K V#xxbeo"
    none_type_0 = None
    str_1 = "W{Kx9X?#"
    str_2 = "u;"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_2: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1197():
    object_0 = module_0.object()
    str_0 = "~{7JAeH_l'PR#K<m"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1198():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    str_0 = "&O~qnxAjR<~~6#"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1199():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1200():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1201():
    bytes_0 = b"\xd5\xceS7\x9a\xd1\xc6\xdc"
    str_0 = "Xbw9?\ru6LpQAh"
    tuple_0 = (str_0,)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1202():
    bytes_0 = b"\x85"
    complex_0 = 4305.02148 + 1624.531j
    int_0 = 455
    str_0 = "tZ[UTW<o"
    tuple_0 = (complex_0, int_0, complex_0, str_0)
    dict_0 = {tuple_0: complex_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1203():
    bool_0 = True
    bytes_0 = b"\x9b\xe0e&\xc0\xc0\xdd\xa0\x1cG\xbbDB\xab^\xfe\xe4\xc3"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [dict_0, bytes_0, dict_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1204():
    set_0 = set()
    complex_0 = 96 + 707.967j
    list_0 = [complex_0, complex_0, complex_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1205():
    str_0 = 'V(>!b"=*BD2Z'
    float_0 = -312.775924
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1206():
    str_0 = "T\n+\t(3bd"
    int_0 = -2867
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1207():
    int_0 = -1553
    bool_0 = True
    bool_0.write(int_0)


def test_case_1208():
    object_0 = module_0.object()
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_1209():
    bytes_0 = b"L\xc1`q5o\xcf\x8e\xa4\xad\xcb\xed\xfc\xd99\x97"
    float_0 = -1546.347869
    bool_0 = False
    tuple_0 = (bytes_0, float_0, bool_0, bool_0)
    bytes_1 = b"\xbeW\x89\x89\x04\x1b8g\xb0+Lz\x19\xaa\x86=\x04"
    dict_0 = {bytes_1: bytes_1, bytes_1: bytes_1, bytes_1: bytes_1, bytes_1: bytes_1}
    dict_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1210():
    int_0 = -189
    module_0.object(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_1211():
    none_type_0 = None
    float_0 = 3358.3
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1212():
    none_type_0 = None
    int_0 = -879
    bool_0 = False
    set_0 = {int_0, bool_0, int_0, bool_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1213():
    bytes_0 = b"\xd8\xfd\x87h\t\x88\x8b'\xcc\x9c"
    list_0 = [bytes_0, bytes_0, bytes_0]
    int_0 = -4131
    int_0.write(list_0)


def test_case_1214():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1215():
    int_0 = 199
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1216():
    bytes_0 = b'<\x05L\x07S"az\x8ck!\x8e\xf8'
    object_0 = module_0.object()
    dict_0 = {
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
    }
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1217():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1218():
    complex_0 = -694.9048 + 1851.387j
    str_0 = "{r D~Oq]b#EQ[P<m"
    str_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1219():
    float_0 = -259.79137
    tuple_0 = ()
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1220():
    float_0 = 1190.279798
    bytes_0 = b"\x03S\x91"
    list_0 = [bytes_0, bytes_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1221():
    none_type_0 = None
    int_0 = 367
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1222():
    object_0 = module_0.object()
    str_0 = "oI\t3uLU3ah}3"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1223():
    bytes_0 = b'/?"{6\xfc\xc4\xaa\xa3\xc9\x9c\x8ad5\x1a'
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    bool_0 = True
    tuple_0 = (bool_0,)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1224():
    float_0 = -690.664078
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_1, a_b_c_1}
    dict_0 = {a_b_c_0: set_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1225():
    str_0 = "~>V(~6s*"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_1226():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1227():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1228():
    bytes_0 = b"\x1e]&\xf2\xc8u*\x06\xf2Vt"
    bytes_1 = b"Y\x8b~"
    list_0 = [bytes_1, bytes_1, bytes_1]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1229():
    str_0 = "4#R"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1230():
    str_0 = "y{6%\tjVGw=BcA"
    bool_0 = False
    bytes_0 = b"\xd6X\x8a\xf5"
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bytes_0: bool_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1231():
    int_0 = 1168
    bytes_0 = b"\xa9\x18\x8d\x0f\xc5Rf&\x9c\x8b\xa8\x90Z)F\x83\xc9\x8b_["
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1232():
    bool_0 = False
    bool_1 = True
    dict_0 = {bool_0: bool_1, bool_1: bool_0}
    object_0 = module_0.object()
    object_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1233():
    bool_0 = True
    float_0 = -4426.32571
    list_0 = [float_0, float_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1234():
    object_0 = module_0.object()
    bytes_0 = b"\x01\xd6\xe6\xc7\xcb\xcfUj.\xa7\x1f\xcf\xf0&\x82\xa0\xbf"
    bytes_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1235():
    bytes_0 = b"\xb8\x85\x05/"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1236():
    bytes_0 = b"&A\xb4"
    dict_0 = {bytes_0: bytes_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1237():
    complex_0 = 1364.963 + 1559.34343j
    list_0 = [complex_0, complex_0, complex_0]
    str_0 = ":|x1&lb[r^>-D=4'&9"
    str_1 = "MB^4V:&\\tJI"
    dict_0 = {str_0: complex_0, str_1: str_0}
    module_1.ABC(*list_0, **dict_0)


def test_case_1238():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1239():
    bool_0 = True
    bytes_0 = b"\xac"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1240():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    str_0 = "5Ih+.&U"
    tuple_0 = (str_0,)
    str_1 = "\n$3(a-OOfd($_"
    dict_0 = {str_0: str_0, str_0: bool_0, str_0: tuple_0, str_1: bool_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1241():
    bool_0 = False
    int_0 = -1819
    tuple_0 = (int_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1242():
    str_0 = "X\t7"
    str_1 = "'uw(wE"
    str_2 = "LA|bj,<){ZVU~0`J9"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
    module_1.ABC(**dict_0)


def test_case_1243():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_1244():
    none_type_0 = None
    str_0 = "=P8G]\r#.~a\x0b9k/=&"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1245():
    a_b_c_0 = module_1.ABC()
    float_0 = -60.17039
    str_0 = "~%"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1246():
    none_type_0 = None
    str_0 = "<yk]C~V()U<h"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1247():
    str_0 = "AJnI2EI\ng#"
    bytes_0 = b"\xd5\x8d\xa4\x9e\t\xc7W/"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1248():
    bool_0 = True
    tuple_0 = (bool_0, bool_0, bool_0, bool_0)
    float_0 = 1295.17367
    float_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1249():
    int_0 = -88
    complex_0 = 3267.906 - 3269.3822j
    complex_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1250():
    bytes_0 = b"\x07\x17\xf4&\xf4\x93lN\xb7"
    dict_0 = {}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1251():
    str_0 = "4I8$?Y/#pek/,"
    list_0 = [str_0, str_0, str_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1252():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1253():
    none_type_0 = None
    str_0 = '<T."E+VK1\x0c\\~*4Fx(~ao'
    str_0.write(none_type_0)


def test_case_1254():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_1255():
    int_0 = 1741
    int_1 = -1239
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1256():
    none_type_0 = None
    float_0 = -4371.33
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1257():
    bool_0 = True
    bytes_0 = b"\xd0\xbc\xfc]Y8\xb1\xd67\xdc>oj\xff\xc5D\xf6{z\xa4"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1258():
    int_0 = 2662
    complex_0 = 946.3272 - 2708.44j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1259():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    none_type_0 = None
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1260():
    bytes_0 = b"}\xc1z|P\xc3\xef\xdav\x7f\xb1\xeb6I\x13i\x92\xa5\xed:"
    bytes_1 = b"\x19\x96\xe3f\x11\xba\x8f\xe9:\xa8"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1261():
    int_0 = -4790
    dict_0 = {}
    tuple_0 = (dict_0,)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1262():
    str_0 = 'X@24pMTEf{m8" !i@'
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1263():
    int_0 = 206
    module_1.ABC(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_1264():
    float_0 = -1572.334
    list_0 = [float_0, float_0]
    list_1 = [list_0, float_0]
    list_2 = [list_1, list_1]
    tuple_0 = ()
    a_b_c_0 = module_1.ABC(*tuple_0)
    a_b_c_0.write(list_2)


@pytest.mark.xfail(strict=True)
def test_case_1265():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1266():
    bytes_0 = b"\x1bg3\x91\x03"
    module_1.ABC(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1267():
    bool_0 = False
    set_0 = set()
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1268():
    none_type_0 = None
    int_0 = -1624
    list_0 = [int_0, int_0, int_0]
    list_1 = [list_0, list_0, int_0, list_0]
    list_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1269():
    float_0 = 1567.08147
    int_0 = 4214
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1270():
    str_0 = "F\x0cDb\\9Y ;&\x0b103"
    module_0.object(*str_0)


@pytest.mark.xfail(strict=True)
def test_case_1271():
    bytes_0 = b"\x7fb\x9c\xa0}o\xcd"
    list_0 = []
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1272():
    none_type_0 = None
    str_0 = "Zy"
    str_1 = '"W'
    str_2 = "V4?bI"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0, str_2: str_2}
    module_1.ABC(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1273():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1274():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    int_0 = 2469
    list_0 = [bool_0, dict_0, bool_0, int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1275():
    int_0 = -2176
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1276():
    a_b_c_0 = module_1.ABC()
    str_0 = "4Y\\k\rdy%[['Um\x0cq|2"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1277():
    bool_0 = True
    bytes_0 = b"0\x83\x98\xd38H"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1278():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    bytes_0 = b"\xb1\xdf\x97\x05\x12\xe4\x88\xc8\xc4\x0eH\x9d\xe8e"
    bytes_0.write(list_0)


def test_case_1279():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1280():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, bool_0, dict_0, dict_0]
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1281():
    bool_0 = False
    bool_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1282():
    bool_0 = True
    set_0 = {bool_0}
    bool_1 = True
    bool_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1283():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_1: bool_0, bool_0: bool_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1284():
    complex_0 = -468.21114 - 633.1j
    list_0 = [complex_0, complex_0, complex_0]
    dict_0 = {}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1285():
    bytes_0 = b"\x93\x92\xc9"
    bytes_1 = b"\xb4\xe4\x84\xe3\x93\xed\xc1\xd8lF\x12\xa2\xa4O"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1286():
    none_type_0 = None
    float_0 = -299.0
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1287():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1288():
    set_0 = set()
    bytes_0 = b"\xb6\x97\x1a\x1a\x84\x03\x16\x98\xdf\xe5f\x80"
    tuple_0 = ()
    tuple_1 = (bytes_0, tuple_0)
    tuple_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1289():
    str_0 = "U\r/?\x0c$SOcte!c\x0czo11"
    bool_0 = True
    bool_0.write(str_0)


def test_case_1290():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1291():
    str_0 = "iE:E||"
    int_0 = 1229
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1292():
    none_type_0 = None
    module_0.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1293():
    str_0 = "g\t7\tju?kL:."
    bytes_0 = b"\x1e\xf9\x9b\x85\xe0\xae\x85\xa7\rVUq=\xcf\xbc\x9bS|\x17\x0f"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1294():
    bytes_0 = b"a\x9d\x18\xf7\x00\x0f'\xff\xea\xea\x14s\x06\xc2>"
    bytes_1 = b"d_\x16q7"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1295():
    none_type_0 = None
    int_0 = 749
    list_0 = [int_0, int_0]
    list_0.write(none_type_0)


def test_case_1296():
    pass


def test_case_1297():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1298():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    complex_0 = 277.3266 + 289.901j
    complex_0.write(list_0)


def test_case_1299():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1300():
    int_0 = 3348
    bool_0 = False
    bool_0.write(int_0)


def test_case_1301():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1302():
    object_0 = module_0.object()
    float_0 = -961.184294
    str_0 = "BI7OI$@}m@z="
    tuple_0 = (float_0, str_0)
    set_0 = {object_0, object_0, tuple_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1303():
    none_type_0 = None
    str_0 = "?tc6J\x0bz%7"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1304():
    bytes_0 = b"\x9eq\xe4E"
    str_0 = "\\tk{OCasJ\x0cm|<u3 ;;{"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1305():
    str_0 = "]tSl!maa"
    str_1 = "(,Ku="
    str_2 = "!Pr {b:4<1Q\\<yTyll"
    str_3 = '}|fWLeE mTp5"xz\\]qFG'
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1, str_3: str_3}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1306():
    bytes_0 = b"*"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1307():
    bool_0 = True
    bool_1 = True
    tuple_0 = (bool_1,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1308():
    str_0 = "2TL-f"
    str_1 = "Pc7ar;t"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1309():
    none_type_0 = None
    int_0 = 1612
    set_0 = {int_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1310():
    none_type_0 = None
    int_0 = -1100
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1311():
    bool_0 = True
    int_0 = -3528
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1312():
    int_0 = -2571
    int_1 = -62
    list_0 = [int_1, int_1, int_1]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1313():
    set_0 = set()
    dict_0 = {}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1314():
    int_0 = 21
    bool_0 = True
    a_b_c_0 = module_1.ABC()
    list_0 = [int_0, bool_0, a_b_c_0]
    float_0 = -4300.34
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1315():
    bool_0 = True
    bytes_0 = b"Yh"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1316():
    none_type_0 = None
    bytes_0 = b"V_1\x9c\x82\rP\xde\x8a\xfeM\xe4\x83\xd54\x90T\xf5\xde"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1317():
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1318():
    none_type_0 = None
    int_0 = -2166
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1319():
    object_0 = module_0.object()
    dict_0 = {object_0: object_0}
    str_0 = '1AI/0"9#XA&I'
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1320():
    bytes_0 = b"\xbe\xcb\xdd\xfa\xa7\xd1\xea\xe2GQ\x97\xff\xe6M\x89"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1321():
    bytes_0 = b"\xc6t\x8e\x87X2\x84\xf8\xbb\xe6"
    list_0 = [bytes_0, bytes_0]
    bool_0 = True
    tuple_0 = (list_0, bool_0, bool_0, list_0)
    bytes_1 = b"\x95\x1dg\x06\x95\x02we\xb4\xb3S"
    set_0 = {bytes_1, bytes_1}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1322():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1323():
    bool_0 = True
    bytes_0 = b""
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1324():
    str_0 = "\t!|v($"
    bytes_0 = b"\x195\xc2\x8e}\x02("
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1325():
    str_0 = "Rm}gl11St"
    str_1 = "U<1@FK,_N"
    bytes_0 = b"Ua\xa4\x90\x0e:]SB\xf4\x00"
    dict_0 = {str_0: str_0, str_1: bytes_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1326():
    str_0 = "P\nQ9ml(91P("
    bytes_0 = b"\x13#\xd3\xc9"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1327():
    int_0 = 1742
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1328():
    int_0 = 1946
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1329():
    str_0 = ",7!L9m+'nF+gL"
    bytes_0 = b"(H;\xf3b\xe0<"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1330():
    object_0 = module_0.object()
    str_0 = "\x0bhKrAE%h"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1331():
    none_type_0 = None
    complex_0 = 3298 - 1901.2j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1332():
    int_0 = -489
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1333():
    str_0 = 'FK{"\x0b~kyGB'
    str_1 = "\r:"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1334():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    bool_0 = True
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1335():
    none_type_0 = None
    int_0 = 1843
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1336():
    none_type_0 = None
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1337():
    float_0 = 347.7
    float_1 = 179.46
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1338():
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()
    float_0 = 3277.5
    float_0.write(a_b_c_1)


@pytest.mark.xfail(strict=True)
def test_case_1339():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1340():
    str_0 = "\x0bmRN*'X"
    str_1 = "8Pln~Um\n"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1341():
    bool_0 = True
    module_1.ABC(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1342():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1343():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    bool_0 = False
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1344():
    bool_0 = True
    str_0 = "_#o)e>.t!Ps7"
    list_0 = [str_0, str_0, str_0]
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: list_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1345():
    tuple_0 = ()
    list_0 = []
    list_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1346():
    bool_0 = False
    module_0.object(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1347():
    bytes_0 = b"\x11\x88\x96\xb0\xcf\xb3\xbf\xa0\xec\xce\xff]P\xa1\xfd\xc3\x89"
    int_0 = 597
    int_0.write(bytes_0)


def test_case_1348():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1349():
    none_type_0 = None
    bool_0 = True
    list_0 = [bool_0]
    list_0.write(none_type_0)


def test_case_1350():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1351():
    bytes_0 = b"U@\x8f|\xc8\xd4hQol\x99^'\xd0\x18\x9a"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1352():
    none_type_0 = None
    float_0 = -1029.390917
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1353():
    float_0 = -2477.85063
    str_0 = "\t,O`)]`Olsv~[+/.BG`{"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1354():
    int_0 = 264
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1355():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    set_0 = {a_b_c_0}
    int_0 = -1248
    tuple_0 = (a_b_c_0, set_0, int_0)
    int_1 = -143
    int_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1356():
    bool_0 = True
    list_0 = [bool_0]
    bool_1 = True
    bool_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1357():
    bytes_0 = b"\xa6<\xad\r\x18"
    bool_0 = True
    dict_0 = {bytes_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, bool_0, dict_0, bytes_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1358():
    int_0 = 543
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1359():
    tuple_0 = ()
    bytes_0 = b"<c\x0b\x97P\xe1\xfd,yP\xe4\xfa"
    set_0 = {bytes_0}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1360():
    bool_0 = True
    int_0 = -1480
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1361():
    bool_0 = False
    float_0 = -3233.98678
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1362():
    int_0 = -4017
    module_1.ABC(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_1363():
    list_0 = []
    int_0 = -3388
    int_0.write(list_0)


def test_case_1364():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1365():
    bool_0 = False
    bytes_0 = b"\x08y\xd5x[\x01\xa3?\x8f\x9b\x02\xd0\n\xe6"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1366():
    float_0 = 2528.01
    bytes_0 = b"\x01\xa2\x12\x0fl\xa3`\xbe"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1367():
    int_0 = 1205
    float_0 = 1991.8653
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1368():
    bytes_0 = b"5\x10"
    tuple_0 = (bytes_0, bytes_0, bytes_0)
    object_0 = module_0.object()
    object_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1369():
    bytes_0 = b"Oa\x9c7\xbd\x14\xff:\xfd\xb4\xa7\x9a\xaa"
    str_0 = "u tK0"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1370():
    object_0 = module_0.object()
    tuple_0 = (object_0,)
    bytes_0 = b"DU\xeax\ruI\x11O@'g"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1371():
    list_0 = []
    str_0 = "'"
    str_1 = "_'ivM\x0ckb"
    str_2 = "AVO|.J^*)]\n"
    dict_0 = {str_0: list_0, str_1: str_1, str_1: list_0, str_2: str_1}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1372():
    bool_0 = False
    tuple_0 = (bool_0,)
    set_0 = {tuple_0, bool_0, bool_0}
    list_0 = [set_0, tuple_0, tuple_0]
    tuple_1 = (list_0,)
    bool_1 = True
    bool_2 = True
    tuple_2 = (bool_1, bool_2, bool_2)
    tuple_2.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_1373():
    int_0 = 1527
    int_1 = -1330
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1374():
    int_0 = 102
    int_1 = -783
    set_0 = {int_1, int_1, int_1}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1375():
    object_0 = module_0.object()
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0}
    bytes_0 = b"\x00\x03a\x15[\xb3\xdfg\xbf\xff"
    list_0 = [dict_0, dict_0]
    tuple_0 = (dict_0, bytes_0, list_0, list_0)
    tuple_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1376():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1377():
    list_0 = []
    object_0 = module_0.object(*list_0)
    none_type_0 = None
    list_1 = [none_type_0, none_type_0, none_type_0]
    str_0 = "\\QA|+s--yfR^`dtaL"
    dict_0 = {str_0: str_0}
    module_1.ABC(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1378():
    int_0 = 267
    tuple_0 = (int_0, int_0)
    set_0 = set()
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1379():
    bool_0 = True
    int_0 = -150
    tuple_0 = (int_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1380():
    none_type_0 = None
    float_0 = 60.841
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1381():
    int_0 = 223
    int_1 = -3003
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1382():
    int_0 = 1184
    float_0 = -1530.0
    set_0 = {int_0, int_0, int_0, float_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1383():
    int_0 = -1495
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1384():
    float_0 = -1368.676
    bytes_0 = b"5\xd7AziB\xc6\xb9\x89\xdd\xe8\xb9\xc8\xfe\xd3k"
    tuple_0 = (bytes_0,)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1385():
    float_0 = 2589.38
    list_0 = [float_0]
    bytes_0 = b"\x08\x94\xfa\xb5\x85\x0bp\x02^m\xbe=h\xad"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1386():
    none_type_0 = None
    int_0 = 895
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1387():
    bool_0 = False
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    tuple_1 = (tuple_0, dict_0)
    tuple_2 = (tuple_1, dict_0)
    tuple_2.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1388():
    object_0 = module_0.object()
    str_0 = "W\x0bk'\x0c"
    str_1 = "}`"
    dict_0 = {str_0: object_0, str_1: str_0}
    module_1.ABC(*object_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1389():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1390():
    bool_0 = True
    list_0 = [bool_0]
    module_1.ABC(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_1391():
    bytes_0 = b"\xbcGd"
    bytes_1 = b"k\xf0F\x12\x0b;\xbdA\xad"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1392():
    none_type_0 = None
    float_0 = -3236.467
    float_0.write(none_type_0)


def test_case_1393():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_1394():
    bytes_0 = b"\x94\xe3g\x82gP\xc1~6)g\xee\x14\xfa\x93"
    list_0 = [bytes_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1395():
    str_0 = "[\x0c7aLGR'k%^19ng"
    module_1.ABC(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_1396():
    int_0 = 957
    int_1 = -2030
    tuple_0 = (int_0, int_0, int_1, int_0)
    list_0 = [tuple_0, int_1, tuple_0]
    int_2 = 1306
    float_0 = 1105.2072
    tuple_1 = (list_0, list_0, int_2, float_0)
    float_1 = 2154.324209
    float_1.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_1397():
    tuple_0 = ()
    tuple_1 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_1]
    list_1 = []
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1398():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    list_1 = [a_b_c_0]
    module_1.ABC(**list_1)


@pytest.mark.xfail(strict=True)
def test_case_1399():
    object_0 = module_0.object()
    str_0 = "i49-h^43MH\n9/My9"
    list_0 = [str_0, str_0, str_0]
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1400():
    str_0 = ",Rg#<5"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1401():
    int_0 = -257
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1402():
    bytes_0 = b"\x15\xa1\x07\xff\x0cY\x1a\xfbq)\x11\x14"
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    list_0.write(bytes_0)


def test_case_1403():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_1404():
    bool_0 = True
    set_0 = {bool_0}
    a_b_c_0 = module_1.ABC()
    set_1 = {a_b_c_0, a_b_c_0}
    int_0 = -969
    tuple_0 = (set_1, int_0)
    list_0 = [a_b_c_0, tuple_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1405():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    complex_0 = 2251.824 + 508.739j
    complex_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1406():
    complex_0 = 1335.85 + 1497j
    list_0 = [complex_0, complex_0, complex_0]
    int_0 = -1799
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1407():
    bytes_0 = b"j\x04\xd3\x0e\xb5\x1d7e\x1c2\x86\x02C\x8d"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1408():
    int_0 = -640
    set_0 = {int_0, int_0, int_0}
    a_b_c_0 = module_1.ABC()
    tuple_0 = (int_0, set_0, a_b_c_0)
    str_0 = '3wn0+SHn""R&F'
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1409():
    int_0 = -22
    complex_0 = -3414.576 + 1840.52j
    complex_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1410():
    str_0 = "\rc"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    complex_0 = -769.578 - 255.8j
    complex_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1411():
    int_0 = -1709
    bytes_0 = b"\x87\xdfXA"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1412():
    bytes_0 = b"\x88\x8b\x8cs\x05\x86\xe42\\Y\x10\xa5\x062\xcc\xf4\x15\xf0\x0b\x9a"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1413():
    none_type_0 = None
    bool_0 = True
    list_0 = [bool_0, bool_0]
    list_1 = [list_0]
    list_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1414():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1415():
    str_0 = '%{MV\t#uT8[C>M|\rs"4bI'
    dict_0 = {}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1416():
    float_0 = -3860.424292
    set_0 = {float_0, float_0, float_0, float_0}
    list_0 = [set_0, set_0, set_0, float_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1417():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1418():
    bytes_0 = b"\xed\x8cvT"
    dict_0 = {}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1419():
    none_type_0 = None
    complex_0 = 1182.9 - 745j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1420():
    object_0 = module_0.object()
    bool_0 = False
    none_type_0 = None
    set_0 = {bool_0, bool_0}
    set_0.write(none_type_0)


def test_case_1421():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_1422():
    none_type_0 = None
    complex_0 = -2666.54 + 1813.008407j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1423():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1424():
    float_0 = -3189.031002
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1425():
    str_0 = "@^lsuM2&\\D4cG{hJ4<"
    bytes_0 = b"\xd8\x88,\xa2\xfa\x0eg\x99$}$\xdeAT\xe9\t\r"
    complex_0 = -914.453 - 115.55j
    set_0 = {bytes_0, complex_0, bytes_0}
    tuple_0 = (str_0, bytes_0, str_0, set_0)
    float_0 = 3018.3
    float_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1426():
    str_0 = "$@aL=s$+dM"
    object_0 = module_0.object()
    list_0 = [object_0, object_0]
    list_0.write(str_0)


def test_case_1427():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1428():
    none_type_0 = None
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    tuple_0 = (object_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1429():
    str_0 = "QJ8mfH\t>2s*2v9vX<U"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    str_1 = "4QK;"
    set_0 = {str_1, str_1}
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1430():
    none_type_0 = None
    bytes_0 = b"\\\x80Z>\x01\x80O-9\x1f"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1431():
    bool_0 = True
    int_0 = 2418
    tuple_0 = (int_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1432():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


def test_case_1433():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1434():
    str_0 = "0a[#"
    tuple_0 = (str_0,)
    none_type_0 = None
    str_1 = "T'"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_0.object(*tuple_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1435():
    int_0 = 3500
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1436():
    int_0 = -1848
    set_0 = {int_0, int_0}
    bytes_0 = b"\xfb\xbe\xbfJ"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1437():
    list_0 = []
    object_0 = module_0.object(*list_0)
    list_1 = []
    str_0 = "vtJQH)lk"
    str_1 = "+\x0cq"
    str_2 = ":b\r"
    dict_0 = {str_0: list_1, str_0: str_0, str_1: str_1, str_2: list_1}
    module_1.ABC(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1438():
    none_type_0 = None
    int_0 = 685
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1439():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    bytes_0 = b"0\xb5\xa1\xdf\x00\xfa\xc7\x14\xf5d\xc9~"
    list_0 = [bytes_0, bytes_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1440():
    complex_0 = -100.7965 + 3877.15j
    float_0 = 1219.011
    bool_0 = False
    tuple_0 = (float_0, float_0, float_0, bool_0)
    tuple_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1441():
    bytes_0 = b"a\xdc\xbc\xf8\xba\x8b("
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1442():
    none_type_0 = None
    bytes_0 = b"\x8d}`\x18\xa7"
    set_0 = {bytes_0, bytes_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1443():
    object_0 = module_0.object()
    bool_0 = False
    int_0 = 1609
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1444():
    str_0 = "eK\x0b: T"
    tuple_0 = (str_0, str_0)
    complex_0 = -2110 + 796.537j
    complex_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1445():
    int_0 = -2358
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1446():
    str_0 = "qAL.,gO0"
    set_0 = set()
    dict_0 = {str_0: str_0, str_0: str_0, str_0: set_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1447():
    bytes_0 = b"\x80p"
    int_0 = -65
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1448():
    str_0 = "a]0DB}-D"
    str_1 = "L%0I<b"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1449():
    a_b_c_0 = module_1.ABC()
    int_0 = 361
    tuple_0 = (a_b_c_0, int_0)
    list_0 = [tuple_0, a_b_c_0, tuple_0, int_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1450():
    float_0 = 491.7517
    set_0 = {float_0, float_0, float_0}
    str_0 = "}%VA2UYt\tS+4)~"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1451():
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1452():
    int_0 = -1569
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1453():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1454():
    bool_0 = True
    float_0 = 967.351255
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1455():
    str_0 = "(RBIGF)?2G_Ph\t`8-`e"
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    bytes_0 = b""
    tuple_0 = (bool_0, set_0, set_0, bytes_0)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1456():
    str_0 = 'W<]"hvB<)bf'
    float_0 = -4383.6627
    list_0 = [str_0, str_0, float_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1457():
    bool_0 = False
    float_0 = -965.51389
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1458():
    float_0 = 1685.82003
    int_0 = 173
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1459():
    none_type_0 = None
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    dict_0.write(none_type_0)


def test_case_1460():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1461():
    int_0 = -456
    bytes_0 = b"\xb3\xec\xda\x14w\x18\xc7\x04"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1462():
    bool_0 = True
    str_0 = "9<"
    set_0 = {bool_0, bool_0, str_0}
    bytes_0 = b"\x91I\xeaX\x95\xab6\xe6\x98\xb7\xec\xfaD\xa0\x85\x85\xf5\xd81"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1463():
    bool_0 = True
    bytes_0 = b"Y\x1cn\x80\x82\xd5\xa1\xc3M\xf6/\xba\xd7\x99\xe2/%\xf2\xa8"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1464():
    complex_0 = 1657.064226 + 3878.66j
    module_0.object(**complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1465():
    complex_0 = -133.9024 + 840.097j
    dict_0 = {}
    dict_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1466():
    bool_0 = False
    bool_1 = True
    bool_2 = False
    bytes_0 = b"9\xffV\xdad\xad\x7f\xc9\xa2\xc38"
    tuple_0 = (bool_1, bool_2, bytes_0)
    set_0 = {tuple_0, tuple_0, bytes_0}
    list_0 = [set_0, bytes_0, bool_2]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1467():
    bool_0 = True
    dict_0 = {}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1468():
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1469():
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0]
    int_0 = -223
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1470():
    bytes_0 = b"\xe3\x17\x00i\x89\x8c`;"
    dict_0 = {}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1471():
    float_0 = -1789.084
    bytes_0 = b"\x1b\xd9@\x12c@\x87\xc4\xcfX"
    set_0 = {bytes_0}
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1472():
    int_0 = -392
    bool_0 = True
    set_0 = {int_0, int_0, int_0, bool_0}
    list_0 = [set_0, int_0]
    complex_0 = -2049 - 880.376j
    complex_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1473():
    bytes_0 = b"\x10AK-;y\xaa"
    set_0 = {bytes_0}
    int_0 = 3538
    float_0 = 1433.571754
    dict_0 = {int_0: int_0, int_0: float_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1474():
    int_0 = -1404
    str_0 = '\x0bH3J#>gr-0j"i:~D'
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1475():
    float_0 = 666.9
    dict_0 = {}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1476():
    bytes_0 = b"\x13\x88\xb3\\\xd8u@\xe1"
    module_1.ABC(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1477():
    bool_0 = False
    bytes_0 = b"\x1a\x9a"
    set_0 = set()
    tuple_0 = (bytes_0, set_0)
    list_0 = [bool_0, tuple_0, bool_0, set_0]
    int_0 = 1465
    tuple_1 = (bool_0, bool_0, list_0, int_0)
    bool_1 = False
    bool_1.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_1478():
    tuple_0 = ()
    module_1.ABC(**tuple_0)


def test_case_1479():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1480():
    int_0 = 1696
    float_0 = 1390.0
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1481():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    tuple_0 = (bool_0, a_b_c_0)
    tuple_1 = ()
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1482():
    none_type_0 = None
    float_0 = -3586.735
    list_0 = [float_0, float_0]
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: list_0}
    list_1 = [dict_0, list_0, dict_0, float_0]
    list_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1483():
    float_0 = -668.122544
    float_1 = -4282.847
    list_0 = [float_1, float_1, float_1]
    tuple_0 = (float_1, list_0)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1484():
    bytes_0 = b"&\x99k\x05\xd3\x17"
    int_0 = 694
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1485():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    bytes_0 = b"^\xc6\xe0=\x90\xf8\x1e\xb8\xf2\x197\xfc\x9f"
    tuple_0 = (bool_0, bool_1, bool_0, bytes_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1486():
    none_type_0 = None
    bytes_0 = b"\xf43\x03\xff\x8b\xbc\xa8N\xc9\x1c\xad\xcf\xe0\x7f\xd1G\x94\x18\xd4"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1487():
    bool_0 = False
    int_0 = 2370
    complex_0 = 289.868554 + 1994.45j
    int_1 = -604
    tuple_0 = (int_1,)
    tuple_1 = (int_0, tuple_0)
    bool_1 = False
    tuple_2 = (int_0, complex_0, tuple_1, bool_1)
    tuple_2.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1488():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    list_1 = [a_b_c_0, a_b_c_0]
    str_0 = "-9*%J13A?@4h"
    dict_0 = {str_0: str_0}
    module_0.object(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1489():
    bytes_0 = b"K\xcc\xe9\x1fT#'\xe5\x19\xf8e\\\x08\x10mOW"
    bool_0 = False
    bool_0.write(bytes_0)


def test_case_1490():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1491():
    bool_0 = True
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1492():
    float_0 = -2243.6
    list_0 = [float_0, float_0, float_0]
    a_b_c_0 = module_1.ABC()
    list_1 = [list_0, a_b_c_0]
    bool_0 = False
    tuple_0 = (bool_0,)
    tuple_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1493():
    none_type_0 = None
    float_0 = -1655.39871
    set_0 = {float_0, float_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1494():
    none_type_0 = None
    bytes_0 = b"\xaa\x98\x18^"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1495():
    list_0 = []
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(list_0)


def test_case_1496():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1497():
    str_0 = "p5fv!\x0c7vc|{\tcqiH'2"
    list_0 = [str_0]
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1498():
    none_type_0 = None
    str_0 = "/t%"
    tuple_0 = (str_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1499():
    bytes_0 = b""
    float_0 = -1719.37
    set_0 = {float_0, float_0}
    tuple_0 = (set_0, set_0)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1500():
    object_0 = module_0.object()
    object_1 = module_0.object()
    object_1.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1501():
    object_0 = module_0.object()
    set_0 = set()
    bool_0 = False
    tuple_0 = (set_0, bool_0)
    tuple_0.write(object_0)


def test_case_1502():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1503():
    str_0 = "e_Gb>H\nNs8gX[a_CIv"
    str_1 = "$v%QfcJ*\x0b]@wB"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1504():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    str_0 = "\x0bk%.I"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1505():
    none_type_0 = None
    int_0 = -5503
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1506():
    complex_0 = -2604.1 + 1486.8086j
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1507():
    bytes_0 = b"&a\xee\x9av\xdb\xdd\x16\x0e\x1es.\x9a\xe0\x06\xef\xf7"
    float_0 = -2715.54395
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1508():
    a_b_c_0 = module_1.ABC()
    float_0 = -739.655553
    set_0 = {float_0, float_0, float_0}
    set_0.write(a_b_c_0)


def test_case_1509():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1510():
    float_0 = 2155.0
    tuple_0 = (float_0, float_0)
    float_1 = 729.47
    bool_0 = False
    set_0 = {float_1, float_1, bool_0}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1511():
    set_0 = set()
    bool_0 = True
    set_1 = {bool_0, bool_0, bool_0, bool_0}
    set_1.write(set_0)


def test_case_1512():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1513():
    bytes_0 = b"\xc3\xe3m\xaa9\x95*\x83;2\xff\x11\xc4\xbf\\R\x1d\x89\xc1"
    list_0 = [bytes_0, bytes_0]
    bytes_1 = b"\xe4b\xa4\xed"
    bytes_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1514():
    str_0 = "m]=R>%MQW/Rcp[qzV0"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1515():
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1516():
    bytes_0 = b":+\\\xe5\x84\x1d"
    int_0 = -613
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1517():
    str_0 = "v"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1518():
    a_b_c_0 = module_1.ABC()
    list_0 = []
    module_0.object(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_1519():
    str_0 = "~?<9e}$MP&"
    str_1 = ")[&,.uU@R7]:!l)C"
    str_1.write(str_0)


def test_case_1520():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1521():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1522():
    none_type_0 = None
    int_0 = -702
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1523():
    complex_0 = -1558.369847 + 1402.283024j
    list_0 = []
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1524():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1525():
    none_type_0 = None
    list_0 = [none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1526():
    none_type_0 = None
    float_0 = -1523.7666
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1527():
    float_0 = -6119.13
    module_1.ABC(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_1528():
    none_type_0 = None
    bytes_0 = b"\xea^\xa4\x0f\x01\xef\xa3]"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1529():
    none_type_0 = None
    complex_0 = 218.54 - 1843.9241j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1530():
    tuple_0 = ()
    bool_0 = True
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1531():
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1532():
    none_type_0 = None
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1533():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    bool_0 = False
    bool_0.write(list_1)


def test_case_1534():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1535():
    list_0 = []
    list_1 = [list_0]
    none_type_0 = None
    module_1.ABC(*list_1, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1536():
    none_type_0 = None
    str_0 = ",6;(7&IvyJ%/))>0"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1537():
    bool_0 = True
    list_0 = [bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1538():
    none_type_0 = None
    int_0 = -1096
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1539():
    str_0 = "Q"
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1540():
    none_type_0 = None
    int_0 = 1488
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1541():
    str_0 = "#[#"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1542():
    none_type_0 = None
    object_0 = module_0.object()
    object_0.write(none_type_0)


def test_case_1543():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1544():
    bool_0 = False
    list_0 = [bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1545():
    bool_0 = False
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1546():
    str_0 = ".OmyLI&DH"
    str_1 = "F#y\x0bP~oz7f.)Hv\x0b,km1k"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1547():
    none_type_0 = None
    float_0 = -2072.85
    dict_0 = {float_0: float_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1548():
    none_type_0 = None
    complex_0 = 2432.09857 - 1347.720694j
    list_0 = [complex_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1549():
    int_0 = -3690
    object_0 = module_0.object()
    object_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1550():
    str_0 = 'u\n"$\nVsKFG4e('
    module_1.ABC(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_1551():
    str_0 = 'Y_&#%~j8+\x0c\r"%f\x0c/|'
    float_0 = -1167.131786
    tuple_0 = (float_0,)
    list_0 = [tuple_0, float_0, float_0, float_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1552():
    int_0 = 3597
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1553():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    bytes_0 = b"\xdd\x1e\xde\x00R\xb8\xf0\xadz\xf5v"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1554():
    bytes_0 = b"K\x88*\x9bB\xe7\xd5\x0bV\x8a\xcf"
    str_0 = "G\\vQa-|8"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, str_0: str_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1555():
    none_type_0 = None
    int_0 = 2148
    int_1 = 7
    bool_0 = True
    str_0 = ";n\x0c@z"
    tuple_0 = (int_0, int_1, bool_0, str_0)
    dict_0 = {tuple_0: tuple_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1556():
    str_0 = "#5\\#wxNK[CnyeZp0)F9"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1557():
    bool_0 = True
    int_0 = -1721
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1558():
    int_0 = -279
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    tuple_1 = (tuple_0, dict_0)
    tuple_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1559():
    bool_0 = True
    str_0 = "X,WoJP~ut{03I"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1560():
    float_0 = 926.307966
    int_0 = 2551
    bool_0 = True
    tuple_0 = (float_0, int_0, bool_0)
    int_1 = 2950
    int_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1561():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1562():
    str_0 = "\"/*eN'eg5"
    str_1 = "W_9_Ym|z]"
    none_type_0 = None
    str_2 = "}.uG$\n P+W*n-!/4[HH&"
    str_3 = "!\r\t&y{\t>]hw"
    str_4 = "C\x0c6$p9J;"
    dict_0 = {
        str_1: none_type_0,
        str_2: none_type_0,
        str_3: none_type_0,
        str_4: none_type_0,
    }
    module_0.object(*str_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1563():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    str_0 = "@U)"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1564():
    none_type_0 = None
    bytes_0 = b"q^%T(\xa1\xccd\xa5I\x82*"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1565():
    int_0 = -2612
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1566():
    bool_0 = True
    int_0 = -319
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1567():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    str_0 = "/iZ"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1568():
    complex_0 = 81.2402 - 540.3j
    int_0 = -2404
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1569():
    complex_0 = 656.9 + 1989.5671j
    bool_0 = False
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1570():
    object_0 = module_0.object()
    str_0 = "jM\n"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1571():
    a_b_c_0 = module_1.ABC()
    str_0 = "[mdG@0IRO5"
    complex_0 = 923.332 - 963j
    str_1 = "3-:dR\x0bx%`V"
    dict_0 = {str_0: str_0, str_0: complex_0, str_1: str_0}
    module_1.ABC(**dict_0)


def test_case_1572():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_1573():
    none_type_0 = None
    str_0 = "dBuXK%/1bvK=A}u\r"
    list_0 = [str_0, str_0, str_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1574():
    int_0 = 3320
    float_0 = -3256.0
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1575():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    module_1.ABC(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_1576():
    bytes_0 = b"7\xb1\xa6\x00<^3\x81\xe5qI9\xa9l"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1577():
    none_type_0 = None
    int_0 = -3268
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1578():
    int_0 = -1211
    str_0 = "<s\\vF{z"
    int_1 = 1996
    tuple_0 = (str_0, int_1)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1579():
    int_0 = -926
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1580():
    none_type_0 = None
    float_0 = -598.0
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1581():
    str_0 = "O*N,a0"
    str_1 = "G"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1582():
    bytes_0 = b""
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1583():
    int_0 = -1920
    set_0 = {int_0}
    list_0 = [int_0, int_0, set_0]
    bool_0 = True
    list_1 = [bool_0, bool_0, bool_0, bool_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1584():
    none_type_0 = None
    bool_0 = False
    int_0 = 1410
    dict_0 = {bool_0: int_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1585():
    str_0 = "Q"
    bytes_0 = b"C-p\x99\x1c\xc3\n\x91\x1aq\xee \x1f\x04\xe4\x97\x1c\xa2"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1586():
    float_0 = 1271.016
    list_0 = []
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1587():
    bool_0 = True
    complex_0 = 2473.2193 + 75.781058j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1588():
    str_0 = '4l4!".q'
    tuple_0 = ()
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1589():
    str_0 = "nv+\x0biOH1k}'"
    float_0 = -905.74
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1590():
    int_0 = 2171
    set_0 = set()
    list_0 = [set_0, set_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1591():
    bool_0 = True
    int_0 = -1268
    tuple_0 = (bool_0, int_0)
    bool_1 = False
    bool_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1592():
    bytes_0 = b"L\x1c=\xd6\xed\x9b\x03\xa2\xa5~j\xff"
    bool_0 = False
    tuple_0 = (bytes_0, bool_0)
    bool_1 = False
    bool_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1593():
    bytes_0 = b"\x03z\x94\x0b0xW\x87\xfd.\x07\xd4\\\xde\x84\x90Y\x80\x12\x1a"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1594():
    str_0 = "Q_wAOP>*gE2k@DJ#'0we"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1595():
    object_0 = module_0.object()
    bool_0 = False
    bytes_0 = b"\xed\xee(\x04\x172\xef\x90m\xd7\x96Z\x16\xf2\x83"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    tuple_0 = (bool_0, bool_0, bytes_0, set_0)
    tuple_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1596():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    bool_1 = False
    bytes_0 = b".\xd0\xd1\x91\xf5\x99/\x17\xb4}S"
    tuple_0 = (bool_0, bool_0, bool_1, bytes_0)
    str_0 = "$J54.+b[B"
    tuple_1 = (tuple_0, str_0)
    tuple_1.write(a_b_c_0)


def test_case_1597():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1598():
    float_0 = 1508.302112
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1599():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = ()
    set_1 = {tuple_0, tuple_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1600():
    list_0 = []
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1601():
    bytes_0 = b"\xe8\xe9\xd3?H\xf78L\xdb"
    set_0 = {bytes_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1602():
    a_b_c_0 = module_1.ABC()
    complex_0 = 4599.5169 - 2856.1j
    complex_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1603():
    int_0 = 765
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1604():
    bytes_0 = b"\xd5\xe8\x9d\x126d\x04\xe1\xff**\x9a\x07Y\xea\xa0"
    a_b_c_0 = module_1.ABC()
    set_0 = {bytes_0, bytes_0, bytes_0, a_b_c_0}
    bytes_1 = b"\xb5J|\x86\x16\x87\x8f\xdc\xcef"
    bytes_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1605():
    bool_0 = False
    bytes_0 = b"\xbdJ<!Z\xf0\x18\xc9f\xfd\x10\x83)%"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1606():
    float_0 = -631.96838
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1607():
    str_0 = "6TY\\+AI|0S*6.;\x0c&=O"
    str_1 = "8Lhe{et9EXIq_7~o"
    bool_0 = False
    dict_0 = {str_0: str_0, str_1: bool_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1608():
    str_0 = 'i\t".ZVvkp/,HQ<Lay*'
    float_0 = 2180.93504
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1609():
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1610():
    bool_0 = False
    bytes_0 = b"\x113O!\xd5 @\xae\xac\x1d"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1611():
    bool_0 = True
    int_0 = 1387
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1612():
    object_0 = module_0.object()
    module_1.ABC(*object_0)


@pytest.mark.xfail(strict=True)
def test_case_1613():
    bool_0 = True
    tuple_0 = (bool_0,)
    bytes_0 = b"y<\x1c3\xbdw@\xd3\x8buW\x94a\x0c1ld\x816\x8c"
    list_0 = [bytes_0, bytes_0]
    set_0 = set()
    tuple_1 = (bytes_0, list_0, bytes_0, set_0)
    list_1 = [tuple_1, list_0]
    list_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1614():
    bytes_0 = b"\xe3\x8c\xbf\xb7\xeb"
    str_0 = "UbO'KZ_dK\t"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1615():
    bool_0 = True
    str_0 = "ND/V]=!"
    set_0 = {str_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1616():
    bytes_0 = b"\xaf\xa3\xd6\x16\xf11\x87\xef\xd2~\xf8g H\x02\r/\xd8"
    tuple_0 = ()
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1617():
    complex_0 = 179.5194 + 383.41j
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1618():
    list_0 = []
    float_0 = -2968.0
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1619():
    int_0 = -55
    module_1.ABC(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_1620():
    none_type_0 = None
    str_0 = "nWL"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1621():
    none_type_0 = None
    bytes_0 = b"\x19\xce\xac\x0f\xbf\xfe~V\x00\xe8qO@\xd0&\xcb\x88\x93`("
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1622():
    str_0 = "MB#~OOv"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1623():
    str_0 = "F R\tK;|tT"
    str_1 = "ovq.F0XSM"
    set_0 = {str_1, str_1}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1624():
    complex_0 = -3639.92 + 1413.83j
    bool_0 = True
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1625():
    str_0 = "v'A>_\n\\83fqb`@@jKcay"
    str_1 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1626():
    none_type_0 = None
    float_0 = -478.308
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1627():
    bool_0 = True
    str_0 = "7xH# :\x0bS"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1628():
    int_0 = -1741
    list_0 = [int_0]
    tuple_0 = (int_0, int_0, list_0)
    list_1 = [tuple_0, int_0, list_0, list_0]
    dict_0 = {}
    dict_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1629():
    str_0 = "y9q "
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1630():
    bytes_0 = b"\xd0\xbf\x84\x89\xd3\x0c"
    list_0 = [bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1631():
    int_0 = 1642
    int_1 = 2009
    set_0 = {int_1}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1632():
    float_0 = -1713.547
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1633():
    str_0 = "58s98v "
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1634():
    none_type_0 = None
    float_0 = -2356.4
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1635():
    str_0 = "wO5r"
    str_1 = "=$]h\x0b8^i5X`=cJY"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1636():
    bytes_0 = b"\xc1b\xc0\x03"
    list_0 = [bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1637():
    int_0 = 5256
    list_0 = [int_0]
    list_1 = [list_0, list_0, int_0, int_0]
    bool_0 = True
    bool_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1638():
    none_type_0 = None
    bytes_0 = b"VRB.7."
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1639():
    a_b_c_0 = module_1.ABC()
    str_0 = ""
    str_0.write(a_b_c_0)


def test_case_1640():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1641():
    int_0 = -607
    set_0 = {int_0, int_0, int_0, int_0}
    list_0 = [set_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1642():
    str_0 = "er"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1643():
    list_0 = []
    module_0.object(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_1644():
    str_0 = "n?"
    str_1 = '"vUi'
    bool_0 = False
    str_2 = "]o5U=.\td6m"
    dict_0 = {str_0: str_0, str_1: bool_0, str_2: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1645():
    dict_0 = {}
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0]
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1646():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1647():
    float_0 = 2888.84237
    float_1 = -946.76
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1648():
    list_0 = []
    list_1 = [list_0]
    module_0.object(**list_1)


@pytest.mark.xfail(strict=True)
def test_case_1649():
    int_0 = -4330
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1650():
    complex_0 = 1038.89916 + 596j
    str_0 = "?"
    str_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1651():
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1652():
    bool_0 = True
    tuple_0 = ()
    tuple_1 = (bool_0, bool_0, tuple_0)
    list_0 = [tuple_1, tuple_1, bool_0]
    bool_1 = False
    bool_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1653():
    str_0 = "z@X${.;z |"
    list_0 = [str_0]
    complex_0 = -561.75366 - 1062j
    complex_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1654():
    bool_0 = False
    int_0 = -5789
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1655():
    bytes_0 = b"\x03'\x07\xdd\xa1\x1f9\xa1?\xd9"
    str_0 = "B\\"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1656():
    none_type_0 = None
    str_0 = "i@Phu`jZ2YGm+"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1657():
    none_type_0 = None
    complex_0 = 619.343 + 1596.4j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1658():
    str_0 = ""
    bool_0 = False
    bytes_0 = b"\xc8\xc5"
    set_0 = {bool_0, bytes_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1659():
    float_0 = 2528.0
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1660():
    none_type_0 = None
    int_0 = 638
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1661():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1662():
    str_0 = ";/|=Y.2](=~,G"
    float_0 = 1167.0
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1663():
    none_type_0 = None
    complex_0 = 1602 + 799.1j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1664():
    bool_0 = True
    bool_1 = True
    list_0 = [bool_0, bool_1, bool_1]
    str_0 = "Ibq\r o'4\x0c]Og+.`]&@Cs"
    none_type_0 = None
    str_1 = "p\nJSHW(;@bWTa("
    str_2 = "sA\n/n\rI|EjV"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
    }
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1665():
    str_0 = "u_Hfu!x"
    list_0 = [str_0, str_0, str_0]
    str_1 = "In$h\x0bvs >#e8}Iy J_H"
    dict_0 = {str_0: str_0, str_0: list_0, str_1: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1666():
    none_type_0 = None
    float_0 = -950.4
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1667():
    none_type_0 = None
    int_0 = -697
    int_0.write(none_type_0)


def test_case_1668():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1669():
    none_type_0 = None
    float_0 = 3447.1389
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1670():
    object_0 = module_0.object()
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1671():
    list_0 = []
    object_0 = module_0.object(*list_0)
    a_b_c_0 = module_1.ABC()
    str_0 = "LD\\*|5[MMx!z+;"
    tuple_0 = (object_0, object_0, a_b_c_0, str_0)
    bool_0 = True
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1672():
    none_type_0 = None
    float_0 = 112.384
    tuple_0 = (float_0,)
    dict_0 = {tuple_0: tuple_0, float_0: tuple_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1673():
    str_0 = "o"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1674():
    bool_0 = True
    tuple_0 = ()
    str_0 = "u0ElgdF2l\x0cWM1w<C4`"
    tuple_1 = (bool_0, bool_0, tuple_0, str_0)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_1675():
    float_0 = 2068.45186
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1676():
    str_0 = '0U/"'
    str_1 = 'i<pDQ%DYtR"LzO'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1677():
    set_0 = set()
    set_1 = set()
    list_0 = [set_0, set_1, set_1]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1678():
    int_0 = 1005
    str_0 = "mT:+S"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1679():
    none_type_0 = None
    dict_0 = {}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1680():
    str_0 = "NB"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1681():
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()
    a_b_c_1.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1682():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    bytes_0 = b"\xe8P\xcb"
    list_0 = [bytes_0, bytes_0, bytes_0]
    tuple_0 = (list_0,)
    tuple_0.write(a_b_c_0)


def test_case_1683():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1684():
    str_0 = "~qA)\rtw${<P\\v@#FfrY?"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1685():
    none_type_0 = None
    str_0 = '@~.:*X%Xx(j"DWIcL'
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1686():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1687():
    str_0 = '7dZf_"(2EnXNO.66Cy'
    none_type_0 = None
    str_1 = "="
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1688():
    float_0 = 1473.343
    set_0 = {float_0, float_0, float_0, float_0}
    str_0 = ""
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1689():
    int_0 = 883
    list_0 = [int_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1690():
    bool_0 = True
    int_0 = -1251
    int_0.write(bool_0)


def test_case_1691():
    pass


def test_case_1692():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1693():
    none_type_0 = None
    set_0 = set()
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1694():
    str_0 = "5LRAAirq<(:\x0b5j"
    str_1 = '21(v_ I&}m?*Q"`-cCy/'
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1695():
    bytes_0 = b'\x98\xff\xef\x1d\xf5\xe9\xc1\xbe\xe0"\\'
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1696():
    bool_0 = False
    bytes_0 = b"n\xd3\t*\xb8f"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1697():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1698():
    int_0 = 2932
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1699():
    list_0 = []
    int_0 = -1923
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1700():
    none_type_0 = None
    list_0 = [none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1701():
    none_type_0 = None
    int_0 = -3574
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1702():
    str_0 = "#lsTgk{dE?"
    int_0 = 757
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1703():
    int_0 = 1582
    set_0 = {int_0, int_0, int_0}
    bytes_0 = b"\t\xdb\xcb\xfa\xcc\xd2\xbd\x99\xc8)"
    set_1 = {bytes_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1704():
    set_0 = set()
    bool_0 = False
    dict_0 = {bool_0: set_0}
    tuple_0 = (set_0, bool_0, set_0, dict_0)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1705():
    dict_0 = {}
    bytes_0 = b"\xc3\x1a\xd9\x8ctg"
    set_0 = {bytes_0, bytes_0, bytes_0}
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1706():
    str_0 = "^&Dvc%"
    none_type_0 = None
    str_1 = "O JCs\x0clgLV"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1707():
    int_0 = 4020
    str_0 = "Hg{iGmY5O(T"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1708():
    bool_0 = True
    bytes_0 = b"\x91t4\x17\x89\x85DT^M\x13,\x04"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1709():
    str_0 = ":C6Dg1@"
    bool_0 = True
    tuple_0 = (str_0, bool_0)
    tuple_1 = (str_0, tuple_0)
    module_0.object(**tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_1710():
    set_0 = set()
    int_0 = 3324
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1711():
    a_b_c_0 = module_1.ABC()
    str_0 = "@n~|`p|\n/tH#l*nh"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1712():
    bool_0 = False
    float_0 = -3741.055
    tuple_0 = (bool_0, float_0)
    str_0 = "og\x0c14Y=;z&~"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1713():
    bytes_0 = b"\xcaMR\x12\x16\xc9\xce6\x95\xd7}Q\xcf>\x80\x136\x1b"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1714():
    str_0 = '\n<l"h9M/J@sTE8e\n,'
    bool_0 = False
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, bool_0: bool_0}
    bool_1 = True
    bool_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1715():
    bool_0 = False
    str_0 = "\r\nT4/2p-Z7k"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1716():
    int_0 = -500
    tuple_0 = ()
    tuple_0.write(int_0)


def test_case_1717():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1718():
    float_0 = 1822.0
    float_1 = -455.0
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1719():
    int_0 = 321
    module_0.object(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_1720():
    bytes_0 = b'\xf7\x9b\xbeg\x95\xea!\xfd\xd0\xea\xfc\xff\xd2s0"d'
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1721():
    list_0 = []
    object_0 = module_0.object(*list_0)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1722():
    bytes_0 = b"\xd4@\xd3\xeb\x06\xf5\xd3\x04"
    int_0 = 1646
    int_0.write(bytes_0)


def test_case_1723():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1724():
    int_0 = -130
    int_1 = -1090
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1725():
    str_0 = "u,]t\r"
    bytes_0 = b"\x94k\x87\xf2\x03B\x8a\x168\xc7\xe2$5k\xb2\x0e\xe9\xd1"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1726():
    str_0 = 'vfTk~!SQO=[p"\n*v*3'
    str_1 = "lATB>BcqT1?"
    set_0 = {str_0, str_1}
    bool_0 = True
    dict_0 = {str_0: str_0, str_1: str_1, str_1: set_0, str_0: bool_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1727():
    none_type_0 = None
    int_0 = 1152
    dict_0 = {int_0: int_0}
    dict_1 = {int_0: dict_0}
    dict_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1728():
    int_0 = 1320
    module_1.ABC(*int_0, **int_0)


@pytest.mark.xfail(strict=True)
def test_case_1729():
    int_0 = -321
    list_0 = [int_0, int_0, int_0]
    object_0 = module_0.object()
    object_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1730():
    str_0 = "__m\tiu}8}@"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1731():
    str_0 = "@Ycv"
    str_1 = "2A'z-v@t>#qE`\\$"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1732():
    str_0 = ""
    float_0 = -3792.45
    float_0.write(str_0)


def test_case_1733():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1734():
    int_0 = -1350
    tuple_0 = (int_0,)
    tuple_1 = (int_0, tuple_0)
    bool_0 = False
    bool_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_1735():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xbd\xe5I\x81(R\x1e=\x82\xaf"
    set_0 = {a_b_c_0, bytes_0, a_b_c_0, a_b_c_0}
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1736():
    tuple_0 = ()
    object_0 = module_0.object(*tuple_0)
    str_0 = ">"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [str_0, dict_0, str_0, dict_0]
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1737():
    none_type_0 = None
    int_0 = -1525
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1738():
    bytes_0 = b"\xf9~N\x8cP"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1739():
    bool_0 = False
    bytes_0 = (
        b"\xd3\xf0\xf6\xc0\xca\x1f\x00\xf7\xcd\xbe\xc2\xde\x8f\xc8e\xdc\xa9m\x16\x08"
    )
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1740():
    int_0 = 3084
    int_1 = 1784
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1741():
    bytes_0 = b"\x18\x00m\xa6\xbd\xffs\xf6\xd4ZYf"
    none_type_0 = None
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1742():
    int_0 = 3290
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1743():
    str_0 = "Y_<z"
    int_0 = -1747
    list_0 = [str_0, str_0, str_0, int_0]
    module_0.object(*list_0, **str_0)


@pytest.mark.xfail(strict=True)
def test_case_1744():
    int_0 = 419
    set_0 = {int_0, int_0, int_0}
    set_1 = set()
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1745():
    complex_0 = 517.26 + 1042.145164j
    bool_0 = False
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1746():
    bool_0 = True
    bytes_0 = b"\x85\x0e\xa2\x1eg\xd3\x1e|1\x0f;\xd2nL\x96te{r\x07"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1747():
    none_type_0 = None
    int_0 = 439
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1748():
    int_0 = 37
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    list_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1749():
    none_type_0 = None
    int_0 = -1316
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1750():
    bytes_0 = b"\xbf\x83G\x06\n\x88\x04\xa2x\xc3E"
    module_1.ABC(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1751():
    bool_0 = True
    float_0 = -2213.806
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1752():
    bool_0 = True
    bytes_0 = b"\xcd wo\x02.\xdfE\xafv#EY\x8e"
    list_0 = [bytes_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1753():
    list_0 = []
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1754():
    a_b_c_0 = module_1.ABC()
    float_0 = -1465.106
    float_0.write(a_b_c_0)


def test_case_1755():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1756():
    list_0 = []
    bool_0 = True
    tuple_0 = (list_0, bool_0)
    set_0 = set()
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1757():
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_1: bool_1, bool_1: bool_1}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1758():
    str_0 = ")>O[0@:dgs$CD"
    set_0 = {str_0}
    int_0 = 646
    tuple_0 = (set_0, int_0, set_0)
    list_0 = [tuple_0, str_0, set_0]
    str_1 = 'ZJo5vjlAmc>Sb"2P9<w'
    dict_0 = {str_1: tuple_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1759():
    none_type_0 = None
    int_0 = 2321
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1760():
    dict_0 = {}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1761():
    bool_0 = True
    tuple_0 = (bool_0,)
    list_0 = [tuple_0, bool_0, tuple_0]
    float_0 = 3751.04
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1762():
    float_0 = -5006.7687
    list_0 = [float_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1763():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1764():
    float_0 = 2753.6382
    list_0 = [float_0]
    object_0 = module_0.object()
    list_1 = [list_0, object_0, float_0]
    float_1 = 1594.7
    float_1.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1765():
    none_type_0 = None
    module_1.ABC(*none_type_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1766():
    object_0 = module_0.object()
    str_0 = "EkFhb"
    str_1 = "*#f\x0cocH((g#"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_0: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1767():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    module_1.ABC(*set_0)


@pytest.mark.xfail(strict=True)
def test_case_1768():
    set_0 = set()
    object_0 = module_0.object()
    dict_0 = {object_0: object_0, object_0: object_0, object_0: object_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1769():
    bool_0 = False
    int_0 = -5093
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1770():
    str_0 = '{\rS|s$vK"(\t+]7jB/'
    str_1 = "F,HgB"
    set_0 = {str_1}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1771():
    float_0 = -4032.89
    set_0 = {float_0, float_0, float_0}
    bytes_0 = b"\xa5WiU"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1772():
    bytes_0 = b"\xfc;\x03\xdb[r\x95W\xd7b\xa2"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1773():
    none_type_0 = None
    bool_0 = False
    int_0 = 2246
    dict_0 = {bool_0: bool_0, int_0: bool_0, int_0: bool_0, int_0: bool_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1774():
    none_type_0 = None
    complex_0 = -425.8678 + 1497j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1775():
    bool_0 = True
    bytes_0 = b""
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1776():
    none_type_0 = None
    int_0 = -1658
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1777():
    str_0 = "X9M\n"
    str_1 = "23b21%0\n"
    str_2 = ":"
    dict_0 = {str_1: str_0, str_2: str_2}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1778():
    bool_0 = True
    complex_0 = 2425.71 - 98.5j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1779():
    int_0 = 4134
    tuple_0 = ()
    tuple_0.write(int_0)


def test_case_1780():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1781():
    none_type_0 = None
    str_0 = "+ukKI#;zE@kg\nQ3zibN"
    tuple_0 = (str_0,)
    dict_0 = {tuple_0: str_0, tuple_0: tuple_0, str_0: tuple_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1782():
    none_type_0 = None
    bytes_0 = b"\xf1X.Q\x02$_\xe6[y\xd8\x02W"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1783():
    none_type_0 = None
    bytes_0 = b",\xc2LQp"
    list_0 = [bytes_0]
    set_0 = set()
    tuple_0 = (bytes_0, list_0, set_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1784():
    str_0 = "Vv/qW6\x0bQEJ="
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1785():
    int_0 = 865
    set_0 = {int_0, int_0, int_0, int_0}
    int_1 = -2386
    int_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1786():
    bytes_0 = b"\xa6\x11?\xf4\xe3"
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1787():
    none_type_0 = None
    bytes_0 = b"Y\x86Qk=v\xc9\x06M\xf9\xf6\xc4\x87\x93\x07\x9c\xa7\xe1\xad"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1788():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    float_0 = -1746.5
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1789():
    set_0 = set()
    float_0 = 1131.0
    int_0 = 2130
    bool_0 = False
    tuple_0 = (float_0, int_0, bool_0)
    tuple_1 = (tuple_0,)
    set_1 = {tuple_1, int_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1790():
    str_0 = "W"
    set_0 = {str_0, str_0, str_0}
    float_0 = 651.03
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1791():
    str_0 = '$\x0c>@t"oK>CKGb/{L`0'
    set_0 = {str_0}
    bytes_0 = b"\xc4\xde\x88nI\x8a\xa0\xd5\xf3\xb1\xe8\x9c\xbf"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1792():
    bool_0 = True
    list_0 = [bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1793():
    none_type_0 = None
    int_0 = 4063
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1794():
    str_0 = "R"
    object_0 = module_0.object()
    object_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1795():
    bool_0 = True
    int_0 = -251
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1796():
    object_0 = module_0.object()
    bytes_0 = b"\x8d\xcc\xce\xe2u7M8\x02\x99O\xb8~\xf0"
    bytes_0.write(object_0)


def test_case_1797():
    object_0 = module_0.object()


def test_case_1798():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1799():
    float_0 = 3206.28159
    str_0 = "O"
    set_0 = {str_0}
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1800():
    bytes_0 = b"\xd4?}\xe4\xeb7\x86\xe6\xa3\xb6$\xd3~\xf6\t\x03\xdc"
    complex_0 = 2522.09 + 214.6j
    set_0 = {complex_0, complex_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1801():
    set_0 = set()
    list_0 = [set_0, set_0, set_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1802():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1803():
    str_0 = "~0qR"
    list_0 = [str_0, str_0, str_0]
    bytes_0 = b"\xe6\xcc\xb2]z\x8aN?\x03\x10\xc8\xfc\x00\xfd\xec"
    bytes_0.write(list_0)


def test_case_1804():
    list_0 = []
    object_0 = module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1805():
    int_0 = 2447
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1806():
    none_type_0 = None
    dict_0 = {}
    int_0 = 736
    tuple_0 = (dict_0, dict_0, dict_0, int_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1807():
    bool_0 = False
    module_1.ABC(*bool_0, **bool_0)


def test_case_1808():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1809():
    none_type_0 = None
    float_0 = -289.96426
    list_0 = [float_0, float_0]
    bool_0 = True
    tuple_0 = (list_0, bool_0, bool_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1810():
    bytes_0 = b" \xa7\xf7"
    bytes_1 = b"\x7f?\x17\xf4\xda\xa7\x94B2p\xac\xa9\x14\xc6\xcfI"
    tuple_0 = (bytes_1,)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1811():
    str_0 = "bd*0F'3{cC+[tcB~"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1812():
    str_0 = "w'^lQje.[BQG%K Du"
    set_0 = set()
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1813():
    str_0 = "t%A"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1814():
    bytes_0 = b"R\x8c\xf5\xc0\xab\t]\xda\xfalV\xb0"
    bytes_1 = b" \xf3\xc8M\xda\x93G\x8coFY\x9d?\xe2~"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1815():
    bool_0 = True
    str_0 = "u#~q59 a5"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1816():
    bytes_0 = b"\xf7\x94X\xc7"
    float_0 = 2528.339458
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1817():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    tuple_0 = (bool_0, list_0)
    bool_1 = False
    bool_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1818():
    none_type_0 = None
    complex_0 = 432.94296 + 1827j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1819():
    float_0 = -598.413
    set_0 = set()
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1820():
    bool_0 = True
    bytes_0 = b"\xa7\xbd\xcc\xcbS\xe0|nw"
    tuple_0 = (bytes_0,)
    tuple_1 = (tuple_0,)
    tuple_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1821():
    float_0 = -1388.3
    list_0 = [float_0, float_0, float_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1822():
    bool_0 = True
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1823():
    bytes_0 = b"\xfe`c\x8a\xd6\xfe\xb7H\x1e?X\xa6\x7f"
    bool_0 = False
    bool_0.write(bytes_0)


def test_case_1824():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1825():
    str_0 = "9]yCK@9<;#X2*i\x0c.O\n"
    int_0 = -5
    set_0 = {int_0, int_0, int_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1826():
    none_type_0 = None
    float_0 = -344.0
    float_0.write(none_type_0)


def test_case_1827():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_1828():
    none_type_0 = None
    float_0 = -4857.692
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1829():
    bool_0 = True
    str_0 = '\x0bH|`w{+z!"0Kn'
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1830():
    list_0 = []
    dict_0 = {}
    object_0 = module_0.object(*list_0, **dict_0)
    bool_0 = False
    bool_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1831():
    int_0 = 1351
    complex_0 = -1216.6 - 585.99275j
    set_0 = {complex_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1832():
    bytes_0 = b"\xffl\xbe\x84\x8b"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1833():
    str_0 = "B?5D(<*3 ESM {|L"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1834():
    none_type_0 = None
    str_0 = "\tRpc:$A.%o%.5-!b\r"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1835():
    str_0 = "+[X+ZpX,[\x0c"
    float_0 = 2262.803
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1836():
    str_0 = "](XBO\t2"
    none_type_0 = None
    str_1 = "B#@_:6PlR?Sq"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
    }
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1837():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    str_0 = "D"
    list_0 = [str_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1838():
    bool_0 = True
    bytes_0 = b"[\xaf\xac\xba"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1839():
    bool_0 = False
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1840():
    bool_0 = True
    tuple_0 = ()
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1841():
    set_0 = set()
    str_0 = "0<A5shRZ@G'\tfUV}vO"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1842():
    bool_0 = True
    none_type_0 = None
    module_1.ABC(*bool_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1843():
    a_b_c_0 = module_1.ABC()
    int_0 = -618
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: int_0}
    list_0 = []
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1844():
    bytes_0 = b"\xfb"
    list_0 = [bytes_0]
    list_1 = [list_0, list_0, list_0, list_0]
    bool_0 = True
    bool_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1845():
    str_0 = "q]8#w"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1846():
    int_0 = 1133
    list_0 = [int_0]
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    list_1 = [bool_0, bool_0, a_b_c_0, bool_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1847():
    str_0 = "sCj"
    int_0 = -1852
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1848():
    none_type_0 = None
    int_0 = 2012
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1849():
    str_0 = " xko/Ijjaj0tno{`cO"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1850():
    str_0 = 'eje>kw"'
    bytes_0 = b")\xd2 \xec\xa0\x81P\xe9\x84\xfdD\xf0Ro"
    set_0 = {bytes_0, bytes_0, bytes_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1851():
    bytes_0 = b'\xe6\xbb"\xa7\xda\x00|\x94\xa4\xc9\xff\xbe\x1e:h\x1b`'
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1852():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    bytes_0 = b"\x14\\\xf9\xbe CH"
    module_1.ABC(*list_0, **bytes_0)


def test_case_1853():
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_1854():
    none_type_0 = None
    module_1.ABC(*none_type_0)


def test_case_1855():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1856():
    dict_0 = {}
    int_0 = 2480
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1857():
    bytes_0 = b"p\xb5\xa7\x87O{\x7f\xf7\x18\x15\x96\x98\xbb_\xf3?\xc7\x89"
    list_0 = []
    object_0 = module_0.object(*list_0)
    object_0.write(bytes_0)


def test_case_1858():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1859():
    bytes_0 = b"\x88Rb\x859\xc0\x9b\xc7+\xab\t\xf1\x06\x1b\xbf"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1860():
    int_0 = -1724
    tuple_0 = ()
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1861():
    bool_0 = True
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1862():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1863():
    bool_0 = False
    str_0 = "=BP\ndL[:?"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1864():
    int_0 = -4507
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1865():
    a_b_c_0 = module_1.ABC()
    float_0 = 1034.778906
    float_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1866():
    complex_0 = -1997.52984 - 1962.8j
    str_0 = ";t{P6{K%\x0b,F"
    str_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1867():
    str_0 = "J-AV~'b:xB8-`mow#z8"
    int_0 = 4618
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1868():
    str_0 = "alL@A\t5dOV\x0c\x0bQl`.IF"
    module_0.object(*str_0)


@pytest.mark.xfail(strict=True)
def test_case_1869():
    bytes_0 = b"\xb2\xb6\x1aWq>"
    int_0 = 1304
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1870():
    int_0 = 938
    module_1.ABC(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_1871():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    dict_0 = {}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1872():
    bool_0 = False
    bytes_0 = b"\x00,_.\n\xcf\xc2g\x1b\x93\xcb\x17y~\xf5\xedE\x88+"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1873():
    int_0 = -647
    int_1 = -1930
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1874():
    str_0 = "0eNxzx=e]? "
    int_0 = 2671
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1875():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1876():
    str_0 = "r<hM\ta1\\p=r\n8<\rlSG"
    float_0 = 2477.55
    dict_0 = {float_0: str_0, str_0: float_0}
    list_0 = [float_0, str_0]
    module_0.object(*list_0, **dict_0)


def test_case_1877():
    pass


def test_case_1878():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1879():
    none_type_0 = None
    str_0 = "L%{ej#\t\r1Yyp-xX,lC"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1880():
    bool_0 = False
    bytes_0 = b"\xee\x07\xed\xb8\xcf\xaf\xf0^\xbf\x9eR\xca\x84\xe7\r\xb4\xad"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1881():
    float_0 = 2660.99869
    list_0 = [float_0, float_0]
    bytes_0 = b"D"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1882():
    float_0 = -1364.5
    str_0 = '"_HJkU.9bJENuKjZ'
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1883():
    bool_0 = False
    float_0 = 1087.451
    tuple_0 = (float_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1884():
    int_0 = 3647
    list_0 = [int_0]
    float_0 = -2889.2
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1885():
    int_0 = -110
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1886():
    str_0 = ">r(_C?.n_M]f0x"
    set_0 = {str_0, str_0}
    dict_0 = {str_0: str_0, str_0: set_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1887():
    float_0 = 1211.525
    a_b_c_0 = module_1.ABC()
    set_0 = {float_0, a_b_c_0}
    int_0 = 3039
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1888():
    none_type_0 = None
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, dict_0, bool_0)
    list_0 = [tuple_0, bool_0, tuple_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1889():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1890():
    set_0 = set()
    complex_0 = -2288.3689 - 1306.11j
    complex_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1891():
    none_type_0 = None
    int_0 = -4029
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1892():
    list_0 = []
    object_0 = module_0.object(*list_0)
    object_1 = module_0.object()
    list_1 = []
    bool_0 = True
    bool_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1893():
    set_0 = set()
    complex_0 = -1919.6611 + 3164.330467j
    str_0 = "uW!S=(*"
    a_b_c_0 = module_1.ABC()
    tuple_0 = (complex_0, str_0, a_b_c_0)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1894():
    str_0 = 'LafYwDmd9{"{'
    list_0 = [str_0, str_0, str_0, str_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1895():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xfd\nZ \x1e8>P\x92\xc9_L\x97\x9e\x04-"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1896():
    str_0 = "C:b&Nyka:Rt1NEu{"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1897():
    bool_0 = False
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1898():
    none_type_0 = None
    str_0 = "\\}vk\t>(["
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1899():
    object_0 = module_0.object()
    tuple_0 = ()
    tuple_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1900():
    none_type_0 = None
    bytes_0 = b"\xfd\x08\xbdW_\xd7\x15\xa5\r\xe8;\xdb\xc4\x12v\x07"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1901():
    str_0 = "&\\-mL1&9\\=#l.'7w1C_"
    int_0 = 4769
    dict_0 = {int_0: int_0, int_0: int_0}
    dict_0.write(str_0)


def test_case_1902():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1903():
    float_0 = -1144.0
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1904():
    a_b_c_0 = module_1.ABC()
    float_0 = -2008.0
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: float_0}
    list_0 = [a_b_c_0, dict_0, dict_0, float_0]
    float_1 = -2810.645716
    float_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1905():
    none_type_0 = None
    str_0 = "'4wD"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1906():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1907():
    str_0 = 'WD\rK)"J j;=kke'
    str_1 = "xDs\x0b5A[\rbtJ\\88nN?"
    int_0 = 2368
    tuple_0 = (str_1, int_0)
    int_1 = -853
    str_2 = "P_l"
    tuple_1 = (str_0, tuple_0, int_1, str_2)
    dict_0 = {tuple_1: int_1, str_2: str_1, str_1: tuple_0, tuple_1: str_1}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1908():
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0, object_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1909():
    bytes_0 = b"*\x82\xce^A\xa1\x8a\xd8\x9a"
    module_1.ABC(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1910():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1911():
    int_0 = 635
    bytes_0 = b"OQ\t-\xe4\xbd\xf9z5G\t,pn\x19\xf6"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    list_1 = [bytes_0, bytes_0, list_0]
    list_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1912():
    none_type_0 = None
    int_0 = -552
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1913():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1914():
    none_type_0 = None
    module_0.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1915():
    int_0 = 2018
    set_0 = set()
    str_0 = "T6aE2\rd<Hq  "
    str_1 = "'1BQ?kIJ\x0bi=:,S>cdyE"
    str_2 = "Zd:1A'%\""
    bool_0 = True
    str_3 = "=~9\\[wQ83"
    list_0 = [int_0, set_0, bool_0, str_3]
    dict_0 = {str_0: int_0, str_1: str_0, str_2: list_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1916():
    none_type_0 = None
    bool_0 = False
    dict_0 = {}
    tuple_0 = (bool_0, bool_0, dict_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1917():
    bool_0 = True
    int_0 = 2724
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1918():
    a_b_c_0 = module_1.ABC()
    int_0 = -2502
    set_0 = {a_b_c_0, int_0, a_b_c_0, a_b_c_0}
    bytes_0 = b"\xe8\x91\x8d\xa2\x9d\x84\x07z\xd6\xc8Q7\xee\x89\xc7YT"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1919():
    tuple_0 = ()
    bytes_0 = b"\x87W\xcf\xf9"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1920():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    bool_0 = True
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1921():
    str_0 = ""
    float_0 = 363.983228
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1922():
    bool_0 = True
    int_0 = 2789
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1923():
    bytes_0 = b"\xac\xd4}\xd4\xf4\xd3`\x01\xf4\xff\xff\x10"
    float_0 = -1039.765107
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1924():
    str_0 = "9"
    int_0 = -4375
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1925():
    complex_0 = 1384.89 + 618j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    float_0 = 266.4723
    dict_0 = {}
    bool_0 = True
    tuple_0 = (set_0, float_0, dict_0, bool_0)
    module_1.ABC(*tuple_0, **bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1926():
    float_0 = -1189.456822
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_1927():
    none_type_0 = None
    complex_0 = -2933.5306 + 3332j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1928():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1929():
    set_0 = set()
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1930():
    bytes_0 = b"\x95\x7fN;v\xc4uR\xd0*\xfe,&\x16\xb2M\x03"
    str_0 = "n,"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1931():
    object_0 = module_0.object()
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1932():
    object_0 = module_0.object()
    bytes_0 = b"\xad\xbe\xe2\x89\xdcaD\xfc%"
    bytes_1 = b""
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1933():
    list_0 = []
    int_0 = 1428
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1934():
    str_0 = "(dl0J'\n4F="
    bool_0 = True
    list_0 = [str_0, bool_0, str_0]
    bytes_0 = b""
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1935():
    bool_0 = False
    set_0 = set()
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1936():
    none_type_0 = None
    bytes_0 = b"4\x01"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1937():
    bytes_0 = b"\x07\x854\xa6"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    float_0 = 1603.974476
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1938():
    int_0 = -3263
    bool_0 = False
    list_0 = [int_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1939():
    bool_0 = True
    bytes_0 = b"Jn"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1940():
    bytes_0 = b""
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1941():
    int_0 = 1574
    int_1 = 2377
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1942():
    bytes_0 = b"\xa6NBRal<:W\x19\x97\xc4\xady\x0b\x93"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    int_0 = -1781
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1943():
    complex_0 = -1092.4635 - 2161j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    list_0 = [set_0, set_0, set_0]
    module_1.ABC(*list_0)


def test_case_1944():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1945():
    int_0 = -671
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    list_1 = [a_b_c_0, list_0]
    list_1.write(int_0)


def test_case_1946():
    pass


def test_case_1947():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1948():
    int_0 = -258
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1949():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    int_0 = -2689
    tuple_0 = (list_0, bool_0, int_0, int_0)
    bool_1 = True
    bool_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1950():
    int_0 = -690
    str_0 = "jLv.k) )V6du?\r+0"
    set_0 = {str_0, str_0, str_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1951():
    bytes_0 = b"\x8e\xd6r;xk\xac\xe6Z#\x17\xcec\x1e8\x91\xf7\xc7"
    module_1.ABC(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1952():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    str_0 = "P"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1953():
    none_type_0 = None
    bytes_0 = b'rn\x10\x84\xb8B\xee%\x16\xf5\x0c\xdbZxf\x07"'
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1954():
    bytes_0 = b"\xec\x16\x07\xf0(\xde\x19\xdf\xed\xcdi\x8fZ"
    list_0 = []
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1955():
    str_0 = "&R"
    str_1 = "Q)zcj{\rg\t0"
    tuple_0 = (str_1,)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1956():
    bool_0 = True
    int_0 = -1235
    dict_0 = {bool_0: bool_0, int_0: bool_0}
    bool_1 = False
    list_0 = [bool_1, bool_1]
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1957():
    tuple_0 = ()
    str_0 = "]83mU"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1958():
    str_0 = "qUUil_O\t@,oA`=SN&cU"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1959():
    str_0 = "B'.JR0"
    tuple_0 = ()
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1960():
    int_0 = 2813
    bool_0 = False
    set_0 = {bool_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1961():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    tuple_0 = ()
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1962():
    dict_0 = {}
    float_0 = -530.3488
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1963():
    dict_0 = {}
    list_0 = [dict_0]
    int_0 = 368
    list_1 = [list_0, list_0, dict_0, int_0]
    module_0.object(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_1964():
    object_0 = module_0.object()
    str_0 = "\t1*,@V"
    tuple_0 = (str_0,)
    tuple_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_1965():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1966():
    none_type_0 = None
    str_0 = "\x0c|NyW"
    list_0 = [str_0, str_0, str_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1967():
    str_0 = "7~[\x0c%C)*"
    float_0 = -550.0
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1968():
    complex_0 = 525.032 - 2340.357j
    dict_0 = {complex_0: complex_0, complex_0: complex_0, complex_0: complex_0}
    str_0 = "'*Eg"
    list_0 = [complex_0]
    tuple_0 = (dict_0, dict_0, str_0, list_0)
    float_0 = -911.16308
    float_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1969():
    bytes_0 = b"\x15\xb5\x1b&\xb6\xc7;\x80\xd0"
    list_0 = [bytes_0, bytes_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1970():
    list_0 = []
    str_0 = "%aa"
    str_1 = "|6n#roycWz,32RZ7\t>HX"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: list_0, str_0: list_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1971():
    str_0 = "]\x0b\r 3XN\r@\nyO"
    str_1 = "uJ<8;i "
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


def test_case_1972():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1973():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1974():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1975():
    none_type_0 = None
    float_0 = -1176.52
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1976():
    bytes_0 = b"r\xc1\\)"
    float_0 = -5205.31182
    set_0 = {bytes_0, float_0, bytes_0}
    str_0 = "[[k"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_1977():
    bytes_0 = b"\xe5\xe8\x88\x1cn!<\x04\x05v\x12\xe8\x08tJ"
    tuple_0 = ()
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1978():
    none_type_0 = None
    module_0.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1979():
    str_0 = ".Yrz]"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1980():
    bytes_0 = b"\xe0\xf44"
    dict_0 = {bytes_0: bytes_0}
    int_0 = 1438
    int_0.write(dict_0)


def test_case_1981():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1982():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    float_0 = 1428.860192
    float_0.write(dict_0)


def test_case_1983():
    pass


@pytest.mark.xfail(strict=True)
def test_case_1984():
    int_0 = -125
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    float_0 = -1017.0189
    tuple_0 = (a_b_c_0, bool_0, float_0, bool_0)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_1985():
    str_0 = ""
    bytes_0 = b"\xc4\xa3mW$}\x867X\xd9/\xeb\x02\x88\x15\x1d%G"
    float_0 = -309.229272
    tuple_0 = (bytes_0, float_0)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1986():
    bytes_0 = b"%yC\x9en2\xd2\x7f|\x08p^k\xdc"
    dict_0 = {}
    list_0 = [dict_0, bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_1987():
    bytes_0 = b"\xcfh\xc1\x1eG\xe9\xbdGf\xea"
    int_0 = -1963
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1988():
    bool_0 = False
    bytes_0 = b"\x81\xbc!\x8a\xe5\x8b\xe6\x03\xa8\x12\xc0\x9b\x15aW\xa8\x19"
    set_0 = {bytes_0, bytes_0, bytes_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1989():
    str_0 = "`3x2e5*T"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1990():
    none_type_0 = None
    int_0 = -1708
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1991():
    bytes_0 = b"'y0\t)\xb6c"
    str_0 = "HG\\w>!Ar`\rD\x0b(E\x0c<p$"
    set_0 = {str_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1992():
    a_b_c_0 = module_1.ABC()
    object_0 = module_0.object()
    object_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_1993():
    str_0 = "8-K8\x0b"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1994():
    none_type_0 = None
    int_0 = -1594
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1995():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    list_1 = [list_0]
    str_0 = "d>@,2@o:9N;Dhnw"
    str_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_1996():
    none_type_0 = None
    bytes_0 = b"\x869\xdd!\x87\xa8\x05=\n7\xeb\xa1m"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1997():
    str_0 = 'saAlBJ&J"O?w'
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1998():
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_1999():
    int_0 = -208
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    bytes_0 = b"\xf9\xcba=\x9c+DnEC\xa6\xc4r\x8b\xaa\x11\x18O"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2000():
    a_b_c_0 = module_1.ABC()
    str_0 = "Nmea!'|c;<{wo+Kya"
    bytes_0 = b"m"
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: bytes_0, a_b_c_0: a_b_c_0, bytes_0: a_b_c_0}
    bool_0 = True
    tuple_0 = (dict_0, bool_0)
    a_b_c_1 = module_1.ABC()
    dict_1 = {a_b_c_0: str_0, str_0: tuple_0, a_b_c_1: bytes_0}
    int_0 = 274
    bool_1 = False
    tuple_1 = (dict_1, int_0, bool_1, dict_0)
    str_1 = ""
    str_1.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2001():
    float_0 = -897.7
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2002():
    tuple_0 = ()
    a_b_c_0 = module_1.ABC(*tuple_0)
    tuple_1 = ()
    tuple_1.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2003():
    none_type_0 = None
    str_0 = "Q"
    str_1 = ""
    str_2 = "\\lB}rD@{'K-o{YE*U\x0b"
    dict_0 = {str_0: str_0, str_1: none_type_0, str_2: str_0}
    module_0.object(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2004():
    str_0 = "\\6#]=S"
    bool_0 = True
    bool_0.write(str_0)


def test_case_2005():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2006():
    a_b_c_0 = module_1.ABC()
    str_0 = "LUB^}8?"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2007():
    bool_0 = False
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2008():
    none_type_0 = None
    int_0 = -2279
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2009():
    bool_0 = True
    bool_1 = False
    bool_1.write(bool_0)


def test_case_2010():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2011():
    a_b_c_0 = module_1.ABC()
    str_0 = "&PLg\nSgz"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    dict_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2012():
    bytes_0 = b"\xf3N\xc5\x80\xfd\xae9\x14\xe6V\xday\xc35\x07\xd7I\xcb\xe0"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    module_0.object(**set_0)


def test_case_2013():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2014():
    list_0 = []
    none_type_0 = None
    module_1.ABC(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2015():
    none_type_0 = None
    bytes_0 = b"\x06<\x8aD{\x1748\xe4\xd8\xc5"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2016():
    int_0 = -3250
    dict_0 = {int_0: int_0}
    str_0 = "9o5\\\n`"
    bool_0 = False
    set_0 = {str_0, bool_0, str_0, str_0}
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2017():
    none_type_0 = None
    bytes_0 = b"\xa0\xde\x80\x85"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2018():
    int_0 = 654
    bytes_0 = b"[\x89h"
    list_0 = [bytes_0]
    tuple_0 = (list_0,)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2019():
    int_0 = -350
    str_0 = "]zW"
    dict_0 = {str_0: str_0, str_0: int_0, str_0: int_0, str_0: str_0}
    module_1.ABC(*int_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2020():
    int_0 = -1564
    set_0 = {int_0, int_0}
    int_1 = -9
    int_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2021():
    int_0 = 1744
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2022():
    str_0 = "mm$\x0c@{:eG4tzU<'2&o"
    str_1 = "XI,0j0ye\n`1]1\x0b"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2023():
    str_0 = "="
    bytes_0 = b"m.m\xf1\x82\x0eC\xba\x822\xcf'\xfa\xcbu\xfc\xc8\xc1<\xd6"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2024():
    bytes_0 = b'\x13\tn\xe9\xb9;\xdc)\xcdC"H\x13\xff&6'
    str_0 = "zp#gt?4=PhSaZc,BAq3q"
    none_type_0 = None
    str_1 = "Qa#  "
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_0.object(*bytes_0, **dict_0)


def test_case_2025():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2026():
    none_type_0 = None
    bytes_0 = b"$9\\3_4\t\xb7i^{\xab\x1d\xce\xc3\xd8"
    set_0 = set()
    tuple_0 = (bytes_0, set_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2027():
    bool_0 = True
    bytes_0 = b'u\x1b\xc0Q\xf0P\xc5"\xe3)^'
    dict_0 = {bool_0: bool_0, bytes_0: bytes_0}
    bool_1 = False
    bool_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2028():
    list_0 = []
    float_0 = 1902.2098
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2029():
    none_type_0 = None
    int_0 = -53
    set_0 = {int_0, int_0, int_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2030():
    bytes_0 = b"\xb6\xf0\xf2\xf7\x10"
    dict_0 = {}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2031():
    str_0 = "oAVQW~<3_{9:C\x0b#'ai]C"
    complex_0 = 3743.3 - 114.4621j
    complex_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2032():
    str_0 = "EW)#UhQ07"
    str_1 = "z"
    str_2 = 'n<V$"~UI+%y#d0rNU%FV'
    bytes_0 = b"\xb4\xa2\xf7\xf2"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: bytes_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2033():
    none_type_0 = None
    bool_0 = False
    set_0 = {bool_0, bool_0}
    set_0.write(none_type_0)


def test_case_2034():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2035():
    int_0 = 1892
    float_0 = -168.0
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2036():
    str_0 = "uXc+MnnhUj"
    str_1 = "[!H66=pVPY"
    str_2 = "=\x0bi.8a-bguK"
    str_3 = "c2U>5t\x0c5kJcy&JKae"
    int_0 = -308
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_3, str_3: int_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2037():
    bool_0 = False
    bytes_0 = b"\x91\xbd\xa0I`-\x0e\x87\x7f"
    tuple_0 = (bytes_0,)
    str_0 = "PGOOZq/"
    dict_0 = {tuple_0: tuple_0, bytes_0: tuple_0, bytes_0: str_0, tuple_0: str_0}
    list_0 = [tuple_0, dict_0, dict_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2038():
    bytes_0 = b"V'\xc7HY\x7f"
    set_0 = {bytes_0, bytes_0, bytes_0}
    list_0 = [set_0, bytes_0, bytes_0]
    str_0 = "YBN;"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2039():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2040():
    none_type_0 = None
    int_0 = 1898
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2041():
    object_0 = module_0.object()
    set_0 = {object_0, object_0, object_0, object_0}
    list_0 = []
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2042():
    none_type_0 = None
    int_0 = -1476
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2043():
    float_0 = -6023.047492
    int_0 = 3130
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2044():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    set_0 = set()
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2045():
    bool_0 = True
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2046():
    float_0 = -1795.60601
    float_1 = -3482.9543
    float_1.write(float_0)


def test_case_2047():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2048():
    object_0 = module_0.object()
    str_0 = "&q,n<|:}a63@KVFH~^T"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2049():
    set_0 = set()
    complex_0 = -1967.67 - 1028.840715j
    complex_0.write(set_0)


def test_case_2050():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_2051():
    none_type_0 = None
    list_0 = [none_type_0]
    module_0.object(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2052():
    int_0 = -2511
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2053():
    int_0 = 910
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2054():
    bool_0 = True
    str_0 = "\x0b"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2055():
    str_0 = "]L|@66*dXBr3?F"
    bytes_0 = b"\x1aM\xdb\xb7\x1a\x0e3\xces\xa7\x01U\xca\x1b\x998\x85g\x0f"
    float_0 = 66.23
    list_0 = [bytes_0, float_0, bytes_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2056():
    int_0 = -3120
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2057():
    bool_0 = False
    bool_1 = True
    float_0 = 1942.7
    dict_0 = {bool_1: bool_1, bool_1: bool_1, bool_1: float_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2058():
    str_0 = "/W!_["
    str_1 = "^h2"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2059():
    a_b_c_0 = module_1.ABC()
    str_0 = "X$%E|^LYs,= 8&\x0ckC"
    none_type_0 = None
    str_1 = "[cT\x0b?"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2060():
    bool_0 = True
    bytes_0 = b"\x1d\x97\x12\xd9(t\x90(\xf1}\xe6j\x84"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2061():
    int_0 = -1388
    bytes_0 = b"\xb1r\xdb\xfe\\]\x91\xd3"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2062():
    float_0 = 2961.0
    set_0 = {float_0, float_0, float_0, float_0}
    int_0 = -925
    dict_0 = {int_0: int_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2063():
    int_0 = 1049
    bool_0 = False
    dict_0 = {int_0: int_0, bool_0: int_0, bool_0: int_0}
    none_type_0 = None
    module_1.ABC(*dict_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2064():
    bytes_0 = b"\x06\x91\xf3\xd0\xc6\xfd\x0c\xac\xf54-\xa3\x9d\x17\x94\x15\x88\xf5\xd5"
    set_0 = set()
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2065():
    int_0 = -2829
    list_0 = [int_0, int_0, int_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2066():
    str_0 = "vf),|E)Tb@1!=n\x0b)V"
    module_0.object(*str_0)


@pytest.mark.xfail(strict=True)
def test_case_2067():
    bool_0 = False
    bool_1 = True
    tuple_0 = (bool_0, bool_1)
    str_0 = "mq3C:p\x0b"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2068():
    bool_0 = True
    bool_1 = False
    set_0 = {bool_1, bool_1}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2069():
    none_type_0 = None
    str_0 = "N"
    str_0.write(none_type_0)


def test_case_2070():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2071():
    none_type_0 = None
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    dict_1 = {a_b_c_0: a_b_c_0}
    dict_1.write(none_type_0)


def test_case_2072():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2073():
    bytes_0 = b"\x88\xe3"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    str_0 = "Pb4=t='~]TlNAp"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2074():
    dict_0 = {}
    float_0 = -289.0
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2075():
    str_0 = "qCPs~S3GNaXju'"
    int_0 = 408
    list_0 = [int_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2076():
    int_0 = 40
    bool_0 = False
    bool_1 = True
    dict_0 = {bool_0: bool_0, bool_1: bool_1, bool_0: bool_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2077():
    none_type_0 = None
    bytes_0 = b"\xfb\xc6\xd1\x0f\x8c\x9bR]\x9a\xc0$\x0c\xd9\xcf"
    list_0 = [bytes_0, bytes_0, bytes_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2078():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2079():
    none_type_0 = None
    bytes_0 = b"\xb8(i\x06\x99\xd2W"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2080():
    bool_0 = True
    module_1.ABC(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2081():
    int_0 = 821
    bytes_0 = b")\x97:\xf7.)\xf2\xca\x1ey\xc1\x06\x8d\xd5\xbf\x0eM#"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2082():
    bytes_0 = b""
    bytes_1 = b"\xae0\xdd\x1a\xa9i2i"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2083():
    bool_0 = True
    str_0 = "|"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2084():
    str_0 = "71[QxD\\iP(f\t|b>T<I"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2085():
    none_type_0 = None
    bytes_0 = b"\xfa\xeb\x84h\x17^\xa7\x8b"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2086():
    bytes_0 = b"e"
    tuple_0 = (bytes_0,)
    int_0 = 632
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2087():
    str_0 = "Hedwm{tEwOa6a"
    float_0 = 204.0
    float_0.write(str_0)


def test_case_2088():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2089():
    bool_0 = False
    bytes_0 = b"\xc4\x94\x13f1\xd2{\xdbR"
    list_0 = [bytes_0, bytes_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2090():
    none_type_0 = None
    float_0 = -584.819
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2091():
    bool_0 = False
    int_0 = -611
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2092():
    str_0 = "C<n"
    bytes_0 = b'\xda\x9b\xab"\xc7\xf8!\xa6\xb7\xe9\xbc\xc1\x8d\x9b\xfc\x80e\xcaz'
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2093():
    a_b_c_0 = module_1.ABC()
    str_0 = "96"
    bool_0 = False
    set_0 = {str_0, bool_0, bool_0, str_0}
    set_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2094():
    bool_0 = True
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    list_0 = [a_b_c_0, dict_0, dict_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2095():
    str_0 = "MW/t{x$Psni)I3I5P8"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2096():
    bool_0 = False
    bool_1 = False
    list_0 = [bool_0, bool_1, bool_0, bool_1]
    bytes_0 = b"\x17U\xaddr\xdac"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2097():
    none_type_0 = None
    bytes_0 = b"\xf7\x12,v\xdb\xb1f?\xc7\x96\x05\x90\xad\xa1\xc6\r\xf8"
    set_0 = {bytes_0, bytes_0, bytes_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2098():
    bool_0 = False
    bytes_0 = b"\rr\x97\x90\xbcG\x19vc'\x88V\x19\xb2\xcd\x1fq"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2099():
    bool_0 = True
    tuple_0 = (bool_0,)
    int_0 = 381
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2100():
    bool_0 = True
    str_0 = "t.1$G|*];JivS^(FvM"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2101():
    bytes_0 = b"\x92|\x10\x9b\x8c\xc78*\xae\xa4\xb2B"
    list_0 = []
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2102():
    bytes_0 = b"\nml\xf9\xd2\xf7\xe3\x8d\xe4bk\xb3i\x02et"
    str_0 = "By"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2103():
    bool_0 = True
    int_0 = -1524
    tuple_0 = (int_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2104():
    int_0 = -422
    bool_0 = False
    list_0 = [bool_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2105():
    int_0 = -627
    dict_0 = {int_0: int_0, int_0: int_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2106():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    list_0 = [bool_0, bool_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2107():
    str_0 = "hL\x0cWv\nd6cL"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2108():
    object_0 = module_0.object()
    bytes_0 = b"\xba\xdd4\xe6\x08~"
    bytes_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2109():
    none_type_0 = None
    bytes_0 = b"\xf39}H\xfbb"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2110():
    str_0 = ",/aW*Dp1$Sc^SeN7Q8O/"
    module_1.ABC(*str_0)


@pytest.mark.xfail(strict=True)
def test_case_2111():
    str_0 = "]Ug|Xu3Zwb6w7"
    list_0 = [str_0, str_0, str_0, str_0]
    tuple_0 = ()
    tuple_0.write(list_0)


def test_case_2112():
    pass


def test_case_2113():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_2114():
    str_0 = "@895aQ`S@cxp:,K8>"
    str_1 = "~?"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2115():
    str_0 = "\nK,0lb  Y.-):HC_\nV("
    bool_0 = True
    dict_0 = {str_0: bool_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2116():
    float_0 = 2060.2
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2117():
    bytes_0 = b"\x9bf\x95k\xa5\xcc\xe7\xec\xf2\x88\xd8q\x0f\xc7&\x07"
    set_0 = {bytes_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2118():
    str_0 = "Rl^\\g,;"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2119():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    object_0 = module_0.object()
    int_0 = -1511
    dict_1 = {object_0: int_0, int_0: object_0, int_0: object_0}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2120():
    set_0 = set()
    list_0 = []
    dict_0 = {}
    a_b_c_0 = module_1.ABC(*list_0, **dict_0)
    tuple_0 = (a_b_c_0, dict_0)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2121():
    int_0 = -183
    float_0 = 4104.45
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2122():
    none_type_0 = None
    int_0 = 1368
    list_0 = [int_0, int_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2123():
    tuple_0 = ()
    a_b_c_0 = module_1.ABC()
    dict_0 = {}
    bool_0 = False
    tuple_1 = (a_b_c_0, dict_0, dict_0, bool_0)
    dict_1 = {tuple_0: tuple_0, tuple_0: tuple_1, bool_0: a_b_c_0}
    list_0 = [dict_1, tuple_0, a_b_c_0, dict_0]
    list_1 = [list_0, bool_0]
    module_0.object(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_2124():
    str_0 = "XqeX&c\\!-F<MB"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2125():
    bool_0 = False
    str_0 = "xv1#+byG\r"
    bytes_0 = b"\xd2\xc6\xf0>W\x8b\x04\xd7PT\xa7\x99\xd0\xbd"
    dict_0 = {str_0: bool_0, str_0: bytes_0, str_0: bool_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2126():
    float_0 = 623.545416
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2127():
    none_type_0 = None
    int_0 = 1459
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2128():
    none_type_0 = None
    bytes_0 = b"l7\xc8wa&\xc6\xa8d\x7fkr\x95"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2129():
    int_0 = 3365
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2130():
    str_0 = "Ed"
    str_1 = "X<\rQ#+/i1D8"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2131():
    none_type_0 = None
    int_0 = -307
    int_0.write(none_type_0)


def test_case_2132():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2133():
    bytes_0 = b"\xc1\xf5\xa1#\x9b\xa1"
    str_0 = "y/;VTqI|pz^M"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2134():
    int_0 = -1793
    bytes_0 = b"7\xae\x1d\xect\x18/"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2135():
    dict_0 = {}
    str_0 = "-HS=[(A*C["
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2136():
    object_0 = module_0.object()
    bool_0 = True
    dict_0 = {
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
        object_0: bool_0,
    }
    float_0 = 3157.53
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2137():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2138():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xec\xc8\x9eM\xe9"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2139():
    bool_0 = True
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2140():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_1,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2141():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


def test_case_2142():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2143():
    bytes_0 = b"\x9d\xf0\xb4\x03E\x0e\xa5"
    bool_0 = False
    bool_0.write(bytes_0)


def test_case_2144():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_2145():
    bool_0 = False
    int_0 = -819
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2146():
    int_0 = 635
    list_0 = [int_0, int_0]
    str_0 = "2n{4SD"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2147():
    none_type_0 = None
    str_0 = 'r"S\\ug:u E'
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2148():
    str_0 = ""
    int_0 = -1483
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2149():
    str_0 = "fa_S"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2150():
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()
    float_0 = 1023.62
    list_0 = [a_b_c_1, a_b_c_1, float_0, a_b_c_1]
    tuple_0 = (a_b_c_1, a_b_c_1, list_0, list_0)
    str_0 = "/;cBhC2fYR#\x0c{;&"
    str_1 = "++"
    tuple_1 = (tuple_0, str_0, str_1)
    tuple_1.write(a_b_c_0)


def test_case_2151():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2152():
    float_0 = 1441.0894
    list_0 = [float_0]
    bool_0 = False
    tuple_0 = (list_0, float_0, bool_0)
    tuple_1 = ()
    float_1 = -121.0
    tuple_2 = (tuple_1, float_1)
    tuple_2.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2153():
    bool_0 = False
    str_0 = "u&Y:8uE4!`"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2154():
    str_0 = "]3d|0dfKK_"
    str_1 = "z\n#;s6j<RV{k6g"
    str_2 = 'Y&rb="O+9Xl~cPzZ'
    str_3 = "\tbD"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2, str_3: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2155():
    str_0 = "N("
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2156():
    bytes_0 = b"\x8f"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2157():
    bytes_0 = b"\x06\x84\t\xcc\xd6\xadyX\x1c\x13D\xa0"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2158():
    int_0 = 2444
    bytes_0 = b"\xf7"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2159():
    bool_0 = False
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    dict_0 = {a_b_c_0: list_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: list_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2160():
    complex_0 = -1790.80709 + 6775.42j
    bytes_0 = b"\x9b\xc3\x97tn\x8a&\xfe^O\xb7@\xf4n"
    bytes_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2161():
    none_type_0 = None
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2162():
    bool_0 = True
    bool_1 = False
    list_0 = [bool_1]
    tuple_0 = (list_0,)
    bool_2 = True
    tuple_1 = (bool_1, tuple_0, bool_2)
    bytes_0 = b"j\x89!\xf2v~k\xb1A\xad\xe6\xb1C>\x0f\xbe"
    tuple_2 = (tuple_1, bool_1, bytes_0)
    tuple_2.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2163():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    complex_0 = 640.85309 - 1089.21757j
    complex_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2164():
    bool_0 = True
    complex_0 = -5096.6686 - 239.684j
    bool_1 = True
    list_0 = [complex_0, complex_0, bool_1]
    list_1 = [list_0]
    list_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2165():
    float_0 = -120.5199
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2166():
    bytes_0 = b"\x86Lr\x06\rr~+\x8b\xb9\xb8_"
    str_0 = "]5#"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2167():
    int_0 = -5233
    dict_0 = {int_0: int_0}
    complex_0 = 2094.93715 - 2420.1875j
    complex_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2168():
    none_type_0 = None
    str_0 = "=-H8HxWk=5\x0cH{\r\rG\t"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2169():
    int_0 = -380
    none_type_0 = None
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2170():
    int_0 = -1248
    module_1.ABC(**int_0)


@pytest.mark.xfail(strict=True)
def test_case_2171():
    int_0 = 313
    bytes_0 = b"\x9cj"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2172():
    none_type_0 = None
    int_0 = 59
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2173():
    bool_0 = False
    dict_0 = {}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2174():
    str_0 = "aUZ6#&RlP=GM"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2175():
    tuple_0 = ()
    str_0 = "#l)Yf#Vq@x$J6&S*I8"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2176():
    int_0 = -413
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2177():
    float_0 = -1711.842308
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2178():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    str_0 = "C8#$z1|5"
    int_0 = 2307
    set_0 = {str_0, int_0, int_0}
    list_0 = [str_0, set_0, str_0, str_0]
    list_0.write(dict_0)


def test_case_2179():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_2180():
    tuple_0 = ()
    tuple_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2181():
    str_0 = "{;r:Ay\\)J~0b:C4nF"
    list_0 = []
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2182():
    bool_0 = False
    bytes_0 = b"\xb0\x99]=fR\x1bPb\x7f\xfa;I"
    bytes_0.write(bool_0)


def test_case_2183():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2184():
    str_0 = "3S+*'9=GC1w"
    bytes_0 = b"\xb1\x12"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2185():
    bytes_0 = b"\x0c\x08"
    set_0 = {bytes_0, bytes_0, bytes_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2186():
    int_0 = 2893
    int_1 = 1573
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2187():
    bytes_0 = b"L"
    float_0 = 1127.51385
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2188():
    str_0 = "aDH2"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2189():
    float_0 = -2027.26507
    str_0 = "dd"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2190():
    bytes_0 = b"\x90ThXz"
    bytes_1 = b".\xa0pl$D\x14`\xb4>-"
    dict_0 = {bytes_1: bytes_1, bytes_1: bytes_1, bytes_1: bytes_1}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2191():
    bytes_0 = b'O\xb5Rp\xd7"'
    bool_0 = False
    int_0 = 151
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bool_0, int_0: int_0}
    bool_1 = True
    bool_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2192():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    str_0 = "@Nw#h<BvKP6_@"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2193():
    int_0 = -2000
    bytes_0 = b"Cm"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2194():
    str_0 = "GE#fbVzB$"
    str_1 = "+)_!mwY>k"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2195():
    int_0 = 364
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2196():
    list_0 = []
    bytes_0 = b"\x85,J8!\x01\xa8\xf1\xecO\xf2k\xe9"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2197():
    int_0 = -1159
    str_0 = "@iq$"
    set_0 = {str_0, str_0}
    bool_0 = True
    list_0 = [set_0, str_0, bool_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2198():
    str_0 = "W{|,~bgI>z"
    str_1 = "dU5CUX,Ri"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2199():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2200():
    set_0 = set()
    int_0 = 1011
    set_1 = {int_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2201():
    int_0 = 5342
    list_0 = []
    list_0.write(int_0)


def test_case_2202():
    pass


def test_case_2203():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_2204():
    none_type_0 = None
    int_0 = -2477
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2205():
    bytes_0 = b"<\x1c\x14%"
    int_0 = 3217
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2206():
    complex_0 = 2045 - 230j
    bool_0 = True
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2207():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2208():
    int_0 = 1038
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2209():
    bytes_0 = b"\xd2\x80E"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2210():
    none_type_0 = None
    str_0 = "\x0c4K"
    complex_0 = -816.390871 + 2090.2663j
    tuple_0 = (str_0, complex_0)
    list_0 = [tuple_0, str_0, str_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2211():
    str_0 = "GhQc#RIdW51r/"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2212():
    none_type_0 = None
    str_0 = "Z8hg<r48J%Mt\\K4rwU\x0c{"
    str_0.write(none_type_0)


def test_case_2213():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2214():
    int_0 = -1804
    bytes_0 = b"\xf3<"
    set_0 = {bytes_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2215():
    str_0 = "97!$;I*Mv]L"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2216():
    none_type_0 = None
    complex_0 = -2536.4 + 1182.61j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2217():
    int_0 = 2519
    list_0 = []
    dict_0 = {}
    a_b_c_0 = module_1.ABC(*list_0, **dict_0)
    list_1 = [int_0, a_b_c_0, dict_0, a_b_c_0]
    module_1.ABC(*list_1, **dict_0)


def test_case_2218():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2219():
    bytes_0 = b"\xab\x1e\xc9n\xa9\xf5e\xf7\xb3U!\xe4\xf5\x82"
    float_0 = -3847.0
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2220():
    none_type_0 = None
    complex_0 = -832.015747 + 1926.014j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2221():
    complex_0 = -96.4472 - 4630.327642j
    int_0 = -633
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2222():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    float_0 = 1650.614
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2223():
    float_0 = 2045.127
    tuple_0 = ()
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2224():
    str_0 = ">i)7cb7)7t(FCGE"
    str_1 = "\\kk\x0b)4/\x0cKu~s#=pu"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2225():
    int_0 = 846
    bool_0 = True
    tuple_0 = (bool_0,)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2226():
    float_0 = 2572.7
    complex_0 = 977.26 - 3699.5j
    complex_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2227():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    tuple_0 = (a_b_c_0,)
    list_1 = [tuple_0]
    str_0 = "j\x0bW_Y.u\\=:PQn\x0c"
    str_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_2228():
    bytes_0 = b"\x9a\xd98\xf8\x9d"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    tuple_0 = ()
    tuple_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2229():
    int_0 = -2320
    bytes_0 = b'\xcb\xf0\x9d\xaf\x08\xe4\xcea"\xc3\x03O\x14\xbb\xc4c\xaaG'
    a_b_c_0 = module_1.ABC()
    tuple_0 = (int_0, bytes_0, a_b_c_0)
    module_1.ABC(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2230():
    int_0 = -500
    bool_0 = False
    bool_0.write(int_0)


def test_case_2231():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2232():
    str_0 = ">:Fb"
    bytes_0 = b" +\n"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2233():
    str_0 = "ZCd?fPY*?`\x0c.d&{W3;qz"
    list_0 = [str_0, str_0, str_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2234():
    str_0 = "\rFfD"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_2235():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2236():
    bytes_0 = b""
    complex_0 = -244.628 - 270.328727j
    complex_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2237():
    list_0 = []
    object_0 = module_0.object(*list_0)
    float_0 = 1996.063
    list_1 = [float_0]
    list_1.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2238():
    int_0 = 3985
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2239():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(set_0)


def test_case_2240():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2241():
    dict_0 = {}
    bytes_0 = b"\x8d\xc2\x85\xb6N\x8c\xfa\xe2\xad\x01\x05"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2242():
    float_0 = 536.12544
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2243():
    str_0 = "\r(BO\n0(RB4q(*&[Ph@Y"
    set_0 = set()
    complex_0 = -3235.38545 + 1002.8431j
    bool_0 = True
    tuple_0 = (str_0, set_0, complex_0, bool_0)
    dict_0 = {str_0: tuple_0, bool_0: complex_0, str_0: tuple_0}
    list_0 = []
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2244():
    dict_0 = {}
    bytes_0 = b"&\xf4\xcb\x95\xc3"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2245():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2246():
    none_type_0 = None
    int_0 = -1933
    int_0.write(none_type_0)


def test_case_2247():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2248():
    bytes_0 = b"\xabl\xc6k\x0f?\x83\x8d\xaf\xa3\xd7\x97\x8b"
    str_0 = 'G\x0b{C##Olr%#m"'
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2249():
    bool_0 = True
    object_0 = module_0.object()
    dict_0 = {object_0: object_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2250():
    complex_0 = 677.4 - 135.214j
    int_0 = 3258
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2251():
    float_0 = 482.582
    bytes_0 = b""
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2252():
    str_0 = ")F2#p\r{\x0c`"
    bytes_0 = b"\xbc\xa0\x19\x18pS\x86\x17x\x04Ed\x08"
    set_0 = {bytes_0, bytes_0, bytes_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2253():
    bool_0 = True
    str_0 = "ZoC74\x0c"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2254():
    bool_0 = True
    str_0 = "+Q7"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2255():
    float_0 = -3591.863558
    int_0 = -1952
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2256():
    str_0 = "5^t}@-\\%\nz9{<@zf"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2257():
    str_0 = ".z@9KW5bW,Y|!T"
    str_1 = "PeoRpQ~8FEhz|]*"
    str_2 = "\tO"
    str_3 = "IZj+'hs8*AU4H)Dp}{"
    dict_0 = {str_1: str_1, str_2: str_0, str_3: str_1}
    module_0.object(*str_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2258():
    a_b_c_0 = module_1.ABC()
    int_0 = 1420
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2259():
    bytes_0 = b"\xe5\x80\xfa\xee"
    dict_0 = {}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2260():
    str_0 = "f"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2261():
    int_0 = 1206
    none_type_0 = None
    set_0 = {int_0, int_0, int_0, int_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2262():
    int_0 = -2689
    str_0 = "\rP_$U_)((>"
    tuple_0 = (str_0, str_0)
    list_0 = [tuple_0, tuple_0, str_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2263():
    str_0 = "{2"
    int_0 = 1434
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2264():
    bool_0 = True
    str_0 = 'r\n)"'
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2265():
    float_0 = 2173.28
    list_0 = [float_0, float_0, float_0, float_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2266():
    bool_0 = True
    set_0 = {bool_0}
    bool_1 = False
    bool_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2267():
    str_0 = "]\x0b!\tH ~0XGT=["
    bool_0 = True
    list_0 = [bool_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2268():
    bytes_0 = b"^4EB\xb6\xcbB|YU"
    int_0 = -66
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2269():
    str_0 = "\rd?2q2E)Ea"
    int_0 = -1035
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2270():
    complex_0 = 4637.104 + 127.218633j
    str_0 = "/'U[U\n"
    list_0 = [str_0]
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2271():
    bool_0 = False
    bool_1 = True
    dict_0 = {bool_1: bool_1}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2272():
    bool_0 = False
    set_0 = set()
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2273():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xc8>@\xf5w\x8b\xc9)\xfc\x92.\xda<hO"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2274():
    none_type_0 = None
    int_0 = -753
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2275():
    float_0 = -1183.64
    bool_0 = False
    bool_0.write(float_0)


def test_case_2276():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2277():
    bytes_0 = b"\x9c`\xaa\xc5"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    bool_0 = False
    set_1 = {bool_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2278():
    none_type_0 = None
    str_0 = ":ZQG+K$"
    str_0.write(none_type_0)


def test_case_2279():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2280():
    none_type_0 = None
    float_0 = 4069.976
    list_0 = [float_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2281():
    bool_0 = False
    int_0 = -1624
    tuple_0 = (bool_0, int_0)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2282():
    int_0 = -170
    str_0 = "5*\t_{"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2283():
    int_0 = -657
    str_0 = "J4rg6le|~"
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    tuple_0 = (int_0, str_0, a_b_c_0, bool_0)
    bool_1 = True
    bool_1.write(tuple_0)


def test_case_2284():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2285():
    int_0 = -275
    bool_0 = False
    bool_0.write(int_0)


def test_case_2286():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2287():
    bool_0 = False
    bool_1 = False
    set_0 = {bool_0, bool_1, bool_1}
    float_0 = -1427.572197
    a_b_c_0 = module_1.ABC()
    str_0 = "q5"
    tuple_0 = (float_0, a_b_c_0, str_0)
    list_0 = [str_0, a_b_c_0]
    bool_2 = False
    tuple_1 = (tuple_0, a_b_c_0, list_0, bool_2)
    tuple_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2288():
    bytes_0 = b"\xe6\x1f"
    str_0 = "$DX"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2289():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    complex_0 = 4352 - 1307j
    complex_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2290():
    none_type_0 = None
    str_0 = "q\n|UoRFJ\x0c_%9n"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2291():
    none_type_0 = None
    int_0 = 233
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2292():
    bool_0 = False
    float_0 = -1668.158
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2293():
    int_0 = -4072
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2294():
    bytes_0 = b"\x1d\x0c\xfe\xe9"
    str_0 = ""
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2295():
    bool_0 = True
    int_0 = -2961
    set_0 = {bool_0, bool_0, bool_0, int_0}
    float_0 = -611.8535
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2296():
    str_0 = "#W"
    bool_0 = False
    bool_0.write(str_0)


def test_case_2297():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2298():
    int_0 = -3695
    bool_0 = True
    bytes_0 = b"%n\xac\x13\xec\x8e"
    tuple_0 = (int_0, bool_0, bool_0, bytes_0)
    bool_1 = True
    list_0 = [tuple_0, bool_1, bytes_0]
    dict_0 = {}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2299():
    bytes_0 = b"\xc354\xea\xcf\x8e\xb7\x1as1\x84P3E\xe3\x06d\x0f\x9cc"
    bytes_1 = b"K\xaaL\x0c\xc5"
    int_0 = 4247
    tuple_0 = (bytes_0, bytes_1, int_0)
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2300():
    none_type_0 = None
    bytes_0 = b"}\xb8\xd9\x18\xe4\xfe\x10\x18\x0f\x067\xf9-2\x9dY"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2301():
    int_0 = -422
    bytes_0 = b"\x97P\x1d\x95\x15\x9f\xe1"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2302():
    bytes_0 = b"\nl{\x8a\xe8X\x84\x17"
    tuple_0 = ()
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2303():
    bool_0 = False
    dict_0 = {}
    list_0 = [dict_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2304():
    none_type_0 = None
    int_0 = -2051
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2305():
    int_0 = 3568
    set_0 = {int_0, int_0, int_0}
    str_0 = ""
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2306():
    none_type_0 = None
    bytes_0 = b"\x9c\xe7k"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2307():
    float_0 = 37.48
    bytes_0 = b'\x10Ca#{\xaaV\x0c!"\xd8y\x86\xb6\xff\xdb\x9du\xb7N'
    object_0 = module_0.object()
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, object_0: object_0}
    tuple_0 = (dict_0,)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2308():
    str_0 = "b %*O|brnip"
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2309():
    bool_0 = False
    str_0 = "2=#B\r%`4]~"
    tuple_0 = (bool_0, str_0, bool_0)
    complex_0 = -637.5 + 2472.08781j
    complex_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2310():
    int_0 = 802
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2311():
    bool_0 = False
    object_0 = module_0.object()
    list_0 = [object_0, object_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2312():
    list_0 = []
    tuple_0 = (list_0,)
    bytes_0 = b"\x93\x00\xb5\xe1\xc0Ume\xa7\x9fk;80\xe5\x16\n\x06\x92"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2313():
    bool_0 = False
    bytes_0 = b"\x9a\xec}\x92\xd4\x93\xbf\x99\x04\xf3\x14\xa4\xca\x87\xa8Dn\x08\xa2&"
    bytes_0.write(bool_0)


def test_case_2314():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2315():
    float_0 = 3942.5
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    list_0 = [tuple_0, tuple_0, tuple_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2316():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2317():
    str_0 = "[$_xSE.)$l8MD!nfU=*+"
    object_0 = module_0.object()
    object_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2318():
    bool_0 = False
    int_0 = -393
    int_0.write(bool_0)


def test_case_2319():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_2320():
    bool_0 = False
    list_0 = []
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2321():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2322():
    int_0 = 280
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2323():
    float_0 = -353.468
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2324():
    none_type_0 = None
    float_0 = -1134.9
    set_0 = {float_0}
    dict_0 = {float_0: float_0, float_0: float_0, float_0: set_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2325():
    float_0 = -1637.88359
    list_0 = [float_0, float_0]
    dict_0 = {}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2326():
    str_0 = "gKB=!^b:i?RZ*Uv<</"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bytes_0 = b"\xd5\xac\x17\xe8\x8f\xdc\xc6\x85row\x01g\x14^u"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    set_0.write(dict_0)


def test_case_2327():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2328():
    bool_0 = True
    bytes_0 = b"\xeb"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2329():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2330():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    module_1.ABC(*list_1)


def test_case_2331():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2332():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    float_0 = -1494.443
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2333():
    int_0 = 1569
    str_0 = 'W"g 18\x0b;([pwN^.[Dc'
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2334():
    int_0 = -187
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2335():
    bool_0 = False
    bytes_0 = b";\x8e\xd7\x05(\xbal\xf8((\x11O"
    bool_1 = False
    tuple_0 = (bool_0, bool_0, bytes_0, bool_1)
    int_0 = 1101
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2336():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    dict_0 = {}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2337():
    bytes_0 = b"\x01uFq\x8e\x94\xa0\xdd\x03/"
    bool_0 = False
    list_0 = [bytes_0, bytes_0, bool_0, bytes_0]
    bool_1 = False
    bool_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2338():
    bool_0 = True
    bytes_0 = b"=\x87\x19\x1a\xa3p|\xd0\xe0_|}g=a\x01\xb1\xfe\x8c"
    list_0 = [bytes_0, bytes_0, bytes_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2339():
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()
    dict_0 = {a_b_c_1: a_b_c_1}
    dict_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2340():
    str_0 = "|e"
    object_0 = module_0.object()
    set_0 = {object_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2341():
    none_type_0 = None
    float_0 = 194.7
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2342():
    bytes_0 = b"\xbf+Xm\xc7\xb2_"
    complex_0 = -3003.82635 + 233.31j
    complex_0.write(bytes_0)


def test_case_2343():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_2344():
    int_0 = -1014
    set_0 = {int_0, int_0}
    module_1.ABC(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_2345():
    str_0 = ""
    list_0 = [str_0]
    int_0 = 1735
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2346():
    a_b_c_0 = module_1.ABC()
    complex_0 = 2781.95 + 2828.41j
    str_0 = "bmFU.\n<rOiD"
    list_0 = [str_0]
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2347():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    dict_0 = {bool_0: bool_0, bool_0: a_b_c_0}
    tuple_0 = (bool_0, bool_0, dict_0)
    int_0 = 666
    list_0 = [tuple_0, int_0, bool_0, tuple_0]
    bool_1 = True
    bool_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2348():
    str_0 = "WMq3PvC'YB\\`Bx"
    int_0 = 801
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2349():
    set_0 = set()
    bytes_0 = b"mr\xff\xb2\\.\xe4\xe6\xcbe\xec>"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2350():
    int_0 = 338
    int_1 = 1561
    int_1.write(int_0)


def test_case_2351():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2352():
    a_b_c_0 = module_1.ABC()
    float_0 = -820.4276
    float_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2353():
    int_0 = 1012
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


def test_case_2354():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2355():
    none_type_0 = None
    bytes_0 = b"u\x03F{?\xd1\xef \xb3\x0c\xecH"
    bool_0 = False
    int_0 = -565
    tuple_0 = (bytes_0, bool_0, int_0, int_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2356():
    a_b_c_0 = module_1.ABC()
    str_0 = 'Rl^1Vot{\rd>r4+A\n"\t'
    str_0.write(a_b_c_0)


def test_case_2357():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2358():
    bool_0 = True
    bool_1 = False
    list_0 = [bool_1, bool_1]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2359():
    str_0 = '\rg%d"!Ho'
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2360():
    int_0 = -510
    list_0 = [int_0, int_0]
    str_0 = ""
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2361():
    str_0 = 'U2I9-bOZ5yy-#"r<'
    bool_0 = True
    list_0 = [bool_0, bool_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2362():
    str_0 = "jBn>Ez>DMUT$5P="
    str_1 = "x=pX"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2363():
    str_0 = "mb;`8S\x0cVWs"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2364():
    int_0 = -90
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_0.write(int_0)


def test_case_2365():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2366():
    none_type_0 = None
    float_0 = 407.0
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2367():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    str_0 = "L9Pp*"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2368():
    str_0 = "Sdr"
    set_0 = {str_0}
    float_0 = -962.32667
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2369():
    bool_0 = False
    str_0 = "sU[FH>?>GPFwO^E<rGBS"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2370():
    bytes_0 = b"\x9c\x82\x1a\x14"
    list_0 = []
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2371():
    str_0 = "N\r)i04]nV"
    bytes_0 = b"4\xd2j\x05t\xd5\xf4\xb34\x19x7\xd1(\xd1#\xc3&"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2372():
    bool_0 = False
    list_0 = [bool_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2373():
    none_type_0 = None
    object_0 = module_0.object()
    list_0 = [object_0]
    tuple_0 = (object_0, list_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2374():
    none_type_0 = None
    bytes_0 = b"5a\xaf\xc0"
    bytes_0.write(none_type_0)


def test_case_2375():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_2376():
    float_0 = -647.2
    str_0 = "+[w.fj.zK+OZzZbv9<T%"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2377():
    int_0 = -748
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2378():
    none_type_0 = None
    dict_0 = {}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2379():
    none_type_0 = None
    bytes_0 = b"\xdb\x8e\xeb\xcd||(e"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2380():
    tuple_0 = ()
    str_0 = "M[dAI!"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2381():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    tuple_0 = ()
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2382():
    a_b_c_0 = module_1.ABC()
    float_0 = 786.7651
    float_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2383():
    bytes_0 = b"l"
    bytes_1 = b"C"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2384():
    bool_0 = False
    int_0 = -291
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2385():
    bytes_0 = b"\xd8\x94[Y\xa2b"
    str_0 = "%"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2386():
    str_0 = "6\x0c|="
    str_1 = "*W+Cc<f@r1{{ a:q!o"
    list_0 = [str_0, str_0, str_1]
    str_2 = "Nr;SoFW"
    dict_0 = {str_1: str_0, str_0: list_0, str_2: list_0, str_2: list_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2387():
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    set_0 = {tuple_0, tuple_0, a_b_c_0}
    int_0 = 1060
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2388():
    str_0 = "qxb\\}P}/gKm_F\rhKU\neL"
    set_0 = set()
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2389():
    str_0 = "Mu=E\x0bz.\\%z`rE"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2390():
    bool_0 = False
    bytes_0 = b"n\xb0\xbe\x93'=\xab\x97H\x15L\x07!\xe0"
    float_0 = 1871.37038
    dict_0 = {bytes_0: bytes_0, float_0: bytes_0}
    dict_0.write(bool_0)


def test_case_2391():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2392():
    bool_0 = False
    bytes_0 = b"\xf9"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2393():
    str_0 = "\n](tH5\x0b~[iO[D~\\W^"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2394():
    set_0 = set()
    list_0 = [set_0, set_0]
    module_0.object(*list_0, **set_0)


@pytest.mark.xfail(strict=True)
def test_case_2395():
    object_0 = module_0.object()
    set_0 = {object_0, object_0}
    object_1 = module_0.object()
    object_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2396():
    none_type_0 = None
    int_0 = 4657
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2397():
    int_0 = 3238
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2398():
    int_0 = -1890
    set_0 = {int_0, int_0, int_0, int_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2399():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    float_0 = 2068.0
    set_0 = {float_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2400():
    none_type_0 = None
    bytes_0 = b"Y2\\G"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2401():
    int_0 = -4312
    bytes_0 = b"X~\xfd}\xd77>.\xb8j\xee\x07!\xcc\x12\xc4"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2402():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2403():
    bytes_0 = b"\xf9\\)\xde\x9c\xcf\xfa\x82\xb9Q\xad"
    list_0 = [bytes_0, bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2404():
    none_type_0 = None
    float_0 = -2639.863
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2405():
    int_0 = 1846
    set_0 = {int_0, int_0, int_0, int_0}
    list_0 = [int_0, int_0, int_0, set_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2406():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    bytes_0 = b"\x1cu\xc0N\xe7\xdb\xb4i\xd5\xa1<2\x97"
    tuple_0 = (dict_0, bytes_0)
    bytes_1 = b"p\x1b\x83Wu\x12\xdd\xad\xd7S\xa5m\xa15"
    bytes_1.write(tuple_0)


def test_case_2407():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2408():
    none_type_0 = None
    str_0 = "F^[>"
    str_0.write(none_type_0)


def test_case_2409():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2410():
    none_type_0 = None
    bytes_0 = b"z\xc5\nh\xc8\xc2t\xbdp&$"
    str_0 = "FYCx\x0c&C'\tou+bN"
    object_0 = module_0.object()
    float_0 = -559.98567
    tuple_0 = (bytes_0, str_0, object_0, float_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2411():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    bool_1 = False
    int_0 = -2053
    dict_0 = {}
    str_0 = ")vhfx]w6gaQNFv!*Y]*C"
    bytes_0 = b"\x1c\x0b\xf3\xa6\xaa\x9e=\x83Bw\xd7\x06\xb2\xb79\xb8\x15\x12N\x04"
    tuple_0 = (int_0, dict_0, str_0, bytes_0)
    float_0 = -2203.5
    tuple_1 = (tuple_0, float_0, tuple_0, dict_0)
    tuple_2 = (tuple_0, tuple_1)
    tuple_3 = (bool_1, tuple_2)
    tuple_3.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2412():
    none_type_0 = None
    bytes_0 = b"\xa1"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2413():
    dict_0 = {}
    str_0 = "=MI"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2414():
    float_0 = 1240.037
    set_0 = {float_0}
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2415():
    bool_0 = False
    tuple_0 = (bool_0,)
    bytes_0 = b"\xd2\xa1\x0f\x05^)\x0cj\xf2"
    list_0 = [bytes_0, bytes_0]
    bytes_1 = b"\x88\xafqa\x8c\xaad\xcf|\xa1\xbb\xb1 $\xf1\xd2~\xadW"
    tuple_1 = (bytes_0, list_0, bytes_1)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2416():
    bool_0 = False
    float_0 = -2021.74
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2417():
    str_0 = "e\"cZN4M;uJ'{-x\t:P~"
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2418():
    list_0 = []
    str_0 = '5G;"?z96G'
    str_1 = "6/N{qMG)x"
    str_2 = "9ApG%`b'u\n#z@N+"
    dict_0 = {str_0: list_0, str_1: str_1, str_2: str_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2419():
    bool_0 = True
    int_0 = 2010
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2420():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2421():
    bytes_0 = b"\xfdy\x98)"
    int_0 = -2641
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2422():
    str_0 = "z~&f,*$p2+)A8Z\x0c"
    set_0 = {str_0}
    int_0 = -695
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2423():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0, list_0, list_0, list_0]
    list_2 = []
    list_2.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_2424():
    int_0 = 1743
    bytes_0 = b"\x11\xb5\x1b\xbb\xa9\xb2o"
    list_0 = [bytes_0, int_0, int_0]
    module_1.ABC(*list_0)


def test_case_2425():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2426():
    int_0 = 2105
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2427():
    none_type_0 = None
    bytes_0 = b"\xf8\xcf\x98\xef\xf1\xd4\xc7\xc4\xact\x16\x0f"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2428():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    bool_0 = True
    list_1 = [bool_0, bool_0]
    tuple_1 = (list_1, bool_0)
    list_2 = [tuple_1, bool_0, bool_0]
    list_2.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2429():
    float_0 = 1050.2632
    set_0 = {float_0, float_0}
    a_b_c_0 = module_1.ABC()
    set_1 = {a_b_c_0, a_b_c_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2430():
    float_0 = 337.0
    int_0 = 274
    tuple_0 = (int_0, int_0)
    list_0 = [tuple_0, tuple_0, tuple_0, int_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2431():
    int_0 = -3881
    dict_0 = {int_0: int_0, int_0: int_0}
    bool_0 = True
    tuple_0 = (bool_0,)
    dict_1 = {tuple_0: tuple_0, bool_0: bool_0, bool_0: bool_0}
    dict_1.write(dict_0)


def test_case_2432():
    pass


def test_case_2433():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2434():
    dict_0 = {}
    int_0 = 2709
    int_0.write(dict_0)


def test_case_2435():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2436():
    int_0 = 697
    module_0.object(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_2437():
    bool_0 = True
    bytes_0 = b"\xadRd\x8b<)-"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2438():
    complex_0 = -3667.49789 - 226.5j
    list_0 = []
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2439():
    str_0 = "_P"
    str_1 = "\x0b.QsBUUJ."
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2440():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


def test_case_2441():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2442():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    set_0 = {tuple_0, a_b_c_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2443():
    float_0 = 1328.014
    bool_0 = False
    set_0 = {float_0, bool_0, bool_0, bool_0}
    float_1 = 1846.43
    float_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2444():
    none_type_0 = None
    bytes_0 = b'"e5\x08\x01\xedw\x07\x1aRV'
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2445():
    float_0 = -514.44713
    none_type_0 = None
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2446():
    int_0 = 1008
    tuple_0 = ()
    bool_0 = True
    dict_0 = {int_0: tuple_0, int_0: bool_0, int_0: tuple_0}
    bytes_0 = b"\xf06g\x7f\x82|s\x823\xa9\xf6\xaf\xe1]\x0co\x8f\xc9"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2447():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    float_0 = -505.7
    float_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2448():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0, tuple_0}
    str_0 = "L\x0cr\x0clci[oG1N"
    list_0 = [str_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2449():
    float_0 = 1763.0
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2450():
    bytes_0 = b"\xad\xe7+\xca]\x18C\xfa\x8e"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [bytes_0, dict_0, bytes_0, dict_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2451():
    str_0 = "f'EquD>(\"_9sdt?/0"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2452():
    none_type_0 = None
    str_0 = "+ex\r\x0c^WB+EGC5Y1"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2453():
    a_b_c_0 = module_1.ABC()
    module_1.ABC(**a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2454():
    str_0 = "8^,ie$L"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_2455():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2456():
    int_0 = -541
    tuple_0 = (int_0, int_0)
    dict_0 = {tuple_0: int_0}
    list_0 = [dict_0, int_0, tuple_0, dict_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2457():
    bool_0 = True
    int_0 = -3117
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2458():
    bytes_0 = b"\x8f"
    bool_0 = False
    bool_0.write(bytes_0)


def test_case_2459():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_2460():
    object_0 = module_0.object()
    module_0.object(**object_0)


@pytest.mark.xfail(strict=True)
def test_case_2461():
    none_type_0 = None
    complex_0 = 4051.166343 + 1182.1017j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2462():
    str_0 = "53"
    dict_0 = {str_0: str_0, str_0: str_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2463():
    bool_0 = False
    bool_1 = True
    complex_0 = 641.3 + 87.2j
    a_b_c_0 = module_1.ABC()
    tuple_0 = (bool_1, complex_0, bool_1, a_b_c_0)
    list_0 = [tuple_0, tuple_0, bool_1]
    list_1 = [list_0, bool_1]
    list_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2464():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    set_0 = set()
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2465():
    tuple_0 = ()
    str_0 = ".4"
    tuple_1 = (tuple_0, str_0)
    int_0 = -521
    int_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2466():
    bool_0 = False
    bool_1 = False
    bytes_0 = b"\xf1\xb1\x81;1\xb9\xeb\xc3\xf1+\xaeO\xfd\xa5i"
    tuple_0 = (bool_1, bytes_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2467():
    float_0 = -991.28
    list_0 = [float_0, float_0, float_0]
    bytes_0 = b"=o\xc3v\xcf\xb0\xbcq\x0f\xfb;&\xdb'l\xa1\xbe["
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2468():
    bytes_0 = b"\xc5\x12\xc4\x1f\xe7R?\x85\xda\xc7\x81\xda\xac\xe3\x97\x7fK\xf0\x84"
    str_0 = "'DFS"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2469():
    bool_0 = True
    bytes_0 = b"\x81\x14\xef\xbc\x1d&\xcd\xb2\xd8\xb2\x9e"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2470():
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    bool_0 = True
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2471():
    bool_0 = False
    int_0 = -1871
    dict_0 = {int_0: int_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2472():
    str_0 = "HaloOWa`|f&SXw_D3sJm"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2473():
    str_0 = "L7"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    object_0 = module_0.object()
    object_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2474():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_1.ABC(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_2475():
    none_type_0 = None
    str_0 = ",eZ.\x0b>"
    str_0.write(none_type_0)


def test_case_2476():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2477():
    str_0 = "l(@(_mh"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2478():
    none_type_0 = None
    int_0 = -2698
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2479():
    none_type_0 = None
    complex_0 = 1102.15 - 3294.46587j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2480():
    set_0 = set()
    complex_0 = -241.514679 + 1691.402j
    complex_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2481():
    str_0 = "$3\x0b<e)O"
    bytes_0 = b"\xf99\x109\x7f'\xce"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2482():
    str_0 = "fT*"
    dict_0 = {}
    bytes_0 = b"\xcf\x8e\xd6"
    float_0 = 1053.23
    tuple_0 = (str_0, dict_0, bytes_0, float_0)
    int_0 = 826
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2483():
    float_0 = -2.9
    int_0 = -811
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2484():
    bool_0 = True
    bool_1 = True
    set_0 = {bool_1, bool_1}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2485():
    int_0 = -1026
    bytes_0 = b"Of\x0bE-"
    tuple_0 = (bytes_0,)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2486():
    none_type_0 = None
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2487():
    a_b_c_0 = module_1.ABC()
    float_0 = 1292.08809
    bytes_0 = b"\x15\xd9\xf9r\x0b\x98\xf9"
    bytes_1 = b"d\x93\xdd\x1eVa\xb4\xd1\x1d\xa75\xd6E"
    bytes_2 = b"\xd2\xde\x81\x87q\xe2\xad\xcea\x9f\xdf<\xd9\x19\xdf,"
    dict_0 = {bytes_0: bytes_1, bytes_1: bytes_0, bytes_2: bytes_2, bytes_1: bytes_1}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2488():
    int_0 = 2084
    int_1 = 1569
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2489():
    int_0 = 1853
    list_0 = [int_0, int_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2490():
    tuple_0 = ()
    bytes_0 = b"\xf1\x03\xa4\xb2\x7f\xad\xd18"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2491():
    bytes_0 = b"\x84\x0f\xda\x0e\xd7\xc2,S\x91\xc3\xf4\xaf\xc3"
    str_0 = "\\\\G'`z)*\x0cvi/-"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2492():
    bool_0 = False
    tuple_0 = (bool_0,)
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    bool_1 = True
    list_0 = [a_b_c_0, a_b_c_0, bool_1]
    str_0 = "LH{i. e\t;Xi:[emx]"
    bool_2 = True
    tuple_1 = (list_0, str_0, bool_2, bool_2)
    tuple_2 = (a_b_c_0, bool_1, list_0, tuple_1)
    tuple_2.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2493():
    complex_0 = -341.17437 + 122.6j
    int_0 = 1440
    list_0 = [int_0, int_0, int_0]
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2494():
    object_0 = module_0.object()
    list_0 = [object_0, object_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2495():
    none_type_0 = None
    str_0 = "I20/la"
    set_0 = {str_0, str_0, str_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2496():
    none_type_0 = None
    bytes_0 = b"w\xd0\x97\xe2\xa0\xcc"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2497():
    int_0 = -3160
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2498():
    int_0 = 1577
    list_0 = [int_0]
    module_0.object(*list_0)


def test_case_2499():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2500():
    bool_0 = False
    str_0 = "w>8O<g"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2501():
    float_0 = 1295.7
    bool_0 = False
    float_1 = 2760.465122
    tuple_0 = (bool_0, float_1)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2502():
    str_0 = "`-m9(Y~~E"
    bytes_0 = b"\xe9\x83\xb8\xe9\x11\\~\xcf)\xe7\xa0:\x86\x8b"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2503():
    none_type_0 = None
    bytes_0 = b"\xbbG\xe1 \x94S\xdf\xdd\xa6K\xa7\xb0rP@\x81\xa3\xd3\xa6\x0b"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2504():
    float_0 = -1213.80163
    module_1.ABC(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_2505():
    list_0 = []
    list_1 = [list_0, list_0, list_0]
    module_0.object(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_2506():
    bool_0 = True
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2507():
    bool_0 = True
    dict_0 = {}
    list_0 = [bool_0, dict_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2508():
    bool_0 = False
    module_1.ABC(*bool_0, **bool_0)


def test_case_2509():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2510():
    complex_0 = -1306.1 + 162.8j
    int_0 = 1240
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2511():
    object_0 = module_0.object()
    list_0 = [object_0, object_0]
    list_1 = []
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2512():
    str_0 = "5\neJA}Fh|~:cGY"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2513():
    int_0 = -1263
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2514():
    bytes_0 = b"\xf5\xcb"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2515():
    int_0 = -115
    list_0 = [int_0, int_0, int_0]
    bool_0 = False
    list_1 = [bool_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2516():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    bytes_0 = b"}\x97\xad\x8f"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2517():
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_1: bool_1, bool_1: bool_1}
    bytes_0 = b"\xb4"
    list_0 = [dict_0, bytes_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2518():
    str_0 = "{7:})D#1I=&W"
    str_1 = "sk`g"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2519():
    none_type_0 = None
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0, tuple_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2520():
    none_type_0 = None
    str_0 = "@NLbkqSidi\r4xna\r"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2521():
    str_0 = ""
    set_0 = {str_0, str_0, str_0}
    int_0 = 420
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2522():
    none_type_0 = None
    bytes_0 = b"`-\x08K\x08\xd0RH\xb4\x9a\x06\xe3I\x8f\xa3\xe7L\xcb\xdc\t"
    bytes_0.write(none_type_0)


def test_case_2523():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_2524():
    tuple_0 = ()
    float_0 = 567.332
    float_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2525():
    bytes_0 = b"R\x1bHv6+!Q"
    list_0 = [bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2526():
    bool_0 = False
    int_0 = 2796
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2527():
    bytes_0 = b"\x84\xf8\x9fd\x05\x10\xb1\xca\x89\x87\xaa\xb4"
    module_0.object(**bytes_0)


def test_case_2528():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2529():
    bool_0 = True
    tuple_0 = (bool_0,)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2530():
    a_b_c_0 = module_1.ABC()
    int_0 = 3436
    int_1 = 1529
    list_0 = [int_0, int_0, int_1]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2531():
    str_0 = "i7,Rb\rK'$M2IdX7("
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2532():
    bool_0 = True
    set_0 = set()
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2533():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    float_0 = -248.0
    float_0.write(list_0)


def test_case_2534():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2535():
    bool_0 = True
    complex_0 = -260.54338 - 5071j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2536():
    bool_0 = True
    set_0 = {bool_0}
    tuple_0 = (set_0,)
    bytes_0 = b"\x14W"
    set_1 = {bytes_0, bytes_0, bytes_0, bytes_0}
    set_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2537():
    dict_0 = {}
    complex_0 = -681.7763 + 935.1555j
    complex_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2538():
    bool_0 = False
    bytes_0 = b"\x0c\xf2\x8d\xc2\xe2\xc5wv\xa5"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2539():
    complex_0 = -1899.58254 - 428.3j
    str_0 = ","
    str_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2540():
    int_0 = -1555
    bool_0 = True
    bool_0.write(int_0)


def test_case_2541():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2542():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2543():
    a_b_c_0 = module_1.ABC()
    str_0 = "o;0):*.-pQ*"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2544():
    str_0 = "Vg\x0bo|I_ Ts-=28G"
    str_1 = "0&5>KOa{V#]_"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2545():
    float_0 = 2149.1535
    dict_0 = {}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2546():
    bool_0 = True
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2547():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2548():
    str_0 = "~\\{"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2549():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0, bool_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2550():
    none_type_0 = None
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2551():
    str_0 = "qb[g)Z\x0b<@V+(;v',"
    bytes_0 = b"\x83L<u"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2552():
    int_0 = -612
    float_0 = 2428.133602
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2553():
    none_type_0 = None
    object_0 = module_0.object()
    bytes_0 = b"\xe8T\xfa"
    set_0 = {object_0, object_0, bytes_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2554():
    int_0 = -2998
    str_0 = "#]Qu4Oyj-c_lP~Pu"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2555():
    bool_0 = True
    bool_1 = False
    bool_2 = True
    tuple_0 = (bool_0, bool_1, bool_2)
    bool_3 = False
    bool_3.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2556():
    bytes_0 = b"j\x81\t\x8fcM]:\x97\x10]_m5\xafT\xba"
    str_0 = 'gL"\x0c(:)x6'
    list_0 = []
    str_1 = "&)\nx\x0cHH5KcKE=-0"
    bool_0 = True
    list_1 = [bool_0, str_1, str_0]
    str_2 = "-' H1\\(a"
    dict_0 = {str_0: str_0, str_0: list_0, str_1: list_1, str_2: list_0}
    module_0.object(*bytes_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2557():
    bytes_0 = b'\xd5\x0bg\x0e.O\xb3\xee$"\xb6\x18\xac\xcf\xf4\xd6\x0c'
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2558():
    object_0 = module_0.object()
    bytes_0 = b"\xf3\xfc\xe72\x87yy\x006;p7\xec\xed\x05\xca\ri\xaa"
    bytes_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2559():
    str_0 = "N\r]+1dsJt"
    bytes_0 = b"\x86t\xe8\xc0\xb7\xbd\xc6\xee)\xb9\xfa8"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2560():
    str_0 = "I\tIU/Tzou`@*Ug1"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2561():
    bool_0 = True
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2562():
    float_0 = -177.0
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2563():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    bool_1 = True
    tuple_0 = (dict_0, bool_1)
    tuple_1 = ()
    tuple_1.write(tuple_0)


def test_case_2564():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2565():
    tuple_0 = ()
    float_0 = 356.86387
    set_0 = {tuple_0, tuple_0, float_0}
    a_b_c_0 = module_1.ABC()
    tuple_1 = (a_b_c_0,)
    tuple_2 = (tuple_1,)
    dict_0 = {tuple_2: tuple_2, a_b_c_0: tuple_2, tuple_2: a_b_c_0, tuple_1: tuple_2}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2566():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    str_0 = "-+740bb"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2567():
    str_0 = "UhX[>V?!zATq"
    str_1 = "OdR%,6,%:jdmq\r"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_0.object(**dict_0)


def test_case_2568():
    pass


def test_case_2569():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2570():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    str_0 = "\n"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2571():
    str_0 = "/nXUx"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2572():
    str_0 = "Q=NX8W#-0"
    bytes_0 = b"\xa7\xd7\xc4m\x94\x96M\xfbz\xb5u\x13\x8e(\xb6*\x0e!"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2573():
    int_0 = 879
    int_1 = -477
    set_0 = {int_1, int_1}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2574():
    bool_0 = True
    str_0 = "Cb43}qTxu~d?rsvSv{"
    tuple_0 = (bool_0, str_0, str_0)
    list_0 = []
    list_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2575():
    bytes_0 = b"\xab"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2576():
    none_type_0 = None
    bytes_0 = b"\xde\x98\r\t9\xcb6"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2577():
    bool_0 = False
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2578():
    complex_0 = 1368.94845 - 2127.68524j
    bytes_0 = b";\xd3F\x83\x07\xa6"
    bytes_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2579():
    a_b_c_0 = module_1.ABC()
    tuple_0 = ()
    int_0 = 355
    tuple_1 = (tuple_0, int_0)
    tuple_1.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2580():
    float_0 = -2126.2
    int_0 = -1405
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2581():
    a_b_c_0 = module_1.ABC()
    float_0 = -882.182
    float_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2582():
    str_0 = ""
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2583():
    bytes_0 = b"\xa3\x1ce4\x1aP\xfa\xecO"
    object_0 = module_0.object()
    object_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2584():
    int_0 = -2284
    int_1 = -157
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2585():
    int_0 = -262
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2586():
    str_0 = ""
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2587():
    bool_0 = True
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2588():
    none_type_0 = None
    bytes_0 = b"Z\x8a)y\xee}\x8dc\x01"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2589():
    none_type_0 = None
    str_0 = '"N)2x-3FD!\t1k;<@&g4\x0b'
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2590():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2591():
    str_0 = "AtU2:<SA4G`]6"
    str_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2592():
    int_0 = -3529
    str_0 = "/M~#x:0f{0"
    set_0 = {int_0, int_0, str_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2593():
    int_0 = -144
    tuple_0 = (int_0,)
    int_1 = 849
    int_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2594():
    set_0 = set()
    object_0 = module_0.object()
    object_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2595():
    set_0 = set()
    a_b_c_0 = module_1.ABC()
    set_1 = {a_b_c_0, a_b_c_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2596():
    int_0 = -861
    module_1.ABC(*int_0, **int_0)


@pytest.mark.xfail(strict=True)
def test_case_2597():
    none_type_0 = None
    str_0 = "\x0cE>b1>*\n^V"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2598():
    bool_0 = False
    bytes_0 = b"\xc2\x8b\x8b1\xd5\xae.h80\xd8\xcb\xee\xb0o"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2599():
    a_b_c_0 = module_1.ABC()
    module_0.object(*a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2600():
    complex_0 = -1873.875966 - 781j
    object_0 = module_0.object()
    object_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2601():
    bool_0 = False
    str_0 = "WJRI]`=-VTg\\&c%tRz"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2602():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2603():
    int_0 = 1164
    str_0 = 'g*p"'
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2604():
    none_type_0 = None
    set_0 = set()
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2605():
    bytes_0 = b";]\xa0\xca\xdc\x00\x9e\xccqA\xa3\xa4\xd0\x92P\xc9"
    none_type_0 = None
    module_1.ABC(*bytes_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2606():
    str_0 = '=zk9Q"f7F6+^e+'
    str_1 = "\t[xH.-bxH978\n"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2607():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    str_0 = "KO|~b#un8V"
    none_type_0 = None
    str_1 = "h4z>\x0b\x0bj)(R"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_1: none_type_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2608():
    int_0 = 1350
    complex_0 = 759.655 - 1183.4j
    complex_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2609():
    int_0 = 28
    str_0 = "4"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2610():
    bytes_0 = b"\x1ba\xbd\x93\x1e\xf4#"
    int_0 = 949
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2611():
    int_0 = -354
    int_1 = 2388
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2612():
    bytes_0 = b"\x9eS,\xe7\xf2\xe5\xea\x9d\x0ex\xe6\xa1\xf2\x81O\xf6\x1d\xe5\x9b\xb9"
    module_1.ABC(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2613():
    bool_0 = True
    int_0 = -949
    list_0 = [int_0, int_0, int_0, int_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2614():
    int_0 = -959
    list_0 = [int_0, int_0, int_0, int_0]
    str_0 = "eA\\V\\9"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2615():
    none_type_0 = None
    bytes_0 = b"\x91\xe0r\x9d\x01\xb6\x82\xd4^\xca\x03X"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2616():
    bool_0 = False
    str_0 = 'M["N0r}I'
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2617():
    str_0 = '"]R$z1&G^3"?q qh4'
    float_0 = -68.95
    tuple_0 = (str_0, float_0, float_0)
    int_0 = -3607
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2618():
    float_0 = -758.8381
    float_1 = 2572.6703
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2619():
    str_0 = 'loUoK\x0b,Fo">'
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2620():
    none_type_0 = None
    object_0 = module_0.object()
    object_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2621():
    none_type_0 = None
    int_0 = -1999
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2622():
    bool_0 = False
    int_0 = 1547
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2623():
    dict_0 = {}
    float_0 = 160.631
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2624():
    bool_0 = True
    str_0 = '\t(J*EvH_"PB_rXU%4KZ'
    tuple_0 = (str_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2625():
    bool_0 = False
    set_0 = {bool_0}
    int_0 = 1258
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2626():
    bool_0 = True
    object_0 = module_0.object()
    dict_0 = {object_0: object_0, object_0: object_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2627():
    bool_0 = True
    list_0 = [bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2628():
    complex_0 = -157.84 + 1982.066394j
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2629():
    bool_0 = True
    float_0 = -609.3902
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2630():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2631():
    int_0 = -3531
    bytes_0 = b"\xde%r\xc908,\x81\x19oC\x0b>\x95!4[2"
    dict_0 = {bytes_0: bytes_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2632():
    int_0 = 2508
    str_0 = "=UYBP"
    tuple_0 = (int_0, str_0)
    tuple_1 = (int_0, tuple_0)
    bool_0 = False
    list_0 = [bool_0, bool_0]
    list_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2633():
    str_0 = "z.b+oUu?VY>!#0X\t\nf"
    int_0 = -2757
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2634():
    int_0 = 1782
    bytes_0 = b"n"
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    int_1 = -602
    complex_0 = -1667.8475 + 1681j
    dict_0 = {a_b_c_0: a_b_c_0, int_1: list_0, int_1: list_0, complex_0: a_b_c_0}
    tuple_0 = (int_1, complex_0, dict_0)
    tuple_1 = (bytes_0, bytes_0, a_b_c_0, tuple_0)
    list_1 = [tuple_1, dict_0, list_0, int_1]
    list_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2635():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_1.ABC(*list_0, **list_0)


def test_case_2636():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_2637():
    float_0 = 108.5865
    str_0 = "g5ahu"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2638():
    int_0 = 446
    int_1 = 853
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2639():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    int_0 = -2476
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2640():
    bytes_0 = b"\x00\xe9B\x0b\xc5\x05\xe8"
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2641():
    bool_0 = False
    int_0 = 2023
    a_b_c_0 = module_1.ABC()
    tuple_0 = (bool_0, int_0, a_b_c_0, int_0)
    module_1.ABC(*tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2642():
    str_0 = "9+dw.{5"
    int_0 = 1774
    tuple_0 = (int_0,)
    tuple_1 = (str_0, tuple_0)
    list_0 = [tuple_1, tuple_0, tuple_1]
    tuple_2 = (list_0,)
    list_1 = [tuple_2, tuple_2]
    module_1.ABC(*list_1, **tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2643():
    str_0 = "<e%kQY,xS9`vD\\|VDA0"
    complex_0 = 949.62758 + 6118.194795j
    complex_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2644():
    str_0 = "!Q(PE`@ T{K~fRnK7-~<"
    str_1 = 'XeI-"m'
    str_2 = 'SC<<D?3=w^eHx"yOG\t;B'
    str_3 = ";e.M:v'h|O8`O2\t~Fz"
    int_0 = 1757
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1, str_3: int_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2645():
    bytes_0 = b"\x85\x8f!o8\xc9\xce\xa8\xaa\xed\xcc\xd0\x8b\x1f"
    dict_0 = {}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2646():
    complex_0 = -946.46 + 3209.19759j
    list_0 = [complex_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2647():
    bytes_0 = b"m\x0f\xe7"
    float_0 = -1790.3107
    dict_0 = {float_0: float_0, float_0: float_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2648():
    bool_0 = False
    bytes_0 = b"B{\xe5\xbd\xbd\xdcD\xceJ\x1e\x8b*\x86\x0b\xa2"
    set_0 = {bytes_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2649():
    none_type_0 = None
    int_0 = -253
    int_0.write(none_type_0)


def test_case_2650():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2651():
    int_0 = 23
    none_type_0 = None
    module_1.ABC(*int_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2652():
    str_0 = "P=3"
    bytes_0 = b"\x81\x0coL\xf9n\xce\x86t"
    int_0 = -2219
    list_0 = [bytes_0, bytes_0, int_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2653():
    str_0 = "t()22\nh/D0me\nv"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2654():
    object_0 = module_0.object()
    bool_0 = True
    bool_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2655():
    bool_0 = False
    object_0 = module_0.object()
    object_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2656():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    bytes_0 = b"2\xf88m\xf2$\xce+\xe2\x97GL,\xbb\x13\xe2\t"
    bytes_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2657():
    str_0 = "X.;\nmR"
    bytes_0 = b"x\xec_\xb9\xa2l\x92x\xc7"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2658():
    none_type_0 = None
    str_0 = "y]$G[H"
    tuple_0 = (str_0, str_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2659():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    str_0 = "%YG\r<"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2660():
    bool_0 = False
    tuple_0 = ()
    tuple_1 = (bool_0, bool_0, bool_0, tuple_0)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2661():
    str_0 = "fHoRMX/"
    bool_0 = True
    set_0 = {bool_0, bool_0}
    list_0 = [set_0, bool_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2662():
    bool_0 = True
    str_0 = "95[7g\\;5K"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2663():
    list_0 = []
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2664():
    bytes_0 = b"\x81\x9d\xa1\x9fMv\xa9+Pm\xd6p\xbap0\xc9"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2665():
    complex_0 = 945.6299 - 1676.41848j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2666():
    str_0 = "{cUs"
    none_type_0 = None
    str_1 = "\x0bt-vg\\o"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2667():
    float_0 = 980.0
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2668():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2669():
    a_b_c_0 = module_1.ABC()
    int_0 = 2204
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2670():
    bool_0 = False
    dict_0 = {}
    str_0 = "URh|j"
    bool_1 = True
    a_b_c_0 = module_1.ABC()
    tuple_0 = (dict_0, str_0, bool_1, a_b_c_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2671():
    bool_0 = False
    float_0 = 2660.8
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2672():
    int_0 = 176
    bytes_0 = b"{\xdal\x85\x10j\t\xe2\x1f\x05\xc0\xb8T"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2673():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    list_0 = [object_0]
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2674():
    bytes_0 = b"\xe7\x97\x01\xfa:\x0f\x10\x0c\r\n\x82\xb4=\xc0E!!\xfc"
    int_0 = -848
    list_0 = []
    list_1 = [int_0, int_0, list_0, int_0]
    list_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2675():
    int_0 = -841
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2676():
    bytes_0 = b"\x8f?\x90n\x94"
    int_0 = 1551
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2677():
    bool_0 = False
    module_0.object(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2678():
    str_0 = "e\x0b"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2679():
    str_0 = "p\x0c!R#/q0&*tAg2'k\\\x0c"
    str_1 = "}I~RB&O"
    str_2 = "[Be3F/D=`P"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2, str_0: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2680():
    bool_0 = False
    bytes_0 = b"A\x1f\xe6\x91\xfaX\x84\xe3f"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2681():
    bool_0 = True
    bool_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2682():
    str_0 = "t]!b ^|Zrve%v}I=za^H"
    list_0 = [str_0]
    none_type_0 = None
    str_1 = "s!V@O$="
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: none_type_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2683():
    none_type_0 = None
    dict_0 = {}
    dict_0.write(none_type_0)


def test_case_2684():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2685():
    set_0 = set()
    list_0 = []
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2686():
    str_0 = '\nB`2<L{ZpfE6DA:w")7G'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2687():
    float_0 = 901.52
    tuple_0 = (float_0,)
    int_0 = -2177
    list_0 = [int_0, int_0, int_0, int_0]
    list_1 = [list_0, list_0, int_0]
    list_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2688():
    str_0 = "?2KYsE\t"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2689():
    int_0 = 530
    list_0 = [int_0, int_0, int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2690():
    bool_0 = False
    bytes_0 = b"\x0eG P\x8d\x97jG\x07\xc4!"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2691():
    none_type_0 = None
    int_0 = 1055
    tuple_0 = (int_0,)
    list_0 = [tuple_0, int_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2692():
    bool_0 = True
    bool_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2693():
    bool_0 = False
    bytes_0 = b"\xeb\xd9?>\xb9n\xe6\x16\x97\xcap}z"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2694():
    str_0 = "_{ns\x0cnq\\OtK"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2695():
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0)
    str_0 = ':A]"aU}Mn'
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2696():
    bool_0 = True
    bytes_0 = b"\xae"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2697():
    bytes_0 = b"gD\x06\xdd\x0e\xdb>=H5\xe4\x07k\x0c\x1b"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2698():
    tuple_0 = ()
    set_0 = {tuple_0}
    set_1 = set()
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2699():
    dict_0 = {}
    bytes_0 = b""
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2700():
    none_type_0 = None
    float_0 = 637.815941
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2701():
    str_0 = ",1ILqD$P*G}\x0cbc"
    complex_0 = 375.85209 + 269.74j
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
    }
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2702():
    bytes_0 = b"\xb2_\xf5\xc0n\xad\x11f\xf0\xe8X\xea9\x92\r"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2703():
    none_type_0 = None
    str_0 = "K2\x0b7UASOM%muX|;MX"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2704():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    int_0 = 1241
    str_0 = "KNlf3K7abP~xq$ y-FCK"
    tuple_0 = (bool_0, int_0, str_0)
    tuple_1 = (bool_0, list_0, tuple_0)
    int_1 = 3031
    int_1.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2705():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2706():
    none_type_0 = None
    int_0 = 573
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2707():
    bytes_0 = b"\xa8c\xb5\xd7W"
    list_0 = [bytes_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2708():
    float_0 = 248.0
    module_1.ABC(**float_0)


def test_case_2709():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2710():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


def test_case_2711():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2712():
    int_0 = 378
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2713():
    bytes_0 = b"\xdf\xca\r\x1eK\xe3NI\x85\x87~\xaa"
    int_0 = -14
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2714():
    object_0 = module_0.object()
    set_0 = set()
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2715():
    none_type_0 = None
    str_0 = 'Vq)}+H!">J\r)'
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2716():
    float_0 = -287.0
    set_0 = set()
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2717():
    bool_0 = False
    bytes_0 = b"Oj\xa6\xce\x01qT]@;\x80\xc2!\xf1"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2718():
    str_0 = "a`s]/I`{"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


def test_case_2719():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2720():
    tuple_0 = ()
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2721():
    float_0 = -3153.75
    list_0 = []
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2722():
    bytes_0 = b"N~\xbb5/\xd5"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2723():
    bool_0 = False
    str_0 = ""
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2724():
    object_0 = module_0.object()
    int_0 = -770
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2725():
    a_b_c_0 = module_1.ABC()
    complex_0 = -1113.64 + 732.47261j
    complex_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2726():
    bytes_0 = b"$hE\xbc>6\x89\xb5<y\xd1r\x9e\x92\xa3\x06\t=\x9c"
    complex_0 = -1026.5637 - 481.1749j
    complex_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2727():
    str_0 = "3oQ"
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2728():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    int_0 = 705
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2729():
    bytes_0 = b"\xb0\x96,N\x13\xa8\xd8+\x1f\xf5\xd2"
    module_1.ABC(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2730():
    bool_0 = False
    float_0 = 2406.2
    float_0.write(bool_0)


def test_case_2731():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2732():
    a_b_c_0 = module_1.ABC()
    complex_0 = 23.12038 - 1425.2j
    complex_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2733():
    int_0 = -1825
    set_0 = set()
    set_0.write(int_0)


def test_case_2734():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2735():
    bool_0 = False
    tuple_0 = ()
    tuple_1 = (bool_0, tuple_0, bool_0, bool_0)
    str_0 = "}3)(?gg:h7hk9C@)X]]"
    str_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_2736():
    int_0 = 1034
    module_0.object(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_2737():
    int_0 = 3197
    str_0 = 'YvGI"j/m0cuO\n\\'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    dict_0.write(int_0)


def test_case_2738():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2739():
    bytes_0 = b"\xe0\xed\xcfV\xee"
    set_0 = {bytes_0, bytes_0}
    str_0 = "#c*<h"
    str_1 = ":3"
    object_0 = module_0.object()
    dict_0 = {str_0: set_0, str_1: set_0, str_0: set_0, str_1: object_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2740():
    str_0 = "fkk8G8dr"
    none_type_0 = None
    str_1 = " }\t~~(7./].\\99r"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2741():
    object_0 = module_0.object()
    float_0 = -3056.9158
    float_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2742():
    float_0 = 738.0
    dict_0 = {float_0: float_0, float_0: float_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2743():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = "$>u@"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2744():
    float_0 = -1119.26004
    list_0 = []
    list_0.write(float_0)


def test_case_2745():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2746():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    int_0 = -3166
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2747():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    list_0 = [dict_0, tuple_0]
    int_0 = 521
    int_0.write(list_0)


def test_case_2748():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2749():
    dict_0 = {}
    bytes_0 = b"\x134\xcc\xcf\xae\xae\xb8Z\xad\xb2\x1d\x90\x9b\r \x87\t1"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2750():
    str_0 = "@Jx?G`P;riNAMk F+%U"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2751():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    str_0 = '\n!r ~"\n+&n\nR\x0cw^p'
    str_1 = "o[F:HgK#LzXX"
    dict_0 = {str_0: str_0, str_0: bool_0, str_0: str_0, str_1: list_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2752():
    object_0 = module_0.object()
    complex_0 = -816.8993 + 2431.99j
    complex_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2753():
    object_0 = module_0.object()
    str_0 = "?=dB<%yO\\hL5MqpYS;"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2754():
    object_0 = module_0.object()
    complex_0 = -762.3 + 4068.3j
    complex_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2755():
    bytes_0 = b"+H\x11bD\xb0b\xbdB\x8c\xcb\x08\x19r\x8f\x95\xe4"
    list_0 = []
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2756():
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2757():
    str_0 = "aU"
    str_1 = "p~\r8F_#)t{"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2758():
    bytes_0 = b"\x99\xbbw@\xb7\\C\r\x17;Y\x10P\xcb"
    a_b_c_0 = module_1.ABC()
    tuple_0 = (bytes_0, bytes_0, a_b_c_0)
    tuple_1 = ()
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2759():
    bool_0 = False
    bytes_0 = b"\xbd=\xfc\x8el\xb5x\xb9\xd0-\xca5\xee\xc8\xe8\xa8+"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2760():
    float_0 = -3473.31952
    bool_0 = True
    tuple_0 = (float_0, bool_0, float_0)
    set_0 = {tuple_0}
    bool_1 = True
    bool_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2761():
    int_0 = 4340
    bytes_0 = b"M\xbd\xc4\xb5\x85\x86!\xe7\x92\x88\xada_\xba\x99K\x91\x01"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2762():
    str_0 = "_H3gO\\@4PDD(D(*K"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2763():
    object_0 = module_0.object()
    str_0 = "l>dhF\x0bZq\x0b'J["
    list_0 = [str_0, str_0, str_0]
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2764():
    bytes_0 = b"\xc4\xac\xb9\x1biW\xb2$\xde\xd5\xa9\x1f\x1f"
    list_0 = [bytes_0, bytes_0, bytes_0]
    str_0 = "v(hgWn^m#W3"
    list_1 = [str_0, str_0, str_0, str_0]
    list_2 = [list_1, list_1, list_1]
    list_2.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2765():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2766():
    none_type_0 = None
    list_0 = []
    list_1 = [list_0]
    tuple_0 = (list_0, list_1)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2767():
    float_0 = -2346.3
    set_0 = {float_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2768():
    bytes_0 = b"d\x8d\xcd\\\xa6\x80\xe6\x92.\xb3\x0ex\x9di\xbc\xde"
    int_0 = 31
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2769():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    dict_1 = {}
    object_0 = module_0.object(**dict_1)
    object_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2770():
    none_type_0 = None
    bytes_0 = b"\x1c\xcaL"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2771():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2772():
    list_0 = []
    bytes_0 = b"\xc6p\x01\xea\xee.b\x1e\xf57\x9b"
    tuple_0 = (bytes_0,)
    tuple_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2773():
    str_0 = "(\r4f"
    str_1 = "v\nwbSUuSP)'Aq"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2774():
    none_type_0 = None
    float_0 = 1059.945
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2775():
    list_0 = []
    int_0 = 1352
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2776():
    float_0 = 1903.05
    str_0 = "Efs$h:\r+}/ m.s"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2777():
    int_0 = 923
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2778():
    tuple_0 = ()
    bytes_0 = b"\xf0\xd6|\x83\xdb\xa8\x19\x90i[G\xe6=\x02\x85\x93\xb9\x93\xdc\x98"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2779():
    str_0 = 'w"pe'
    bool_0 = True
    bool_0.write(str_0)


def test_case_2780():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2781():
    bool_0 = True
    set_0 = {bool_0}
    bytes_0 = b"\xdb\x16\xab\xedE{3\xfe|\xcc\xba\x14"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2782():
    list_0 = []
    list_1 = [list_0, list_0]
    str_0 = "%>bU{*'Rqa].L]"
    str_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_2783():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    str_0 = "y{pG+1"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2784():
    bool_0 = True
    bool_1 = False
    list_0 = [bool_0, bool_1, bool_0]
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2785():
    bool_0 = True
    float_0 = -1150.3
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2786():
    str_0 = "p0JyI"
    int_0 = -2324
    int_0.write(str_0)


def test_case_2787():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2788():
    none_type_0 = None
    bytes_0 = b'\x9c\n\xbd\xfb\x13\x03\n\x1bs"\x07\x95\xe7\xd4k\xc3-\x8c\x11'
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2789():
    bytes_0 = b"a^'g\xdb\xacj\xf2e4\xa4u1\x92\x8d1"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2790():
    complex_0 = 527.9636 + 658.6376j
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2791():
    object_0 = module_0.object()
    bytes_0 = b"\xcfs1"
    bytes_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2792():
    int_0 = 3595
    float_0 = 1224.843106
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2793():
    bytes_0 = b"\xb2O\x1e\xa7U\xcc\xc1\xbfq\x1b\xa9\xeb\xe0>"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2794():
    float_0 = 1373.107808
    float_1 = -1040.363351
    list_0 = [float_1, float_1]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2795():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2796():
    none_type_0 = None
    int_0 = 1638
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2797():
    str_0 = "{dLm<3ykb/[P"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    int_0 = 1835
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2798():
    none_type_0 = None
    int_0 = 5349
    tuple_0 = (int_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2799():
    object_0 = module_0.object()
    complex_0 = 787 - 705.206531j
    set_0 = {object_0, complex_0}
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2800():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bool_1 = True
    bool_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2801():
    str_0 = "er?l:Zh"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2802():
    float_0 = -1157.0
    int_0 = -1880
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2803():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2804():
    int_0 = 1611
    set_0 = {int_0, int_0, int_0, int_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2805():
    list_0 = []
    module_1.ABC(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_2806():
    int_0 = 2731
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2807():
    str_0 = "U18t(g\r//\n+!`pIM"
    str_1 = "y"
    a_b_c_0 = module_1.ABC()
    str_2 = "Mc\r5JVv"
    str_3 = "d'^Uw*E\\e Y"
    dict_0 = {str_0: str_0, str_1: a_b_c_0, str_2: str_1, str_3: str_3}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2808():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    bool_1 = False
    set_1 = {bool_1}
    str_0 = ".(^w}^Cc"
    a_b_c_0 = module_1.ABC()
    tuple_0 = (set_1, str_0, a_b_c_0, set_1)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2809():
    none_type_0 = None
    int_0 = 567
    set_0 = {int_0}
    list_0 = [set_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2810():
    str_0 = "}? 4:=\x0b] \x0bwU"
    str_1 = 'X5)\'oxDR"W^"igtK/'
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2811():
    str_0 = "L@O?xfCD>}{c"
    str_1 = ""
    str_2 = "ON<`Ox"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_0, str_2: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2812():
    str_0 = '+\x0cv"\\!I7?<'
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2813():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2814():
    complex_0 = -2208.366763 + 2072.1j
    int_0 = 1450
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2815():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xc4\xad\x04\xdf\xf9p~\x1d\x88Z\xd8\xc6"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2816():
    none_type_0 = None
    object_0 = module_0.object()
    object_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2817():
    none_type_0 = None
    dict_0 = {}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2818():
    bool_0 = True
    float_0 = -1481.25
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2819():
    str_0 = "4 qD;k\\NQ!f\\"
    object_0 = module_0.object()
    object_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2820():
    none_type_0 = None
    tuple_0 = ()
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2821():
    str_0 = "!dZ"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2822():
    str_0 = ""
    int_0 = -156
    set_0 = {int_0, int_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2823():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"z\x81A3\xda\x88\x14c\xf1"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2824():
    complex_0 = 205.4 - 516.976186j
    bool_0 = False
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2825():
    int_0 = -2386
    str_0 = "/wk"
    float_0 = -425.48779
    bool_0 = True
    tuple_0 = (str_0, float_0, bool_0)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2826():
    bool_0 = True
    object_0 = module_0.object()
    list_0 = [bool_0, bool_0, object_0, bool_0]
    module_0.object(*list_0, **object_0)


@pytest.mark.xfail(strict=True)
def test_case_2827():
    bytes_0 = b"X\xc9\x05\xf3\xc5\x85g\x1e=\x82"
    str_0 = ""
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2828():
    bool_0 = True
    str_0 = "j_m&>\teCOY"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2829():
    bool_0 = True
    str_0 = ":"
    list_0 = [str_0, str_0, str_0]
    tuple_0 = (list_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2830():
    int_0 = 726
    str_0 = "cd9# hv::"
    str_0.write(int_0)


def test_case_2831():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_2832():
    bool_0 = False
    int_0 = -320
    tuple_0 = (bool_0, bool_0, int_0)
    bool_1 = False
    list_0 = [bool_1, bool_1, bool_1]
    list_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2833():
    int_0 = 4675
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2834():
    float_0 = -2036.2
    bool_0 = True
    list_0 = [bool_0, bool_0]
    tuple_0 = (bool_0, list_0, list_0)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2835():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    set_0 = {a_b_c_0}
    dict_1 = {}
    dict_1.write(set_0)


def test_case_2836():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2837():
    int_0 = 1670
    set_0 = {int_0}
    str_0 = "*c'|e|5a\x0b-r`/(yX8"
    list_0 = [set_0, set_0, str_0, set_0]
    bytes_0 = b"\xe2\xf8J"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2838():
    float_0 = -1263.983
    tuple_0 = (float_0,)
    float_1 = 2384.377
    float_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2839():
    set_0 = set()
    str_0 = "Q\x0b!>\t!6"
    str_0.write(set_0)


def test_case_2840():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2841():
    bool_0 = False
    list_0 = [bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2842():
    object_0 = module_0.object()
    str_0 = "kKusg6ghsh:LA"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2843():
    int_0 = -903
    complex_0 = -3799.80133 - 5101.7j
    complex_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2844():
    int_0 = -912
    dict_0 = {}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2845():
    bool_0 = True
    str_0 = "z$VId8i1$BG*w"
    list_0 = [str_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2846():
    str_0 = "LD=ZV3,DoHm@kf$$7"
    str_1 = ""
    str_2 = "o$6\tOqu 5|WL+FR"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_2}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2847():
    list_0 = []
    str_0 = "mM`HM#s>g"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2848():
    int_0 = -3291
    str_0 = "X#B=vm>I.x3oh(7!"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2849():
    int_0 = 2347
    int_1 = 1032
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2850():
    float_0 = 288.50354
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    dict_0 = {a_b_c_0: a_b_c_0}
    list_1 = [dict_0, dict_0, list_0, dict_0]
    list_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2851():
    dict_0 = {}
    int_0 = -188
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2852():
    bytes_0 = b"\xe2S\xc0\xa2}\xd3I\xd2\xcd\xf6'\xfc<\xf9Y\xf9_\xd1"
    list_0 = [bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2853():
    int_0 = 4337
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2854():
    str_0 = "w3U'm"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2855():
    bool_0 = True
    tuple_0 = (bool_0,)
    str_0 = "n"
    a_b_c_0 = module_1.ABC()
    tuple_1 = (str_0, a_b_c_0, a_b_c_0)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2856():
    str_0 = ">DA_ \t\x0bcq"
    bytes_0 = b"N\xfb"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2857():
    complex_0 = -1773.0892 + 2517j
    bool_0 = False
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2858():
    str_0 = ",gi'A}d~"
    set_0 = {str_0}
    list_0 = []
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2859():
    bytes_0 = b"\x1c\x87\xd4\x08u\x8fT\xaaG\xb2As\x16\xa3\x1e\xdc\xa4"
    float_0 = -2369.3684
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2860():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    module_0.object(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_2861():
    bool_0 = False
    bytes_0 = b'\xeb\xf0\x07q"\x16\xf6\xca\x12X\xd5\x11l\xb1\x9buvB'
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2862():
    float_0 = -2004.6
    str_0 = ""
    str_0.write(float_0)


def test_case_2863():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2864():
    bool_0 = False
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2865():
    str_0 = "k:rZIoG[fOME5yoR_"
    set_0 = {str_0}
    bytes_0 = b"\x1d\xc2"
    list_0 = [bytes_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2866():
    list_0 = []
    str_0 = "a:2K(l7P64P"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2867():
    int_0 = 821
    complex_0 = 3001.80466 + 1286j
    complex_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2868():
    none_type_0 = None
    float_0 = -247.0169
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2869():
    none_type_0 = None
    int_0 = 2694
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2870():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_1 = {}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2871():
    none_type_0 = None
    int_0 = 1152
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2872():
    str_0 = "0T?N)_^}Ewv,DP^"
    str_1 = "9\t`%\x0c6Mq'dv#a=we{M\\X"
    str_2 = " .2]x8"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1}
    module_1.ABC(**dict_0)


def test_case_2873():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2874():
    bytes_0 = b"\x89\x03"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2875():
    set_0 = set()
    int_0 = 1665
    list_0 = [int_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2876():
    none_type_0 = None
    str_0 = "\r,'G]84[\\W>w!r6J"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2877():
    float_0 = -657.059
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2878():
    str_0 = ""
    set_0 = {str_0, str_0, str_0}
    int_0 = 2136
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2879():
    complex_0 = -2005.3579 + 54.18j
    bool_0 = True
    int_0 = -1183
    tuple_0 = (bool_0, int_0)
    tuple_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2880():
    str_0 = "tpxPGL"
    bool_0 = False
    dict_0 = {str_0: str_0, str_0: str_0, bool_0: str_0}
    bool_1 = True
    bool_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2881():
    complex_0 = -74.89 + 685.169866j
    int_0 = -700
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2882():
    bool_0 = True
    tuple_0 = (bool_0,)
    bool_1 = False
    list_0 = [bool_1, bool_1, bool_1, bool_1]
    list_1 = [list_0, list_0, list_0]
    list_2 = [list_1, list_0, list_0]
    list_2.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2883():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    int_0 = 248
    tuple_0 = (int_0, int_0)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2884():
    object_0 = module_0.object()
    set_0 = set()
    str_0 = "n)>~}SgdS"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2885():
    str_0 = "'sE?`\x0c%ChSBd2t{"
    dict_0 = {str_0: str_0, str_0: str_0}
    bool_0 = False
    bool_0.write(dict_0)


def test_case_2886():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2887():
    none_type_0 = None
    int_0 = 4929
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2888():
    bytes_0 = b"|\xb0b\xd9\xb9\xbfx\x11\x15\xc2\x1c\xb2;\xd7."
    bytes_1 = b"\x8a"
    set_0 = set()
    tuple_0 = (bytes_0, bytes_1, set_0)
    tuple_1 = (tuple_0,)
    bool_0 = True
    object_0 = module_0.object()
    tuple_2 = (tuple_1, bool_0, object_0)
    bool_1 = False
    bool_1.write(tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_2889():
    bool_0 = True
    bytes_0 = b"\x80\x8e\x06WNN\xce"
    list_0 = [bytes_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2890():
    float_0 = 2317.84087
    set_0 = set()
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2891():
    bool_0 = False
    bytes_0 = b"j \xd4G\xe73C\xce:l)3\x02\xb2h\x80"
    list_0 = [bytes_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2892():
    float_0 = 656.1
    str_0 = "#IyOZ;2VT##b|weA_3=G"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2893():
    bytes_0 = b"\x8e\x86\x83"
    set_0 = {bytes_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2894():
    str_0 = "b\t\x0co^Rm%4Ng]Gpo>g.E\\"
    str_1 = "Y..B?6"
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2895():
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()
    set_0 = set()
    set_0.write(a_b_c_1)


@pytest.mark.xfail(strict=True)
def test_case_2896():
    int_0 = -461
    bytes_0 = b"\x0b\x00\x1d\x9a\xb4\x85\x8b\x16^\x81\xfd\xbc\x8c\x1a\x9dNE\xc7"
    set_0 = {bytes_0, bytes_0, bytes_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2897():
    bool_0 = False
    str_0 = 'L2"=0]uc5[O$";g'
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2898():
    str_0 = "^0H__gIkanzxX%[{3'>"
    tuple_0 = (str_0,)
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    a_b_c_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2899():
    bool_0 = True
    int_0 = 1266
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2900():
    none_type_0 = None
    int_0 = -215
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2901():
    bool_0 = True
    str_0 = "$ :D(bAxE\\"
    set_0 = {str_0, str_0, str_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2902():
    str_0 = "&>"
    bool_0 = False
    bool_0.write(str_0)


def test_case_2903():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2904():
    bytes_0 = b"\xcdm\xcf0\x01\xd5\xc8@\x9a\x91"
    bytes_1 = b"%H\xb0\x98\x18\xbb\x18\x15}"
    dict_0 = {bytes_1: bytes_1, bytes_1: bytes_1, bytes_1: bytes_1}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2905():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    list_0 = [set_0]
    str_0 = "`,6i7D|b8D]g%LQVaWl"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2906():
    bool_0 = True
    int_0 = -1156
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2907():
    str_0 = "X*5M\nmQRc\x0c"
    int_0 = -1431
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2908():
    bool_0 = False
    float_0 = -2423.842826
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2909():
    a_b_c_0 = module_1.ABC()
    str_0 = "ap'#He}XOF2@JXW.XX"
    dict_0 = {str_0: str_0}
    dict_1 = {str_0: dict_0, str_0: str_0}
    module_1.ABC(**dict_1)


@pytest.mark.xfail(strict=True)
def test_case_2910():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0}
    float_0 = 1593.2
    set_1 = {float_0, float_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2911():
    complex_0 = -460.5126 - 569.129209j
    int_0 = -1434
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2912():
    none_type_0 = None
    str_0 = "\x0b>`Tz]l\tUC\te@QI0>~I"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2913():
    bytes_0 = b"\xb7#\xb3\xaf\xd0\x1fv\x14\xce\x11\x12\xd1o\xfeti@Z\xa3"
    tuple_0 = ()
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2914():
    bool_0 = False
    float_0 = -2.0
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2915():
    complex_0 = 3858.82629 - 36.3j
    complex_1 = -3129.86 + 3564.955j
    dict_0 = {complex_1: complex_1, complex_1: complex_1}
    dict_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2916():
    set_0 = set()
    int_0 = -399
    set_1 = {int_0, int_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2917():
    bool_0 = True
    int_0 = -5122
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2918():
    tuple_0 = ()
    str_0 = "=UCR\t+=qB}S<"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2919():
    int_0 = 1441
    str_0 = "7F,/)\x0b\t8B|"
    dict_0 = {str_0: str_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2920():
    str_0 = ")m7P0)_Nd$IBWFQy"
    list_0 = []
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2921():
    object_0 = module_0.object()
    complex_0 = 2752.85 - 1597.59j
    complex_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2922():
    bytes_0 = b"\xce"
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2923():
    bool_0 = True
    str_0 = "}"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2924():
    none_type_0 = None
    bytes_0 = b"|\x8f\xb8\x05f\xfauA\x8a\xa9~:\x9b)D\x86\x97\xfb"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2925():
    set_0 = set()
    str_0 = "2)y:<\x0baRjNO5a\\a1\x0b\x0bK}"
    set_1 = {str_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2926():
    bytes_0 = b"\x9c'\xe0\x81\x9a\xec\xbf\xf1\xf1G\xa9"
    bytes_1 = b"([\xce\xc4\xf0\x1fX%\x07B\x17\x8b\xed\xa0\xc9\x9fx"
    list_0 = [bytes_1, bytes_1, bytes_1]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2927():
    dict_0 = {}
    a_b_c_0 = module_1.ABC()
    dict_1 = {a_b_c_0: a_b_c_0}
    bool_0 = True
    tuple_0 = (a_b_c_0, dict_1, bool_0)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2928():
    bytes_0 = b"\x8bD\xe2\x82+V\xd5\x05\xe5'\xc5^"
    bytes_1 = b"\x8b"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2929():
    bool_0 = True
    object_0 = module_0.object()
    int_0 = 2397
    tuple_0 = (object_0, int_0)
    tuple_1 = (object_0, tuple_0, int_0)
    float_0 = 1128.98
    tuple_2 = (tuple_1, float_0)
    tuple_2.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2930():
    none_type_0 = None
    bytes_0 = b"\xa3AI@\xa6zv\x94"
    bytes_0.write(none_type_0)


def test_case_2931():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2932():
    set_0 = set()
    int_0 = -1666
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2933():
    bool_0 = True
    int_0 = 2230
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2934():
    str_0 = "!@Z@G_!RA*\n"
    str_1 = "{)ar\\~J"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2935():
    int_0 = -2351
    list_0 = [int_0]
    bytes_0 = b"9\xfe:S/YZv\x92\xa9"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2936():
    bool_0 = True
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2937():
    bytes_0 = b"Q\xc3\xcc\r#\xe9nk\xcb\xf1\xdf\xf0u8\xc9\x85\xf1\x83S\xc3"
    bytes_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2938():
    int_0 = 2440
    float_0 = -441.2254
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2939():
    list_0 = []
    list_1 = [list_0]
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(list_1)


def test_case_2940():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2941():
    set_0 = set()
    int_0 = 300
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2942():
    int_0 = 1304
    tuple_0 = ()
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2943():
    bool_0 = True
    bytes_0 = b"x\x1b\xf8\xef\x13\xa0V(\xd0\x16\xbeE\x10\\\x9f\x03\xbb"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2944():
    set_0 = set()
    tuple_0 = (set_0,)
    list_0 = []
    list_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2945():
    int_0 = -3207
    complex_0 = -75.81387 + 2545.769j
    complex_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2946():
    none_type_0 = None
    str_0 = "6EL;\\}"
    tuple_0 = (str_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2947():
    bytes_0 = b"&\xf5r\x8d\n\xc7\xaa|\xaa\xc0\x84\xe8\x1d\xc2\x01\xbe;D\x04\x10"
    str_0 = ".R*tVBgH"
    int_0 = 443
    int_1 = -175
    tuple_0 = (str_0, int_0, int_1)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2948():
    float_0 = 273.66026
    str_0 = "pUy\t"
    dict_0 = {float_0: float_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2949():
    bool_0 = False
    list_0 = [bool_0]
    list_1 = [list_0, bool_0, list_0, list_0]
    str_0 = "jl"
    dict_0 = {}
    tuple_0 = (str_0, dict_0)
    tuple_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_2950():
    int_0 = -4893
    int_1 = 1258
    int_1.write(int_0)


def test_case_2951():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2952():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    list_0 = [set_0, set_0, a_b_c_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2953():
    none_type_0 = None
    float_0 = -546.66
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2954():
    str_0 = "t\x0b09P1"
    str_1 = "V,_irxg#}f4(O4 %"
    bool_0 = False
    dict_0 = {str_0: str_0, str_1: str_0, str_0: bool_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2955():
    bytes_0 = b"S\xef\x1f\xf1\xa2\xb1T\xd6_"
    list_0 = [bytes_0, bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_2956():
    none_type_0 = None
    bool_0 = False
    int_0 = -2087
    dict_0 = {bool_0: bool_0, bool_0: int_0, int_0: int_0, bool_0: bool_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2957():
    a_b_c_0 = module_1.ABC()
    int_0 = 1917
    int_1 = -418
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2958():
    none_type_0 = None
    bytes_0 = b"\r\x8a\x0b\x96\x0f\xc5\xe25\x9a\xc6L"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2959():
    str_0 = "R!LfJ1"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2960():
    bool_0 = True
    int_0 = -1702
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2961():
    bool_0 = False
    bytes_0 = b'"\xb4\xea\xa3'
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2962():
    bool_0 = True
    int_0 = 431
    int_1 = -387
    set_0 = {int_0, int_0, int_0, int_1}
    tuple_0 = (set_0,)
    tuple_0.write(bool_0)


def test_case_2963():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2964():
    none_type_0 = None
    bool_0 = False
    tuple_0 = (bool_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2965():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2966():
    int_0 = 3809
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2967():
    float_0 = -2272.391
    int_0 = 5044
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2968():
    str_0 = "+[]v*y;?"
    float_0 = -255.618
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2969():
    bytes_0 = b""
    set_0 = {bytes_0, bytes_0, bytes_0}
    float_0 = 2609.76655
    set_1 = {float_0, float_0, float_0, float_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_2970():
    int_0 = -904
    list_0 = [int_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2971():
    bool_0 = False
    bytes_0 = b"\x84\x90"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2972():
    int_0 = -1607
    object_0 = module_0.object()
    object_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2973():
    none_type_0 = None
    complex_0 = 3046.655 - 4198.568j
    list_0 = [complex_0, complex_0]
    list_1 = [list_0, complex_0, complex_0]
    list_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2974():
    int_0 = -1119
    int_1 = -1509
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2975():
    str_0 = "8z[c[3g2D$Ig4!m"
    bool_0 = True
    tuple_0 = (str_0, str_0, bool_0)
    bytes_0 = b""
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2976():
    bytes_0 = b"\xb7NX\xe6\x13|>\x99\xe6~\x02A\xabo\xb55S{"
    bytes_1 = b"_\x0e\\O\xc8'6"
    set_0 = {bytes_1, bytes_1}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2977():
    none_type_0 = None
    bytes_0 = b"C\xca&ioIT%\xa9Vf\xd5\xcc1\xdfq"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2978():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    str_0 = "##*'\n|,j9[b*#J*jj8"
    dict_0 = {str_0: str_0, str_0: list_0, str_0: str_0, str_0: list_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2979():
    str_0 = "Vug);AF0"
    dict_0 = {}
    a_b_c_0 = module_1.ABC()
    list_0 = [dict_0, a_b_c_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2980():
    bytes_0 = b"@y\xb4\x86\xc7"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2981():
    complex_0 = -2621.100448 + 340.00981j
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    dict_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2982():
    bytes_0 = b"\x1a"
    list_0 = [bytes_0]
    str_0 = "2F"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2983():
    int_0 = -2448
    int_1 = -534
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2984():
    bool_0 = False
    float_0 = -192.414
    float_0.write(bool_0)


def test_case_2985():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_2986():
    set_0 = set()
    bytes_0 = b"\x1e\xe6Z\xc9\nH[\xba"
    list_0 = [bytes_0]
    list_0.write(set_0)


def test_case_2987():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2988():
    complex_0 = -1066.206817 - 880.3j
    module_1.ABC(**complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2989():
    int_0 = 412
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2990():
    bool_0 = False
    bytes_0 = b'\xdc\r"\xfc\xd4\xdf\xb9'
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2991():
    a_b_c_0 = module_1.ABC()
    dict_0 = {}
    dict_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_2992():
    float_0 = 1939.1025
    bytes_0 = b"&Y\xcb\x9f\x95{\xc8\x9e\xf1"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2993():
    int_0 = 1458
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2994():
    float_0 = -24.17434
    int_0 = 2018
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2995():
    a_b_c_0 = module_1.ABC()
    int_0 = 2996
    str_0 = "|&.Go:\x0c"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2996():
    str_0 = "#EQEP_=D*K<\\"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_2997():
    pass


@pytest.mark.xfail(strict=True)
def test_case_2998():
    int_0 = 2576
    set_0 = {int_0}
    int_1 = -2385
    int_2 = 1047
    tuple_0 = (int_2,)
    bytes_0 = b"\r\x8972,\xee\x02\xd7\xad"
    tuple_1 = (int_1, int_0, tuple_0, bytes_0)
    dict_0 = {tuple_1: tuple_1, int_1: tuple_0}
    bool_0 = True
    tuple_2 = (set_0, dict_0, bool_0, dict_0)
    int_3 = 450
    int_3.write(tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_2999():
    set_0 = set()
    float_0 = 3550.86
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3000():
    int_0 = 1443
    bytes_0 = b"\xaf"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3001():
    str_0 = "Vp{\\s?\x0c#Xd Uq"
    int_0 = 1968
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3002():
    none_type_0 = None
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3003():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    int_0 = -783
    list_0 = [int_0, int_0, int_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3004():
    str_0 = "UU92JwapQv^2\r8|~\n7G+"
    list_0 = [str_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3005():
    int_0 = -606
    str_0 = 'pn_D*DFB"3l\nk)?2\tqP'
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3006():
    int_0 = 3569
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3007():
    int_0 = 1898
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3008():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = (bool_0, set_0)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3009():
    bytes_0 = b"\xbe^M@\x1d"
    complex_0 = -501.947 + 782j
    complex_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3010():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3011():
    none_type_0 = None
    complex_0 = -1242.82046 - 135.498j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3012():
    none_type_0 = None
    float_0 = -1061.8
    int_0 = -3604
    tuple_0 = (float_0, float_0, float_0, int_0)
    bytes_0 = b"\xd7\x008\x90\x9d\x90\xe3\x04+\xd7j0S6"
    list_0 = [tuple_0, bytes_0, tuple_0, bytes_0]
    dict_0 = {}
    tuple_1 = (list_0, list_0, dict_0)
    tuple_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3013():
    str_0 = "4iE0*-c8)G~"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3014():
    object_0 = module_0.object()
    list_0 = [object_0]
    list_1 = [list_0, list_0, object_0]
    str_0 = "RQUBIk6\t;Czz#JU"
    str_1 = "PO\x0b}q`A',$-t X\\i;\x0b"
    bool_0 = False
    dict_0 = {str_0: str_0, str_1: bool_0}
    module_0.object(*list_1, **dict_0)


def test_case_3015():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3016():
    bool_0 = True
    bytes_0 = b'\xe1\xed\xc6\xd7\x88F\x8c\x83"\xa8\xb8R\xa3Xe\xe5'
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3017():
    int_0 = 1528
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    str_0 = "_;ug"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3018():
    int_0 = -30
    set_0 = {int_0}
    str_0 = "R?:?)(uN}"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3019():
    int_0 = -2308
    bytes_0 = b"\x93\x90=\x9aRu\xae\x12\x1aVb\x9f\xd9"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3020():
    object_0 = module_0.object()
    float_0 = -425.2
    float_0.write(object_0)


def test_case_3021():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3022():
    bool_0 = False
    int_0 = -622
    set_0 = {int_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3023():
    int_0 = 2470
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3024():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3025():
    none_type_0 = None
    str_0 = " 7V7u-H|^!1hi$w"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3026():
    none_type_0 = None
    bytes_0 = b"=\xd0\xf7\xff\x17N\x12\xe1L\x9fm4s\xe4\xe6\xa17"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3027():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    bool_1 = False
    bool_1.write(dict_0)


def test_case_3028():
    list_0 = []
    object_0 = module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3029():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    bool_0 = True
    bool_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_3030():
    object_0 = module_0.object()
    dict_0 = {object_0: object_0, object_0: object_0, object_0: object_0}
    bytes_0 = b"a\xa1\xa6\xce\xc03:_\xe5{QP\xd0_<"
    int_0 = -81
    bytes_1 = b"\x05\r\xea\xd50\x02M"
    tuple_0 = (bytes_0, int_0, bytes_1, int_0)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3031():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3032():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    list_0 = [bool_0]
    str_0 = "ic!h:SW~#^$:EvA6jn0E"
    dict_0 = {str_0: list_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3033():
    int_0 = -615
    bool_0 = False
    bool_0.write(int_0)


def test_case_3034():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3035():
    int_0 = -61
    bool_0 = False
    bool_1 = False
    tuple_0 = (int_0, bool_0, bool_1)
    tuple_1 = ()
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3036():
    none_type_0 = None
    bytes_0 = b"\xa2"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3037():
    none_type_0 = None
    int_0 = 4594
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3038():
    complex_0 = -2044.9143 - 95j
    bytes_0 = b"\xa4\xd3\xc26"
    bytes_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3039():
    a_b_c_0 = module_1.ABC()
    str_0 = "K{pH Q2.=|S"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3040():
    int_0 = 2060
    set_0 = {int_0, int_0, int_0}
    object_0 = module_0.object()
    object_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3041():
    set_0 = set()
    bytes_0 = b"\xd3%anI\xf1H\xe2\xe2T\xac7\x80\r\xd4\xf3$"
    bool_0 = False
    tuple_0 = (set_0, bytes_0, bool_0)
    complex_0 = -4296.91023 + 56.612j
    set_1 = {complex_0, complex_0}
    set_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3042():
    float_0 = -1831.0045
    module_1.ABC(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_3043():
    int_0 = -1657
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3044():
    str_0 = ";&U:a+"
    module_0.object(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_3045():
    none_type_0 = None
    complex_0 = 890.44682 - 159.20715j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3046():
    bool_0 = False
    set_0 = {bool_0}
    float_0 = 2264.0
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3047():
    none_type_0 = None
    float_0 = -1677.826
    bytes_0 = b"\xc6\xa0`/X\x94\x1c`\x18w\xae\xb3"
    tuple_0 = (float_0, bytes_0)
    tuple_0.write(none_type_0)


def test_case_3048():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_3049():
    str_0 = "3ED0qah,l4SMDD"
    dict_0 = {str_0: str_0}
    bytes_0 = b"\xa4\x16\xa1\x9d\xb9Q\x93\x88\x00\x8a3Z\xfc*\xc3}\xe8\xc4"
    tuple_0 = (bytes_0,)
    tuple_1 = (tuple_0, bytes_0)
    tuple_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3050():
    str_0 = "RP\tUj"
    object_0 = module_0.object()
    set_0 = {object_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3051():
    bytes_0 = b"\xd7E]\x85+\n\xde]\xbc\xd1\x16\x9e\x16\xa3\x1f\xcc_\xb7\xa0\xf4"
    list_0 = [bytes_0]
    bytes_1 = b"k\xea"
    bytes_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3052():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    none_type_0 = None
    module_0.object(*none_type_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3053():
    str_0 = ""
    list_0 = [str_0]
    str_1 = "YgTy~\rao^"
    dict_0 = {str_1: str_1, str_1: str_1}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3054():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    list_1 = []
    list_1.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3055():
    int_0 = 687
    list_0 = [int_0, int_0, int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3056():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    dict_0.write(bool_0)


def test_case_3057():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_3058():
    str_0 = "4d4?|nNO$![ycg\nD|"
    str_1 = "80rA>r7zGe,|"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3059():
    str_0 = "uVa9+['U\x0b@\rVNAxS78.c"
    bytes_0 = b"\xce\x8b\xe3L\\ )\xf9\x01I\xd9,\xe3[\xf5a"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3060():
    bytes_0 = b"\xe9\xecg\xe1\xf9\x00\x96\x97\x9c"
    int_0 = -1965
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3061():
    int_0 = 4068
    float_0 = 1009.53
    float_0.write(int_0)


def test_case_3062():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3063():
    none_type_0 = None
    bytes_0 = b"\x98\xbf:\x9d\xbfwJ\x10\xd0\xb4\xe88^\x81/\x91"
    bytes_0.write(none_type_0)


def test_case_3064():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3065():
    bool_0 = False
    float_0 = -1606.3443
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3066():
    int_0 = 917
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3067():
    str_0 = "~qR*KV:Gcf-l"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


def test_case_3068():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3069():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    bytes_0 = b"\x9c\xc3?\x97Y\x92y\x83=l\xca`)\xd0\xcaO"
    bool_0 = True
    list_0 = [bytes_0, bytes_0, bytes_0, bool_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3070():
    set_0 = set()
    bool_0 = False
    list_0 = [bool_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3071():
    none_type_0 = None
    bytes_0 = b"\xef\xc5\xbf\xa3D4Q\x18}\xe4"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3072():
    int_0 = 2703
    list_0 = [int_0, int_0, int_0, int_0]
    str_0 = "Fxm@<}$\naMT)!~]Iw%$"
    str_1 = "P'"
    str_2 = "BWMPk(r=v"
    dict_0 = {str_0: int_0, str_1: int_0, str_2: list_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3073():
    none_type_0 = None
    int_0 = 1857
    bytes_0 = b"&\x15\x89\xbdO\x8f{\x81\xcch\xff\xc4\xcf\t"
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    tuple_0 = (int_0, bytes_0, list_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3074():
    bool_0 = False
    list_0 = [bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3075():
    bytes_0 = b"4\xa0\xba\x16"
    int_0 = -455
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3076():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3077():
    bytes_0 = b"\x0e\x97\xfa\xf1+\xde@\x02%x\x08i\x19\x1d\x18"
    dict_0 = {}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3078():
    none_type_0 = None
    str_0 = "\rXeH?\x0b\x0b"
    int_0 = -2684
    dict_0 = {str_0: int_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3079():
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()
    set_0 = {a_b_c_1, a_b_c_1, a_b_c_1}
    list_0 = [set_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3080():
    int_0 = -949
    set_0 = {int_0, int_0, int_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3081():
    str_0 = "Dwr%X[J$"
    module_0.object(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_3082():
    none_type_0 = None
    str_0 = ".]"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3083():
    bytes_0 = b"\x04\xc7\x1cT\x0f\x92^\xad\xff\xc3\xf8\x85E"
    bool_0 = False
    str_0 = "3>g+K:9ty0cO"
    tuple_0 = (bytes_0, bool_0, str_0, str_0)
    module_0.object(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3084():
    float_0 = -2009.339938
    str_0 = "JV"
    str_0.write(float_0)


def test_case_3085():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3086():
    float_0 = 192.10709
    str_0 = ">(KL9t~_"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3087():
    str_0 = "\n(>6r65k3`),"
    str_1 = "uM"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3088():
    object_0 = module_0.object()
    module_0.object(**object_0)


@pytest.mark.xfail(strict=True)
def test_case_3089():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    dict_0 = {}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3090():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3091():
    bool_0 = False
    module_1.ABC(**bool_0)


def test_case_3092():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3093():
    str_0 = "WH("
    complex_0 = -226.928988 - 3464.006j
    complex_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3094():
    bytes_0 = b"p\xa3\x85\xb3\x83\x0e\xd2\xec\x00\xf8\x9f\xe75\xb1!\x9aj#\xee"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    int_0 = 784
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3095():
    bytes_0 = b"$\x04^O\xb2\x02#Lp\xb8?Z\x9e\x97X]("
    set_0 = {bytes_0, bytes_0, bytes_0}
    tuple_0 = (bytes_0, set_0, bytes_0)
    a_b_c_0 = module_1.ABC()
    float_0 = -3067.0
    tuple_1 = (a_b_c_0, float_0)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3096():
    complex_0 = 2511.439539 + 3269.5j
    bytes_0 = b"i-"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    set_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3097():
    int_0 = 2368
    dict_0 = {}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3098():
    str_0 = "s9x !#(D(UXm\x0bkI?\r"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3099():
    int_0 = 5959
    tuple_0 = ()
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3100():
    bool_0 = False
    complex_0 = -2313.0439 - 763.3j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3101():
    none_type_0 = None
    float_0 = -1021.077
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3102():
    bytes_0 = b"Q\r\xfc\xff"
    list_0 = [bytes_0]
    str_0 = "j"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3103():
    str_0 = ")^\x0c K)L4cs>"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3104():
    str_0 = "Qf[/tTpShxM&"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3105():
    str_0 = "b0nA{[^T+Lr|**s\x0b=Hdk"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3106():
    int_0 = 2666
    str_0 = "M$8Qyi=n"
    dict_0 = {int_0: int_0, int_0: int_0, str_0: str_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3107():
    int_0 = 3269
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3108():
    str_0 = ']<Sg"QU!FH$Zl3Wy'
    bytes_0 = b"\x18\x13?\xbdb\xc37\xa4\x7f\xf4"
    list_0 = [str_0, bytes_0]
    str_1 = "KqCRIa5?\tGn\\.uFY"
    str_2 = "X"
    dict_0 = {str_1: str_0, str_2: str_2}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3109():
    set_0 = set()
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3110():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3111():
    float_0 = -2581.7543
    float_1 = 672.45199
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3112():
    complex_0 = 769.2654 - 3105.64042j
    float_0 = 730.38
    float_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3113():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3114():
    bool_0 = True
    bool_1 = True
    tuple_0 = (bool_0, bool_1)
    str_0 = "u[d|jg1LGKJ`+lPX"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3115():
    bytes_0 = b"\xd9\x18\x8c\x1a\xe4f\xec\xd8\x18\xc7\xedZC\xe9a\t\x7f\x19"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3116():
    set_0 = set()
    list_0 = [set_0]
    list_1 = []
    a_b_c_0 = module_1.ABC(*list_1)
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3117():
    int_0 = 0
    bytes_0 = b"\xedh\xad\xd3A\xa3"
    tuple_0 = (bytes_0,)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3118():
    bytes_0 = b"*I"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3119():
    list_0 = []
    int_0 = 2813
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3120():
    bool_0 = False
    int_0 = 206
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3121():
    int_0 = -2231
    list_0 = [int_0, int_0, int_0, int_0]
    dict_0 = {}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3122():
    str_0 = ""
    str_1 = "{AmGU:   \x0bwj)q"
    tuple_0 = (str_1,)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3123():
    bytes_0 = b"k\xde\x1fx7\x8b"
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3124():
    str_0 = "';BI8e6w3wQ(gx#EmQT"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3125():
    str_0 = "8,i!9[{WAl*\r<+q"
    int_0 = -2979
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3126():
    str_0 = "z',B|Jo+?^!V=tJ=M,"
    tuple_0 = ()
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3127():
    float_0 = -971.976
    module_1.ABC(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_3128():
    bytes_0 = b"\xb0\xe8Q\xd8"
    dict_0 = {}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3129():
    float_0 = 1798.0
    set_0 = set()
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3130():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3131():
    bool_0 = False
    int_0 = 491
    int_0.write(bool_0)


def test_case_3132():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3133():
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3134():
    bytes_0 = b"\xe8\xf1\xf0\xbc\\GkV\x9b\x1b"
    bytes_1 = b"\xbeW|\xe4\xe8\x7fx\x88="
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3135():
    str_0 = "\r]"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3136():
    str_0 = ":nsW`Fa"
    bytes_0 = b"\xa3\xa1\xc4f-5\xec\xf9K\xf9\xa4\x88\ne\xbc"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3137():
    str_0 = 'I^UE$y`\n"^9kE,c<4 /'
    str_1 = "PJ\nar&./?MukcgH\r)GV"
    str_2 = "D"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3138():
    object_0 = module_0.object()
    complex_0 = 594.89068 - 1305.838j
    complex_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3139():
    none_type_0 = None
    str_0 = "e\\_Pk"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3140():
    str_0 = "}q*WV,4(-xEqT7Z"
    set_0 = {str_0, str_0, str_0, str_0}
    dict_0 = {}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3141():
    float_0 = 1027.0
    bool_0 = True
    bool_0.write(float_0)


def test_case_3142():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3143():
    none_type_0 = None
    bytes_0 = b"W\xe9\xad_*b\xd7\xe3\xed]H\xb9\xec\\\xca"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3144():
    float_0 = -1069.51
    set_0 = {float_0}
    tuple_0 = ()
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3145():
    str_0 = "L"
    list_0 = [str_0]
    module_1.ABC(*list_0, **str_0)


@pytest.mark.xfail(strict=True)
def test_case_3146():
    bytes_0 = b"q\xc3+H\x8d"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3147():
    none_type_0 = None
    float_0 = 376.661673
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3148():
    tuple_0 = ()
    int_0 = -339
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3149():
    bool_0 = False
    module_1.ABC(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3150():
    str_0 = "Cm+(3Xi]5B"
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3151():
    none_type_0 = None
    int_0 = 1308
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3152():
    complex_0 = -1437.52 + 1551.969j
    bytes_0 = b""
    bytes_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3153():
    none_type_0 = None
    int_0 = 668
    dict_0 = {int_0: int_0}
    dict_0.write(none_type_0)


def test_case_3154():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3155():
    none_type_0 = None
    bytes_0 = b"2"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3156():
    none_type_0 = None
    int_0 = 1376
    dict_0 = {int_0: int_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3157():
    bool_0 = True
    int_0 = -2134
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3158():
    str_0 = '"SZ#6:C\tq0l<R'
    none_type_0 = None
    str_1 = "4"
    str_2 = '6"L\x0c6tB'
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
    }
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3159():
    bool_0 = False
    str_0 = "OJM]dIJC"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3160():
    float_0 = -2999.875631
    float_1 = -755.648636
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3161():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bool_1 = False
    bool_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3162():
    none_type_0 = None
    int_0 = -1389
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3163():
    none_type_0 = None
    int_0 = 4526
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3164():
    str_0 = "K."
    bool_0 = True
    dict_0 = {str_0: str_0, str_0: bool_0}
    module_0.object(**dict_0)


def test_case_3165():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3166():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    tuple_0.write(bool_0)


def test_case_3167():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3168():
    bytes_0 = b"i\xb25"
    bytes_1 = b"le\xacW\xa1\xbdw\xe4\x97\x9b"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3169():
    set_0 = set()
    str_0 = "(8Soa\r7>L|GfT\x0b{B"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3170():
    none_type_0 = None
    int_0 = 3728
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3171():
    int_0 = -1306
    int_1 = 144
    int_2 = 2726
    list_0 = [int_1, int_0, int_2, int_0]
    tuple_0 = (int_1, int_2, list_0)
    tuple_1 = (int_0, int_1, tuple_0)
    str_0 = 'E<\\J"@y&1}\x0ckkLX6'
    str_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_3172():
    str_0 = "E F2Hy\x0cH?A}{F:"
    str_1 = 'qS"y[c}BO'
    str_1.write(str_0)


def test_case_3173():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3174():
    str_0 = "=C\t|p@k!w"
    int_0 = -2875
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3175():
    str_0 = "H8`@^\n^TgGf"
    str_1 = "F/1q!>0$\x0b"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3176():
    none_type_0 = None
    int_0 = -1895
    int_0.write(none_type_0)


def test_case_3177():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3178():
    int_0 = -2312
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3179():
    bool_0 = False
    bytes_0 = b"\x1b\xf2j\xf6\x91\xdeoA\x0f\x13\xc7\xcdn',\xb0\xb0\xf5"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3180():
    int_0 = -1288
    str_0 = "vfLLY!\x0c3!"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3181():
    a_b_c_0 = module_1.ABC()
    int_0 = -2523
    tuple_0 = (int_0, int_0)
    tuple_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3182():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    list_0 = []
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3183():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3184():
    int_0 = -895
    int_1 = -1238
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3185():
    none_type_0 = None
    bytes_0 = b"\x11\xfb)\x8d\xb9H-"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3186():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    set_0 = set()
    list_1 = [set_0, set_0, set_0, set_0]
    module_1.ABC(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_3187():
    bytes_0 = b")\xa8(\xfe\xe28\x8b\xa3sWY=\xbe:\x07\x99?@\xd5\x86"
    float_0 = -2521.06
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3188():
    tuple_0 = ()
    bytes_0 = b"="
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3189():
    object_0 = module_0.object()
    float_0 = 2230.0
    float_0.write(object_0)


def test_case_3190():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3191():
    int_0 = -1067
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3192():
    float_0 = -66.33
    float_1 = -2776.6919
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3193():
    bytes_0 = b""
    set_0 = {bytes_0, bytes_0, bytes_0}
    float_0 = -282.0
    set_1 = {float_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3194():
    object_0 = module_0.object()
    str_0 = "\n)yxLI*+O0P"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3195():
    int_0 = -3529
    list_0 = [int_0, int_0]
    bytes_0 = b"\xd0\xc3\xc6l"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3196():
    int_0 = -5191
    float_0 = 1672.12
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3197():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    float_0 = 3906.41
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3198():
    str_0 = "\\5\r`**Z&`\\ydT!w0O\ns,"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3199():
    str_0 = "/{"
    float_0 = -162.29537
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3200():
    bool_0 = True
    bool_1 = True
    dict_0 = {bool_1: bool_1}
    dict_0.write(bool_0)


def test_case_3201():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3202():
    str_0 = "3T-vjpsTg [pu"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3203():
    none_type_0 = None
    int_0 = -5034
    a_b_c_0 = module_1.ABC()
    list_0 = []
    dict_0 = {int_0: int_0, a_b_c_0: a_b_c_0, int_0: int_0, int_0: list_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3204():
    dict_0 = {}
    int_0 = -2242
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3205():
    dict_0 = {}
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    tuple_0 = (a_b_c_0,)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3206():
    bool_0 = True
    bytes_0 = b"\x0e\x9c\x06\xea 7\xed\xb2\x8b\xe2v\x0520"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3207():
    int_0 = -946
    complex_0 = 2091.0361 - 2870.37352j
    complex_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3208():
    bool_0 = True
    str_0 = '{[ojBi"UuFh<:|\n<o'
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3209():
    int_0 = -1652
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0, bool_0)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3210():
    bool_0 = False
    object_0 = module_0.object()
    object_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3211():
    none_type_0 = None
    bytes_0 = b"\xe3\x83Q\xacF\xef\x17\xf3\x92\xfc\xebX\x1bLpLI\x0c"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3212():
    bool_0 = True
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3213():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    bytes_0 = b"\xbdU"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3214():
    bytes_0 = b"z\xf2I\xc0\xce\x87\x84\xa3\xdfXr\x19\xef?\xabF"
    module_1.ABC(*bytes_0, **bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3215():
    object_0 = module_0.object()
    list_0 = [object_0, object_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3216():
    int_0 = 2322
    str_0 = "CRE2r1U8c&yb9'\x0b"
    set_0 = {str_0, str_0, str_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3217():
    int_0 = 2626
    dict_0 = {int_0: int_0}
    int_1 = 1971
    int_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3218():
    bytes_0 = b""
    float_0 = -1123.71
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3219():
    bool_0 = True
    int_0 = 3063
    bytes_0 = b"\x0cC\xe1\xa0a\xcb"
    list_0 = [int_0, bytes_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3220():
    none_type_0 = None
    str_0 = "\t&Rk8&5Un"
    str_1 = "0)rM9I\\s"
    str_2 = "8>:9HL\x0ctM[/]x"
    str_3 = "WA'y"
    list_0 = [str_3, str_2]
    dict_0 = {str_0: str_1, str_2: str_1, str_3: list_0, str_1: str_0}
    module_0.object(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3221():
    bytes_0 = b"\xbb\xe9\x80\x92\x9d+\xd7\x01jA"
    dict_0 = {bytes_0: bytes_0}
    str_0 = "}c+"
    list_0 = [str_0, str_0, str_0, str_0]
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3222():
    bytes_0 = b"jq\xe9h\x87"
    dict_0 = {bytes_0: bytes_0}
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3223():
    bool_0 = False
    complex_0 = 3111.4242 - 1019j
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    bool_1 = True
    str_0 = "QK[J,Qph}h.x(m<"
    tuple_0 = (complex_0, bool_1, str_0)
    tuple_1 = (list_0, bool_1, tuple_0, complex_0)
    tuple_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3224():
    str_0 = "as8ZixH'`,D]F\rGS[x"
    list_0 = [str_0]
    module_1.ABC(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_3225():
    bool_0 = False
    int_0 = -1827
    set_0 = {int_0, int_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3226():
    bytes_0 = b"\x1fu\xd4\x8b\xd9\xe4\xee\xe7\x0cfi5\x9c\x0f9\x8db"
    bytes_1 = b"e]\x9dL\x01\x9a^\xa5\xea}\xd90]\x80z\x10"
    bool_0 = False
    list_0 = []
    tuple_0 = (bytes_0, bytes_1, bool_0, list_0)
    bytes_2 = b"#_\xe0\x95\xda\x1b*\xf3\xb4\xc7\x82\xdfz\xa28B\x92\xb3Bl"
    bytes_2.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3227():
    bool_0 = False
    bool_1 = False
    dict_0 = {bool_1: bool_1}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3228():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    tuple_0 = ()
    set_0 = {bool_0}
    tuple_1 = (a_b_c_0, tuple_0, set_0)
    tuple_2 = (a_b_c_0, bool_0, tuple_1)
    str_0 = "QuKZN5U8/+ ["
    str_0.write(tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_3229():
    bytes_0 = b""
    int_0 = 838
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3230():
    bytes_0 = b"\x05\xa5\xd7\x05\x91"
    bytes_1 = b"\xb8#7\xbe*H\xea+R\xdc"
    float_0 = 1625.0
    bytes_2 = b""
    set_0 = {bytes_2, bytes_1, bytes_1, bytes_1}
    tuple_0 = (bytes_1, float_0, set_0)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3231():
    str_0 = "B..=k?"
    tuple_0 = (str_0,)
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3232():
    bool_0 = True
    str_0 = "*x@/Dib4!cQdq\r0"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3233():
    bytes_0 = b"\x93\xe4\xe7\x8a\xbe\xf7\x87\xad}\xf1"
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3234():
    bool_0 = False
    complex_0 = -792 - 3161.928462j
    bytes_0 = b"\xb01\xda\x81M"
    int_0 = -2561
    tuple_0 = (complex_0, bytes_0, int_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3235():
    none_type_0 = None
    list_0 = [none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3236():
    bool_0 = False
    bytes_0 = b"\xa0\xac\xd6\xe0\xd7\x88\xff4\xf0\x1cy\xef\xf10"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3237():
    bool_0 = True
    str_0 = "yr1}`{Is 8sx8sErGS"
    a_b_c_0 = module_1.ABC()
    str_1 = "VFD$A{lW,YPp"
    str_2 = "m*9cQFj8)k70L4g"
    dict_0 = {str_0: a_b_c_0, str_1: str_0, str_2: bool_0}
    module_1.ABC(*bool_0, **dict_0)


def test_case_3238():
    a_b_c_0 = module_1.ABC()
    dict_0 = {}
    object_0 = module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3239():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    str_0 = "6 ;2 `7KAC2$6\nkP"
    str_1 = "ke:n?oU8ml]t?TQm.f"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: none_type_0, str_0: str_1}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3240():
    complex_0 = 3993.892448 - 4325.2j
    module_1.ABC(*complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3241():
    int_0 = -1860
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3242():
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_1: bool_1, bool_0: bool_0}
    bool_2 = True
    bool_2.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3243():
    none_type_0 = None
    int_0 = 161
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3244():
    int_0 = 867
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3245():
    tuple_0 = ()
    bool_0 = True
    set_0 = {bool_0}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3246():
    int_0 = 3064
    dict_0 = {}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3247():
    complex_0 = -5623.080835 + 2416.081j
    bytes_0 = b"&\xd0\xf9"
    bytes_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3248():
    a_b_c_0 = module_1.ABC()
    int_0 = -2793
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3249():
    float_0 = -1055.0
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    list_0 = [a_b_c_0, bool_0, a_b_c_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3250():
    str_0 = "%$Q!mj~h"
    list_0 = [str_0, str_0, str_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3251():
    none_type_0 = None
    str_0 = "\rU\r%S<\x0b@ 'FV|7o> '"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3252():
    str_0 = "87dS#xjv7k@*"
    str_1 = "n+"
    dict_0 = {str_1: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3253():
    str_0 = "*4{h \rT"
    str_1 = "N,I|N)&:T\\},W$Z]<O<"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3254():
    list_0 = []
    str_0 = "D_b{\x0b6X`.*%t#rMBxif\x0c"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3255():
    bool_0 = True
    object_0 = module_0.object()
    set_0 = {object_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3256():
    bytes_0 = b""
    bool_0 = True
    bool_0.write(bytes_0)


def test_case_3257():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_3258():
    str_0 = "+GOSX$y?$DJ"
    module_0.object(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_3259():
    int_0 = 3134
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3260():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3261():
    bool_0 = True
    bytes_0 = b"\x83\xf1Z\x0fhGr\xb0"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3262():
    none_type_0 = None
    int_0 = 2249
    dict_0 = {int_0: int_0, int_0: int_0}
    tuple_0 = (dict_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3263():
    none_type_0 = None
    module_0.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3264():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    bool_1 = True
    bool_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3265():
    bytes_0 = b"<\xb0\x86YP\xeb\x0bs\xd2[\xc6\x90G\x83"
    str_0 = "L$k2Y0r7\t$96x3)KU #"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3266():
    bytes_0 = b"\xc5\xe8\x0e\x80q\x84\x9a"
    bytes_1 = b"\x80\xaf\x7f\x8e"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_1, bytes_1: bytes_0}
    bytes_2 = b"\x8a\x81\xa3"
    bytes_2.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3267():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    module_0.object(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3268():
    float_0 = -2624.9835
    a_b_c_0 = module_1.ABC()
    set_0 = set()
    str_0 = "oo7[67;n "
    bool_0 = True
    tuple_0 = (a_b_c_0, set_0, str_0, bool_0)
    list_0 = [tuple_0, a_b_c_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3269():
    bool_0 = False
    int_0 = -1440
    bytes_0 = b"<\xd0'\xdf\xf7gW\xab\xa1\xd9]MY"
    dict_0 = {bool_0: bool_0, bool_0: bool_0, int_0: bool_0, bytes_0: bytes_0}
    object_0 = module_0.object()
    object_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3270():
    str_0 = "}-7'#\\.k4/^#"
    str_1 = "P?OF+"
    str_2 = 'oJF"7[im4PU~fp0,wZMn'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_1, str_2: str_1}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3271():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    bool_0 = False
    bool_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3272():
    bool_0 = True
    set_0 = {bool_0}
    bool_1 = False
    bytes_0 = b"\xc6*\xde\x10\x9fJ\x80\xfdwcs\x0e"
    set_1 = {bool_1, bytes_0, bytes_0, bytes_0}
    tuple_0 = (bool_1, bytes_0, set_1)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3273():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    tuple_0 = (set_0,)
    bytes_0 = b"\xfe\x9c\x1e"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3274():
    str_0 = "BY5f[avvtgO"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3275():
    str_0 = "1aM1~(6DK[p(6H/$Vz"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3276():
    bytes_0 = b"\r\\l\xa4M4f\xb9l\x10\xd1\xa5\xfb\x18\\C"
    bool_0 = True
    list_0 = [bool_0]
    str_0 = "0\nHdCi"
    tuple_0 = (str_0,)
    bool_1 = False
    tuple_1 = (list_0, tuple_0, bool_1)
    tuple_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3277():
    none_type_0 = None
    list_0 = []
    bool_0 = True
    list_1 = [list_0, bool_0]
    list_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3278():
    none_type_0 = None
    bytes_0 = b"\xb1\x06\xfc\x14\x10\xb1r\xef\xd6\x98\x99\x08eZ2%\xa0\xda"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3279():
    object_0 = module_0.object()
    int_0 = -1657
    set_0 = {int_0, int_0, int_0}
    bool_0 = True
    tuple_0 = (set_0, bool_0)
    tuple_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3280():
    none_type_0 = None
    bytes_0 = b"\x94"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3281():
    int_0 = -204
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0]
    tuple_0 = (a_b_c_0, a_b_c_0, list_0)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3282():
    str_0 = "\t+H,1^LP#'"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3283():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    int_0 = -1365
    dict_1 = {int_0: int_0, int_0: int_0, int_0: int_0}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3284():
    float_0 = 765.0
    int_0 = -66
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3285():
    int_0 = 3309
    int_1 = -443
    list_0 = [int_0, int_0, int_1, int_1]
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = (set_0,)
    tuple_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3286():
    float_0 = -525.0
    str_0 = "ZJ(+HgD[SxzzD#L C=/\\"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3287():
    float_0 = -1219.39572
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3288():
    bytes_0 = b"\x9d\xc9y\x07"
    float_0 = -1833.0
    float_0.write(bytes_0)


def test_case_3289():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3290():
    object_0 = module_0.object()
    str_0 = ">SX3W]bfCYJR#+ pA"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3291():
    bytes_0 = b"\x90\x04\x13|\xe3<}\xb88\x8a\xfd\t6a\xe7"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3292():
    str_0 = "8*kZAxIQ7.^A"
    int_0 = 549
    int_0.write(str_0)


def test_case_3293():
    pass


def test_case_3294():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3295():
    none_type_0 = None
    bool_0 = True
    list_0 = [bool_0, bool_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3296():
    set_0 = set()
    list_0 = [set_0, set_0]
    dict_0 = {}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3297():
    bool_0 = True
    int_0 = -252
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3298():
    bool_0 = False
    str_0 = "f,'VR,FC\nM$s+gC1"
    str_1 = "'0Wt-n!NZ_"
    str_2 = "[1\tf\x0bmW,;I.tRXo+b"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: bool_0, str_0: str_2}
    module_0.object(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3299():
    bool_0 = False
    complex_0 = 334.2953 + 3872.98635j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3300():
    dict_0 = {}
    bool_0 = True
    list_0 = [dict_0, bool_0]
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3301():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    bytes_0 = b"B0\xd0\x0e\xef/\x8e\xd1"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3302():
    bytes_0 = b"hH"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3303():
    str_0 = "gE\x0cyY\n0l\x0c5faNP"
    tuple_0 = ()
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3304():
    float_0 = 289.9602
    object_0 = module_0.object()
    object_0.write(float_0)


def test_case_3305():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3306():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    int_0 = 2271
    set_0 = {int_0, int_0, int_0, int_0}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3307():
    bytes_0 = b"\xa02y\xf4`\xba\xb8\x84#\t%\xbdy\xa6\xa8\xcc\x95\xe8"
    float_0 = 183.774305
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3308():
    float_0 = 2940.612
    bytes_0 = b"\x13>\xd3PIL\x12\x08zu\r"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3309():
    a_b_c_0 = module_1.ABC()
    str_0 = "YbaorQ^r"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3310():
    float_0 = 436.9558
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3311():
    dict_0 = {}
    a_b_c_0 = module_1.ABC()
    dict_1 = {a_b_c_0: a_b_c_0}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3312():
    str_0 = ":)+{!;&n@HG'["
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3313():
    object_0 = module_0.object()
    str_0 = "t"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3314():
    str_0 = "EX60I@(V9g"
    set_0 = {str_0, str_0, str_0, str_0}
    bytes_0 = b"rF\x8b\xfd2\xcdMq\xd2\xfa\x81s\x0f"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3315():
    tuple_0 = ()
    bool_0 = True
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, bool_0: tuple_0}
    str_0 = ":"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3316():
    none_type_0 = None
    str_0 = "Hwi\x0c\x0bB{?^;,"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3317():
    float_0 = 4795.0
    dict_0 = {float_0: float_0, float_0: float_0}
    str_0 = "2Z"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3318():
    bool_0 = False
    str_0 = "i;$@="
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3319():
    list_0 = []
    str_0 = "c}K5/amJI_sG"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3320():
    bytes_0 = b"j\x8fD\xda_\r35\xceH\x10\xe9"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3321():
    none_type_0 = None
    str_0 = 'S1pLf("e_}U>X\t'
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3322():
    bool_0 = False
    module_0.object(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3323():
    none_type_0 = None
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3324():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"~\x13"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3325():
    str_0 = "4\tU{*QZ\rh=?\x0cdKK$>S"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3326():
    none_type_0 = None
    tuple_0 = ()
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3327():
    bytes_0 = b"\xf7\xe9\xe91\xc2\x8a13\x18"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    str_0 = "\x0cI{t\x0c-y"
    str_1 = "D+EP+\x0bKo\\j&h[bY!w"
    dict_0 = {str_0: bytes_0, str_1: str_1, str_0: list_0, str_0: str_1}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3328():
    none_type_0 = None
    int_0 = 1050
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3329():
    str_0 = "`ZNa-jj#+ O@Y->]v"
    str_1 = "%N#]??b\ng{eF"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3330():
    int_0 = -2000
    str_0 = "8W"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3331():
    list_0 = []
    int_0 = 173
    int_0.write(list_0)


def test_case_3332():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3333():
    int_0 = -836
    bytes_0 = b"<\xa7\xbc\xcc"
    bytes_0.write(int_0)


def test_case_3334():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3335():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    float_0 = 1465.65
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3336():
    list_0 = []
    str_0 = "f})k!4W?h8"
    dict_0 = {str_0: str_0}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3337():
    complex_0 = -2448.369 + 4958.5j
    int_0 = 1688
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3338():
    bool_0 = False
    list_0 = [bool_0]
    bytes_0 = b"\x03\xdb"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3339():
    bool_0 = False
    int_0 = 956
    list_0 = [int_0, int_0]
    list_0.write(bool_0)


def test_case_3340():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3341():
    set_0 = set()
    int_0 = -1542
    set_1 = {int_0, int_0}
    list_0 = [set_1, set_1]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3342():
    int_0 = -494
    int_1 = 1188
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3343():
    bool_0 = False
    bool_0.write(bool_0)


def test_case_3344():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3345():
    str_0 = "$& 3`"
    list_0 = [str_0]
    object_0 = module_0.object()
    object_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3346():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    dict_0 = {}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3347():
    none_type_0 = None
    int_0 = 2677
    list_0 = [int_0, int_0, int_0, int_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3348():
    bool_0 = True
    int_0 = 1559
    tuple_0 = (int_0,)
    str_0 = "D\x0b>"
    list_0 = [tuple_0, str_0, tuple_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3349():
    str_0 = "tw8T\x0cf2glQOP`"
    float_0 = -1849.84
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3350():
    none_type_0 = None
    int_0 = -2340
    int_0.write(none_type_0)


def test_case_3351():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3352():
    int_0 = 77
    int_1 = -1409
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3353():
    bool_0 = False
    int_0 = 2258
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3354():
    complex_0 = -2486.11 + 1957.489784j
    int_0 = 211
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3355():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    bool_1 = False
    bool_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3356():
    str_0 = "UEi(+V.V"
    int_0 = -151
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3357():
    str_0 = '%\r<c"\rU1:9$m/\x0cq}'
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3358():
    none_type_0 = None
    str_0 = "\x0c^hp1MYBi:0)Me"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3359():
    a_b_c_0 = module_1.ABC()
    dict_0 = {}
    bool_0 = True
    list_0 = [dict_0, bool_0, bool_0, dict_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3360():
    none_type_0 = None
    bytes_0 = b"sL\xbd\x19\x0c]~"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3361():
    bool_0 = False
    int_0 = 21
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3362():
    list_0 = []
    object_0 = module_0.object()
    object_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3363():
    int_0 = 2640
    set_0 = {int_0, int_0}
    str_0 = "pCaE"
    tuple_0 = (int_0, set_0, str_0)
    complex_0 = -3493.43521 + 790.151j
    complex_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3364():
    bool_0 = False
    float_0 = 446.767478
    float_0.write(bool_0)


def test_case_3365():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3366():
    bytes_0 = b"v\x1b\xd2"
    list_0 = []
    tuple_0 = (bytes_0, list_0)
    int_0 = -3500
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3367():
    none_type_0 = None
    float_0 = 1749.07
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3368():
    str_0 = "(pDrGO}?yO0\td!p"
    dict_0 = {str_0: str_0}
    int_0 = 3249
    set_0 = {int_0, int_0}
    list_0 = [set_0, set_0]
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3369():
    none_type_0 = None
    float_0 = 398.39167
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3370():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3371():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3372():
    int_0 = 771
    list_0 = [int_0, int_0]
    list_1 = [list_0, list_0, list_0]
    set_0 = set()
    set_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3373():
    bool_0 = False
    float_0 = 2867.579518
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3374():
    complex_0 = 5264.4 - 895.18999j
    bool_0 = False
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3375():
    none_type_0 = None
    float_0 = -2310.679
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3376():
    bool_0 = False
    none_type_0 = None
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3377():
    str_0 = "`k5YMo\tO3\ru*=h053yp"
    str_1 = "i~-M2(&b^bX%"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3378():
    float_0 = 2928.0
    tuple_0 = ()
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3379():
    str_0 = "M&C"
    bytes_0 = b"7\x05\xafE\xccu\xe1\x0f\xd4P"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3380():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3381():
    a_b_c_0 = module_1.ABC()
    str_0 = "z/)o343F+z&.'9^AC'Z)"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3382():
    int_0 = 755
    tuple_0 = ()
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3383():
    str_0 = "k.}\x0c"
    float_0 = 1171.363813
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3384():
    none_type_0 = None
    int_0 = 431
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3385():
    a_b_c_0 = module_1.ABC()
    float_0 = 209.3
    float_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3386():
    bool_0 = True
    bool_1 = False
    list_0 = [bool_1, bool_1, bool_1]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3387():
    none_type_0 = None
    set_0 = set()
    tuple_0 = (set_0, set_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3388():
    list_0 = []
    module_0.object(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_3389():
    none_type_0 = None
    int_0 = -2024
    list_0 = [int_0, int_0, int_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3390():
    none_type_0 = None
    float_0 = -1800.829
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3391():
    bytes_0 = b"\xac\xfe\x86\xbd\xd5\xe2\xa3\xd6L\x91"
    bytes_1 = b"4\xf2\xd7\xf1\xc1q\xb4\xd5\x10J\xf3\xa7\xf0"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3392():
    str_0 = "~"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_3393():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_3394():
    float_0 = 1300.0
    str_0 = "O;R%bJ_"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3395():
    none_type_0 = None
    str_0 = "HXk5q Y"
    str_1 = "ZXV..p(g\no`e^yP("
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: str_0}
    module_1.ABC(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3396():
    int_0 = 802
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3397():
    str_0 = "Aj\\jb'~@l\t\tdsMz#"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3398():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3399():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3400():
    dict_0 = {}
    list_0 = [dict_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3401():
    str_0 = ' \x0cC-"PTc^'
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3402():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3403():
    bool_0 = True
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3404():
    none_type_0 = None
    complex_0 = -1285 + 876.161075j
    bool_0 = False
    dict_0 = {
        complex_0: complex_0,
        bool_0: complex_0,
        complex_0: complex_0,
        complex_0: bool_0,
    }
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3405():
    float_0 = 62.52856
    list_0 = [float_0, float_0, float_0]
    tuple_0 = (float_0, list_0)
    list_1 = [tuple_0, tuple_0, float_0, tuple_0]
    tuple_1 = ()
    tuple_1.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3406():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3407():
    bool_0 = True
    str_0 = '\x0b^UhwCu5x<ES?"\\u+Fs@'
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3408():
    bool_0 = False
    int_0 = 591
    dict_0 = {bool_0: int_0}
    list_0 = []
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3409():
    none_type_0 = None
    float_0 = 1089.5
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3410():
    bool_0 = True
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3411():
    none_type_0 = None
    str_0 = "uo)9q#dpHF"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3412():
    bool_0 = True
    str_0 = "uw</x#Wl\rj(%.d~"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3413():
    str_0 = "YDq\rya~;"
    float_0 = 3224.0
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3414():
    float_0 = -1188.06
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3415():
    bytes_0 = b"o8\x80I'5\xeb9\xfdT\xe8\xe6+\xc2\xb7 J\xd9\xfdQ"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3416():
    int_0 = 739
    str_0 = "\x0bGS$BYq\x0c"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3417():
    tuple_0 = ()
    bytes_0 = b"&*ct\xf9\x1a\xe3\x80%d:}\x89\x07\xf3&"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3418():
    str_0 = "03\tN,u\\+3_"
    none_type_0 = None
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3419():
    none_type_0 = None
    str_0 = "ZOq,&|8SF9El<"
    float_0 = 84.614
    object_0 = module_0.object()
    set_0 = {str_0, float_0, object_0, float_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3420():
    bool_0 = True
    str_0 = "s7*bjopwu7I_uYR="
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3421():
    bytes_0 = b"2\x1f\x85Q\x12\x97`\xe0\xd6"
    int_0 = -657
    set_0 = {int_0, int_0, int_0, int_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3422():
    none_type_0 = None
    float_0 = -1157.56
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3423():
    int_0 = -685
    bool_0 = True
    set_0 = {bool_0, bool_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3424():
    none_type_0 = None
    float_0 = 1898.2995
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3425():
    set_0 = set()
    dict_0 = {}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3426():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"G2"
    list_0 = [a_b_c_0, a_b_c_0, bytes_0]
    a_b_c_1 = module_1.ABC()
    a_b_c_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3427():
    float_0 = -271.0
    str_0 = 'Ae&bj1OU`\x0cf"|SOI7'
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3428():
    tuple_0 = ()
    int_0 = 872
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3429():
    bool_0 = False
    complex_0 = -2131.82 - 968.4384j
    list_0 = [complex_0, complex_0, complex_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3430():
    bool_0 = True
    int_0 = 180
    bytes_0 = b"\xdeai\xf3S\xd56\xf1E;80\x1a\x93\xa9\xc9\x0f"
    tuple_0 = (int_0, bytes_0)
    set_0 = {tuple_0, tuple_0, bytes_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3431():
    bool_0 = False
    bytes_0 = b"\xfdN\xa5\xc5$5\x1aR"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3432():
    int_0 = -1119
    int_1 = 4644
    list_0 = [int_1, int_1, int_1]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3433():
    tuple_0 = ()
    float_0 = 1304.83337
    list_0 = [float_0, float_0, float_0]
    list_1 = [list_0, list_0]
    list_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3434():
    bool_0 = False
    bool_1 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    tuple_0 = (bool_0, bool_1, set_0)
    int_0 = -796
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3435():
    float_0 = 3009.0
    bool_0 = True
    bool_0.write(float_0)


def test_case_3436():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3437():
    str_0 = "VWz~VQ\rtuZ"
    str_1 = ":\tqvo\x0b{e%i"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3438():
    none_type_0 = None
    complex_0 = -1220.5953 + 1215j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3439():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3440():
    bytes_0 = b"\x13\xce\x12F\xbee\x97L\x9d\x1b"
    module_1.ABC(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3441():
    a_b_c_0 = module_1.ABC()
    int_0 = 3539
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3442():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3443():
    str_0 = "o|*Xb D9z}e7`Z08AJ"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3444():
    bytes_0 = b"\xf2\xd4\xe0\xf7\xbb%\xf0\x93m\x07r,\xa4\xeao\xd2"
    int_0 = -936
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3445():
    object_0 = module_0.object()
    bytes_0 = b"\x88\xbf`\xef\x86;"
    str_0 = "JTBY6=I$`s"
    dict_0 = {str_0: bytes_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3446():
    int_0 = -3706
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3447():
    str_0 = "T"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3448():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    bool_0 = False
    tuple_1 = (dict_0, bool_0, dict_0)
    str_0 = "\tH\x0bdvh"
    str_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_3449():
    bytes_0 = b"2\xcf^\x97\xe4\x11+I\x03\xa4\x81\x0e\xa6\x12\x8b"
    str_0 = "^Pq.7Y)7]\x0c\x0bWUN2Pc%%\t"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3450():
    str_0 = ""
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3451():
    complex_0 = 2188.0041 + 717.98j
    set_0 = {complex_0}
    int_0 = -3780
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3452():
    object_0 = module_0.object()
    tuple_0 = (object_0,)
    set_0 = {tuple_0, object_0, object_0, tuple_0}
    object_1 = module_0.object()
    list_0 = [object_1, object_1, object_1, object_1]
    list_1 = [list_0, list_0, list_0, list_0]
    list_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3453():
    str_0 = "5id\\+}3Ip=G:G\\~VLQg"
    a_b_c_0 = module_1.ABC()
    tuple_0 = (str_0, a_b_c_0, a_b_c_0)
    bool_0 = False
    tuple_1 = (tuple_0, str_0, bool_0)
    int_0 = -1438
    int_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_3454():
    bool_0 = False
    float_0 = 747.214
    set_0 = {float_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3455():
    float_0 = -190.063811
    bytes_0 = b"\xad\x8e"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3456():
    none_type_0 = None
    str_0 = "6y\\8apD"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3457():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    int_0 = -63
    int_0.write(list_0)


def test_case_3458():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3459():
    a_b_c_0 = module_1.ABC()
    float_0 = -2324.0221
    float_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3460():
    none_type_0 = None
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, dict_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3461():
    int_0 = 270
    str_0 = "'Px:m;,~>\r8hk!6`0E"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3462():
    object_0 = module_0.object()
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    set_0 = {tuple_0, a_b_c_0, tuple_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3463():
    dict_0 = {}
    int_0 = 108
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3464():
    str_0 = "`@arPPS\x0bK\t"
    str_1 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3465():
    bytes_0 = b"\xf6M\xfc3K\x15\xd2\xa3;4p"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    module_1.ABC(*dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3466():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    int_0 = -2055
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3467():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3468():
    complex_0 = -587 - 3626.314j
    int_0 = 867
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3469():
    a_b_c_0 = module_1.ABC()
    str_0 = "g<Pfc23[!\n3>45u]"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3470():
    list_0 = []
    object_0 = module_0.object(*list_0)
    int_0 = -1089
    list_1 = [int_0, int_0, int_0]
    list_1.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3471():
    none_type_0 = None
    set_0 = set()
    str_0 = 'g9:=*)v?#ro%_QbQ"'
    tuple_0 = (set_0, str_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3472():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3473():
    int_0 = -162
    bytes_0 = b"\xb8T\x0e\xcf\x8b\x1c\x81\x04\x17\x14\xdc\xb2\xef"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3474():
    str_0 = "# e+H;wk@oHO|"
    int_0 = 658
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3475():
    int_0 = -4722
    complex_0 = -1235.44826 - 1766.5j
    complex_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3476():
    bool_0 = True
    str_0 = "&d&XQ0XFum(6;Wr"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3477():
    none_type_0 = None
    int_0 = 1515
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3478():
    str_0 = "^u"
    int_0 = -176
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3479():
    float_0 = 3545.93
    float_0.write(float_0)


def test_case_3480():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3481():
    none_type_0 = None
    int_0 = -1850
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3482():
    str_0 = "$fnR;u"
    list_0 = [str_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3483():
    bytes_0 = b"o8\xd3\xabi\\qlmS\xc7D2\xe2\xed"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3484():
    tuple_0 = ()
    none_type_0 = None
    list_0 = [tuple_0, tuple_0, tuple_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3485():
    int_0 = 2085
    float_0 = 3191.813
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3486():
    str_0 = ""
    dict_0 = {str_0: str_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3487():
    none_type_0 = None
    float_0 = 3546.0
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3488():
    complex_0 = -1670 - 1107.855j
    bool_0 = True
    tuple_0 = (bool_0,)
    complex_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3489():
    object_0 = module_0.object()
    str_0 = "uJy=oLWmK,A"
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (dict_0,)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3490():
    bool_0 = False
    bytes_0 = b"\x1e\xeb.}\x8d\xee\xb6\xfb\xff%\x0fc\xe58\xdb\xfe\xc9\x94\x03"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3491():
    none_type_0 = None
    bytes_0 = b"\t\xff\xa8~I"
    list_0 = []
    object_0 = module_0.object(*list_0)
    set_0 = {bytes_0, bytes_0, object_0, object_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3492():
    bytes_0 = b'\xe59"D\xb30\x00\xa7\xfd/\x92\xd0/\x97<\xfc\x07zc\x0f'
    bool_0 = True
    bool_0.write(bytes_0)


def test_case_3493():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3494():
    bool_0 = False
    int_0 = 2611
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3495():
    bool_0 = True
    str_0 = "`d6w}#1"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3496():
    bool_0 = False
    float_0 = -2600.1071
    set_0 = {float_0, float_0, float_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3497():
    str_0 = ")F+x@B"
    str_1 = " 9vpu2"
    list_0 = [str_1]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3498():
    none_type_0 = None
    str_0 = "H-|-<}\x0c/?Va:"
    int_0 = -2020
    set_0 = {str_0, str_0, int_0, str_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3499():
    none_type_0 = None
    bytes_0 = b"\xbd\x90\xa7\x8b\xfeT\x99"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3500():
    none_type_0 = None
    int_0 = -2781
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3501():
    a_b_c_0 = module_1.ABC()
    str_0 = "h\tE Sjx;/6PeD6S4"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3502():
    none_type_0 = None
    int_0 = -1587
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3503():
    int_0 = 1514
    bool_0 = False
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_1, bool_1: bool_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3504():
    bool_0 = True
    float_0 = -3593.278
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3505():
    object_0 = module_0.object()
    list_0 = [object_0, object_0]
    object_1 = module_0.object()
    object_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3506():
    bool_0 = False
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3507():
    bool_0 = False
    bool_1 = False
    bool_2 = True
    set_0 = {bool_1, bool_1, bool_1, bool_2}
    list_0 = [set_0, bool_1, bool_2, bool_1]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3508():
    none_type_0 = None
    bytes_0 = b"3/\x9b"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3509():
    str_0 = "FlT#9h'-2d.\r?ofZF zc"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_3510():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3511():
    bool_0 = True
    bool_1 = True
    set_0 = {bool_0, bool_1, bool_1, bool_0}
    module_1.ABC(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_3512():
    none_type_0 = None
    str_0 = "U(3S=`\t2<cwP\r2~p"
    str_1 = "FC!OLI,0gnJ}|\r:I"
    set_0 = {str_0, str_1, str_0, str_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3513():
    bytes_0 = b"\x8b\x03\xd4\xb9rP\x055\x0fy\xa9\xee\xefj\xa9\x86"
    str_0 = "c$/~U\x0bsXU{UK1n)b5"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3514():
    int_0 = -301
    float_0 = 2347.14995
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3515():
    bytes_0 = b"G\x87\xd0\x8e!\xd4H\xc2\xa7]\x1c\xcb#\xa8@\x03"
    str_0 = "\x0cH&oh=*_oZ"
    str_1 = "xHJuR,"
    bool_0 = True
    tuple_0 = (str_0, str_1, bool_0)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3516():
    bool_0 = False
    dict_0 = {}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3517():
    dict_0 = {}
    str_0 = "ULX6s r\nu<D\\~K~_')"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3518():
    int_0 = 3497
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3519():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3520():
    set_0 = set()
    bytes_0 = b"\xcd\xf9\xa0\x92\x9f\xff\xc4\xae\x80g\x03\xb3\x93\xac\x89O"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3521():
    list_0 = []
    str_0 = "uT#@fd:+/arY;s]G[:M"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3522():
    float_0 = 2025.01389
    set_0 = set()
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3523():
    bytes_0 = b"\xdfc\xa1M\x0b\\U|"
    list_0 = [bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3524():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    module_1.ABC(*object_0, **object_0)


@pytest.mark.xfail(strict=True)
def test_case_3525():
    bool_0 = True
    str_0 = 'W8Tl;bja{>\x0cZioUXx"'
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3526():
    str_0 = "`-@S>eQ@J20|USAg_"
    str_1 = "[.L[#k[esE"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3527():
    bytes_0 = b"\xb3\xd4\xd2\xa6\xdb\xef\x151\x997\xea\xf0\xa2"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3528():
    dict_0 = {}
    float_0 = 2238.0
    list_0 = [float_0, float_0, float_0]
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3529():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    bool_1 = True
    list_0 = [bool_1, bool_1, bool_1, bool_1]
    list_0.write(set_0)


def test_case_3530():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3531():
    bytes_0 = b"u\xbd_\xb3_R\xddZ$\x8b"
    int_0 = 1365
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3532():
    str_0 = "je2>%"
    bytes_0 = b"\r+\xa3>\x80\x19|c\xf4"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3533():
    float_0 = 755.448
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3534():
    object_0 = module_0.object()
    str_0 = "wlOG4o$H*47T,%"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3535():
    none_type_0 = None
    float_0 = 1909.38199
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3536():
    str_0 = "MVTY9fWg<r"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3537():
    bytes_0 = b"|\x96\xe5\xad\xda\xae\xa3\x01\xe3\x95"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3538():
    float_0 = -25.704737
    str_0 = "%B_(8Y^8$&KOC"
    set_0 = {str_0}
    tuple_0 = (str_0, set_0)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3539():
    bytes_0 = b"\xf4\xa3\xb7\xaf\x9dI\xed\xec\x9a\xac<\xcf\xa6"
    bool_0 = False
    bool_0.write(bytes_0)


def test_case_3540():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3541():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3542():
    bytes_0 = b"\xb8\xb5\x93/!5"
    str_0 = ""
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3543():
    int_0 = 92
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    bool_1 = True
    tuple_0 = (set_0, bool_1)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3544():
    bytes_0 = b"\xe7Z\xe0\x17$\x00\x05\x01\x95<2"
    str_0 = "f#o[AQjMUa/#H.e!,}?"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3545():
    bool_0 = False
    list_0 = []
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: list_0, bool_0: bool_0}
    float_0 = -3084.97798
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3546():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3547():
    bytes_0 = b"`\xce\xe1{p \x05V\xf6WUX-\xea\xb7Nc\x07"
    str_0 = "oQV86H&U,\rR:`f\\u"
    str_1 = "aRLJ\tn"
    set_0 = {str_0, str_1, str_1, str_0}
    set_0.write(bytes_0)


def test_case_3548():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3549():
    bool_0 = True
    str_0 = "rOvqOfr_:F"
    tuple_0 = (bool_0, str_0)
    int_0 = -2337
    set_0 = {int_0, int_0}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3550():
    float_0 = 2048.39
    bool_0 = True
    bool_0.write(float_0)


def test_case_3551():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3552():
    int_0 = -1087
    dict_0 = {}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3553():
    bytes_0 = b"\xb6\x9c"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3554():
    complex_0 = -603.11855 + 2216.5771j
    bytes_0 = b"o\xcb\xeb\x8e{\xe5%o\xf6\x8a\xb7\x12/\x00"
    bytes_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3555():
    str_0 = "j~n`e}"
    none_type_0 = None
    str_1 = "$*@C6msX)\rB\r:(O;~Uz`"
    str_2 = "Wx#A`o-J@i\x0cr|!8HI,"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_2: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3556():
    none_type_0 = None
    int_0 = 2014
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3557():
    int_0 = -4054
    float_0 = -1389.1991
    object_0 = module_0.object()
    set_0 = {float_0, object_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3558():
    bool_0 = True
    bool_1 = False
    list_0 = [bool_1, bool_1]
    list_1 = [list_0]
    list_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3559():
    none_type_0 = None
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3560():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3561():
    str_0 = "qsb44g*i2J?K"
    set_0 = {str_0}
    float_0 = -2272.31285
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3562():
    bool_0 = False
    str_0 = "&k,uQ#\\."
    str_0.write(bool_0)


def test_case_3563():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3564():
    str_0 = "+:FD\neHV>s#"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3565():
    str_0 = "5Au:/_f\x0cW~?9)5s>04"
    str_1 = "52p\x0bba!+p->+a4&>W 7\r"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3566():
    bytes_0 = b"\xe3\x11p2\xc4s("
    set_0 = {bytes_0, bytes_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3567():
    str_0 = "Db78:~e)6"
    int_0 = 2212
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3568():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    int_0 = -819
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3569():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3570():
    int_0 = 621
    tuple_0 = (int_0,)
    list_0 = [tuple_0, int_0, int_0]
    str_0 = "d*."
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3571():
    bool_0 = False
    float_0 = 3259.35743
    list_0 = [float_0, float_0, float_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3572():
    int_0 = -1219
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3573():
    none_type_0 = None
    int_0 = 2074
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3574():
    str_0 = "j:9gS>sm"
    none_type_0 = None
    str_1 = "'`=:otR0 p$"
    str_2 = "\rjy3Ix?Sr?~\\Hb3"
    str_3 = "HCA)]6\nfJ-d_rH*"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_3: none_type_0,
    }
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3575():
    int_0 = -1886
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3576():
    bytes_0 = b"\xfd\x04\x14\xfb\xa5=\xd3\xaf\xa5I]i\xc3x"
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3577():
    bytes_0 = b"K\xb6-\x98\x81T\xec\x8cXz$z"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3578():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    int_0 = -1110
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3579():
    float_0 = -911.715
    tuple_0 = (float_0,)
    bool_0 = True
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3580():
    int_0 = -216
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3581():
    bool_0 = True
    str_0 = "n4a"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3582():
    int_0 = -1393
    list_0 = [int_0]
    module_1.ABC(*list_0, **int_0)


@pytest.mark.xfail(strict=True)
def test_case_3583():
    bool_0 = True
    bytes_0 = b"jh\xff\x01\x7fU\x8a\xdec\xe5W\xe6\xd3*"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3584():
    a_b_c_0 = module_1.ABC()
    complex_0 = -1313.813782 - 1759.25j
    set_0 = {complex_0}
    set_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3585():
    none_type_0 = None
    object_0 = module_0.object()
    set_0 = {object_0, object_0, object_0, object_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3586():
    float_0 = -538.0
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3587():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3588():
    none_type_0 = None
    int_0 = -228
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3589():
    float_0 = -1586.544
    list_0 = [float_0]
    module_1.ABC(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_3590():
    str_0 = "LH~Yp\rKvz\\Hwvf*\x0b\nW"
    set_0 = {str_0}
    bytes_0 = b"\xbc\x0b\xb7\x14\x88\xb8"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3591():
    set_0 = set()
    list_0 = [set_0, set_0, set_0]
    float_0 = 173.60153
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3592():
    str_0 = "MnXl}0g|8N(q"
    set_0 = {str_0, str_0}
    tuple_0 = ()
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3593():
    float_0 = 372.666
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3594():
    bytes_0 = b"\x12\x7f\xe6\xfeG\xbbz\x0c\x03\xf2^"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3595():
    bool_0 = False
    list_0 = [bool_0]
    list_1 = [list_0, bool_0, bool_0, list_0]
    module_0.object(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_3596():
    bytes_0 = b"]\x0cD\xde\xefp\xfb\x98\xbd\xb6X\x12\xc3\xbc\x01\x85\xb1;\x94\xd4"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3597():
    int_0 = -308
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\x16\xa3"
    tuple_0 = (int_0, a_b_c_0, bytes_0)
    bool_0 = True
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3598():
    bool_0 = False
    str_0 = "0i-BJb\rNBmu"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3599():
    float_0 = -2751.360183
    int_0 = -1867
    bool_0 = True
    dict_0 = {int_0: int_0, int_0: int_0, bool_0: int_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3600():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3601():
    int_0 = 612
    str_0 = "IAR,f"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3602():
    a_b_c_0 = module_1.ABC()
    int_0 = 1378
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3603():
    int_0 = -310
    str_0 = ",zn5xE]YZ$a;F@c,"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3604():
    int_0 = -1967
    bytes_0 = b"\xc2m&4"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3605():
    bool_0 = True
    bool_1 = False
    bool_1.write(bool_0)


def test_case_3606():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_3607():
    list_0 = []
    bool_0 = True
    bool_0.write(list_0)


def test_case_3608():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3609():
    float_0 = -7560.5
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3610():
    bytes_0 = b"\xd0\x0b\x9e\xef\xea\xfd\xd8\xdd\x13;]\xe7\xf0c\xe1\x1b{"
    int_0 = 2001
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3611():
    object_0 = module_0.object()
    int_0 = 1319
    list_0 = [object_0, int_0]
    bool_0 = False
    list_1 = [bool_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3612():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_0, bool_0, bool_1)
    set_0 = {tuple_0, bool_0, tuple_0}
    list_0 = [set_0, bool_0, set_0, set_0]
    bool_2 = True
    bool_2.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3613():
    str_0 = "\t|ODw)'0$'&2ZX"
    int_0 = -758
    list_0 = [int_0, int_0, int_0, int_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3614():
    float_0 = 4373.1625
    int_0 = 815
    int_0.write(float_0)


def test_case_3615():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3616():
    bool_0 = False
    float_0 = -4721.201181
    bytes_0 = b"\xfc\xf1\x9e\xe8\x8es\xe3\xefz\x96EH\x1d;\x03\x1eG:"
    dict_0 = {bool_0: bool_0, float_0: bytes_0, float_0: float_0}
    bool_1 = False
    list_0 = [dict_0, bool_1, bool_0]
    tuple_0 = (list_0, bool_1)
    bool_2 = False
    bool_2.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3617():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    str_0 = 'p1),GZ\rc"\t4%NQ'
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3618():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3619():
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0, object_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3620():
    int_0 = 1300
    bytes_0 = b"\xa1\x95\xf5\x9d\x87E\x8a\xc7"
    bytes_0.write(int_0)


def test_case_3621():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3622():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\x95*\xdf\x0en:P"
    module_1.ABC(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3623():
    bool_0 = False
    int_0 = 3116
    tuple_0 = (int_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3624():
    float_0 = -977.632
    bool_0 = False
    tuple_0 = (float_0, bool_0, float_0, float_0)
    tuple_1 = ()
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3625():
    float_0 = -923.42894
    int_0 = 430
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3626():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    int_0 = 1339
    int_0.write(a_b_c_0)


def test_case_3627():
    a_b_c_0 = module_1.ABC()


def test_case_3628():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3629():
    object_0 = module_0.object()
    float_0 = 603.095
    float_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3630():
    set_0 = set()
    int_0 = -675
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3631():
    bool_0 = False
    str_0 = "J,\\z3"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3632():
    bool_0 = True
    module_0.object(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3633():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    str_0 = "z-{.dvCM"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3634():
    bool_0 = False
    bool_1 = False
    list_0 = [bool_0, bool_1, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3635():
    bool_0 = True
    bytes_0 = b"\x941\xa5\xb3.\xbfk"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3636():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    int_0 = 1757
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3637():
    bool_0 = True
    tuple_0 = (bool_0,)
    str_0 = '3"v qo'
    list_0 = [str_0]
    list_0.write(tuple_0)


def test_case_3638():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3639():
    int_0 = 4216
    list_0 = [int_0, int_0, int_0, int_0]
    float_0 = -1920.44722
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3640():
    none_type_0 = None
    str_0 = "Ems/j#KjoF_<]"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3641():
    a_b_c_0 = module_1.ABC()
    str_0 = "L'zo0[$y_r*4|1Lh@"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3642():
    set_0 = set()
    module_1.ABC(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_3643():
    none_type_0 = None
    bytes_0 = b"\x9b\xc2\x18\xff\x0f\x81\xaa\xa1\xb1M\xe3J\x99"
    a_b_c_0 = module_1.ABC()
    tuple_0 = (bytes_0, a_b_c_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3644():
    int_0 = 735
    int_1 = -3389
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3645():
    none_type_0 = None
    str_0 = "(v>ueS"
    str_0.write(none_type_0)


def test_case_3646():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3647():
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    list_0 = [tuple_0, tuple_0, tuple_0, a_b_c_0]
    str_0 = "za"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3648():
    none_type_0 = None
    bytes_0 = b"\xc5\x8c\xf7\xd1\xc7\xfc"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3649():
    bool_0 = True
    int_0 = -664
    list_0 = [int_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3650():
    object_0 = module_0.object()
    int_0 = 27
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3651():
    bool_0 = False
    str_0 = 'bSN"U;LFz\x0c$B16&c,'
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3652():
    a_b_c_0 = module_1.ABC()
    float_0 = 782.0
    module_0.object(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_3653():
    a_b_c_0 = module_1.ABC()
    str_0 = "\x0csWK73,(6Z+X"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3654():
    complex_0 = 830 + 678j
    module_1.ABC(**complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3655():
    int_0 = -1625
    bool_0 = False
    bool_0.write(int_0)


def test_case_3656():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_3657():
    int_0 = -2939
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3658():
    float_0 = 4044.5402
    str_0 = "D*fI'(S5p*>y5dOT`]\\U"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3659():
    bool_0 = False
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3660():
    int_0 = 878
    tuple_0 = ()
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3661():
    str_0 = "01\ra"
    none_type_0 = None
    str_1 = "A_}$Xpw1xe>I/vK(\r{t7"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3662():
    bool_0 = False
    complex_0 = -1572.6 - 542.9j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3663():
    none_type_0 = None
    bytes_0 = b"fN\xb0B\xd7qK\xf1"
    dict_0 = {bytes_0: bytes_0}
    tuple_0 = (bytes_0, dict_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3664():
    str_0 = "!4F&62qM"
    module_0.object(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_3665():
    str_0 = 'l+:\x0cCY"8SGx'
    bytes_0 = b"\xa0]\x8b\x95t\x85\nj\xa6\x02\xf3B\r}\xab"
    bytes_0.write(str_0)


def test_case_3666():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3667():
    float_0 = 734.74
    complex_0 = 395.991175 - 4194.6238j
    dict_0 = {complex_0: complex_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3668():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (dict_0,)
    int_0 = -255
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3669():
    list_0 = []
    str_0 = "-khE-9u~Io"
    dict_0 = {str_0: str_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3670():
    int_0 = -3421
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    float_0 = -455.27
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3671():
    bool_0 = False
    bytes_0 = b"\x11\x8d\xeaC\xb4\x9e\xe3"
    tuple_0 = (bool_0, bool_0, bytes_0)
    bool_1 = False
    bool_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3672():
    bool_0 = False
    int_0 = 3283
    list_0 = [int_0, int_0, int_0]
    tuple_0 = (int_0, list_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3673():
    int_0 = 672
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3674():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    bool_1 = False
    tuple_0 = (list_0, bool_0, bool_0, bool_1)
    tuple_1 = (tuple_0,)
    tuple_2 = (tuple_1,)
    bool_2 = False
    bool_2.write(tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_3675():
    str_0 = "-t&9tBTCPJ:tKU_"
    bool_0 = True
    set_0 = {bool_0, bool_0}
    str_1 = "6\x0bu/pb'+$k\n"
    tuple_0 = (set_0, str_1)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3676():
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_1: bool_1, bool_1: bool_1, bool_1: bool_1, bool_1: bool_1}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3677():
    str_0 = ',9`~E$Gd_W)"RX6yEB'
    str_1 = "\n\r"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3678():
    none_type_0 = None
    str_0 = "iPx"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3679():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    bytes_0 = b"\xbax8\xf7\x95\xac\xf4F\xbf\x81F\xa9'"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3680():
    none_type_0 = None
    int_0 = 4710
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3681():
    object_0 = module_0.object()
    list_0 = [object_0, object_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3682():
    int_0 = -1659
    list_0 = [int_0]
    dict_0 = {}
    list_1 = [dict_0, dict_0, dict_0, dict_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3683():
    none_type_0 = None
    complex_0 = -1749.7662 - 228.3905j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3684():
    dict_0 = {}
    bytes_0 = b"Fv{\x1bS~\xfd\xba\xb6\xd8\xf9\xde"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3685():
    bytes_0 = b"\xe7\xbb\x1b8\x08b\xd8=j\xff\xdd"
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3686():
    list_0 = []
    str_0 = "9+J([3:c\ng:PIQ=j,!R9"
    tuple_0 = (str_0,)
    tuple_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3687():
    a_b_c_0 = module_1.ABC()
    complex_0 = -450 + 1668.92104j
    complex_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3688():
    object_0 = module_0.object()
    bytes_0 = b"\x9b\xd6\xe9TW~(\xd1[d\x9d\x1a\xbf\x0b\xfe\xed\xa5\x07"
    bytes_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3689():
    list_0 = []
    object_0 = module_0.object(*list_0)
    int_0 = -2209
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3690():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3691():
    float_0 = 1901.8305
    float_1 = 2193.454306
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3692():
    dict_0 = {}
    str_0 = "C/P[]|mHv;a"
    bytes_0 = b""
    set_0 = {str_0, bytes_0, bytes_0, bytes_0}
    complex_0 = 639 - 3103.5j
    tuple_0 = (set_0, complex_0, bytes_0, complex_0)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3693():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bool_1 = True
    bool_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3694():
    none_type_0 = None
    float_0 = -43.77
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3695():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    float_0 = 1368.403
    tuple_0 = ()
    tuple_1 = (bool_0, bool_0, bool_0, tuple_0)
    tuple_2 = (bool_0, list_0, float_0, tuple_1)
    str_0 = '#-`|x`1?h{zf{YPwV "P'
    str_0.write(tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_3696():
    complex_0 = 263.691 - 819.28365j
    str_0 = "\naH)"
    str_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3697():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3698():
    str_0 = " X N<4j"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3699():
    none_type_0 = None
    str_0 = "8'%"
    str_1 = "(o"
    str_2 = "|*1H[>C-gsS*^KZH#o`"
    str_3 = "B1;gfZ+\x0b"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_2: none_type_0, str_3: str_3}
    module_1.ABC(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3700():
    str_0 = ":q:Z&jvX"
    str_1 = "~&#gbOL?0K0}s-Y8*V'"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3701():
    float_0 = -1897.23
    tuple_0 = ()
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3702():
    int_0 = -1262
    tuple_0 = (int_0,)
    str_0 = "\n9O=g?&iEUXC9"
    str_0.write(tuple_0)


def test_case_3703():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3704():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3705():
    bool_0 = True
    str_0 = "G#="
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3706():
    int_0 = 1401
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3707():
    none_type_0 = None
    int_0 = -1661
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3708():
    complex_0 = -2197.6 - 1839.85j
    list_0 = [complex_0, complex_0]
    dict_0 = {}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3709():
    set_0 = set()
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3710():
    none_type_0 = None
    str_0 = "dC \\\x0bIs|3"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3711():
    str_0 = "O2PpRzr,_WI5X):V"
    int_0 = -1082
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3712():
    bool_0 = False
    int_0 = -3018
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3713():
    int_0 = 993
    set_0 = {int_0, int_0, int_0}
    set_1 = set()
    tuple_0 = (set_1,)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3714():
    none_type_0 = None
    complex_0 = 369 + 443.592202j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3715():
    a_b_c_0 = module_1.ABC()
    str_0 = "cq"
    list_0 = [str_0, str_0, str_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3716():
    bytes_0 = b"{\x16\xc5\xecMc\xa3,#\xc61\xc0\x83X\xb2\xe7"
    int_0 = -1312
    int_0.write(bytes_0)


def test_case_3717():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3718():
    bool_0 = True
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3719():
    int_0 = -1663
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3720():
    bytes_0 = b".m\xf9\xe0_;f\x8b"
    set_0 = {bytes_0, bytes_0, bytes_0}
    str_0 = "JO/.T e3v!"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3721():
    int_0 = -558
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3722():
    float_0 = -2214.4
    str_0 = "4Z\r\\rkQ4)"
    dict_0 = {str_0: str_0, str_0: str_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3723():
    str_0 = "o^XZ\x0bx!qw*MK["
    module_0.object(*str_0)


@pytest.mark.xfail(strict=True)
def test_case_3724():
    bytes_0 = b"[M\xfe\xcf\xaa\xc1\xf0\x1e\xc0\x1c\x8eo\xf2{\x15"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3725():
    bool_0 = True
    tuple_0 = (bool_0,)
    str_0 = "[vxK=dv'43|(4"
    tuple_1 = ()
    set_0 = {bool_0, tuple_0, tuple_1, tuple_1}
    list_0 = [set_0, str_0]
    tuple_2 = (tuple_0, str_0, set_0, list_0)
    int_0 = 1259
    tuple_3 = (tuple_2, int_0, tuple_0)
    bool_1 = False
    bool_1.write(tuple_3)


@pytest.mark.xfail(strict=True)
def test_case_3726():
    bool_0 = True
    list_0 = [bool_0]
    str_0 = "jLG[$N\n#{s]av7ki"
    dict_0 = {str_0: list_0}
    module_0.object(*list_0, **dict_0)


def test_case_3727():
    pass


def test_case_3728():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3729():
    none_type_0 = None
    object_0 = module_0.object()
    list_0 = [object_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3730():
    bytes_0 = b"/T>\xff\xe5\xb7S\xad\xce5\xef\xb6"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3731():
    none_type_0 = None
    int_0 = 2414
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3732():
    none_type_0 = None
    bytes_0 = b"`"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3733():
    none_type_0 = None
    bytes_0 = b"\x05UOG+8L\x94\x9d\x00\xe7\t\xfc\xb3\xf6a\xd0\x1e\xe1\xa2"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3734():
    bool_0 = True
    bytes_0 = b"\x82\x0b'\x038k9v\xd6\x06\xfb\x08\x8d."
    set_0 = {bytes_0, bytes_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3735():
    a_b_c_0 = module_1.ABC()
    str_0 = "a0Q3a\x0cxOtT"
    float_0 = 253.47
    str_1 = "&K D("
    dict_0 = {str_0: str_0, str_0: str_0, str_0: float_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3736():
    bytes_0 = b"M\x02\x9c\x84\xeb\xdc\xed\xf8D|a\xdc\x8d\x83Pv"
    float_0 = -495.57
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3737():
    none_type_0 = None
    bytes_0 = b"!D\xb5\x1a\xb0\x1b1"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3738():
    none_type_0 = None
    bytes_0 = b"\xb7\xd5\xd9\xbag\x11\xd65\xdf"
    complex_0 = -1413 + 598j
    tuple_0 = (bytes_0, complex_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3739():
    none_type_0 = None
    str_0 = "E["
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3740():
    bool_0 = True
    tuple_0 = (bool_0,)
    bool_1 = False
    set_0 = {bool_1, bool_1, bool_1}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3741():
    bytes_0 = b"P\xff\x17!\xc9\xbf\xa3:\xee\xb7\x0b\xc6O\x12w\x14Q\xfc\x9f\x1b"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3742():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    list_0 = [a_b_c_0, a_b_c_0, bool_0, bool_0]
    list_1 = [list_0]
    set_0 = set()
    set_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3743():
    object_0 = module_0.object()
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3744():
    str_0 = "I"
    str_1 = "}[x((j^Yis2=%Q"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3745():
    str_0 = "5@{+DLsY<,YvS@a|o*w"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bytes_0 = b"\x9f"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3746():
    bytes_0 = b"\xfc\xdaK"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = ()
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3747():
    str_0 = "\nY7"
    set_0 = set()
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3748():
    none_type_0 = None
    bytes_0 = b"K\xbaI\xc5h\xcb\xe9\xd5\x08/\xa8"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3749():
    float_0 = -5740.014
    int_0 = 196
    int_0.write(float_0)


def test_case_3750():
    pass


def test_case_3751():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3752():
    none_type_0 = None
    float_0 = -595.7293
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3753():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3754():
    str_0 = "s\r\t>(^\\ZW\t}n%s2g"
    bytes_0 = b"\x10["
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3755():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    str_0 = "2?#;Uh@a8"
    str_1 = "yJ{"
    dict_0 = {str_0: list_0, str_1: none_type_0, str_1: str_1, str_0: str_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3756():
    bool_0 = False
    float_0 = 295.258
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3757():
    int_0 = 571
    int_1 = 262
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3758():
    none_type_0 = None
    int_0 = -2271
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3759():
    list_0 = []
    list_1 = [list_0, list_0]
    module_1.ABC(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_3760():
    str_0 = "\n"
    set_0 = {str_0, str_0}
    int_0 = -387
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3761():
    none_type_0 = None
    complex_0 = -1612.09633 + 4561j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3762():
    bool_0 = False
    bytes_0 = b"\xc5\xc7\xd4"
    set_0 = {bytes_0, bytes_0, bytes_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3763():
    float_0 = -235.753
    str_0 = "=\r<qf|dZ`"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3764():
    str_0 = "{-EqfOe"
    set_0 = {str_0}
    list_0 = [set_0]
    int_0 = -3040
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3765():
    str_0 = "O~d3k[?\x0c"
    bool_0 = True
    bool_0.write(str_0)


def test_case_3766():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3767():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    float_0 = 2312.3
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3768():
    bytes_0 = b"\xb5\x98\x8c\xa4\x1e"
    str_0 = '4\x0c"?U0)83L=Ig'
    str_1 = ";fz%V#\x0c/#q\rWs\x0bcA`W)"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_1}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3769():
    bytes_0 = b"\xaa\xed7"
    dict_0 = {bytes_0: bytes_0}
    str_0 = ')N8|yz*4X-9.3"j+'
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3770():
    bool_0 = False
    int_0 = 156
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3771():
    int_0 = -585
    int_1 = 2571
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3772():
    int_0 = 3450
    list_0 = [int_0]
    dict_0 = {int_0: int_0, int_0: list_0}
    list_1 = [dict_0, dict_0]
    module_1.ABC(*list_1, **list_1)


@pytest.mark.xfail(strict=True)
def test_case_3773():
    none_type_0 = None
    bytes_0 = b"\xcd\xba\xc42-\x18,\x99\xef\xa6~\xfaF\x98"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3774():
    none_type_0 = None
    dict_0 = {}
    tuple_0 = (dict_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3775():
    bool_0 = False
    int_0 = 67
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3776():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3777():
    none_type_0 = None
    bytes_0 = b"\\\r"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3778():
    bool_0 = False
    str_0 = "2|\tD\nJW3e64Rtei7p,"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3779():
    bytes_0 = b"\xd7h\xb8\xda\xf9\x97\x81\xf6$\xd8P$\xcb\xe1r\x86q"
    list_0 = [bytes_0]
    tuple_0 = ()
    tuple_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3780():
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    str_0 = ";EA>vZ>\x0b.*h"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3781():
    str_0 = ""
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3782():
    str_0 = "o\x0b"
    str_1 = "\nCO!"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3783():
    bool_0 = True
    set_0 = {bool_0}
    dict_0 = {}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3784():
    int_0 = -1047
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3785():
    bool_0 = True
    list_0 = [bool_0]
    bool_1 = True
    dict_0 = {bool_1: bool_1}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3786():
    int_0 = 3107
    tuple_0 = ()
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3787():
    int_0 = 2311
    int_1 = -2850
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3788():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    float_0 = 1655.681
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3789():
    str_0 = "twKWB"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3790():
    int_0 = -336
    tuple_0 = (int_0, int_0)
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3791():
    bytes_0 = b"\xf8\x04\x11E9\xe7\xf8\x1b\xfa\x81C\xbd\x88;\xb0\xcf"
    list_0 = [bytes_0, bytes_0]
    float_0 = -444.47
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3792():
    str_0 = "Y{\x0b6_}\tU"
    bytes_0 = b"\x9b\xc1J\xd5&\xce"
    bytes_0.write(str_0)


def test_case_3793():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3794():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3795():
    set_0 = set()
    bytes_0 = b"\xc4\xaf>\xab\xb7\xad\xaf\xe2\xbf\xe5W;zjS\x1a'\xf0"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3796():
    none_type_0 = None
    str_0 = "j5"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3797():
    bool_0 = True
    bool_1 = True
    dict_0 = {bool_0: bool_0, bool_1: bool_0}
    str_0 = "tOY#i_2"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3798():
    none_type_0 = None
    str_0 = "w*+-7"
    list_0 = [str_0, str_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3799():
    bytes_0 = b"+\xe4!A\xb8\x83\xc1\x8c#\xe1\xab\xd2!\xf7\x8c\xd0\xbbH"
    object_0 = module_0.object()
    dict_0 = {
        bytes_0: object_0,
        bytes_0: object_0,
        object_0: bytes_0,
        object_0: object_0,
    }
    bytes_1 = b"=<\x01\xa3?\x1eL\xee\xa9aQp\x17\xde"
    bytes_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3800():
    int_0 = -912
    int_1 = -702
    object_0 = module_0.object()
    set_0 = {int_1, object_0, int_1, int_1}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3801():
    int_0 = -3841
    dict_0 = {int_0: int_0}
    list_0 = [dict_0]
    bool_0 = False
    bool_0.write(list_0)


def test_case_3802():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3803():
    bool_0 = True
    int_0 = -735
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3804():
    object_0 = module_0.object()
    str_0 = "uf6\x0c\nP_&Px:q-qvP="
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3805():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    str_0 = 'v("y|h'
    bool_1 = True
    dict_0 = {str_0: bool_1, str_0: bool_1}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3806():
    str_0 = "2bX.qP;Br:`\\tK"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3807():
    str_0 = "DP^bD|x^X\nN|7m;A"
    tuple_0 = (str_0,)
    int_0 = 2858
    list_0 = [int_0, int_0, int_0]
    list_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3808():
    none_type_0 = None
    float_0 = 1044.0
    set_0 = {float_0, float_0, float_0, float_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3809():
    set_0 = set()
    complex_0 = -3210.1844 - 2203.969039j
    complex_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3810():
    float_0 = -211.62
    set_0 = {float_0}
    bytes_0 = b";\x97&~\xa0a\xeceo#\x17rP\x02\xd4\xae\n\xc2\x0fk"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3811():
    bool_0 = False
    int_0 = 683
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3812():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3813():
    none_type_0 = None
    complex_0 = -3422.925595 + 3904.3j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3814():
    none_type_0 = None
    float_0 = 224.6
    tuple_0 = (float_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3815():
    int_0 = -1955
    module_0.object(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_3816():
    complex_0 = 1235.10279 - 1066.28j
    bool_0 = True
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3817():
    object_0 = module_0.object()
    str_0 = 'MAw0q54>qU"'
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3818():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"f\xf4cp?8\x10\x982\x00\xde\xb2$\x97\xf5r"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3819():
    dict_0 = {}
    object_0 = module_0.object(*dict_0)
    bool_0 = True
    bool_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3820():
    bool_0 = True
    str_0 = "ZML%e^n*9] G"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3821():
    bool_0 = False
    int_0 = 522
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3822():
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3823():
    tuple_0 = ()
    float_0 = 4261.28646
    float_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3824():
    complex_0 = 2618.723073 - 3128.061445j
    bytes_0 = b"\xdf,\xe5\\"
    bytes_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3825():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    tuple_0 = (dict_0,)
    tuple_1 = (a_b_c_0, tuple_0)
    tuple_2 = (a_b_c_0, a_b_c_0, dict_0, tuple_1)
    tuple_2.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3826():
    str_0 = "\tbz}Y1>H."
    list_0 = []
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3827():
    float_0 = -1262.0092
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3828():
    none_type_0 = None
    int_0 = -4395
    int_0.write(none_type_0)


def test_case_3829():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3830():
    int_0 = -1170
    list_0 = [int_0, int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3831():
    int_0 = -1526
    int_1 = 758
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3832():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    complex_0 = 268.189 - 2592.153178j
    complex_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3833():
    int_0 = -220
    float_0 = 646.15
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3834():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    float_0 = 98.763
    list_0 = [float_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3835():
    none_type_0 = None
    bytes_0 = b"_\x85\xc5\xb3\xaf\xa7jj\xa5y"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3836():
    set_0 = set()
    int_0 = -3809
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3837():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    float_0 = -3178.815
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3838():
    str_0 = "V~|!8u0w$OC"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3839():
    int_0 = -3235
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    int_1 = -113
    int_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3840():
    int_0 = -142
    int_1 = -1994
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3841():
    bytes_0 = b"\xe2\xc4\x8d'\x10\xa9"
    int_0 = 1188
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3842():
    object_0 = module_0.object()
    str_0 = 'cvg!*%7"\t0up]u7%Znwf'
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3843():
    complex_0 = 1161.5 + 725.17808j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    tuple_0 = (dict_0,)
    int_0 = -159
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3844():
    float_0 = -541.08
    float_1 = -364.56967
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3845():
    bytes_0 = b'\x81Xd\xce"7\x13b'
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3846():
    bytes_0 = b"\x8e"
    object_0 = module_0.object()
    object_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3847():
    int_0 = 869
    int_1 = -321
    dict_0 = {int_1: int_1, int_1: int_1}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3848():
    bytes_0 = b"$\x82\xe6\x9e\x8b\x0f\xb0\x88\x10\xb7bA\xf9\x16\xc6{Z\xe5\x05"
    module_0.object(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3849():
    bytes_0 = b""
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3850():
    bool_0 = False
    float_0 = 141.0
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3851():
    set_0 = set()
    module_0.object(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_3852():
    bool_0 = True
    str_0 = "v`mZxv"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3853():
    int_0 = -3986
    str_0 = "<^g,&BZ[v.\x0c/f<H\rVk-0"
    dict_0 = {str_0: str_0}
    module_1.ABC(*int_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3854():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3855():
    str_0 = 'MJoCJu$m,9ggZ|z"X/z'
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    dict_0.write(str_0)


def test_case_3856():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3857():
    float_0 = 2856.65942
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3858():
    complex_0 = -6106.87 + 1517.6j
    bool_0 = True
    bool_0.write(complex_0)


def test_case_3859():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3860():
    bytes_0 = b"\x1b\xb7V\xf3\x07f\xdf\xe90GdqD\xfeK"
    str_0 = "Y"
    int_0 = -1200
    complex_0 = -56 + 1164.1j
    list_0 = [str_0, str_0, complex_0, int_0]
    bytes_1 = b"\xcdyu\xf8\xf1\xe2\xdfQ\xa7\x05\xe8\xb1"
    tuple_0 = (str_0, int_0, list_0, bytes_1)
    list_1 = [tuple_0, int_0, bytes_1]
    list_1.write(bytes_0)


def test_case_3861():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3862():
    bytes_0 = b">h\xc0\x1a\x04\xe5\x88\xb8\x94n\xd7\x9f\xefO\xb3"
    list_0 = [bytes_0, bytes_0, bytes_0]
    object_0 = module_0.object()
    object_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3863():
    bool_0 = False
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3864():
    float_0 = -315.378
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(float_0)


def test_case_3865():
    a_b_c_0 = module_1.ABC()


def test_case_3866():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3867():
    complex_0 = 3276.3 + 3249.25909j
    int_0 = 1681
    dict_0 = {int_0: int_0}
    list_0 = [dict_0]
    list_0.write(complex_0)


def test_case_3868():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3869():
    bool_0 = True
    bytes_0 = b")"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3870():
    object_0 = module_0.object()
    float_0 = 1976.3972
    float_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3871():
    none_type_0 = None
    int_0 = 492
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3872():
    bytes_0 = b" \x83\x0c\xdf@7\xa3t\xe9\x9eT\x9b\xb5m\xe1_\xdd"
    dict_0 = {}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3873():
    int_0 = 1583
    bytes_0 = b"8"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3874():
    int_0 = -238
    str_0 = ';(\n((h"C2O!:TGu'
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3875():
    bytes_0 = b"\xb4n\x97\xd1%\xce\xdd{\xaeM\xbagQ"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3876():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3877():
    bytes_0 = b"\xf3\x80\xfc\xf1E}\xd1\x11\xc8a"
    dict_0 = {bytes_0: bytes_0}
    bytes_1 = b"\x81\xd8&ij\x8f`\xc0\x01\xda8\xaf\xcfi\xa5\n\x9f"
    bytes_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3878():
    str_0 = "29M"
    float_0 = 2001.0791
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3879():
    str_0 = "\nZ1>w"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3880():
    object_0 = module_0.object()
    set_0 = set()
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_3881():
    int_0 = -631
    list_0 = [int_0, int_0, int_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3882():
    bytes_0 = b"D\xd3\xb3\xe0\xfd\xb8\xf3v\xf3\xe0@;\xd4\xbc"
    module_0.object(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3883():
    tuple_0 = ()
    int_0 = -3147
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3884():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3885():
    object_0 = module_0.object()
    int_0 = 584
    int_0.write(object_0)


def test_case_3886():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_3887():
    int_0 = 954
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3888():
    str_0 = "%c|"
    str_1 = ""
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_1}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3889():
    bytes_0 = b"\xd5\xc7j\xc8\x1e"
    module_0.object(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3890():
    str_0 = "'^C"
    object_0 = module_0.object()
    dict_0 = {
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
    }
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3891():
    bytes_0 = b"P\xd9]\xdd\xaf\x1b\x9bj\xb0\xb5\xa4\xf5\x1a\xef\x94a\xe7"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3892():
    none_type_0 = None
    str_0 = "r ?,"
    set_0 = {str_0, str_0, str_0}
    bool_0 = False
    bytes_0 = b"\xb7\xb39\xe6\xce\x05e\x10\xcd3,\xd0\xabrg\xcb\xdd"
    tuple_0 = (set_0, bool_0, bytes_0, bool_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3893():
    complex_0 = 493.066 - 1986.418j
    float_0 = -357.23
    float_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3894():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3895():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    list_0 = [set_0, bool_0, bool_0]
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3896():
    bool_0 = True
    set_0 = {bool_0}
    list_0 = [set_0, bool_0, set_0]
    list_1 = [list_0, bool_0]
    str_0 = "\\r"
    str_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3897():
    int_0 = 744
    str_0 = "9;`9{h"
    list_0 = [str_0, str_0, str_0, str_0]
    int_1 = -877
    tuple_0 = (str_0, list_0, int_1, list_0)
    tuple_0.write(int_0)


def test_case_3898():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3899():
    int_0 = -3891
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3900():
    bool_0 = True
    float_0 = -3784.452
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3901():
    bool_0 = False
    list_0 = [bool_0]
    str_0 = "o^Ia!Kn_a+ C2kcs"
    dict_0 = {str_0: str_0, str_0: list_0, str_0: bool_0, str_0: list_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3902():
    bytes_0 = b"\x19p\xad|\x01\xee"
    int_0 = 1829
    list_0 = [int_0, int_0]
    list_1 = [list_0, list_0]
    list_1.write(bytes_0)


def test_case_3903():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3904():
    bool_0 = False
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    set_0 = {object_0, object_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3905():
    float_0 = -2135.186
    str_0 = "Cf>wuvR"
    str_0.write(float_0)


def test_case_3906():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3907():
    set_0 = set()
    float_0 = -355.6
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3908():
    str_0 = "B1Ge8sBK.UURZ,"
    dict_0 = {str_0: str_0}
    module_0.object(*str_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3909():
    str_0 = "'"
    int_0 = 2192
    bool_0 = True
    dict_0 = {str_0: str_0, str_0: int_0, bool_0: bool_0, int_0: str_0}
    int_1 = 2100
    int_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3910():
    list_0 = []
    object_0 = module_0.object(*list_0)
    bool_0 = True
    str_0 = "#\tu.$i[T>]rd"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3911():
    bool_0 = False
    list_0 = []
    list_1 = [list_0, list_0]
    list_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3912():
    bytes_0 = b"\x9eU+h\x11uRI\xa7v%Z"
    str_0 = "A/&/UBeEn>cFL3FkUC"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3913():
    str_0 = ".rmQvV&$SO2\rn/Bl*Js"
    list_0 = [str_0]
    list_1 = [list_0, list_0, list_0]
    str_1 = "\r'+X-"
    str_1.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_3914():
    a_b_c_0 = module_1.ABC()
    str_0 = ";Bo7]qg\\+Tm]\nbN"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3915():
    str_0 = "[(`Wv*"
    float_0 = -3333.8635
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3916():
    float_0 = 150.335
    set_0 = set()
    set_0.write(float_0)


def test_case_3917():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_3918():
    bytes_0 = b"\x0f\xa9\x11\xd5"
    float_0 = -78.42391
    float_0.write(bytes_0)


def test_case_3919():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3920():
    float_0 = -662.5
    bytes_0 = b"\xb30\xc9\xf7\xf6\x89\xb0v\xba#\x058g\xb7\xe8\xf6\x7fg\xd8\xea"
    set_0 = {bytes_0, bytes_0, bytes_0}
    list_0 = [set_0, set_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3921():
    str_0 = "[s\rr8@\x0b/U-r]Z2{"
    str_1 = "BF9K9AgQ}'=A"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3922():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    float_0 = 1200.2
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3923():
    str_0 = "%zUOV"
    bytes_0 = b"l\xea\x96D\xe8\x13\xac\xff\xee\xe5\x1e{\xb4"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3924():
    bool_0 = True
    bytes_0 = b"@\xb0\xa8:1\x84\xfb\x12"
    set_0 = {bool_0, bool_0, bytes_0}
    list_0 = [bytes_0, bool_0, set_0]
    list_1 = [set_0, list_0, set_0]
    module_1.ABC(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_3925():
    int_0 = 2302
    float_0 = 514.0
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    tuple_0 = (float_0, dict_0)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3926():
    str_0 = "rl\n"
    str_1 = "y\r|'(/qnua9kP"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3927():
    str_0 = "DI$N\x0b@\x0c\n"
    int_0 = 338
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3928():
    bool_0 = False
    list_0 = [bool_0]
    bool_1 = False
    bool_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3929():
    complex_0 = -431.1839 + 2986j
    bool_0 = True
    dict_0 = {complex_0: complex_0, complex_0: complex_0, bool_0: complex_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3930():
    none_type_0 = None
    int_0 = 2247
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3931():
    a_b_c_0 = module_1.ABC()
    str_0 = "y+5-`Ea[<8"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_3932():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3933():
    bool_0 = True
    list_0 = [bool_0]
    str_0 = "\t\r%Y}Y^!\\3"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3934():
    int_0 = 1473
    int_1 = -1451
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3935():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3936():
    int_0 = 71
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3937():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xd5\xc9\xa8\xad\xc8\x9eF- \xec\xc2\x90"
    dict_0 = {a_b_c_0: bytes_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3938():
    float_0 = 997.0
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3939():
    bytes_0 = b"\xe6\x8f\xafL\xd7\x1d\xe3\xd0\xdcY"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3940():
    none_type_0 = None
    str_0 = "vE\"; ,+. ,'iG"
    str_0.write(none_type_0)


def test_case_3941():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3942():
    set_0 = set()
    float_0 = -86.849654
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3943():
    int_0 = -505
    set_0 = {int_0}
    bool_0 = False
    list_0 = [bool_0, bool_0]
    tuple_0 = (bool_0,)
    int_1 = 3151
    tuple_1 = (bool_0, list_0, tuple_0, int_1)
    tuple_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3944():
    int_0 = 1526
    str_0 = "asKRxpqc\nPSSZk|X-sR0"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3945():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0]
    bytes_0 = b"\xae\xe8\x84\xc7\x15F\xecGB:\\YO\xb1g\xe9_\xd9^"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3946():
    str_0 = "!iAO"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3947():
    none_type_0 = None
    complex_0 = 3121.844 - 3631.304j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3948():
    bytes_0 = b"4|\xa2=\xda9\x04\xa2"
    module_1.ABC(**bytes_0)


def test_case_3949():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3950():
    int_0 = 3070
    float_0 = -247.310761
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3951():
    bool_0 = True
    str_0 = "H*VJ"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3952():
    str_0 = "Ep_8"
    float_0 = 3119.372
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3953():
    bytes_0 = b""
    set_0 = set()
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3954():
    bool_0 = True
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    bytes_0 = b"{\xb3\xbe\xcd\x11z+\xf9\x9e\xb8\xe4\xf5\x86"
    dict_1 = {a_b_c_0: a_b_c_0, a_b_c_0: bytes_0, a_b_c_0: bytes_0}
    dict_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3955():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    complex_0 = -2969.68 + 270.76j
    set_1 = {complex_0, complex_0, complex_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3956():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xf1\r}p\xd2K\x8d\xf1\xe7\xd9\x14x\xfc"
    set_0 = {bytes_0}
    set_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3957():
    bool_0 = False
    list_0 = [bool_0]
    bool_1 = False
    bool_1.write(list_0)


def test_case_3958():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3959():
    int_0 = 4970
    bytes_0 = b"\xb7"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3960():
    int_0 = -2270
    module_1.ABC(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_3961():
    none_type_0 = None
    module_0.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3962():
    float_0 = 270.978305
    module_1.ABC(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_3963():
    bool_0 = True
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3964():
    none_type_0 = None
    int_0 = -2059
    set_0 = {int_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3965():
    int_0 = -491
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3966():
    none_type_0 = None
    int_0 = -2945
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3967():
    a_b_c_0 = module_1.ABC()
    str_0 = "=-PE9M"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_3968():
    bytes_0 = b"\xb3\t"
    bytes_1 = b"f"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3969():
    bytes_0 = b"v\xd1"
    list_0 = []
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3970():
    str_0 = "\\q*M3b"
    str_1 = "0:>\\A\x0c\tB"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_1}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3971():
    set_0 = set()
    bool_0 = True
    tuple_0 = (bool_0,)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3972():
    str_0 = "*F1U"
    set_0 = {str_0, str_0, str_0, str_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_3973():
    bytes_0 = b"\x9f\xfaXf\x8e\xa1\x96"
    float_0 = -2396.291743
    list_0 = [bytes_0, bytes_0, float_0]
    list_1 = []
    list_2 = [list_1, list_1, list_1]
    list_2.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3974():
    none_type_0 = None
    str_0 = "fD~ "
    str_1 = "2TP"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_0: str_1, str_1: none_type_0}
    module_1.ABC(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3975():
    none_type_0 = None
    complex_0 = -3598 + 2487.151913j
    bytes_0 = b"\xfb\x9f~u\xad!\xbb,3Q\x12d\xfa\t\x1dL\x92\x9c"
    tuple_0 = (bytes_0,)
    list_0 = []
    tuple_1 = (complex_0, tuple_0, complex_0, list_0)
    list_1 = [tuple_1, tuple_0, list_0]
    list_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3976():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    str_0 = " g\x0bMAFz9j"
    dict_0 = {str_0: str_0}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3977():
    float_0 = -1342.0
    int_0 = -1766
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_3978():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3979():
    none_type_0 = None
    str_0 = "]Kv`-$YU@5$EKu"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3980():
    none_type_0 = None
    list_0 = [none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3981():
    dict_0 = {}
    float_0 = -2057.0
    str_0 = "Qp~#&yHA2PYi061"
    tuple_0 = (dict_0, dict_0, float_0, str_0)
    module_1.ABC(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3982():
    int_0 = 1017
    str_0 = "?"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_3983():
    list_0 = []
    bytes_0 = b"\x1df\xae\xf7\xb1\x04\xee\xbdG8\xa4\\\xc5\x93\xeb\xad1"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3984():
    str_0 = "a>Pj7tC&&v(1$"
    list_0 = [str_0, str_0, str_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3985():
    none_type_0 = None
    dict_0 = {}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3986():
    str_0 = "|9\nB5"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3987():
    none_type_0 = None
    int_0 = 83
    bool_0 = True
    tuple_0 = (int_0, bool_0)
    set_0 = set()
    float_0 = -168.4155
    dict_0 = {tuple_0: int_0, bool_0: bool_0, tuple_0: int_0, tuple_0: float_0}
    tuple_1 = (tuple_0, bool_0, set_0, dict_0)
    tuple_1.write(none_type_0)


def test_case_3988():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3989():
    none_type_0 = None
    int_0 = 3693
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3990():
    none_type_0 = None
    complex_0 = 2990.543 - 2072.9068j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3991():
    bytes_0 = b"t3\x1a\x11],?fE"
    set_0 = {bytes_0}
    dict_0 = {bytes_0: bytes_0, bytes_0: set_0, bytes_0: bytes_0}
    list_0 = [dict_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_3992():
    bool_0 = False
    str_0 = "+u&{<mPFF4aY\x0bQ^"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3993():
    str_0 = "\nyIU9X0\x0c[g?i02S'>}-"
    list_0 = [str_0]
    module_1.ABC(*list_0, **str_0)


@pytest.mark.xfail(strict=True)
def test_case_3994():
    float_0 = -884.1
    bool_0 = False
    list_0 = [float_0, bool_0, float_0, bool_0]
    bool_1 = False
    bool_1.write(list_0)


def test_case_3995():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3996():
    object_0 = module_0.object()
    set_0 = {object_0, object_0}
    bytes_0 = b"\x08\x1eD\x01\x9c\t\x8bq\xe6\xabq]\x0e\x8c:"
    bytes_0.write(set_0)


def test_case_3997():
    pass


@pytest.mark.xfail(strict=True)
def test_case_3998():
    str_0 = "V1"
    str_1 = "uEGA"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3999():
    complex_0 = -2322 + 748.4501j
    list_0 = [complex_0]
    module_0.object(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_4000():
    str_0 = "8:?F"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4001():
    int_0 = -3770
    bytes_0 = b""
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4002():
    str_0 = '\n&*_WUIG (6Y>*"d7&'
    str_1 = '\x0b["Y'
    dict_0 = {str_0: str_0, str_1: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4003():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4004():
    str_0 = "\x0b\x0b!6ro\x0buL"
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    set_0.write(str_0)


def test_case_4005():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_4006():
    float_0 = 3476.623
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4007():
    bool_0 = True
    bool_1 = False
    list_0 = [bool_1, bool_1, bool_1]
    list_1 = [list_0, list_0]
    list_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4008():
    str_0 = ""
    int_0 = -414
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4009():
    none_type_0 = None
    int_0 = -2471
    tuple_0 = (int_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4010():
    none_type_0 = None
    int_0 = 724
    int_0.write(none_type_0)


def test_case_4011():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4012():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4013():
    float_0 = -1480.417
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4014():
    bool_0 = False
    bytes_0 = b"\x17\xafA\xec\x92\x99\xcf[\xd2C\xea\xa0_\xec\x0f"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4015():
    none_type_0 = None
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0, bytes_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4016():
    bool_0 = False
    bool_1 = False
    list_0 = [bool_1]
    bytes_0 = b"\x88\xe1\xd3|\xa4\xa5\t\x830\xd8\xb7"
    tuple_0 = (bool_1, list_0, bool_1, bytes_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4017():
    bytes_0 = b"\xdf\x17\xf2\x02KT\xf1}&\x89\xc1\xc0\xcb\xad"
    int_0 = 1641
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4018():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    int_0 = 331
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4019():
    none_type_0 = None
    dict_0 = {}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4020():
    str_0 = "}cpzMu%\t\r/"
    str_1 = "(6+)rf])J"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4021():
    bool_0 = False
    float_0 = 630.53
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4022():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    bool_1 = True
    bool_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4023():
    bool_0 = False
    float_0 = -1158.721106
    float_0.write(bool_0)


def test_case_4024():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4025():
    str_0 = "HJOHlTX\x0b)jKD k?"
    float_0 = 1463.0
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4026():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    module_1.ABC(**a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4027():
    dict_0 = {}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4028():
    set_0 = set()
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4029():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    bool_1 = False
    bool_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4030():
    int_0 = -654
    dict_0 = {int_0: int_0}
    tuple_0 = (dict_0,)
    module_0.object(*tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4031():
    bool_0 = False
    complex_0 = 5661.34592 - 2180.325777j
    complex_0.write(bool_0)


def test_case_4032():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_4033():
    str_0 = "Z:8wt>!@i6r&>"
    int_0 = 1152
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4034():
    bytes_0 = b"\x94l\xebik\xd4S\x9dfE\xc8d\x8d\x02\xfa$J"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4035():
    set_0 = set()
    list_0 = [set_0, set_0]
    bytes_0 = b"\xa0\x08"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4036():
    bool_0 = False
    bool_1 = False
    list_0 = [bool_1]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4037():
    bool_0 = False
    float_0 = 1938.29585
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4038():
    bytes_0 = b"0[\x83\x8d\xc4S\x99X"
    tuple_0 = (bytes_0,)
    int_0 = -302
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4039():
    none_type_0 = None
    module_0.object(**none_type_0)


def test_case_4040():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4041():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4042():
    bytes_0 = b"C\\"
    bytes_1 = b"\xd1\xc2"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4043():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4044():
    str_0 = "\\"
    str_1 = "4'wSJwIX3\x0cg\x0bZ:"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


def test_case_4045():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4046():
    complex_0 = 282 + 750j
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_0.write(complex_0)


def test_case_4047():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_4048():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4049():
    bytes_0 = b"\x00\xf2R\x142\x89\xb1\xd2a"
    complex_0 = -790.312 + 441.751591j
    complex_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4050():
    int_0 = -1747
    str_0 = "gtqGzqPBqw&"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4051():
    float_0 = 367.358
    bytes_0 = b"\xda\xb1\xd0?R\x1c\xcb\x0e\x07"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4052():
    bytes_0 = b"\xdd\x9f\xde\x19\x0b\x94U\x14C\xdc\x94\x99\x13\xf1n>\xfa"
    bool_0 = True
    tuple_0 = (bool_0,)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4053():
    int_0 = 1425
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4054():
    str_0 = "aj$~\x0ceN92HaN!"
    bytes_0 = b"P\x1e\x8e\x13Xf0\x9fRq:(\xd4\x0f\xf4F\x14{"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4055():
    str_0 = "B*\x0cr`OJv(V'j/&hB)pu"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4056():
    int_0 = -1453
    bytes_0 = b'4\xcf+\xca\xf3h\x18\xf6\r"\x15\x16\xda_\xf8'
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4057():
    complex_0 = -807.8791 + 1886.71j
    bool_0 = False
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4058():
    str_0 = "43rsVUWd'"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_4059():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4060():
    int_0 = -3143
    list_0 = [int_0]
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4061():
    bytes_0 = b"|\xa6\xc0\x9a\xad\xea6$\x88\xa3Q\x08kd\xd2\xf4\xd3\x1f"
    int_0 = -278
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4062():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    str_0 = "U8>WT"
    dict_0 = {str_0: str_0}
    module_0.object(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4063():
    float_0 = 390.0
    set_0 = {float_0, float_0, float_0, float_0}
    bytes_0 = b"\xfd\xf2L\x1aX"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4064():
    int_0 = -2374
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4065():
    none_type_0 = None
    bytes_0 = b"Q\x9f\x88\x0e\xcc\x84\x83<\xf4\xc8\xb7H\x1d\xa9yG:\xd9\x16"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4066():
    bool_0 = True
    list_0 = [bool_0]
    module_1.ABC(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_4067():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    a_b_c_1 = module_1.ABC()
    a_b_c_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4068():
    complex_0 = -1303 - 5591j
    str_0 = '"L0~`&@&y2E:J'
    str_0.write(complex_0)


def test_case_4069():
    pass


def test_case_4070():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_4071():
    int_0 = -1523
    int_1 = -581
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4072():
    str_0 = "_UD{4`K49)\x0c9)y"
    str_1 = "%Rw\r-"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4073():
    bool_0 = True
    int_0 = 2729
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4074():
    none_type_0 = None
    str_0 = "yMB}UvEoD'976^r@ab"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4075():
    str_0 = ";0A"
    bool_0 = True
    bool_0.write(str_0)


def test_case_4076():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4077():
    none_type_0 = None
    int_0 = -2920
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4078():
    bool_0 = False
    str_0 = "Wh+q])\r>8W-"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4079():
    int_0 = -3330
    str_0 = "0bxqh3\x0b]?0cTVB"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4080():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    str_0 = "*q\x0c{-EB6\\::"
    str_1 = "tPI63j1T7\tUn*\x0cg^Z"
    dict_0 = {str_0: str_0, str_0: a_b_c_0, str_1: str_1}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4081():
    object_0 = module_0.object()
    bool_0 = True
    dict_0 = {object_0: object_0, object_0: object_0, object_0: bool_0}
    list_0 = [dict_0, dict_0]
    int_0 = -1487
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4082():
    bool_0 = True
    str_0 = "i"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4083():
    str_0 = ")mf3Q8p"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_4084():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4085():
    int_0 = -1710
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4086():
    object_0 = module_0.object()
    bool_0 = False
    int_0 = 1339
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4087():
    int_0 = 1047
    int_1 = 487
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4088():
    bool_0 = True
    str_0 = "6{kfB\tXI"
    dict_0 = {str_0: bool_0}
    module_1.ABC(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4089():
    none_type_0 = None
    set_0 = set()
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4090():
    complex_0 = -109 + 984j
    tuple_0 = (complex_0,)
    bytes_0 = b"\xfbU\xebs\x91\x8f\xfe\xccB"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4091():
    bool_0 = False
    dict_0 = {}
    module_1.ABC(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4092():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4093():
    none_type_0 = None
    bool_0 = False
    bytes_0 = b"\x1d\x94'\x91"
    list_0 = [bool_0, bytes_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4094():
    str_0 = "PG{K,`=d2"
    set_0 = set()
    complex_0 = -460.638 - 123j
    tuple_0 = (set_0, complex_0)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4095():
    str_0 = "8Z"
    tuple_0 = ()
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4096():
    str_0 = "3\nT~G@Hbh./d>n292"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4097():
    int_0 = -3217
    bytes_0 = b"\x87\xe8_\x9c\r$\xb68t\xa46\x91\xc5:\xd6\xdd\xb5"
    list_0 = [bytes_0, bytes_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4098():
    float_0 = 826.495
    bytes_0 = b"T\x1fR\xd5z\xff\x93\x0b"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4099():
    float_0 = -1009.967
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4100():
    object_0 = module_0.object()
    dict_0 = {object_0: object_0, object_0: object_0}
    complex_0 = -1456.942794 + 690j
    complex_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4101():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0]
    bool_0 = True
    set_0 = {bool_0, bool_0}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4102():
    bytes_0 = b"VT"
    list_0 = [bytes_0]
    tuple_0 = (list_0,)
    a_b_c_0 = module_1.ABC()
    tuple_1 = ()
    tuple_2 = (tuple_1,)
    bool_0 = True
    tuple_3 = (a_b_c_0, tuple_2, bool_0)
    tuple_3.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4103():
    str_0 = "j'<O1*M_o3efs>1s79&"
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4104():
    bytes_0 = b"$M\xeaM\x1e\x0f\xe2\xf6\x8d"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4105():
    int_0 = 1204
    str_0 = "O>\x0b2a!0^,+[}):\x0bjH`,R"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4106():
    object_0 = module_0.object()
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4107():
    str_0 = "^=uES'aV>ztf"
    float_0 = 384.573538
    float_0.write(str_0)


def test_case_4108():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4109():
    object_0 = module_0.object()
    dict_0 = {object_0: object_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4110():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    str_0 = "T"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4111():
    int_0 = -1380
    tuple_0 = ()
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4112():
    bytes_0 = b"\x9e`1S"
    bytes_1 = b"c\xb7u\xe2\xf5\xae\xfeB"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4113():
    none_type_0 = None
    str_0 = "Pn{y<i\\RH~{KA&T"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4114():
    float_0 = 1661.53
    dict_0 = {float_0: float_0}
    set_0 = set()
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4115():
    none_type_0 = None
    int_0 = -1997
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4116():
    str_0 = "=E\x0b~HqIiOGxEC7]3*Q69"
    int_0 = 721
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4117():
    bool_0 = False
    set_0 = set()
    list_0 = [set_0, set_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4118():
    bool_0 = True
    bytes_0 = b"p\x1d\x02k\x87F\xc7\x8d\xaa}\xa8V\xb6\xf1f\xf7\xe1"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4119():
    bool_0 = False
    float_0 = 1879.0
    bool_1 = False
    tuple_0 = (float_0, bool_1)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4120():
    float_0 = -2788.6
    tuple_0 = (float_0,)
    list_0 = []
    list_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4121():
    dict_0 = {}
    str_0 = "z=T8dJ^{1'x^gKyl"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4122():
    complex_0 = -1353.57609 + 1269.510949j
    bytes_0 = b"[\x08\xf4\x0b\x8b\xac\xdfE\xca\x97K^\xear\xf4e"
    bytes_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4123():
    bool_0 = False
    module_1.ABC(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4124():
    bool_0 = True
    str_0 = " \x0c@Q4 1h`*2~cuW'U@qX"
    str_0.write(bool_0)


def test_case_4125():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4126():
    a_b_c_0 = module_1.ABC()
    str_0 = "WUL,{6&m&iS)#"
    list_0 = [str_0, a_b_c_0, str_0]
    tuple_0 = (str_0, list_0)
    tuple_1 = (a_b_c_0, tuple_0)
    tuple_2 = ()
    tuple_2.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4127():
    none_type_0 = None
    bytes_0 = b"\x04E\x04\x13"
    bytes_0.write(none_type_0)


def test_case_4128():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4129():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4130():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4131():
    bytes_0 = b"f\xfc\xc4\x92\xa3\xc07\r\xc5\xaa\xbb\x94\xa8e\x8d\x8a"
    str_0 = "4KKnet`#,"
    str_0.write(bytes_0)


def test_case_4132():
    pass


def test_case_4133():
    object_0 = module_0.object()
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4134():
    int_0 = 712
    bytes_0 = b"\xcfO]K"
    bytes_0.write(int_0)


def test_case_4135():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4136():
    str_0 = "pfC\\5m /v<)"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4137():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    module_0.object(*set_0, **bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4138():
    complex_0 = -2150 - 387.766j
    module_1.ABC(**complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4139():
    bytes_0 = b"FTq\xb7.\xf4\xda\xa1Oy\xf9h\xec\xc6\xb2D\xc2"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4140():
    a_b_c_0 = module_1.ABC()
    float_0 = -1584.8242
    list_0 = [float_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4141():
    bool_0 = False
    float_0 = 1028.51
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4142():
    str_0 = "oftmMdv"
    str_1 = "7d\x0b*@k,%`X\\e "
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4143():
    float_0 = -751.0
    int_0 = -2998
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4144():
    bool_0 = False
    int_0 = -2432
    set_0 = {int_0, int_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4145():
    none_type_0 = None
    str_0 = "wNz@yE%Kj"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4146():
    str_0 = "bT\x0bF\"'s:<quCCNOgb1\x0b"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4147():
    str_0 = ".o2?!1t(6`a@G#"
    int_0 = -2588
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4148():
    str_0 = "O=\x0bD8\t>\\w'F1O\"\rjvK"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4149():
    bool_0 = False
    bytes_0 = b"\x17\x12Sp;\xdbw\x94\xb8w\x00\x9c\xe6\xde\xf1DIT\x92\xf3"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4150():
    a_b_c_0 = module_1.ABC()
    int_0 = -2516
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4151():
    bytes_0 = b"\x82\x97a}2\xac\x80\xed%\xce\xd2V"
    object_0 = module_0.object()
    object_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4152():
    bytes_0 = b"\xed\r\x1fk%\xa5B"
    list_0 = [bytes_0, bytes_0, bytes_0]
    list_1 = [list_0, list_0, bytes_0, bytes_0]
    str_0 = "AI/`7v"
    str_1 = "L@O<`fBs"
    dict_0 = {str_0: list_0, str_1: str_0}
    module_1.ABC(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4153():
    object_0 = module_0.object()
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    list_0 = [bool_0, set_0, bool_0, set_0]
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4154():
    str_0 = 'oe"L,p=H\x0b++lZ I,'
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4155():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4156():
    bool_0 = True
    bool_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4157():
    str_0 = "!n)$&n*}"
    complex_0 = -428.2 - 2843j
    complex_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4158():
    bool_0 = False
    bytes_0 = b"nT@\x0e\xfeuY[\xb0\x17\xcc"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4159():
    int_0 = -3188
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4160():
    int_0 = 867
    module_0.object(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_4161():
    bool_0 = True
    float_0 = 125.360742
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4162():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    list_1 = [list_0]
    int_0 = -2907
    set_0 = {int_0, int_0, int_0}
    set_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_4163():
    int_0 = 3476
    list_0 = [int_0]
    dict_0 = {}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4164():
    bytes_0 = b"\x13\xc0\xb0`\xdc"
    bytes_1 = b"\xd3LF\xbe\xa7\x80"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4165():
    none_type_0 = None
    bytes_0 = b"\x1c\xf9w\xbd\xfe?\xbd\xf9\x12\t\xb6e\xd3\xa1\xabNF\x82Z\x95"
    bytes_0.write(none_type_0)


def test_case_4166():
    pass


def test_case_4167():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4168():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bool_1 = True
    bool_1.write(list_0)


def test_case_4169():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4170():
    str_0 = "3H"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4171():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4172():
    str_0 = "M;CcB`"
    str_1 = "BCHIo\x0c5)9V[@;m:5S'"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4173():
    list_0 = []
    str_0 = "~2w-lmAz1v"
    dict_0 = {str_0: str_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4174():
    str_0 = '6rWyqxls"y$0'
    float_0 = 645.09
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4175():
    bytes_0 = b"\x95\xb5\x0b\xb8{\xbd\x9a\xb6\xb2\xbf\xe0d\xbe"
    set_0 = set()
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4176():
    object_0 = module_0.object()
    str_0 = "\tb[c5>iO!dW/]p\x0b8M"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4177():
    bool_0 = True
    bytes_0 = b"H>\xec\xb5h\xca\xf5g|\x00\xd3\xff|\x18!\x86"
    list_0 = [bool_0, bool_0, bytes_0]
    module_0.object(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_4178():
    int_0 = -630
    int_1 = 428
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4179():
    str_0 = "r+vKn$_~3DUt~R"
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4180():
    str_0 = "?9"
    set_0 = {str_0, str_0}
    tuple_0 = ()
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4181():
    a_b_c_0 = module_1.ABC()
    float_0 = -246.96483
    float_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4182():
    float_0 = -281.721156
    str_0 = "mE&x]+ 2[hBRlC"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4183():
    a_b_c_0 = module_1.ABC()
    set_0 = set()
    set_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4184():
    str_0 = "^g?VhV\\k6b$SY"
    int_0 = -3546
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4185():
    str_0 = "XK\\+;jsB=O3\\}F"
    str_1 = "w6O8iyOtfTG'"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4186():
    object_0 = module_0.object()
    str_0 = "S"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4187():
    list_0 = []
    module_0.object(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_4188():
    int_0 = -16
    bool_0 = False
    str_0 = "w5&t\r\x0ci.UQsT\t"
    list_0 = [str_0]
    tuple_0 = (bool_0, list_0)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4189():
    str_0 = "OJ^AymO|3"
    complex_0 = -126.0381 + 3789.623j
    complex_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4190():
    a_b_c_0 = module_1.ABC()
    float_0 = 2883.26
    set_0 = {float_0, float_0, float_0}
    str_0 = "S$0@kWe*,dBQ!i\rIo"
    int_0 = -619
    tuple_0 = (set_0, str_0, int_0)
    tuple_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4191():
    bool_0 = False
    list_0 = [bool_0]
    bool_1 = True
    bool_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4192():
    a_b_c_0 = module_1.ABC()
    set_0 = set()
    set_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4193():
    str_0 = 'Ua3$dK:6"P8d8es'
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4194():
    int_0 = 520
    str_0 = "c\rc+R~no"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4195():
    none_type_0 = None
    float_0 = -189.472
    list_0 = [float_0, float_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4196():
    none_type_0 = None
    bytes_0 = b""
    set_0 = {bytes_0, bytes_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4197():
    str_0 = ")Ci JD"
    none_type_0 = None
    str_1 = "<xc*LlcCwv[\\M#|`8"
    str_2 = "#$xhGP`"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_2: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4198():
    int_0 = -463
    tuple_0 = (int_0,)
    dict_0 = {tuple_0: tuple_0, tuple_0: int_0, int_0: tuple_0}
    bool_0 = False
    bool_0.write(dict_0)


def test_case_4199():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_4200():
    str_0 = "\t7DMG"
    tuple_0 = ()
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4201():
    none_type_0 = None
    float_0 = 494.3
    tuple_0 = (float_0,)
    dict_0 = {tuple_0: tuple_0, float_0: tuple_0, float_0: tuple_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4202():
    str_0 = "~_S:'NGW"
    str_1 = "lE(hR\\"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4203():
    none_type_0 = None
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4204():
    str_0 = '\n{KlAYx"Ff<@'
    int_0 = -6652
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4205():
    dict_0 = {}
    list_0 = [dict_0]
    module_0.object(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_4206():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4207():
    str_0 = "K"
    list_0 = []
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4208():
    str_0 = "aW\n{\rIo\x0c={@sY"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4209():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    list_0 = [set_0, set_0]
    module_1.ABC(*list_0)


def test_case_4210():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4211():
    str_0 = "0*0e2tI_)^Lun`=]q-`0"
    module_1.ABC(*str_0)


@pytest.mark.xfail(strict=True)
def test_case_4212():
    object_0 = module_0.object()
    float_0 = -659.8327
    float_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4213():
    int_0 = 838
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4214():
    int_0 = -1778
    list_0 = [int_0, int_0, int_0]
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4215():
    str_0 = ".V5,w<"
    str_1 = "nW01xN\x0cpv/G^T?WI"
    complex_0 = -1843.783799 - 688j
    tuple_0 = (str_1, complex_0, complex_0)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4216():
    bool_0 = False
    bytes_0 = b'\xe8]!7\x04\xab"\x08h\xb9t>f\xa3'
    bytes_0.write(bool_0)


def test_case_4217():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4218():
    none_type_0 = None
    str_0 = "M\\z/V@\x0cb:Y|"
    bytes_0 = b"SB\xd7S\xce\xe4\xdf|u=\xe1#d6\x1d\x98\x1d\\\xf3"
    str_1 = "i8rQ4aLc"
    dict_0 = {str_0: bytes_0, str_0: none_type_0, str_1: none_type_0, str_0: str_0}
    module_0.object(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4219():
    none_type_0 = None
    str_0 = "W<Ir<e;x^WZlG](M^j+"
    str_0.write(none_type_0)


def test_case_4220():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4221():
    bool_0 = True
    bytes_0 = b"\xc4\xb6q\x00\xab"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4222():
    none_type_0 = None
    str_0 = "2`DnE ST3\tIA\rXd"
    set_0 = {str_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4223():
    float_0 = 241.77832
    bytes_0 = b"*a3\xb9l{V\xcf\xeb\xc5\xf0\xa2\xc3\xec\xb4p\xff\xfc"
    list_0 = [bytes_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4224():
    str_0 = "\x0ca'["
    list_0 = []
    tuple_0 = (list_0,)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4225():
    float_0 = 1419.3309
    module_0.object(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_4226():
    str_0 = "9*U"
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4227():
    object_0 = module_0.object()
    bytes_0 = b"/a\xcf \x17\x0c\xedx4I\xf7\x85\x048"
    bytes_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4228():
    str_0 = "Yo:X;:-@JUwAlO"
    set_0 = {str_0, str_0, str_0}
    a_b_c_0 = module_1.ABC()
    str_1 = "`"
    list_0 = [a_b_c_0, set_0, str_1]
    tuple_0 = (str_0, str_0, set_0, list_0)
    module_1.ABC(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4229():
    dict_0 = {}
    tuple_0 = ()
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4230():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    list_1 = [a_b_c_0]
    module_1.ABC(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_4231():
    a_b_c_0 = module_1.ABC()
    float_0 = 435.34
    list_0 = [float_0, float_0, float_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4232():
    tuple_0 = ()
    int_0 = 188
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4233():
    int_0 = -904
    int_1 = -616
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4234():
    bytes_0 = b"Y\xc1\x1a\xc3z\x84\xb4\x96}"
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    dict_0.write(bytes_0)


def test_case_4235():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4236():
    float_0 = -2191.9809
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4237():
    none_type_0 = None
    bytes_0 = b"\xc7ie&\x13\xdf/\xcaA\xb2\x85\xcb\xcd\x07\x8aT\x89e\xda"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4238():
    bool_0 = False
    str_0 = "A5!'8Is!="
    set_0 = {str_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4239():
    str_0 = '!c$2NdC,e4\r"sE]*E\x0c'
    float_0 = 3717.0
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4240():
    bytes_0 = b"\xf0\xa4\x01j2\n["
    set_0 = {bytes_0, bytes_0, bytes_0}
    module_1.ABC(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_4241():
    bytes_0 = b"\xfeaE\x82D\xad\xe3\x17\x91Ra\xe9\xff"
    module_0.object(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4242():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0}
    list_0 = [a_b_c_0]
    tuple_0 = (set_0, list_0, a_b_c_0)
    tuple_0.write(bool_0)


def test_case_4243():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4244():
    int_0 = -861
    int_1 = 3903
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4245():
    str_0 = "`l)+1\n|NUcvCKuGaX3"
    str_1 = "S@"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4246():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    float_0 = -1918.13942
    float_0.write(a_b_c_0)


def test_case_4247():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_4248():
    bool_0 = False
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4249():
    int_0 = 2898
    list_0 = [int_0, int_0]
    str_0 = "uD/{YilbriQFq6-S{r+A"
    str_1 = "=[oLw5yQt(f6# t"
    str_2 = "'mL7SkM`\r%?N}u0d+b>"
    str_3 = "q2Y!Q=f"
    dict_0 = {str_0: int_0, str_1: list_0, str_2: list_0, str_3: str_1}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4250():
    none_type_0 = None
    module_0.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4251():
    float_0 = -436.29507
    float_1 = -1798.0
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4252():
    bytes_0 = b"\x86\xb4\x12g\xaa\xf2\xa8\xa8\xb5\x80\xf0)"
    str_0 = "eDg:{BK[H"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4253():
    bytes_0 = b"\xa3\xb3v\x16"
    str_0 = "DV}$iRar"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4254():
    int_0 = -4494
    dict_0 = {int_0: int_0, int_0: int_0}
    set_0 = set()
    set_0.write(dict_0)


def test_case_4255():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4256():
    bool_0 = False
    str_0 = "|'27Y[<<88"
    list_0 = [str_0, str_0, str_0, str_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4257():
    bytes_0 = b'\xec\xd5p\xba[\xfb\x02q\xe6"LI\xf5N\xf9\xcf\x12'
    set_0 = {bytes_0}
    float_0 = 2187.903341
    str_0 = "#SY/J`A\\MhvqT0d!Gqt"
    tuple_0 = (float_0, str_0, str_0, str_0)
    set_1 = {tuple_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4258():
    int_0 = 506
    list_0 = [int_0, int_0]
    set_0 = set()
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4259():
    bool_0 = True
    object_0 = module_0.object()
    complex_0 = 662 + 611j
    bytes_0 = b"g\xbbe\x82\xde`A*\x02e\x154\x00\xee\xbcN\xc6\xa6\xf2\x0e"
    dict_0 = {
        object_0: object_0,
        object_0: object_0,
        object_0: complex_0,
        bytes_0: complex_0,
    }
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4260():
    str_0 = "_brSv"
    dict_0 = {str_0: str_0, str_0: str_0}
    str_1 = "|\x0b<RJ>qV75N%<z"
    str_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4261():
    int_0 = -181
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4262():
    float_0 = -1013.6
    bytes_0 = b"4\xf2\xbbak\x10\xe2\x913LQ\rI\rb\xc2"
    list_0 = [bytes_0, bytes_0, bytes_0]
    list_1 = [list_0]
    list_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4263():
    list_0 = []
    complex_0 = -2110.315773 - 768.79j
    complex_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4264():
    bool_0 = False
    bool_1 = False
    set_0 = {bool_0, bool_0, bool_0, bool_1}
    tuple_0 = (set_0,)
    str_0 = "m]}-W%0\\L4%N>"
    set_1 = {str_0, str_0, str_0}
    set_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4265():
    set_0 = set()
    bytes_0 = b"\x1e!~J\xae"
    int_0 = -166
    tuple_0 = (bytes_0, int_0, int_0)
    set_1 = {tuple_0, tuple_0, bytes_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4266():
    int_0 = 2432
    float_0 = -831.43181
    list_0 = [float_0]
    str_0 = "~h;hty}1P@Y3HiZ"
    bool_0 = True
    bytes_0 = b"\x8c\x1bF\x9dW\xa9\xaa\xe3A#\xfa\xc4\xc1~H\xba\x87"
    bytes_1 = b"\xf6Y\xdf$_\xe2\xe1N\xf8\x15\xf9o\xb6N\x9fO\xff\xae"
    tuple_0 = (bool_0, bytes_0, bytes_1)
    tuple_1 = (list_0, str_0, tuple_0)
    tuple_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4267():
    bool_0 = True
    tuple_0 = (bool_0,)
    bool_1 = True
    dict_0 = {bool_1: bool_1, bool_1: bool_1}
    dict_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4268():
    bool_0 = False
    bytes_0 = b"1R\xd6=D-\xc9\x9a\xc0"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4269():
    str_0 = "ofIbX+V^vHRX_"
    float_0 = -1857.24
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4270():
    none_type_0 = None
    str_0 = "\\vv"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4271():
    bool_0 = True
    bytes_0 = b"-\xcc\xa5\xfeA\\\x85\xd4\x01.\x06'\xafT\x82"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4272():
    str_0 = "d\\<6}(1Tbq"
    float_0 = -1621.582
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4273():
    str_0 = "f8y^GZ|k-0nRg"
    list_0 = [str_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4274():
    none_type_0 = None
    str_0 = "MycTF7t&eR]1YY\tHxK"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4275():
    bytes_0 = b"z\xc6\xeb\x8c]"
    int_0 = 765
    set_0 = {int_0, int_0, int_0}
    str_0 = "dk+WE\n\n^"
    int_1 = -709
    tuple_0 = (set_0, str_0, int_1, set_0)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4276():
    str_0 = "P3{Rm~Q[~fE\\`\tj2"
    int_0 = -1367
    int_0.write(str_0)


def test_case_4277():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4278():
    float_0 = 2258.4306
    bytes_0 = b"V"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4279():
    bytes_0 = b"a\x96\x19\x96\x07\x85I"
    int_0 = 99
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4280():
    str_0 = "#|EHjG[="
    list_0 = []
    str_1 = "rLpq~3~`zDu"
    dict_0 = {str_0: list_0, str_1: str_0, str_0: str_1}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4281():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0}
    list_0 = [a_b_c_0, set_0, set_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4282():
    bytes_0 = b"E\x06t5\xcb\xf9\xcf\xf5\x9a\x8b\t\xa2"
    str_0 = "<R,ec~->5n`"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4283():
    bool_0 = False
    module_1.ABC(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4284():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    list_0 = [none_type_0]
    module_0.object(*list_0)


def test_case_4285():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4286():
    dict_0 = {}
    bool_0 = True
    str_0 = "'D~}"
    tuple_0 = (dict_0, bool_0, str_0)
    int_0 = 744
    dict_1 = {int_0: int_0, int_0: int_0}
    tuple_1 = (dict_1, int_0)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4287():
    complex_0 = -327.345 + 3730.2j
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    a_b_c_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4288():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    bytes_0 = b'P\xf4.\xf7\xf2\x14[\xa9\x1e\xdf1g\x83\xd9"J\x0e\x82'
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4289():
    dict_0 = {}
    list_0 = [dict_0]
    bytes_0 = b"\x92\x98\xab&F\xbf\xfa\xdaBxq"
    set_0 = {bytes_0, bytes_0, bytes_0}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4290():
    int_0 = -2542
    object_0 = module_0.object()
    object_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4291():
    bool_0 = True
    str_0 = "G[WCp~gx"
    dict_0 = {str_0: str_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4292():
    complex_0 = 945 + 918.402157j
    bytes_0 = b"m\xe7y\xb1-\xa5t\xa8\x8d\x0f\x93o\x93\x0fK\xa2\xff\xcd \xab"
    set_0 = {bytes_0, bytes_0}
    set_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4293():
    none_type_0 = None
    bytes_0 = b"\x08d\x9c\xbe\xf0\xe4\x9c<\xf4Rkyz"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4294():
    set_0 = set()
    list_0 = []
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4295():
    bool_0 = True
    int_0 = 143
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4296():
    str_0 = "@|#%rqzsKd"
    int_0 = -490
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4297():
    int_0 = 3152
    bytes_0 = b"2\x80\xc3\x05?|\xa7x\x1f,x\xbd\x1e\xf5\x85^:\x08\xb5"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4298():
    float_0 = 1864.483241
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4299():
    none_type_0 = None
    bool_0 = True
    str_0 = "RuV*C5@\n:m>\x0b"
    tuple_0 = (bool_0, str_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4300():
    bool_0 = False
    float_0 = -1653.63092
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4301():
    bytes_0 = b"0\x16\xf9"
    bytes_1 = b"\xde\xa4Ox@\xb0\x88\xf6"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4302():
    bytes_0 = b"s\xacN\xf7\xdb\xd9\xbf\xe3"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4303():
    bool_0 = False
    int_0 = -2749
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4304():
    str_0 = "I4?[D`o$i/PX"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4305():
    str_0 = "{l.Jl"
    dict_0 = {}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4306():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    object_0 = module_0.object()
    dict_0 = {object_0: object_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4307():
    none_type_0 = None
    str_0 = '\rAyYQ"P!KVq[m'
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4308():
    none_type_0 = None
    int_0 = -746
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4309():
    str_0 = "t0"
    int_0 = -3336
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4310():
    bytes_0 = b"\x04\xa4\xae-\x98\xdc\xd2\xef0\x864ps@r"
    bool_0 = True
    bool_1 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_1}
    list_0 = [dict_0, dict_0]
    list_0.write(bytes_0)


def test_case_4311():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4312():
    bytes_0 = b"8\xf1"
    list_0 = [bytes_0, bytes_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4313():
    a_b_c_0 = module_1.ABC()
    str_0 = "\tO^|J$Z"
    list_0 = [a_b_c_0, str_0, a_b_c_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4314():
    str_0 = "l(d4R!\x0b\x0c%@Am]"
    list_0 = []
    dict_0 = {str_0: str_0, str_0: list_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4315():
    bool_0 = False
    int_0 = 1620
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4316():
    bool_0 = False
    int_0 = 1617
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4317():
    str_0 = "m"
    dict_0 = {}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4318():
    none_type_0 = None
    str_0 = "\tn_mhWx"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4319():
    int_0 = -4024
    complex_0 = -1128.3281 - 2027.6j
    complex_0.write(int_0)


def test_case_4320():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4321():
    str_0 = "6;qn'n?O;Im-oS8C,\r"
    int_0 = -1318
    tuple_0 = (str_0, str_0, int_0)
    float_0 = -1601.48
    float_0.write(tuple_0)


def test_case_4322():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4323():
    none_type_0 = None
    float_0 = 2414.75
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4324():
    set_0 = set()
    float_0 = 15.0
    list_0 = [float_0]
    tuple_0 = (float_0, list_0, float_0)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4325():
    none_type_0 = None
    bytes_0 = b"\xdc\xb7X\xc5Ah>KT\xdd\x0e\x18\x84`"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4326():
    int_0 = 796
    list_0 = [int_0, int_0, int_0, int_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4327():
    bool_0 = True
    int_0 = 350
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4328():
    int_0 = -551
    set_0 = set()
    tuple_0 = (int_0, set_0, set_0)
    str_0 = "w80+=-qS"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4329():
    list_0 = []
    int_0 = 1818
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4330():
    float_0 = -3072.0
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4331():
    dict_0 = {}
    str_0 = "ds}(E3A+y>@<"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4332():
    str_0 = "&c="
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    a_b_c_0 = module_1.ABC()
    dict_0 = {str_0: str_0, str_0: tuple_1, str_0: a_b_c_0, str_0: a_b_c_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4333():
    object_0 = module_0.object()
    bool_0 = True
    bytes_0 = b"6"
    bytes_0.write(bool_0)


def test_case_4334():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4335():
    bool_0 = False
    bytes_0 = b"\x9e\x15vo\x8c\xbd\xc9#"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4336():
    str_0 = "L4v2adh2{KP0*B\x0cA}G:"
    str_1 = "S0uz5%L3"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4337():
    list_0 = []
    object_0 = module_0.object(*list_0)
    bool_0 = True
    bool_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4338():
    bool_0 = True
    list_0 = [bool_0]
    bytes_0 = b"S\xf7\xda\xce>/\xdb\xc7\xde"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4339():
    bool_0 = True
    str_0 = "'g.-0+IDE}RfN!\tWY+F8"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4340():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4341():
    str_0 = "U=n^Uxj"
    str_1 = "DX,u;/rtD ST+R?"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4342():
    str_0 = "!M"
    list_0 = [str_0, str_0, str_0, str_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4343():
    int_0 = 1020
    list_0 = [int_0, int_0, int_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4344():
    bytes_0 = b"\xf0\x8b\x1e("
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4345():
    bool_0 = True
    tuple_0 = (bool_0,)
    set_0 = {tuple_0}
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4346():
    none_type_0 = None
    float_0 = 3376.2
    str_0 = "j2p &nWr"
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: str_0}
    list_0 = [dict_0]
    list_0.write(none_type_0)


def test_case_4347():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4348():
    bool_0 = True
    str_0 = "G|Ipv&1n1"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4349():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    str_0 = "llo\\Pe\t-RL\x0c"
    dict_0 = {str_0: bool_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4350():
    float_0 = -3047.892
    bytes_0 = b"\x0eI\x05\xf1\xa9\xcfR\x13\xae\x87|\x02Ee\xb3I"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4351():
    a_b_c_0 = module_1.ABC()
    str_0 = "qS31i|Bs$I\\fP%"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4352():
    bytes_0 = b"\xf6\xe4\xaa\xdb/\xae\xf2\xa5\xd7\x9e\xbag&\xa3\x0e"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4353():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4354():
    int_0 = 1322
    bytes_0 = b"9\x8c"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4355():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    set_0 = {bool_0, bool_0}
    bytes_0 = b"\x1ecM\xce\x93\xb0d\xf1\xe8\x15\x81^`w\x1ens\x83\xcb"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    tuple_0 = (bytes_0, dict_0)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4356():
    bool_0 = False
    str_0 = "\\|hG="
    list_0 = [str_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4357():
    bytes_0 = b"S\x06\x02\xbd\x06\xb2\xf6"
    a_b_c_0 = module_1.ABC()
    str_0 = "PQErj;=%"
    tuple_0 = (a_b_c_0, str_0)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4358():
    int_0 = 3176
    str_0 = "Yh/J6Km&xlEhwS"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4359():
    bool_0 = False
    tuple_0 = (bool_0,)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4360():
    none_type_0 = None
    complex_0 = 474 - 534j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4361():
    none_type_0 = None
    int_0 = -2694
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4362():
    float_0 = 5313.199745
    float_1 = 836.0
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4363():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    bool_1 = True
    bool_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4364():
    int_0 = 1168
    int_1 = -942
    list_0 = [int_1, int_1]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4365():
    bytes_0 = b"f\xd3~\xedO"
    int_0 = 2278
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4366():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4367():
    bool_0 = False
    int_0 = 1239
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4368():
    str_0 = "M"
    int_0 = -1356
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4369():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    list_0 = [set_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4370():
    bool_0 = True
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4371():
    bool_0 = False
    int_0 = 1390
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4372():
    int_0 = -2513
    bool_0 = True
    tuple_0 = (int_0, bool_0)
    object_0 = module_0.object()
    object_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4373():
    str_0 = "6T"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4374():
    str_0 = ".dtC,[B}+/'vcaj!"
    bytes_0 = b"\nz\x90\xb5\x0c\x01\x14\x94xm\xbd1\x12\xe6"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4375():
    str_0 = '(-"=n3\n[-\x0ceSC-y&'
    str_1 = "o}h$bUlq~QmQdo"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4376():
    int_0 = 684
    set_0 = {int_0, int_0, int_0, int_0}
    set_1 = set()
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4377():
    a_b_c_0 = module_1.ABC()
    str_0 = "+Wi#t/"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4378():
    set_0 = set()
    object_0 = module_0.object(*set_0)
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4379():
    float_0 = -2245.7245
    float_1 = -449.7768
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4380():
    a_b_c_0 = module_1.ABC()
    int_0 = 2295
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4381():
    bytes_0 = b""
    int_0 = 3118
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4382():
    object_0 = module_0.object()
    str_0 = "|E2WCu[?:YmS"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4383():
    bytes_0 = b"M\xf3\xb5\x06\xd7 Q/\xbfqr\xaaE\x165\x05*\x8b&5"
    tuple_0 = (bytes_0,)
    tuple_1 = (tuple_0,)
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, tuple_1: tuple_0, tuple_1: bytes_0}
    tuple_2 = (dict_0, dict_0)
    module_1.ABC(*tuple_2, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4384():
    object_0 = module_0.object()
    int_0 = 848
    list_0 = [int_0, int_0, int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4385():
    bool_0 = True
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4386():
    none_type_0 = None
    set_0 = set()
    object_0 = module_0.object(*set_0)
    object_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4387():
    bytes_0 = b"\t\xc5!r\xb1\x94Pk'\xb7\tr\xe8\xbb}"
    tuple_0 = ()
    str_0 = "=\\wit\nu=Jkpo/\n8U6"
    dict_0 = {tuple_0: tuple_0, str_0: str_0, tuple_0: tuple_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4388():
    str_0 = "_HHYI#H{\rOE58D#5C"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4389():
    bytes_0 = b"\x05\xa4\xe9\xc8"
    str_0 = "h[\ty\\`@Z\r"
    bool_0 = True
    dict_0 = {str_0: str_0, bool_0: str_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4390():
    int_0 = -1708
    int_1 = 689
    list_0 = [int_1, int_1, int_1]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4391():
    none_type_0 = None
    int_0 = 763
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4392():
    bool_0 = False
    float_0 = 4389.872
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4393():
    none_type_0 = None
    bytes_0 = b"&\x015\xcc\x8a\x88D<"
    tuple_0 = (bytes_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4394():
    int_0 = -702
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4395():
    str_0 = "\n\\c^L\tCk)"
    str_1 = "QB3<\n:*t7?oRgGy:"
    str_2 = "qB%7cEHWZM;`PFSUi_*"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4396():
    none_type_0 = None
    float_0 = 182.1545
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4397():
    none_type_0 = None
    int_0 = 760
    int_0.write(none_type_0)


def test_case_4398():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4399():
    bool_0 = False
    bool_1 = False
    set_0 = {bool_1}
    tuple_0 = (set_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4400():
    bytes_0 = b"\xa2\x19\x00\x8c*\xdd,\xfe\xc4\x8f\x7f!\x9cHC"
    float_0 = 1684.50808
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4401():
    float_0 = -961.11
    bytes_0 = b"A\xd6k\x01`FC\xf1"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4402():
    bool_0 = True
    complex_0 = 2024.494 + 430.3j
    set_0 = {complex_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4403():
    str_0 = "rNc9etkC\n<l5UjC|R"
    str_1 = "Kptw\n8GB%C%Ylh0iaM"
    list_0 = [str_1, str_1]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4404():
    bool_0 = True
    bool_1 = True
    tuple_0 = (bool_1,)
    list_0 = [tuple_0, tuple_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4405():
    float_0 = -1281.0
    str_0 = "m\\th"
    list_0 = [str_0, str_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4406():
    bool_0 = True
    bytes_0 = b"\xa4\x1b\xd2Z\xce#\xfaP\xb5\xc5\x91\x94>\x97S\xce\xb7G"
    tuple_0 = (bool_0, bytes_0)
    bool_1 = False
    bool_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4407():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4408():
    object_0 = module_0.object()
    module_1.ABC(**object_0)


@pytest.mark.xfail(strict=True)
def test_case_4409():
    str_0 = "S7\x0b`rp[0\\"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4410():
    bool_0 = True
    bytes_0 = b"*D\x92\xe2\xe6r\x1d[\xb7\xfbD&\xb6\xff\x0f\x0f"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4411():
    int_0 = 3325
    str_0 = "Y8"
    list_0 = [str_0, str_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4412():
    a_b_c_0 = module_1.ABC()
    int_0 = 4465
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4413():
    none_type_0 = None
    complex_0 = -1747.5328 - 3693j
    set_0 = {complex_0, complex_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4414():
    str_0 = "-VK\x0cb|it\nwh:"
    str_1 = ">O%W*.Y].b(^d9V^+O"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4415():
    str_0 = "vPET\x0btE\rW|m<1m\r*SJ6A"
    int_0 = -2712
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4416():
    bool_0 = False
    str_0 = " Qsz\\oN>_ bSd9{892"
    str_1 = "%L ;\x0bk@}m\x0c5c2$\\k"
    int_0 = 11
    set_0 = set()
    tuple_0 = (str_0, str_1, int_0, set_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4417():
    bytes_0 = b"\xd1R\xab%\xac6n"
    str_0 = "f_h>"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4418():
    int_0 = 798
    list_0 = [int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4419():
    str_0 = "#:j,2Zr\\kJP"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4420():
    str_0 = "?qm'Vn\\|gz}tUJ&"
    list_0 = []
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4421():
    int_0 = -708
    bytes_0 = b"\xae\x7f\xe6S\xc2"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4422():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    bool_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4423():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    bool_1 = False
    tuple_0 = (bool_1,)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4424():
    bool_0 = False
    bool_1 = False
    bytes_0 = b"\xd8\x0b\xb6\xea\xb0\xd8V\xc4@\x0e\xc1\x01\xdd\xf8\x9e\x94"
    bool_2 = False
    tuple_0 = (bool_2,)
    tuple_1 = (bool_1, bool_1, bytes_0, tuple_0)
    tuple_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4425():
    bytes_0 = b"|5Hi;"
    list_0 = [bytes_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4426():
    tuple_0 = ()
    int_0 = -360
    bool_0 = True
    tuple_1 = (int_0, int_0, bool_0)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4427():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4428():
    float_0 = 258.0528
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4429():
    none_type_0 = None
    bytes_0 = b"\x94\x8e\xd3\x95\xd37m\xe6J\xbeX\xbe\x07"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4430():
    none_type_0 = None
    list_0 = [none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4431():
    bytes_0 = b"\x17\r\xd0a\x15\xd5"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    int_0 = 2888
    bool_0 = True
    tuple_0 = (list_0, int_0, bool_0, int_0)
    int_1 = -2428
    int_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4432():
    none_type_0 = None
    bytes_0 = b"$\xb1\xc6JCR\xfb\xf0\xff\xcf"
    bytes_0.write(none_type_0)


def test_case_4433():
    pass


def test_case_4434():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4435():
    str_0 = "<sm,6\x0b@J)iK8?\x0c"
    str_1 = "qYx?}@1dmJ4"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4436():
    bool_0 = False
    int_0 = -1838
    list_0 = [int_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4437():
    str_0 = "tU?!6XH"
    str_1 = "q;Nv\\M9jG_"
    str_1.write(str_0)


def test_case_4438():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4439():
    int_0 = -45
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4440():
    none_type_0 = None
    float_0 = 1195.8
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4441():
    none_type_0 = None
    complex_0 = -2296.10876 - 2790.7j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4442():
    a_b_c_0 = module_1.ABC()
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    object_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4443():
    str_0 = ")\x0c@j\x0cwybs8)N~o~a"
    a_b_c_0 = module_1.ABC()
    str_1 = "C-i\x0bDt-%"
    dict_0 = {str_1: a_b_c_0, str_0: str_0, str_0: str_0}
    tuple_0 = (a_b_c_0, str_1, dict_0)
    bool_0 = True
    tuple_1 = (tuple_0, bool_0, str_0)
    list_0 = [str_0, str_0, tuple_1]
    a_b_c_1 = module_1.ABC()
    tuple_2 = (a_b_c_1, a_b_c_1)
    tuple_2.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4444():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4445():
    float_0 = -3838.0
    str_0 = "F}z2V`1eY#n%DvFi"
    a_b_c_0 = module_1.ABC()
    set_0 = {str_0, str_0, str_0, a_b_c_0}
    tuple_0 = (set_0,)
    tuple_0.write(float_0)


def test_case_4446():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_4447():
    list_0 = []
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    set_0 = {tuple_1, tuple_0, tuple_0}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4448():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    int_0 = -917
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4449():
    bool_0 = False
    module_0.object(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4450():
    bool_0 = False
    float_0 = 2589.65
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4451():
    int_0 = -172
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4452():
    str_0 = "GT;} `0Ig+"
    bytes_0 = b"\xa7N\xb4w\xa8\x1b\xe2\xe4\x93\x99\x17\xa1\xaa\xd3n"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4453():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    str_0 = "g*G&K-K|?N\\w?~AmQKD["
    none_type_0 = None
    str_1 = 'p{Dw"B'
    str_2 = ""
    str_3 = "KdTv"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
        str_3: none_type_0,
    }
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4454():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4455():
    bytes_0 = b"\xf7G\x89\xa9B\xe33"
    str_0 = "?6"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4456():
    int_0 = 121
    bytes_0 = b"6t\xf3\x8f\xbc\xeb\x1c\xc6S\xa3\xbb\x1e"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4457():
    none_type_0 = None
    str_0 = "5aT~zRe"
    list_0 = [str_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4458():
    bool_0 = True
    bytes_0 = b"\x1c\x91E\xc1\xb6\\"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4459():
    int_0 = 899
    tuple_0 = (int_0,)
    str_0 = ""
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4460():
    dict_0 = {}
    bool_0 = False
    complex_0 = 1501 + 2462.5684j
    tuple_0 = (dict_0, bool_0, complex_0, bool_0)
    complex_1 = 479 + 260.128j
    complex_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4461():
    a_b_c_0 = module_1.ABC()
    str_0 = "v\rJx(i,Nn"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4462():
    object_0 = module_0.object()
    float_0 = 3059.34595
    set_0 = {float_0, float_0, float_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4463():
    int_0 = -1541
    str_0 = "lx"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4464():
    none_type_0 = None
    bytes_0 = b"^R\x95\xc03w"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4465():
    bool_0 = False
    bytes_0 = b"+M\xde\xd2\x97TV\x81)\xc0\xd8"
    tuple_0 = (bytes_0,)
    list_0 = [bool_0, bool_0, bool_0, tuple_0]
    bool_1 = True
    list_1 = [bool_1, bool_1, bool_1, bool_1]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4466():
    str_0 = '%\nY<v"P\rOXt=0Rqg'
    str_1 = " ?1a(7y;0$FjV(88$QA"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4467():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"g\xdd\xbc"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4468():
    float_0 = -1194.6886
    bytes_0 = b"\xbc]\xd1\x9aik"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4469():
    none_type_0 = None
    complex_0 = -355.73 - 1917.54j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4470():
    bool_0 = False
    int_0 = 937
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4471():
    bool_0 = True
    bytes_0 = b"\x16\xa0\xb0\x8c \xd3\xb3\x8f]W\x9d\x16%\x1b\xfcf\xec"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4472():
    list_0 = []
    float_0 = 1517.206352
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4473():
    bool_0 = True
    bytes_0 = b"\xba\x1c\xaa\x98\xb2c\x9fw\xdc\xaaMz<\x0f\xe2N\xbe\xa3"
    dict_0 = {bytes_0: bytes_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4474():
    object_0 = module_0.object()
    float_0 = -1473.83
    float_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4475():
    float_0 = 2297.0
    bytes_0 = b"\x82F\xb1\xc8$y\xe31( "
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4476():
    int_0 = 1224
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4477():
    none_type_0 = None
    bytes_0 = b'\x90\xeb\x85"\x04\x9b@\x06\x16\xf4v7Z'
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4478():
    str_0 = ")Um3"
    str_1 = "2msT\\\x0co|"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4479():
    none_type_0 = None
    str_0 = "d|E$aLD;DWk86"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4480():
    bytes_0 = b"(\x02"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4481():
    bytes_0 = b'\x0b2\xe2\x954\x82\xdf%f$\x87\xe5\xb6"4\xe3'
    dict_0 = {}
    tuple_0 = (dict_0,)
    list_0 = [tuple_0, dict_0, dict_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4482():
    none_type_0 = None
    int_0 = -1036
    int_0.write(none_type_0)


def test_case_4483():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4484():
    int_0 = 1708
    float_0 = -233.503031
    float_0.write(int_0)


def test_case_4485():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4486():
    none_type_0 = None
    bytes_0 = b"\xdcN\xa7"
    tuple_0 = (bytes_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4487():
    none_type_0 = None
    int_0 = -271
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4488():
    none_type_0 = None
    str_0 = "l\rq"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4489():
    none_type_0 = None
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4490():
    bool_0 = True
    float_0 = -4996.048
    float_0.write(bool_0)


def test_case_4491():
    pass


def test_case_4492():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4493():
    a_b_c_0 = module_1.ABC()
    float_0 = -619.6185
    list_0 = [float_0, float_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4494():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    str_0 = "m"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4495():
    object_0 = module_0.object()
    set_0 = {object_0, object_0, object_0, object_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4496():
    bool_0 = False
    str_0 = "Cik1dCr4VL\\o"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4497():
    bytes_0 = b"\x84\x08\xf3\x13\xa0\xc98P\x95\xae\xb6D\xab\xa0"
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4498():
    str_0 = "Ob.sc)[<<a3fs\\/"
    float_0 = -694.1906
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4499():
    bool_0 = True
    list_0 = [bool_0]
    list_1 = []
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4500():
    none_type_0 = None
    complex_0 = -2313.82686 - 2444.082949j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4501():
    complex_0 = -1224.548 - 1203.1j
    list_0 = []
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4502():
    none_type_0 = None
    bytes_0 = b"\xa4\x7fj'\xc3\x92\xa8&\xe1\x1e]"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4503():
    none_type_0 = None
    str_0 = "c1(+ac8kq"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4504():
    none_type_0 = None
    int_0 = -915
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4505():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4506():
    int_0 = -1705
    dict_0 = {int_0: int_0, int_0: int_0}
    bytes_0 = b"\xeb\xd5H\x92\x98\xe4\xe6\xc1us\xe2W\x8d\xd5C\x9dg"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4507():
    complex_0 = -1242.1603 + 4102.5j
    bool_0 = True
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4508():
    str_0 = "W"
    list_0 = [str_0, str_0, str_0, str_0]
    module_1.ABC(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_4509():
    bool_0 = False
    float_0 = 859.8624
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4510():
    float_0 = -1010.89
    object_0 = module_0.object()
    object_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4511():
    str_0 = ""
    a_b_c_0 = module_1.ABC(*str_0)
    str_1 = "Y7-N#1aIf\x0cB?d"
    dict_0 = {str_1: str_1, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4512():
    bytes_0 = b"}a"
    int_0 = -1567
    int_0.write(bytes_0)


def test_case_4513():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4514():
    bool_0 = False
    str_0 = "$\x0c#sA+J?#w}:"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4515():
    bool_0 = False
    str_0 = "WY.ms@ii\x0cz"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4516():
    str_0 = "e@!+gDbC\n<A-8"
    bytes_0 = b"lJ\xcd\x00Sou\xe4J\xcd\x8b\xdc"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4517():
    bool_0 = False
    bytes_0 = b"8)\xb5\xcd\xf6B\x97d\t3\xf0\xf5\x9c\xffY,\x9e\xa0\xf4"
    tuple_0 = (bytes_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4518():
    bool_0 = False
    float_0 = 440.4671
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4519():
    none_type_0 = None
    str_0 = "SFqGDW"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4520():
    int_0 = 470
    tuple_0 = ()
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4521():
    str_0 = "=Qw82Y5gzmq}XwQ.K\tmG"
    list_0 = [str_0, str_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4522():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4523():
    complex_0 = -457.31 - 4385.101j
    bytes_0 = b'\xf7\x1e\x1ae\x81\t\x13"\xa2\xae'
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    set_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4524():
    int_0 = -2547
    str_0 = "K["
    str_0.write(int_0)


def test_case_4525():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4526():
    bytes_0 = b"\xb5\xa1"
    str_0 = "R/ce"
    tuple_0 = (str_0, str_0)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4527():
    bytes_0 = b"\xf6K\xb3\x96\xd6\x80|c\xda\xc4P\x19\xc2"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4528():
    bool_0 = True
    float_0 = -685.3308
    dict_0 = {float_0: float_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4529():
    bool_0 = False
    int_0 = -624
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4530():
    a_b_c_0 = module_1.ABC()
    int_0 = -4874
    int_0.write(a_b_c_0)


def test_case_4531():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4532():
    none_type_0 = None
    str_0 = "1\x0cWCY"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4533():
    none_type_0 = None
    int_0 = 990
    int_0.write(none_type_0)


def test_case_4534():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4535():
    float_0 = 710.6336
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4536():
    bytes_0 = b"\x8b\x82\x95\xf9\xe7\xcd\xb0<"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    tuple_0 = (list_0,)
    bytes_1 = b"<\x0b\x80}d\xc1\x94\xb9\x01\x1aq\xbd\x81\x15\xcc\x15,eD*"
    bool_0 = False
    dict_0 = {bytes_1: bytes_1, bool_0: bool_0}
    dict_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4537():
    dict_0 = {}
    float_0 = -2690.37
    str_0 = "Xu'r+u`U'C[\nhQr"
    tuple_0 = (float_0, str_0, str_0)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4538():
    bool_0 = True
    str_0 = "ihsZ"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4539():
    int_0 = -899
    float_0 = 1169.81925
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4540():
    int_0 = 1788
    dict_0 = {int_0: int_0}
    int_1 = -275
    int_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4541():
    str_0 = "G,7i<JJB'3:z3^a\r"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4542():
    int_0 = -1101
    int_1 = 2653
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4543():
    complex_0 = -773.66509 - 2034j
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4544():
    int_0 = 3074
    str_0 = "oAk`"
    str_0.write(int_0)


def test_case_4545():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4546():
    dict_0 = {}
    dict_1 = {}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4547():
    bytes_0 = b"0\x90\xb88S`0\xe2\xbc\xc5"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_1.ABC(*list_0)


def test_case_4548():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4549():
    bool_0 = True
    int_0 = 2054
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4550():
    none_type_0 = None
    complex_0 = 647.4635 + 1574.359j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4551():
    str_0 = "~0vu0S:gwGvP{:y7GFq/"
    int_0 = -640
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4552():
    float_0 = 1864.2
    list_0 = [float_0, float_0, float_0]
    str_0 = "<OEoy\t*dx\x0bl,"
    str_1 = "."
    dict_0 = {str_0: list_0, str_1: list_0, str_1: list_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4553():
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: bool_1, bool_0: bool_1, bool_1: bool_0}
    bytes_0 = b"H%\xc8\xee\xb9\xa0\x0f\x82\xb6\xdd\xc6\xe8r>\xf5\xfe\xc4\xc3\x03\xa3"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4554():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    int_0 = -906
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4555():
    bool_0 = True
    int_0 = 1803
    dict_0 = {bool_0: bool_0, int_0: int_0}
    bytes_0 = b"T\xb7D"
    tuple_0 = (bool_0, int_0, dict_0, bytes_0)
    list_0 = [tuple_0, tuple_0]
    tuple_1 = (tuple_0, list_0)
    bool_1 = True
    set_0 = {bool_1, bool_1, bool_1}
    tuple_2 = (set_0, set_0)
    tuple_2.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4556():
    float_0 = 274.384682
    dict_0 = {float_0: float_0, float_0: float_0}
    int_0 = -1392
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4557():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    bytes_0 = b"\xe2\x13\x8e\x9d\xc5VD\xa8\x95\xd4\xf9\x01\xc4\xd3p\x1f\xdf\xf6_"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4558():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4559():
    a_b_c_0 = module_1.ABC()
    int_0 = -657
    int_1 = 787
    tuple_0 = (int_1,)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4560():
    complex_0 = 1930 - 1613.17j
    int_0 = 1506
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4561():
    complex_0 = 311 + 1645.92523j
    list_0 = [complex_0, complex_0, complex_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4562():
    int_0 = 1001
    str_0 = "%wiOd\n:vpby:J.k-rMYQ"
    tuple_0 = (str_0,)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4563():
    str_0 = "7mki=7EL[|"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4564():
    str_0 = "\\["
    dict_0 = {str_0: str_0}
    list_0 = [dict_0, dict_0]
    complex_0 = -481.11289 + 1524j
    complex_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4565():
    str_0 = "f74Ah"
    object_0 = module_0.object()
    object_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4566():
    str_0 = "sR"
    str_1 = '"\x0c@/nWCW"cuAkJ)'
    set_0 = {str_1}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4567():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xc7"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4568():
    bool_0 = False
    bool_1 = False
    a_b_c_0 = module_1.ABC()
    list_0 = [bool_1, bool_1, bool_0, bool_0]
    tuple_0 = (bool_0, bool_1, a_b_c_0, list_0)
    set_0 = set()
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4569():
    str_0 = ")&#dO+!ig@U;%80c\\l}"
    str_1 = "J%eu5<I]#M\rE"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4570():
    str_0 = ""
    str_1 = "sC 0\x0bGn\t\r1#zB^"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4571():
    none_type_0 = None
    float_0 = -2175.914
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4572():
    int_0 = -281
    int_1 = 1134
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4573():
    bytes_0 = b"\x0c"
    object_0 = module_0.object()
    object_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4574():
    float_0 = 258.0
    bool_0 = True
    dict_0 = {float_0: bool_0, bool_0: float_0, bool_0: bool_0}
    tuple_0 = (float_0, bool_0, dict_0)
    int_0 = -51
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4575():
    str_0 = 'uQvk8k(6("TIrS'
    float_0 = -370.347
    set_0 = {float_0}
    set_0.write(str_0)


def test_case_4576():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4577():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    list_0 = [a_b_c_0, a_b_c_0, set_0]
    str_0 = "*k9Hp\x0cs]FY4jqH\x0cwI*"
    dict_0 = {str_0: set_0, str_0: list_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4578():
    int_0 = -4110
    bool_0 = False
    bool_0.write(int_0)


def test_case_4579():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_4580():
    a_b_c_0 = module_1.ABC()
    int_0 = 920
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4581():
    int_0 = 1334
    set_0 = {int_0, int_0}
    set_1 = set()
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4582():
    none_type_0 = None
    bytes_0 = b"\xa4\xdd\xe8\x07\xb4\x1c\x9f\x1e\x95q\x99\xb5"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4583():
    bytes_0 = b"\x95\xdd\xdbO"
    complex_0 = 1461 - 2738.81411j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4584():
    bytes_0 = b"\xd9\xbe\x14"
    bool_0 = True
    tuple_0 = ()
    a_b_c_0 = module_1.ABC()
    tuple_1 = (bool_0, tuple_0, a_b_c_0)
    set_0 = {tuple_1}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4585():
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0, object_0]
    dict_0 = {}
    list_1 = [dict_0, dict_0, dict_0, dict_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4586():
    float_0 = -2127.85144
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4587():
    str_0 = "Tx};^\x0b\x0bE}*[tpZj"
    bool_0 = False
    str_1 = "Y \\(Qle?yFPKaXP;Z?"
    str_2 = "\\=cpjRtRcH'SOQNS"
    dict_0 = {str_0: bool_0, str_1: str_1, str_2: str_0, str_0: str_1}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4588():
    str_0 = "$\t>U<"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4589():
    str_0 = ""
    object_0 = module_0.object()
    dict_0 = {str_0: str_0, str_0: object_0}
    float_0 = -926.376
    float_0.write(dict_0)


def test_case_4590():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4591():
    bool_0 = True
    bool_1 = False
    str_0 = "\\J:Q,y<\r"
    list_0 = [bool_1, str_0, str_0, bool_1]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4592():
    object_0 = module_0.object()
    set_0 = {object_0}
    float_0 = 17.664
    list_0 = [float_0, float_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4593():
    none_type_0 = None
    bytes_0 = b'3\x0b\xaf\xe7\xf5"'
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4594():
    object_0 = module_0.object()
    module_1.ABC(**object_0)


@pytest.mark.xfail(strict=True)
def test_case_4595():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    list_0 = [set_0, bool_0]
    list_1 = []
    tuple_0 = (list_1,)
    tuple_0.write(list_0)


def test_case_4596():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4597():
    int_0 = 1378
    bool_0 = False
    tuple_0 = (int_0, bool_0)
    int_1 = 637
    set_0 = {int_1}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4598():
    str_0 = "<A;xN#"
    list_0 = [str_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4599():
    complex_0 = -439.45 + 3253j
    bytes_0 = b"F\x96\xb6\xbd^\xf60$"
    bytes_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4600():
    str_0 = ";aWY4\r%5ZB+d~7o9H"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4601():
    int_0 = -266
    int_1 = -4161
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4602():
    str_0 = "|39^yI}e*~JK%vhFva"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_4603():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_4604():
    bool_0 = True
    str_0 = "c.&{VjF\ru"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4605():
    bytes_0 = b"\xfe"
    int_0 = -9
    list_0 = [int_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4606():
    str_0 = ""
    bytes_0 = b"\xbd]\x815\xc2\x10\xb8"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4607():
    bool_0 = True
    bytes_0 = b"\x99\x8epKaCL\x8b\x8b,\x9f\x16m\xafO~-"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4608():
    int_0 = -267
    tuple_0 = (int_0,)
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4609():
    int_0 = -4065
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4610():
    int_0 = 468
    int_1 = 1117
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4611():
    int_0 = 934
    list_0 = [int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4612():
    bytes_0 = b"\x93NcP\xdemB"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4613():
    str_0 = '\n"a.sOeGp3\niu'
    module_0.object(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_4614():
    int_0 = -831
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    int_1 = -470
    int_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4615():
    none_type_0 = None
    bytes_0 = b"\x88\xdc38U"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4616():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    list_0 = []
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4617():
    bytes_0 = b"\xc0\xc9\x98\xe2\x8a @Gt\\Y\xd4J9\xd4\xecz"
    complex_0 = 538.279 + 2770.8021j
    set_0 = {complex_0}
    list_0 = [set_0, complex_0, complex_0, complex_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4618():
    float_0 = -3685.335122
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4619():
    int_0 = -4435
    int_1 = 997
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4620():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    float_0 = -2090.9
    float_0.write(a_b_c_0)


def test_case_4621():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4622():
    a_b_c_0 = module_1.ABC()
    module_1.ABC(*a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4623():
    int_0 = -431
    str_0 = ".s'+\x0b<Uwx(UZC\\"
    str_1 = "7x[E\x0c(\x0cd\\\x0c,s9P"
    dict_0 = {str_0: int_0, str_1: int_0}
    module_1.ABC(*int_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4624():
    float_0 = 1120.0
    set_0 = {float_0, float_0, float_0, float_0}
    bytes_0 = b"L\xbcL"
    tuple_0 = (float_0, set_0, bytes_0, float_0)
    int_0 = 3552
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4625():
    none_type_0 = None
    float_0 = 2408.0
    tuple_0 = (float_0, float_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4626():
    str_0 = "c["
    int_0 = -3820
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4627():
    bool_0 = False
    int_0 = -723
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4628():
    float_0 = 459.19
    str_0 = "!\r`"
    str_0.write(float_0)


def test_case_4629():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_4630():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    int_0 = -985
    int_0.write(list_0)


def test_case_4631():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4632():
    int_0 = -916
    list_0 = [int_0, int_0]
    complex_0 = 296 - 1188.51j
    str_0 = ">g(nmTDE-&\x0cI#"
    tuple_0 = (complex_0, str_0)
    dict_0 = {
        tuple_0: complex_0,
        tuple_0: tuple_0,
        complex_0: tuple_0,
        complex_0: tuple_0,
    }
    list_1 = [dict_0, str_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4633():
    str_0 = "9\n>FIYdG"
    list_0 = [str_0, str_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4634():
    bytes_0 = b"\x08\x9d\xb9"
    bool_0 = True
    list_0 = [bytes_0, bytes_0, bool_0]
    list_1 = [list_0]
    str_0 = "SThB\tzemHZ\x0b"
    bool_1 = False
    bytes_1 = b"\xe6\x80\xbe\xee\xa4\x8bW\xf4\xd2"
    tuple_0 = (str_0, bool_1, bytes_1)
    tuple_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_4635():
    int_0 = 1864
    dict_0 = {int_0: int_0}
    set_0 = set()
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4636():
    bool_0 = False
    module_1.ABC(*bool_0)


def test_case_4637():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4638():
    int_0 = 813
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4639():
    str_0 = "9'"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4640():
    str_0 = "_\\A;2@=*U:f51K6POnX"
    object_0 = module_0.object()
    set_0 = {str_0, str_0, object_0}
    bool_0 = False
    set_1 = {bool_0, bool_0, bool_0}
    list_0 = [set_1]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4641():
    bool_0 = True
    bool_1 = True
    set_0 = {bool_1, bool_1, bool_1, bool_1}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4642():
    bytes_0 = b"<\x90\xed\x9a\x1d\x92\xe6{\xe4%\x94\x95H=\xe8\xa3Q\xfe\xac\x17"
    str_0 = "c$>XGetAH)\tzmV1ds#D"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4643():
    int_0 = 1122
    int_1 = 191
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4644():
    complex_0 = 1413.1 + 2316.917j
    list_0 = [complex_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4645():
    float_0 = 3098.9804
    tuple_0 = (float_0,)
    set_0 = {tuple_0}
    bytes_0 = b"\xcd4h\xa9\xe4\xee\nS\x14@,(ll\xe9\x13vG"
    dict_0 = {bytes_0: bytes_0}
    tuple_1 = ()
    list_0 = [dict_0, dict_0, tuple_1]
    tuple_2 = (list_0,)
    tuple_3 = (dict_0, tuple_2)
    tuple_3.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4646():
    int_0 = -3997
    int_1 = 1365
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4647():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4648():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    dict_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4649():
    none_type_0 = None
    int_0 = 2359
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4650():
    none_type_0 = None
    float_0 = -1405.37
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4651():
    int_0 = 627
    set_0 = {int_0, int_0}
    module_0.object(*set_0)


def test_case_4652():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4653():
    float_0 = 469.1
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4654():
    str_0 = "M\tCA\tC-S[<K"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4655():
    str_0 = "B?[UC->(."
    a_b_c_0 = module_1.ABC()
    dict_0 = {str_0: str_0, str_0: a_b_c_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4656():
    int_0 = -1318
    str_0 = ""
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4657():
    bool_0 = True
    set_0 = {bool_0}
    int_0 = 2267
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4658():
    int_0 = 3290
    str_0 = "u>/=|sCeX;'omvEU"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4659():
    bool_0 = True
    int_0 = -261
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4660():
    str_0 = "9\nyXN("
    list_0 = [str_0, str_0]
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4661():
    bytes_0 = b"=\xedY\x869\xbf\x19\xb8"
    list_0 = [bytes_0, bytes_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4662():
    bytes_0 = b"x\x89\x05ay\xaa\x8f>"
    set_0 = {bytes_0}
    module_1.ABC(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_4663():
    none_type_0 = None
    str_0 = "LhDe+d"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4664():
    int_0 = 4143
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4665():
    object_0 = module_0.object()
    bytes_0 = b"\xb1;5\x9a\xc5L\xf3\xd8\xa3us4O\xfcm\t\x8e%\xa8"
    bytes_1 = b"\xf3]<\xf5dz"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4666():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    str_0 = "G`#t"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4667():
    bytes_0 = b"\x8f4\xd7I\xb7\x92\xdbsG\x81h\x88\x16\xff/\xdd"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4668():
    str_0 = "/jb._S?ykvj<6I&qi"
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(str_0)


def test_case_4669():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4670():
    list_0 = []
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: list_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4671():
    int_0 = 1210
    float_0 = 907.0
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4672():
    object_0 = module_0.object()
    int_0 = -2373
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4673():
    int_0 = -1403
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4674():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4675():
    none_type_0 = None
    bytes_0 = b'\xfa7m\x9b\xdff\xe2\x9a\xd4@NE\xca)"\xa5\x89'
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4676():
    int_0 = -5152
    int_1 = 809
    set_0 = {int_1, int_1}
    set_0.write(int_0)


def test_case_4677():
    pass


def test_case_4678():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4679():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4680():
    bytes_0 = b"\xa4Y\x8f\x86\x90u\xec\xb8:\x80\x03o\xb3D\xd3\xe5d"
    bool_0 = False
    bytes_1 = b"\t\x7fHb\xe5"
    dict_0 = {bool_0: bytes_1, bool_0: bool_0, bytes_1: bytes_1, bool_0: bytes_1}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4681():
    str_0 = 'Pld"Ca\n_=r'
    float_0 = 575.862
    list_0 = [float_0]
    list_0.write(str_0)


def test_case_4682():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4683():
    int_0 = -2071
    list_0 = [int_0, int_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4684():
    str_0 = "Ks(~y%.;*0"
    str_1 = "T]sHyvt}R\t\\9"
    str_2 = "`V@'_v?eV"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_2}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4685():
    str_0 = "u/\x0cUCvY/RFA"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4686():
    str_0 = ""
    bytes_0 = b"{\xb3\x83\xe2\x82?\xb8\x05\xd9l$\x9dH\xfc\xce\xc9"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4687():
    bool_0 = True
    str_0 = "#6n1Y'P){;R"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4688():
    bool_0 = True
    str_0 = "/;/TrZ"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4689():
    bool_0 = True
    int_0 = 981
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4690():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


def test_case_4691():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4692():
    bool_0 = False
    int_0 = 410
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4693():
    complex_0 = 161.8 + 2753j
    float_0 = 1171.434261
    list_0 = [complex_0, complex_0, complex_0, float_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4694():
    complex_0 = 1218.6912 - 347.6925j
    bool_0 = True
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4695():
    bool_0 = False
    bool_1 = False
    set_0 = {bool_1}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4696():
    complex_0 = 4928.164214 - 2153.05j
    tuple_0 = ()
    tuple_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4697():
    tuple_0 = ()
    float_0 = -2024.298497
    float_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4698():
    str_0 = "z"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4699():
    int_0 = -954
    list_0 = [int_0]
    float_0 = -2788.025832
    str_0 = "#B_>?Q`C{Bj%OG8Qp7!E"
    bool_0 = False
    list_1 = [bool_0, str_0]
    dict_0 = {bool_0: list_1}
    tuple_0 = (float_0, str_0, dict_0, list_1)
    tuple_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4700():
    bool_0 = True
    bool_1 = False
    set_0 = {bool_1}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4701():
    float_0 = 3186.38
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4702():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    str_0 = "^KD\x0bD(A ,9O0HS"
    str_0.write(a_b_c_0)


def test_case_4703():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4704():
    bool_0 = False
    int_0 = -2558
    int_0.write(bool_0)


def test_case_4705():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4706():
    bool_0 = True
    list_0 = [bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4707():
    none_type_0 = None
    float_0 = -2761.5
    list_0 = [float_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4708():
    none_type_0 = None
    bytes_0 = b"\xa3T\x8d\xf5\xac\xfe\xbb\xb4\x08"
    bytes_0.write(none_type_0)


def test_case_4709():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_4710():
    none_type_0 = None
    str_0 = "l/@l,IY}Ui7RrK"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4711():
    bytes_0 = b"\xe4% #\xa1xW"
    tuple_0 = (bytes_0,)
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4712():
    none_type_0 = None
    float_0 = -1332.1044
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4713():
    float_0 = 143.1441
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    object_0 = module_0.object()
    object_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4714():
    bool_0 = False
    module_0.object(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4715():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    int_0 = 948
    int_0.write(a_b_c_0)


def test_case_4716():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4717():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4718():
    int_0 = -190
    tuple_0 = ()
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4719():
    bytes_0 = b"\xc0\x11\x13p\xcb\xbd\xbb\x06O\xb1\xee\n"
    int_0 = 2113
    int_0.write(bytes_0)


def test_case_4720():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4721():
    bytes_0 = b""
    bool_0 = True
    list_0 = [bool_0, bool_0]
    list_1 = [list_0, list_0]
    list_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4722():
    int_0 = 2937
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4723():
    none_type_0 = None
    set_0 = set()
    bytes_0 = b"\x9e\xce\xf1\x93/$'\x95\xd2W\xe31\x10"
    list_0 = [set_0, set_0, bytes_0, set_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4724():
    bytes_0 = b"N\x8c"
    list_0 = [bytes_0, bytes_0]
    dict_0 = {}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4725():
    bool_0 = False
    bool_1 = True
    dict_0 = {bool_1: bool_1, bool_1: bool_1, bool_1: bool_1, bool_1: bool_1}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4726():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4727():
    float_0 = 1540.7
    tuple_0 = (float_0,)
    bool_0 = False
    bytes_0 = b"\xa1!F\xc5\xde;{\x86\xfesD\xb7"
    tuple_1 = (float_0, tuple_0, bool_0, bytes_0)
    int_0 = 2957
    int_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4728():
    int_0 = 783
    module_1.ABC(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_4729():
    int_0 = -3525
    bytes_0 = b"\x88\xd8\x12\xb9\xafZ"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4730():
    bytes_0 = b"\xbd\xea\xc9\xb8x\xd5K\xc4\x8a\xd8\xa1T\xe7"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    str_0 = "EZs]@C~*^'H5yv"
    dict_1 = {str_0: str_0, str_0: str_0}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4731():
    tuple_0 = ()
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    object_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4732():
    int_0 = -791
    int_1 = 300
    dict_0 = {}
    set_0 = set()
    tuple_0 = (int_1, dict_0, set_0)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4733():
    str_0 = "hSYQ\x0be|Z+unD}i"
    bytes_0 = b'\xf8j\xd8\xca\xe7#y$\xd3\xdf"'
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4734():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4735():
    str_0 = "*}\n\n=N1n]GT}$S{Hm"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4736():
    none_type_0 = None
    bytes_0 = b"\x80\xee\xc6.\xcc\xa5\xfe[|\xebU"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4737():
    bytes_0 = b"60\xe0\xe5\xca$\x00N\xa9Fs\x15\xff\xf7=\xcdS\x9d"
    object_0 = module_0.object()
    object_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4738():
    none_type_0 = None
    str_0 = "}zvJD"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4739():
    bool_0 = True
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4740():
    str_0 = "$R1nK*Zy"
    complex_0 = 3810.23 + 2598.951j
    complex_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4741():
    bool_0 = True
    int_0 = 1903
    dict_0 = {bool_0: bool_0, int_0: int_0}
    object_0 = module_0.object()
    set_0 = {object_0, object_0, object_0}
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4742():
    complex_0 = 177.1436 + 715.62j
    float_0 = 1493.9002
    float_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4743():
    bytes_0 = b"\xd9\xe3\x9b5o[\xaa\xa3\xa5f\xf5t"
    int_0 = 278
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4744():
    bool_0 = False
    set_0 = {bool_0}
    tuple_0 = (set_0,)
    object_0 = module_0.object()
    object_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4745():
    str_0 = "f>jp0|*K2~jf"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4746():
    str_0 = "]-_Uy"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4747():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    str_0 = "|"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4748():
    none_type_0 = None
    int_0 = 12
    bytes_0 = b"%{9"
    bytes_1 = b"\xd6\x12\xb2"
    tuple_0 = (int_0, bytes_0, bytes_1)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4749():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4750():
    none_type_0 = None
    bytes_0 = b""
    set_0 = {bytes_0, bytes_0, bytes_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4751():
    int_0 = -2283
    str_0 = "3X\t9g"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4752():
    bool_0 = True
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4753():
    str_0 = ""
    int_0 = -344
    set_0 = {int_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4754():
    bool_0 = False
    set_0 = {bool_0}
    object_0 = module_0.object()
    object_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4755():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    tuple_0 = (set_0,)
    bytes_0 = b"\x8e"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4756():
    str_0 = "+@{q*oQAAdGYgdm}W"
    str_1 = "h\t#]KQCMvIm"
    str_2 = "vBiu1Y([}Vs"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: str_2}
    module_1.ABC(**dict_0)


def test_case_4757():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4758():
    list_0 = []
    bytes_0 = b"\xaf\xf4\x97\x1d\x02\xf9m*<\xa5\xbd\xa5\xa7\xc9\xe7D\xac\xbf"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4759():
    set_0 = set()
    object_0 = module_0.object()
    object_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4760():
    dict_0 = {}
    str_0 = "~$O[ms.FoPFH2?#u94O"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4761():
    complex_0 = 228 + 490.839j
    bool_0 = True
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4762():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0}
    int_0 = -4118
    list_0 = [int_0, int_0, int_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4763():
    bool_0 = False
    module_1.ABC(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4764():
    bool_0 = False
    list_0 = []
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4765():
    none_type_0 = None
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, bool_0, dict_0, dict_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4766():
    bool_0 = False
    bytes_0 = b"\x15\x17\r"
    bytes_0.write(bool_0)


def test_case_4767():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4768():
    str_0 = "("
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4769():
    float_0 = 3120.53733
    bytes_0 = b"\xe6\xdf\xb3(\xa4\xfb0/"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4770():
    a_b_c_0 = module_1.ABC()
    complex_0 = 1460.4473 - 240j
    list_0 = [complex_0, complex_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4771():
    complex_0 = 924.6809 - 47.95j
    bool_0 = False
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4772():
    none_type_0 = None
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = [dict_0, dict_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4773():
    bytes_0 = b"\x1e\x07\xbb"
    tuple_0 = (bytes_0,)
    bool_0 = True
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4774():
    int_0 = 1237
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4775():
    complex_0 = 1153.3 + 574.009j
    set_0 = {complex_0, complex_0, complex_0}
    list_0 = [set_0, complex_0, complex_0, set_0]
    module_1.ABC(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_4776():
    str_0 = ">?"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4777():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4778():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    object_0 = module_0.object()
    tuple_0 = (object_0,)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4779():
    none_type_0 = None
    int_0 = -3552
    int_0.write(none_type_0)


def test_case_4780():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4781():
    int_0 = -1805
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4782():
    object_0 = module_0.object()
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4783():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    bytes_0 = b"\x17\xb6\x90\xa1\xfd\xda\x12\x9c.\xa9\x87$R\xd9B"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4784():
    str_0 = 'dH:\t`"P&A<}%`o'
    str_1 = "l7z\t>tiAo:g"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_0: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4785():
    none_type_0 = None
    float_0 = -100.14
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4786():
    bool_0 = True
    object_0 = module_0.object()
    list_0 = [object_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4787():
    int_0 = -1627
    int_1 = 2642
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4788():
    list_0 = []
    float_0 = 3195.23
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4789():
    bytes_0 = b"\x05\x01\xc8\x02\xf2\xf1"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4790():
    float_0 = 3240.0
    module_1.ABC(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_4791():
    none_type_0 = None
    str_0 = "@Y|Q 00Yi"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4792():
    bytes_0 = b""
    float_0 = 3163.0
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4793():
    str_0 = "fh{MDE=X@,jIJ"
    int_0 = 5667
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4794():
    bool_0 = True
    str_0 = "9<95oO`Wu@9MVe~e@\x0cCo"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4795():
    float_0 = -2353.42
    str_0 = "I5\\yls<{z~'\t\x0c}`"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4796():
    none_type_0 = None
    str_0 = "7#IG\x0c8_a&>,"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4797():
    bool_0 = True
    set_0 = {bool_0}
    bytes_0 = b"\xed\x11\xea\xa7\t7\xfc\xbf\x83\xee\x83\xd9\x9d\xbe\xfa\x0c"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4798():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    int_0 = -4902
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4799():
    object_0 = module_0.object()
    int_0 = 3254
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4800():
    int_0 = 845
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4801():
    str_0 = "\x0cI\x0bk\x0c"
    dict_0 = {str_0: str_0}
    list_0 = []
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4802():
    float_0 = -1042.38021
    bool_0 = True
    bool_0.write(float_0)


def test_case_4803():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4804():
    none_type_0 = None
    float_0 = -628.4351
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4805():
    int_0 = 687
    int_1 = -1757
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4806():
    bytes_0 = b"\xb9\x98B\x83\x92\xa5G\xce\x16\xbdO\xbd\x02\xb8\t"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4807():
    bool_0 = False
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4808():
    str_0 = ""
    tuple_0 = (str_0,)
    str_1 = "3{r3u!I&]8C$X"
    dict_0 = {str_1: str_1}
    dict_1 = {tuple_0: tuple_0, tuple_0: tuple_0, str_0: dict_0, str_1: str_0}
    bytes_0 = b"\x9d\xd6\x96\xe8\xe8 F\x82\xb5\xbc\xafi\xacb\x07"
    bytes_0.write(dict_1)


@pytest.mark.xfail(strict=True)
def test_case_4809():
    bool_0 = True
    module_0.object(*bool_0)


def test_case_4810():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_4811():
    bool_0 = True
    list_0 = [bool_0]
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4812():
    none_type_0 = None
    bytes_0 = b"+"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4813():
    a_b_c_0 = module_1.ABC()
    complex_0 = -1212 + 336.623823j
    complex_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4814():
    complex_0 = -970.21 - 1080.819j
    module_1.ABC(**complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4815():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    bytes_0 = b"\xd8\x02w\xe3\r\xd5[Y \xb4\xa4$M\xa0\n\xa7\x8c/\x12"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4816():
    complex_0 = -553.6 + 418.483357j
    list_0 = []
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4817():
    str_0 = "L-A;qiW"
    int_0 = 295
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4818():
    bool_0 = False
    str_0 = 'Pv;EoQ"W67\'o\r"'
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4819():
    bytes_0 = b"2\x82\xc4h"
    module_0.object(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4820():
    bytes_0 = b"}\xf3\x11\xf53\xa7!"
    bool_0 = True
    bool_1 = True
    dict_0 = {bytes_0: bool_1, bool_0: bool_1}
    tuple_0 = (bytes_0, bool_0, bool_1, dict_0)
    bytes_1 = b"\x11\x99\xd4+\x953\x89h\x85\xc8z\xbb\xa8\xb8\xf3\x7f\xedO\xf8\x11"
    bytes_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4821():
    bool_0 = False
    str_0 = "]K9)lE*47KD "
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4822():
    bytes_0 = b"\xd8\xb2JjvH\xc48#\x8fyEJ\xe2\x1d\x11\x82\r\xec"
    bytes_1 = b"\x87\xf3>\x8cF\x84.\x15)\xea\xb9"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4823():
    str_0 = ""
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4824():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4825():
    str_0 = "57zXQ\x0c90JV"
    float_0 = 285.0
    tuple_0 = ()
    bool_0 = False
    tuple_1 = (tuple_0, float_0, bool_0)
    dict_0 = {float_0: tuple_1, str_0: bool_0, float_0: tuple_1, tuple_0: tuple_1}
    dict_1 = {str_0: str_0, str_0: str_0, str_0: dict_0, tuple_0: float_0}
    list_0 = [str_0, str_0, str_0, dict_1]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4826():
    bytes_0 = b"=\xe1\xbf3"
    str_0 = "T!=88"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4827():
    bool_0 = False
    int_0 = -985
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4828():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4829():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xe5w=\xd4"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4830():
    none_type_0 = None
    object_0 = module_0.object()
    object_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4831():
    none_type_0 = None
    int_0 = 2447
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4832():
    str_0 = "8cF\t"
    bytes_0 = b"\x94\xea\xde\x00_e\xb4\x95\x14e\xd1\x93\x89\x8e\x81"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4833():
    int_0 = 1689
    bytes_0 = b"\x05L\xe2 w\x00\x80\x06z\xcc\\["
    set_0 = {bytes_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4834():
    str_0 = "zrs/yHk;Op"
    set_0 = {str_0, str_0, str_0, str_0}
    str_1 = "H3Jb<~5dD"
    str_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4835():
    float_0 = 1247.0
    dict_0 = {float_0: float_0}
    list_0 = []
    list_0.write(dict_0)


def test_case_4836():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4837():
    float_0 = -1989.79
    str_0 = "D/"
    str_0.write(float_0)


def test_case_4838():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_4839():
    bytes_0 = b"(\x99Q\x0f\xac\xa1F\xaa\xc1\xc77N"
    bytes_1 = b"\xa4\xcd\x1e"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4840():
    float_0 = -1014.48149
    a_b_c_0 = module_1.ABC()
    list_0 = []
    a_b_c_1 = module_1.ABC()
    dict_0 = {a_b_c_0: list_0, a_b_c_1: list_0, a_b_c_0: a_b_c_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4841():
    bytes_0 = b"Z\xa6}\x8b\xbe\x10C"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4842():
    bool_0 = False
    dict_0 = {}
    bool_1 = True
    tuple_0 = (bool_0, bool_0, dict_0, bool_1)
    set_0 = set()
    list_0 = [set_0, set_0, set_0]
    list_1 = [set_0, set_0, set_0, list_0]
    list_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4843():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4844():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    tuple_0 = (a_b_c_0,)
    str_0 = "_r9]-7\"C'.;Ij"
    dict_1 = {str_0: str_0, str_0: str_0}
    dict_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4845():
    int_0 = 2220
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4846():
    bool_0 = False
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4847():
    none_type_0 = None
    str_0 = " ^}r(}S+k\x0cT,"
    list_0 = [str_0, str_0]
    list_1 = [list_0, list_0]
    list_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4848():
    bytes_0 = b"J\xc4\x15\xd2k\xb7a\xbf\xec\x11\xd0\x7f\x8f\t6\x0b"
    list_0 = [bytes_0, bytes_0]
    str_0 = "UL@ZS@:[P{"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4849():
    bytes_0 = b"\x8eQg\x198\xc6\xe0W\x02Z\x8f\xbc\xd2\xca\x14\x9dV~"
    float_0 = -103.6142
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4850():
    bytes_0 = b"\x92:\xb1r\x1cdN\x0bZ\xda\xba\xb5'"
    module_0.object(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4851():
    bool_0 = True
    int_0 = 2639
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4852():
    str_0 = "tSFS\t1sK$\n!w[:Kq="
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4853():
    object_0 = module_0.object()
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4854():
    none_type_0 = None
    set_0 = set()
    bool_0 = False
    tuple_0 = (set_0, bool_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4855():
    bool_0 = True
    float_0 = 2241.3
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4856():
    dict_0 = {}
    bytes_0 = b"\xbd\x0c!\x8eA\xe6\xbc\xde\xf7"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4857():
    bool_0 = False
    list_0 = []
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4858():
    bytes_0 = b'"\xa6\xfe\x1f\xe2~\xde\xdbr\xa6\x19\xd9\xfd\xd0\xba\xc7\x1a'
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4859():
    bytes_0 = b""
    set_0 = {bytes_0, bytes_0}
    int_0 = -1345
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4860():
    int_0 = -1889
    set_0 = {int_0, int_0, int_0}
    bytes_0 = b"Y\xf4\xd1\x1b\xbb,\xaf\xb4n\xcf\xd0\x10"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4861():
    int_0 = 2478
    bool_0 = True
    bool_0.write(int_0)


def test_case_4862():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4863():
    int_0 = 2742
    dict_0 = {int_0: int_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4864():
    float_0 = -1732.97
    set_0 = {float_0}
    int_0 = 4445
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4865():
    str_0 = "\x0c=f"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4866():
    float_0 = -1546.6429
    bytes_0 = b"\x06\xf4\x10\xa0\xa7E\xa5p\\\xb9"
    tuple_0 = (bytes_0,)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4867():
    object_0 = module_0.object()
    bytes_0 = b"\xac#4\xd9\xe8\x0f\x12\xae"
    a_b_c_0 = module_1.ABC()
    dict_0 = {bytes_0: a_b_c_0}
    dict_1 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: dict_0, bytes_0: dict_0}
    dict_1.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4868():
    str_0 = "O)#\\Em>#\tT-"
    none_type_0 = None
    str_1 = "'0_$,[wv!yV,"
    str_2 = "D>1u\\Pnh'uI\ti:%7pZk"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_2: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4869():
    bool_0 = True
    bool_1 = True
    bool_2 = True
    set_0 = {bool_1, bool_2}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4870():
    float_0 = 541.26
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4871():
    bool_0 = False
    list_0 = [bool_0]
    module_1.ABC(*list_0, **bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4872():
    str_0 = ""
    int_0 = 100
    tuple_0 = (int_0,)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4873():
    bool_0 = True
    float_0 = -2062.29
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4874():
    none_type_0 = None
    str_0 = "p~"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4875():
    str_0 = "s"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4876():
    bytes_0 = b"\x08&"
    int_0 = -445
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4877():
    int_0 = 990
    object_0 = module_0.object()
    object_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4878():
    bool_0 = False
    bytes_0 = b"\xb0\xf7B\xa2\xca*\xb9"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4879():
    str_0 = "TBp"
    int_0 = 2129
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4880():
    bool_0 = True
    str_0 = ")w\\"
    bytes_0 = b"\x01M\xcb\xf7P\xb5\xf5\xf0\xb7\x0e\xe5\x16\x0e7d7g"
    tuple_0 = (bool_0, str_0, str_0, bytes_0)
    complex_0 = -2318.253 + 2196.91j
    list_0 = [complex_0]
    list_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4881():
    float_0 = 564.22
    int_0 = 39
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4882():
    a_b_c_0 = module_1.ABC()
    int_0 = -3687
    list_0 = [int_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4883():
    none_type_0 = None
    str_0 = "sZpPWr2]m'*-5^?/"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4884():
    complex_0 = -2144.663 + 868.686j
    int_0 = 3047
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4885():
    none_type_0 = None
    int_0 = 65
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4886():
    none_type_0 = None
    bytes_0 = b"\xd8m\x9cQ\xc4\xd7\x9b\xbc"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4887():
    complex_0 = 420 - 687.2593j
    bool_0 = True
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4888():
    float_0 = -2671.1933
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4889():
    bool_0 = True
    bool_1 = True
    set_0 = {bool_1, bool_1, bool_1}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4890():
    a_b_c_0 = module_1.ABC()
    float_0 = 1375.3573
    tuple_0 = (float_0,)
    dict_0 = {a_b_c_0: tuple_0, tuple_0: tuple_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4891():
    str_0 = "$Yj"
    str_1 = "kn_0\x0c\rhe|Ij]&s&\\F!"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4892():
    complex_0 = 1202 + 689.54203j
    bool_0 = False
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4893():
    str_0 = "\x0b"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4894():
    none_type_0 = None
    int_0 = 1443
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4895():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"u\xaa\n\xee\xd6\xb1\xa7\xa4\xd8"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4896():
    int_0 = -851
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4897():
    str_0 = "/D\x0cM@}HULnK![Qd"
    float_0 = 2780.2
    list_0 = [float_0, float_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4898():
    none_type_0 = None
    str_0 = ""
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4899():
    list_0 = []
    list_1 = [list_0]
    module_1.ABC(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_4900():
    bool_0 = False
    complex_0 = -2290.3196 + 2385j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4901():
    none_type_0 = None
    str_0 = "Qlb\tz"
    list_0 = [str_0, str_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4902():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    set_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4903():
    a_b_c_0 = module_1.ABC()
    int_0 = -2182
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4904():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    str_0 = '"SFKP7'
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4905():
    bool_0 = False
    bytes_0 = b".\x93.3\xc9\xfac\x810\x03J\xb8N/\xd2\x8c"
    bytes_0.write(bool_0)


def test_case_4906():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4907():
    bool_0 = False
    set_0 = {bool_0}
    float_0 = -1590.56
    bool_1 = False
    tuple_0 = (float_0, bool_1)
    set_1 = {tuple_0, bool_1}
    set_1.write(set_0)


def test_case_4908():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4909():
    none_type_0 = None
    module_0.object(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4910():
    set_0 = set()
    float_0 = 1481.3
    list_0 = [float_0, float_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4911():
    a_b_c_0 = module_1.ABC()
    int_0 = 918
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4912():
    none_type_0 = None
    float_0 = -468.1869
    float_0.write(none_type_0)


def test_case_4913():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4914():
    list_0 = []
    str_0 = "p)"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4915():
    none_type_0 = None
    int_0 = -808
    list_0 = [int_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4916():
    int_0 = 2233
    bytes_0 = b"c"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4917():
    none_type_0 = None
    float_0 = 1963.2484
    set_0 = {float_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4918():
    bool_0 = True
    dict_0 = {}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4919():
    bool_0 = True
    complex_0 = 3627.31 - 3253.04629j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4920():
    object_0 = module_0.object()
    dict_0 = {object_0: object_0}
    dict_1 = {}
    bytes_0 = b"W\x170\x19\xff\xa9\x90|\r\xac\x8btZ"
    complex_0 = 350.4 + 1821.4725j
    tuple_0 = (dict_1, dict_1, bytes_0, complex_0)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4921():
    str_0 = "_7D?)A[K o,8"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4922():
    complex_0 = -1858.8334 - 185.3j
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4923():
    bool_0 = False
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0]
    list_0.write(bool_0)


def test_case_4924():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4925():
    none_type_0 = None
    int_0 = -948
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4926():
    str_0 = "8~(#4hA<O&\t\x0b"
    tuple_0 = ()
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4927():
    str_0 = "Kp^AvC(~7_L2B"
    bool_0 = True
    float_0 = -1415.0
    tuple_0 = (str_0, bool_0, bool_0, float_0)
    int_0 = 517
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4928():
    bool_0 = False
    list_0 = [bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4929():
    list_0 = []
    object_0 = module_0.object(*list_0)
    set_0 = set()
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4930():
    int_0 = 371
    float_0 = -2342.0
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4931():
    object_0 = module_0.object()
    set_0 = {object_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4932():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    none_type_0 = None
    module_0.object(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4933():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4934():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4935():
    str_0 = "I!@]@Y"
    float_0 = -569.5
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4936():
    object_0 = module_0.object()
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    str_0 = "5(<a;pN*I\na$u\r31\\DBp"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4937():
    tuple_0 = ()
    bool_0 = False
    set_0 = {bool_0, bool_0}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4938():
    bytes_0 = b"\x10\xa2\xaa\x92q\xf3\xfe\xf9\xe4X\x06\xe9J\x19\xd9\x0f\x83"
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    list_0 = [dict_0, bool_0, dict_0, bool_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4939():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    tuple_0 = (bool_0, dict_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4940():
    none_type_0 = None
    int_0 = 1706
    int_0.write(none_type_0)


def test_case_4941():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4942():
    str_0 = "|XoGN^H=%XT"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4943():
    bool_0 = True
    list_0 = [bool_0]
    list_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4944():
    none_type_0 = None
    str_0 = "k"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4945():
    none_type_0 = None
    str_0 = "^sY!%"
    str_0.write(none_type_0)


def test_case_4946():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4947():
    str_0 = "h"
    bool_0 = True
    dict_0 = {str_0: str_0, bool_0: str_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4948():
    str_0 = "caR"
    bytes_0 = b"\x1b\x13?jz&"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4949():
    bool_0 = True
    int_0 = -245
    float_0 = 314.0
    dict_0 = {int_0: float_0, float_0: float_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4950():
    bool_0 = False
    set_0 = {bool_0}
    bool_1 = False
    bool_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4951():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0}
    str_0 = "*"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4952():
    tuple_0 = ()
    float_0 = 5496.88149
    float_0.write(tuple_0)


def test_case_4953():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4954():
    float_0 = 1637.0
    bytes_0 = b"\xf9&\xda\x91\x04\x9d\x18\xce\x1e\xcd\xbf\xc4\x9c\xe0\x15c\xc2\x96\x95"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4955():
    int_0 = -1607
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4956():
    bool_0 = False
    tuple_0 = ()
    set_0 = {tuple_0}
    list_0 = [set_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4957():
    complex_0 = 1063.658803 + 4021.55273j
    int_0 = 657
    list_0 = [int_0]
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4958():
    bytes_0 = b"\xbb\xbe1gR?>.E\x0c\x87I\x176\x8d"
    bool_0 = False
    set_0 = set()
    tuple_0 = (bool_0, bool_0, set_0, set_0)
    tuple_1 = (tuple_0,)
    tuple_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4959():
    complex_0 = 1240.4 - 365.5021j
    bool_0 = True
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4960():
    int_0 = 2697
    set_0 = {int_0}
    list_0 = [set_0, set_0, set_0, int_0]
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4961():
    bytes_0 = b"\x00\x91\xb9\xc9Rc\xb5\x1b\xe3"
    int_0 = -3
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4962():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xd1,H\xa1\x01v\xc6`\xec\xba\xca\xca\x1d\xfd%a\x04\xd0"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4963():
    int_0 = 306
    dict_0 = {}
    module_0.object(*int_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4964():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    tuple_0 = (bool_0, list_0, bool_0)
    list_1 = [tuple_0]
    str_0 = "z.\tHB\n`x-vlg!("
    str_1 = ">|(z]oOq7i4ihnaxj!iQ"
    dict_0 = {str_0: bool_0, str_0: list_0, str_1: list_0}
    module_0.object(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4965():
    int_0 = -812
    str_0 = 'VQyi"C}'
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4966():
    none_type_0 = None
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4967():
    float_0 = -1076.37575
    float_1 = -644.0
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_4968():
    none_type_0 = None
    bytes_0 = b">D\xe3\xa5\xd3"
    float_0 = 5219.1375
    set_0 = {bytes_0, float_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4969():
    int_0 = 1327
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4970():
    bytes_0 = b"6\xdb\xd1M t?\x88,"
    bool_0 = False
    bool_0.write(bytes_0)


def test_case_4971():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4972():
    tuple_0 = ()
    int_0 = -1711
    dict_0 = {tuple_0: int_0}
    dict_1 = {int_0: tuple_0}
    tuple_1 = (int_0, dict_0, dict_1, dict_1)
    list_0 = [tuple_0, tuple_1, tuple_0, dict_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_4973():
    bool_0 = False
    bytes_0 = b"\xe1\xebiM\x11"
    dict_0 = {bool_0: bool_0, bytes_0: bool_0, bytes_0: bool_0}
    bool_1 = False
    bool_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4974():
    complex_0 = -691.45 - 1142.98j
    int_0 = 66
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_4975():
    str_0 = "xJv"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4976():
    none_type_0 = None
    complex_0 = 820.7219 + 683.891j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4977():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    list_0 = [object_0, object_0, object_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4978():
    dict_0 = {}
    str_0 = "*@`PB2si\\f"
    list_0 = [str_0, str_0, str_0, str_0]
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4979():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    int_0 = 2040
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4980():
    str_0 = "qEhdy~9"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4981():
    bool_0 = True
    int_0 = 1335
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4982():
    int_0 = -2276
    bytes_0 = b"c\xf9)\x82\x9c\xef\xb9\xea\x07\xf6\xa9\xf9\x89S"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4983():
    none_type_0 = None
    bytes_0 = b"\xd7\xe8\xb9I*Ly\x80\xe3\xea%\x0e"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4984():
    str_0 = "\rsV"
    bytes_0 = b'\xcf%\x95\x02v\xf8\x8f^.\xabE"^\x1e\x95\x95z\x8fO\xba'
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_4985():
    int_0 = 317
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4986():
    none_type_0 = None
    str_0 = "!@t{>1Kr\x0cu"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4987():
    bytes_0 = b"\xbbp\x9c"
    float_0 = 600.74592
    set_0 = {float_0, float_0, float_0, float_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4988():
    int_0 = 506
    str_0 = ""
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4989():
    bool_0 = True
    bool_1 = True
    dict_0 = {bool_1: bool_1, bool_1: bool_1, bool_1: bool_1}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4990():
    a_b_c_0 = module_1.ABC()
    int_0 = -2906
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_4991():
    bool_0 = False
    str_0 = "kp{^Y0z_LlQ"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4992():
    bool_0 = False
    set_0 = {bool_0}
    list_0 = [set_0, set_0, bool_0, bool_0]
    bool_1 = True
    bool_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_4993():
    none_type_0 = None
    complex_0 = -4926 + 905.398j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4994():
    none_type_0 = None
    bytes_0 = b"\xc5\xb7K"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4995():
    bool_0 = True
    int_0 = 1352
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4996():
    a_b_c_0 = module_1.ABC()
    str_0 = "Mimy-0Qva+\t2z{@'0E"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4997():
    str_0 = 'PdE\t\x0cVL(*r,"HsL?.0"'
    a_b_c_0 = module_1.ABC()
    dict_0 = {str_0: a_b_c_0}
    dict_1 = {}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4998():
    none_type_0 = None
    float_0 = 3340.46027
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4999():
    str_0 = "K|ZK*6d0O ?xuiu1c"
    str_1 = "SVJ)vu-+R?J"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5000():
    bytes_0 = b"D\xbf\xc1z"
    str_0 = '"8c*a5_f>&cXL{'
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5001():
    a_b_c_0 = module_1.ABC()
    str_0 = "X"
    int_0 = 6192
    bytes_0 = b"\xbad'\x8f\x95\xf2\xc7\xc3X\x8c"
    tuple_0 = (str_0, int_0, bytes_0)
    dict_0 = {tuple_0: tuple_0, str_0: str_0, bytes_0: str_0}
    dict_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5002():
    bytes_0 = b"\xc49\x97\xf3\xe0\x90\xc7c\x9fe\x81\xe6\xe7"
    str_0 = ""
    int_0 = -998
    dict_0 = {bytes_0: int_0}
    str_1 = "l1,O\x0bw\teiSsK\nHqJ"
    str_2 = "7"
    dict_1 = {str_0: dict_0, str_1: str_1, str_2: str_1}
    module_0.object(*bytes_0, **dict_1)


@pytest.mark.xfail(strict=True)
def test_case_5003():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5004():
    str_0 = "0`ZcS{\nrp\x0b3dKnFVYF"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5005():
    int_0 = 2921
    bytes_0 = b""
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5006():
    bool_0 = True
    tuple_0 = (bool_0,)
    list_0 = []
    list_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5007():
    bytes_0 = b"\x1dQ\xe6"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5008():
    str_0 = "gNW\n9Pzuv\rIu2Z8"
    list_0 = [str_0, str_0]
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5009():
    bytes_0 = b"\xe1\t\xce_"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5010():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5011():
    bool_0 = True
    int_0 = 802
    int_0.write(bool_0)


def test_case_5012():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5013():
    str_0 = "ej"
    list_0 = [str_0]
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5014():
    str_0 = "Tj$BnFZR^}%Ta]&"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5015():
    float_0 = -575.4579
    list_0 = [float_0]
    str_0 = "Yl.M\tZ<9f*@d#UL"
    dict_0 = {str_0: str_0, str_0: list_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5016():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0]
    int_0 = 2077
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5017():
    str_0 = "j92R.8z>N&.l9dROd"
    none_type_0 = None
    str_1 = "$I9Y=Tm)iKlg"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5018():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    bytes_0 = b""
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5019():
    none_type_0 = None
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5020():
    str_0 = "p?6"
    int_0 = -1614
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5021():
    int_0 = 1777
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5022():
    none_type_0 = None
    str_0 = ""
    dict_0 = {str_0: str_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5023():
    str_0 = 'c7v1[i\x0b 8>"<k`t'
    str_1 = "\n<"
    tuple_0 = (str_0, str_1)
    tuple_1 = ()
    str_2 = "\tF{WtIBc,\x0cXem0LT."
    bool_0 = True
    tuple_2 = (tuple_1, str_2, bool_0)
    tuple_2.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5024():
    none_type_0 = None
    float_0 = 1102.6341
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5025():
    bool_0 = False
    float_0 = 1336.1578
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5026():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0, tuple_0}
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0]
    list_0.write(set_0)


def test_case_5027():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5028():
    bool_0 = False
    bytes_0 = b"\xcd\x9aG\xdf_89\xfd\x80N\xc5\x95\xa8)i\xa1Q"
    tuple_0 = (bytes_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5029():
    complex_0 = 2800.63 + 1914.548j
    int_0 = 2448
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5030():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5031():
    int_0 = 2139
    complex_0 = 258.42323 - 1709j
    complex_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5032():
    int_0 = -987
    bool_0 = False
    list_0 = [int_0, int_0, bool_0]
    str_0 = "M!4-m~h1n6#YcQ-fu<"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5033():
    int_0 = -3198
    bool_0 = True
    list_0 = [int_0, int_0, bool_0, bool_0]
    bool_1 = False
    list_1 = [bool_1, bool_1, bool_1, bool_1]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5034():
    bool_0 = False
    str_0 = "RP"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5035():
    set_0 = set()
    list_0 = [set_0, set_0, set_0, set_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5036():
    str_0 = "?DJu\tf1?c}+G%7o_\tHYx"
    str_1 = "\\4J<ov]"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5037():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5038():
    none_type_0 = None
    complex_0 = 2048.2 + 4303.3354j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5039():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0]
    list_1 = [list_0, list_0, a_b_c_0, a_b_c_0]
    module_0.object(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_5040():
    bytes_0 = b"\xa6\xfc%=\x8d:\x11\xa9\xeb\xbd\xebo\xb3\xc2`"
    float_0 = -2186.0
    float_1 = -1117.112158
    tuple_0 = (float_0,)
    tuple_1 = (float_1, tuple_0, bytes_0, bytes_0)
    set_0 = {tuple_0}
    tuple_2 = (bytes_0, float_0, tuple_1, set_0)
    int_0 = 1086
    int_0.write(tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_5041():
    int_0 = 736
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5042():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    list_0 = [set_0, set_0, set_0, tuple_0]
    dict_0 = {}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5043():
    bytes_0 = b"\xe0\xd08"
    module_1.ABC(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5044():
    object_0 = module_0.object()
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5045():
    int_0 = 384
    bytes_0 = b"\x8f@p\xe6\xb1\xe9K\x9c>G\x7fI|"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5046():
    a_b_c_0 = module_1.ABC()
    float_0 = 1744.8568
    float_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5047():
    int_0 = -2733
    bytes_0 = b"\xe4L "
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5048():
    a_b_c_0 = module_1.ABC()
    module_1.ABC(*a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5049():
    str_0 = "S}.BKCe\x0c8W',p?"
    bytes_0 = b"tF\xf2"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5050():
    int_0 = 9
    dict_0 = {int_0: int_0, int_0: int_0}
    int_1 = -682
    int_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5051():
    bytes_0 = b"\t\xd4\xaa\x95N6ap6\x92t2"
    bytes_1 = b"g\x92"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5052():
    complex_0 = 265.8556 - 4185.84189j
    set_0 = {complex_0, complex_0}
    tuple_0 = (complex_0, set_0)
    complex_1 = -3323.433 + 2715.01j
    list_0 = [tuple_0, complex_1]
    bool_0 = False
    bool_0.write(list_0)


def test_case_5053():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5054():
    none_type_0 = None
    int_0 = 111
    set_0 = {int_0, int_0, int_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5055():
    dict_0 = {}
    int_0 = 1908
    tuple_0 = (int_0, int_0, int_0)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5056():
    set_0 = set()
    bool_0 = True
    bytes_0 = b"R\xaedE\xb9\xda\xa1\xb2\xce>\xc7e\xec"
    set_1 = {bool_0, bool_0}
    tuple_0 = (bool_0, bytes_0, set_1)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5057():
    int_0 = 176
    dict_0 = {int_0: int_0, int_0: int_0}
    str_0 = "d=T{bD(+.LZ+j$A1"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5058():
    str_0 = "M:\n8hw1+iq#"
    object_0 = module_0.object()
    dict_0 = {object_0: object_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5059():
    complex_0 = 3323.56986 + 3803.19337j
    float_0 = -1450.27426
    bytes_0 = b"\xba\x03\xfanFT"
    set_0 = {float_0, bytes_0, float_0}
    set_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5060():
    str_0 = "W0:j86o,%# _-~%"
    str_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5061():
    none_type_0 = None
    int_0 = -1153
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5062():
    tuple_0 = ()
    complex_0 = 2363 - 683.2406j
    complex_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5063():
    int_0 = 2212
    set_0 = {int_0, int_0, int_0}
    bool_0 = False
    set_1 = {bool_0, bool_0, bool_0}
    tuple_0 = (set_1,)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5064():
    str_0 = ".JG1fXy2Lihw:!"
    str_1 = 'fZK<Q^!("VQ)M3W<'
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5065():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5066():
    tuple_0 = ()
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    dict_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5067():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    int_0 = 10
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5068():
    bytes_0 = b"&\xf0"
    module_1.ABC(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5069():
    none_type_0 = None
    int_0 = -848
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5070():
    str_0 = "4&/'y`r\rCx1_"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5071():
    float_0 = -1388.0
    bool_0 = False
    tuple_0 = ()
    dict_0 = {bool_0: tuple_0, bool_0: tuple_0, bool_0: tuple_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5072():
    bytes_0 = b"\x8c\t\xdf\xa1\n*C\xb1"
    list_0 = [bytes_0, bytes_0, bytes_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5073():
    none_type_0 = None
    float_0 = -818.412136
    set_0 = {float_0, float_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5074():
    complex_0 = -271.424 - 3575.7439j
    set_0 = {complex_0, complex_0, complex_0}
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5075():
    bool_0 = True
    bool_1 = False
    set_0 = {bool_1, bool_1, bool_1}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5076():
    bytes_0 = b"\xd0\x97T\xe4"
    str_0 = "M_i0I\n?U;\n2.G\t6$l!\r"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5077():
    list_0 = []
    float_0 = 2343.483
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5078():
    int_0 = 1383
    bytes_0 = b'"Sk\xb02R\x8e\x04\xb6'
    bool_0 = True
    dict_0 = {bytes_0: bytes_0, bool_0: bytes_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5079():
    object_0 = module_0.object()
    int_0 = 378
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5080():
    list_0 = []
    str_0 = 'y=)>b;W2QGz"[/>!M:'
    bool_0 = False
    dict_0 = {str_0: list_0, str_0: bool_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5081():
    set_0 = set()
    bytes_0 = b"G`\xca,\xfcq\xb5\xb4y\x18^\x8c\xc0\xec"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5082():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    module_1.ABC(*tuple_1, **tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_5083():
    none_type_0 = None
    str_0 = "B\\q^a(\n\tw"
    tuple_0 = (str_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5084():
    int_0 = -1237
    int_1 = -4131
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5085():
    float_0 = -812.703237
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5086():
    str_0 = "7g2nzJ)_Z4}R}zPk1Pp."
    str_1 = "$+S/#-t^T"
    float_0 = 491.0
    dict_0 = {str_0: str_0, str_1: str_1, str_0: float_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5087():
    str_0 = ">+5'f1\t6-e_"
    dict_0 = {}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5088():
    int_0 = -1319
    module_1.ABC(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_5089():
    str_0 = "\x0cxBsnp7-\ngS2"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


def test_case_5090():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5091():
    bytes_0 = b"tD"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5092():
    set_0 = set()
    float_0 = 1747.87
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5093():
    float_0 = 4330.83
    tuple_0 = (float_0, float_0)
    dict_0 = {tuple_0: tuple_0, float_0: float_0, float_0: tuple_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5094():
    bytes_0 = b"#\xa9R{$5\xa4\x1d.w\x8f\x92\xa6\xe6z\x01\xa1\xd7\xb1\xaa"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5095():
    object_0 = module_0.object()
    set_0 = {object_0}
    bool_0 = True
    tuple_0 = (set_0, object_0, bool_0)
    str_0 = "\x0c7\x0b;LO9|#="
    tuple_1 = (str_0, str_0)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5096():
    bytes_0 = b"l"
    object_0 = module_0.object()
    object_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5097():
    bool_0 = True
    str_0 = "\x0bTe "
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5098():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    str_0 = "h(_\r[j,?TnK %i"
    tuple_0 = (bool_0, bool_0, str_0)
    tuple_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5099():
    none_type_0 = None
    float_0 = -1434.13
    dict_0 = {float_0: float_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5100():
    int_0 = -104
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5101():
    object_0 = module_0.object()
    int_0 = -165
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5102():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = ":6S6%S^Qy-ywe!&Ek[k"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5103():
    str_0 = ""
    str_1 = "+R\rTsF=\x0c%Gk2(<"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5104():
    set_0 = set()
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5105():
    bytes_0 = b"\xa8~\x18$\x13uv\xa1\x9c\xa6\xff"
    list_0 = [bytes_0]
    bool_0 = False
    tuple_0 = (list_0, bool_0, bytes_0)
    int_0 = 1460
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5106():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    tuple_0 = ()
    tuple_0.write(a_b_c_0)


def test_case_5107():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_5108():
    bytes_0 = b"\xd4n\xf0IU\xde\xbd\x0b"
    int_0 = 3159
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5109():
    a_b_c_0 = module_1.ABC()
    int_0 = -2802
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5110():
    bytes_0 = b"\xaeI+\x83"
    bool_0 = False
    float_0 = -1546.0
    dict_0 = {float_0: float_0, bool_0: float_0, bool_0: float_0, float_0: bool_0}
    tuple_0 = (bool_0, dict_0, dict_0)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5111():
    bytes_0 = b"\xd9\xbd:P5\xe0\x84a'=\xc1"
    tuple_0 = ()
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5112():
    bool_0 = True
    tuple_0 = (bool_0,)
    float_0 = 2413.0
    set_0 = {float_0, float_0}
    bool_1 = True
    tuple_1 = (set_0, set_0, bool_1, bool_1)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5113():
    bool_0 = True
    bytes_0 = b"\xc3\x92\x8aG\xed2'\xc4\xfa\x15\x0f\xb2\x14\xdb"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5114():
    complex_0 = 1812.8693 + 1622.7j
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5115():
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()
    bytes_0 = b"\xc8m\x0f\xde%L\xa6\xa253 \xf7K\xc0\xac\xc3\x9d3"
    bytes_0.write(a_b_c_1)


@pytest.mark.xfail(strict=True)
def test_case_5116():
    bytes_0 = b"\x12)\x94c\xb9I\x17\x89\x9c\xdc\xd0\xf8]\xbeX"
    bool_0 = False
    set_0 = {bool_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5117():
    a_b_c_0 = module_1.ABC()
    dict_0 = {}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5118():
    float_0 = -1874.48
    str_0 = "\\K{at*,}=P}IU"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5119():
    bool_0 = False
    float_0 = -381.77
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5120():
    str_0 = "T1A1c0hk(Oh3@9*UAM74"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5121():
    bytes_0 = b"\x99\x1f\x93v6\x05h"
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5122():
    none_type_0 = None
    float_0 = 2193.612972
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5123():
    bool_0 = False
    complex_0 = 1030.529 + 364.58848j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5124():
    float_0 = 1065.13786
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5125():
    none_type_0 = None
    int_0 = -438
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5126():
    bytes_0 = b"\x03Y\xebz\xd5\xcdD q"
    list_0 = [bytes_0]
    int_0 = -309
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5127():
    bytes_0 = b"\xce\xad\x80\\\x85M\xe4\xef=;\x1c"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5128():
    bytes_0 = b"9\xb8D\xfb"
    str_0 = "]>L8(U5\x0c"
    str_0.write(bytes_0)


def test_case_5129():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5130():
    str_0 = "P\tS?nB\x0ckDV"
    bytes_0 = b""
    tuple_0 = (bytes_0, bytes_0)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5131():
    str_0 = "]_ !\x0bJA"
    float_0 = 1589.4
    set_0 = {float_0, float_0}
    tuple_0 = (float_0, set_0)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5132():
    bool_0 = True
    int_0 = -2214
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5133():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5134():
    none_type_0 = None
    bytes_0 = b"B\x9b\x11\x8b"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    list_0 = [set_0]
    int_0 = 1277
    list_1 = [list_0, int_0]
    list_1.write(none_type_0)


def test_case_5135():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_5136():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5137():
    bytes_0 = b"\xb65\xd9"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5138():
    none_type_0 = None
    complex_0 = -1484.65 - 1344.96j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5139():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5140():
    bool_0 = True
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5141():
    bytes_0 = b"g\xf1\x1a_E\x01\xf9]\r"
    int_0 = -1532
    dict_0 = {int_0: int_0, int_0: int_0}
    list_0 = [dict_0, int_0, dict_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5142():
    bool_0 = True
    bytes_0 = b"(M\xb9\x02\xfb\n\xc2 \x03\x05\x93{\xe9\xb5l\x95"
    dict_0 = {bool_0: bytes_0, bytes_0: bool_0, bytes_0: bool_0}
    bytes_1 = b"y\xadx\xaa\xef\xbe\x8e(\xda\xf6\xb84\x0c~\xa9]"
    set_0 = {bytes_1}
    list_0 = [set_0]
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5143():
    bool_0 = False
    float_0 = -782.0
    set_0 = {float_0, float_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5144():
    str_0 = 'dHxl5N>FbEPbdxM"'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0, str_0]
    bool_0 = False
    tuple_0 = (list_0, bool_0)
    int_0 = 445
    tuple_1 = (int_0,)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5145():
    tuple_0 = ()
    bytes_0 = b"Q\xb1\xe4\xcfM2\xe5\xea\xceM\xd9\x8c\xc3\x94\xd5\xbc\xc9}E\x95"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5146():
    none_type_0 = None
    complex_0 = 1568.624 + 1949.058j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5147():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0]
    dict_0 = {}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5148():
    str_0 = "7<XRmkD Jt31b6|3"
    module_0.object(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_5149():
    str_0 = "50e>8K~19l0@)"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5150():
    int_0 = -2309
    set_0 = {int_0, int_0, int_0, int_0}
    float_0 = 1091.0
    bytes_0 = b"\xb3\xd2|\xe9"
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, bytes_0: float_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5151():
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    str_0 = ""
    float_0 = -268.895351
    list_0 = [str_0, float_0]
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5152():
    bytes_0 = b"\x87\x9aM\xf45\xf9~c\x80\xcf"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    list_1 = []
    a_b_c_0 = module_1.ABC(*list_1)
    a_b_c_0.write(list_0)


def test_case_5153():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5154():
    str_0 = ",#P\t6*W(WICv*&X"
    complex_0 = 361 - 355.2094j
    complex_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5155():
    none_type_0 = None
    str_0 = "m$'xByN;[E"
    dict_0 = {str_0: str_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5156():
    str_0 = "*n= >YV'*6M(,=mij."
    float_0 = 778.987853
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5157():
    dict_0 = {}
    int_0 = 1483
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5158():
    float_0 = 3246.0
    set_0 = {float_0, float_0, float_0, float_0}
    str_0 = "(uLY*3)h~n\x0b2h}"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5159():
    float_0 = -3697.536951
    float_1 = 762.93828
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5160():
    bool_0 = False
    int_0 = -559
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5161():
    a_b_c_0 = module_1.ABC()
    str_0 = "*C-TD@T*pMNI#xmC\t:w"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5162():
    float_0 = 39.5381
    bool_0 = False
    tuple_0 = (float_0, bool_0)
    str_0 = "IRVr%a~2Sm\n{k$"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5163():
    none_type_0 = None
    complex_0 = -267.4171 - 1544j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5164():
    bool_0 = False
    int_0 = 1433
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5165():
    bool_0 = True
    bool_1 = True
    tuple_0 = (bool_0, bool_1)
    bool_2 = True
    bool_2.write(tuple_0)


def test_case_5166():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5167():
    int_0 = -1180
    object_0 = module_0.object()
    object_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5168():
    int_0 = 2506
    str_0 = "Z*&|}CraU![LJDG4H$i"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5169():
    bool_0 = True
    tuple_0 = (bool_0,)
    float_0 = 471.0
    set_0 = {float_0, float_0, float_0}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5170():
    bytes_0 = b">L\xf6#\xc1\xb7D\xd2\x7f\xd6\xa00\xb9\xd2\xb8\xf4n\xae"
    bytes_1 = b""
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5171():
    str_0 = "+"
    list_0 = [str_0, str_0, str_0, str_0]
    bytes_0 = b"8}\xcc\x05R,\xcb\\V\x94\x1b\xdd\xab\xc6\xac"
    bytes_0.write(list_0)


def test_case_5172():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5173():
    none_type_0 = None
    float_0 = 709.901
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5174():
    str_0 = "0:!['kLE;z2"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5175():
    bool_0 = False
    list_0 = [bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5176():
    none_type_0 = None
    complex_0 = -3659.202 + 441.7j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5177():
    bool_0 = True
    bytes_0 = b"\x93\x89\xdf\xabE"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5178():
    bool_0 = False
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5179():
    int_0 = 436
    set_0 = {int_0, int_0, int_0}
    str_0 = 'm"\nd`i\x0bk)w- _XulJ_,'
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5180():
    none_type_0 = None
    bytes_0 = b"\x86\xb0\x8b\xd3\x88\x809\xf2\x9b"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5181():
    int_0 = 1639
    str_0 = "o5~J\t$,B\r\t$}lVQY"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5182():
    none_type_0 = None
    complex_0 = -3341.3 + 749.28926j
    tuple_0 = (complex_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5183():
    complex_0 = -684.77 - 2654.1j
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5184():
    str_0 = "?,BJNn]Mo|i>IB@"
    str_1 = "16"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5185():
    str_0 = "\\Mz,6jxSA\\"
    int_0 = -618
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5186():
    bool_0 = False
    bytes_0 = b"\xd0c]\xb9\xab\x8b\x12\x95(.\xcfv\xd1\xc1"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5187():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    bytes_0 = b"\x1d\x80\x81"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5188():
    list_0 = []
    list_1 = [list_0, list_0, list_0, list_0]
    str_0 = "tw1g'"
    none_type_0 = None
    str_1 = "VHZ()RWMA:W{milG_#/"
    str_2 = "'Yx`?wPl-D0qmOFb"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
        str_2: none_type_0,
    }
    module_0.object(*list_1, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5189():
    a_b_c_0 = module_1.ABC()
    str_0 = "R>Rd\t"
    bool_0 = False
    tuple_0 = (a_b_c_0, str_0, a_b_c_0, bool_0)
    float_0 = -2047.4399
    tuple_1 = (float_0,)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5190():
    str_0 = "4o"
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5191():
    none_type_0 = None
    float_0 = -994.0
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5192():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    list_0 = [set_0, a_b_c_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5193():
    bool_0 = False
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5194():
    none_type_0 = None
    float_0 = -1451.230743
    str_0 = "E#\x0b-BP5G_xlp$?\x0cLO"
    dict_0 = {float_0: float_0, str_0: float_0, str_0: str_0, str_0: float_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5195():
    bool_0 = True
    module_1.ABC(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5196():
    bytes_0 = b"h\x85\xb1{\xd5\xfb\xdb\xa6\x91\x91\x17\xfalHV"
    bytes_1 = b"\xc3\x00\xf5"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5197():
    none_type_0 = None
    str_0 = "]z=\x0bo,w |{"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5198():
    none_type_0 = None
    str_0 = "j;xG9_!}t."
    bytes_0 = b"w\x00\xb8o\xe9u\xd7\xcf\xa5\x0c\xb8)!\x8d\xde\x9e\n\xb1\xe8e"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: bytes_0, str_0: bytes_0}
    dict_0.write(none_type_0)


def test_case_5199():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5200():
    object_0 = module_0.object()
    str_0 = ";,WfH)cL"
    tuple_0 = ()
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5201():
    int_0 = 134
    dict_0 = {}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5202():
    object_0 = module_0.object()
    none_type_0 = None
    str_0 = " S8"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5203():
    str_0 = "aC(cp!uo="
    a_b_c_0 = module_1.ABC()
    dict_0 = {str_0: str_0, str_0: a_b_c_0, str_0: a_b_c_0}
    module_1.ABC(**dict_0)


def test_case_5204():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5205():
    object_0 = module_0.object()
    int_0 = 1793
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5206():
    bytes_0 = b""
    bool_0 = False
    list_0 = [bytes_0, bytes_0, bool_0]
    float_0 = -802.0
    float_0.write(list_0)


def test_case_5207():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5208():
    tuple_0 = ()
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5209():
    list_0 = []
    complex_0 = 1822 - 3611.66j
    complex_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5210():
    bytes_0 = b'\x02"\xcc'
    int_0 = -827
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5211():
    bytes_0 = b""
    object_0 = module_0.object()
    tuple_0 = (object_0,)
    dict_0 = {tuple_0: tuple_0, object_0: tuple_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5212():
    str_0 = "l;uYKw}3FA$<Y6?BlX"
    str_1 = "L}{;k. o| ;&\x0b"
    dict_0 = {str_1: str_1, str_1: str_1, str_1: str_1}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5213():
    float_0 = 1704.0
    module_1.ABC(*float_0)


def test_case_5214():
    pass


def test_case_5215():
    pass


def test_case_5216():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5217():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5218():
    bytes_0 = b"\xd2\xc0\xa7"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5219():
    none_type_0 = None
    bytes_0 = b"\xa4\xfb\xa329\xbc\xe5n\x82A\xc5tKU\xee\xe1\xf1C\xd3"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5220():
    int_0 = 1419
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5221():
    int_0 = -596
    str_0 = "E4``hGaUE+h[\n/K&'1"
    dict_0 = {str_0: str_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5222():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    int_0 = -250
    int_0.write(none_type_0)


def test_case_5223():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_5224():
    bool_0 = False
    bool_1 = True
    dict_0 = {bool_1: bool_1, bool_1: bool_1}
    set_0 = set()
    tuple_0 = (dict_0, set_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5225():
    complex_0 = -921.681736 - 1224j
    float_0 = -1955.99318
    list_0 = [float_0, float_0, float_0, float_0]
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5226():
    bool_0 = False
    float_0 = -570.765
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5227():
    bytes_0 = b"\xc3N\xc0\xa3\x9es\x0e\x99"
    int_0 = 1378
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5228():
    list_0 = []
    str_0 = 'A/.:hD5.N{86"\x0cd3$*oM'
    float_0 = -2325.23611
    dict_0 = {str_0: list_0, str_0: float_0, str_0: str_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5229():
    a_b_c_0 = module_1.ABC()
    str_0 = "+H\na"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5230():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = ()
    str_0 = '[F"`)6TRAa'
    tuple_1 = (tuple_0, str_0)
    tuple_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5231():
    none_type_0 = None
    bytes_0 = b"\x11\x15\xe2\xeb\x98\xe7\xefl\x85\xb5O.\x00\x8e@\xe3\xef"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5232():
    int_0 = -2203
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5233():
    none_type_0 = None
    int_0 = 4410
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5234():
    int_0 = -3684
    str_0 = "6"
    set_0 = {str_0, str_0, str_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5235():
    int_0 = 684
    object_0 = module_0.object()
    object_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5236():
    str_0 = 'dO5aq"<sydr}'
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5237():
    none_type_0 = None
    str_0 = ""
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_0.object(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5238():
    str_0 = "A5"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5239():
    float_0 = 3235.0
    complex_0 = 1174 + 2619.9462j
    complex_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5240():
    str_0 = "Uq| [F!QrU=MxJ)"
    list_0 = []
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5241():
    bytes_0 = b"\xc9\xfey\x8c\xbb&\x80zC"
    tuple_0 = ()
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5242():
    none_type_0 = None
    int_0 = -3174
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5243():
    str_0 = "b7Z<Em"
    int_0 = 2401
    dict_0 = {int_0: int_0, int_0: int_0}
    dict_0.write(str_0)


def test_case_5244():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5245():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5246():
    str_0 = "PJ~"
    set_0 = set()
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5247():
    int_0 = -1038
    list_0 = [int_0, int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5248():
    object_0 = module_0.object()
    a_b_c_0 = module_1.ABC()
    module_0.object(*a_b_c_0)


def test_case_5249():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5250():
    a_b_c_0 = module_1.ABC()
    int_0 = 1051
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5251():
    str_0 = "PIn]["
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(dict_0)


def test_case_5252():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_5253():
    complex_0 = 108.15746 + 563.152j
    str_0 = "-hG@O|"
    bytes_0 = b"\x00["
    dict_0 = {str_0: bytes_0}
    tuple_0 = (str_0, bytes_0, dict_0)
    tuple_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5254():
    str_0 = "CzLLo^ZX"
    str_1 = "~wo\n>Da;cv"
    dict_0 = {str_1: str_0, str_1: str_1, str_0: str_1, str_0: str_1}
    tuple_0 = (dict_0, str_1)
    str_2 = "<5)Dh1&"
    dict_1 = {str_0: str_0, str_1: tuple_0, str_1: tuple_0, str_2: tuple_0}
    module_1.ABC(**dict_1)


@pytest.mark.xfail(strict=True)
def test_case_5255():
    float_0 = -3087.21
    int_0 = -2894
    set_0 = {int_0, int_0, int_0, int_0}
    tuple_0 = (int_0, set_0)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5256():
    dict_0 = {}
    bytes_0 = b"\xf0\x17\xad\xba\xfe"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5257():
    str_0 = "A'"
    str_1 = "\\rA1h,a\tx99uneBjpLE'"
    str_2 = "s>b$WX"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: str_0}
    module_1.ABC(**dict_0)


def test_case_5258():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_5259():
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5260():
    list_0 = []
    bytes_0 = b",\x15L\x18'C\xef\xddJ29=[a\x04\x17\xc2"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5261():
    none_type_0 = None
    int_0 = -1366
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5262():
    object_0 = module_0.object()
    int_0 = -817
    int_1 = -2275
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5263():
    bool_0 = True
    complex_0 = -2377.637 - 594.072j
    complex_0.write(bool_0)


def test_case_5264():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5265():
    dict_0 = {}
    int_0 = 4654
    bool_0 = False
    dict_1 = {}
    tuple_0 = (int_0, int_0, bool_0, dict_1)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5266():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    tuple_0 = (a_b_c_0, bool_0, bool_0)
    str_0 = "v\\"
    set_0 = {str_0, str_0, str_0}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5267():
    bool_0 = False
    int_0 = -1101
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5268():
    bytes_0 = b""
    bytes_1 = b"LY\x87\x8c\xfd\xb2\x19\xcfo\xe5\x1f\x1c\x04\x17\x1e\x11\xe3\xa82C"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5269():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5270():
    int_0 = -448
    int_1 = -56
    dict_0 = {int_1: int_1, int_1: int_1, int_1: int_1, int_1: int_1}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5271():
    str_0 = "VB"
    set_0 = {str_0, str_0}
    list_0 = [set_0, set_0, str_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5272():
    int_0 = 600
    set_0 = {int_0, int_0, int_0}
    bytes_0 = b"\xad\xf7\xad"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5273():
    none_type_0 = None
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5274():
    none_type_0 = None
    float_0 = -833.236775
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5275():
    bytes_0 = b"\x8a\xd4\n \x95s\xf8`\xb9K\xd4\x05Z_\x00\x13'"
    int_0 = -1846
    int_0.write(bytes_0)


def test_case_5276():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5277():
    a_b_c_0 = module_1.ABC()
    str_0 = "s]}!kK;\x0cHo#oo"
    dict_0 = {str_0: a_b_c_0}
    module_1.ABC(*a_b_c_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5278():
    a_b_c_0 = module_1.ABC()
    str_0 = "+iD.O &1J_0*@kL`IC"
    none_type_0 = None
    str_1 = "n,xT"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5279():
    bytes_0 = b"K\x88"
    bytes_1 = b"\x17(K\x83\x06\xd4\xe0>\x89q\x0b4\xfb\x16\x99\x11\xc1\x1a"
    set_0 = {bytes_1, bytes_1, bytes_1, bytes_1}
    set_0.write(bytes_0)


def test_case_5280():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5281():
    set_0 = set()
    module_1.ABC(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_5282():
    int_0 = 2193
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5283():
    int_0 = -666
    bytes_0 = b"\xc7\xf7\x13\x18\x8c\x11\x83br\xdbi\xba"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5284():
    bytes_0 = b"\xa5\xe8\x96\xd3'$\xe7-"
    str_0 = "81tmL{"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5285():
    int_0 = -1142
    float_0 = 240.372
    float_0.write(int_0)


def test_case_5286():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_5287():
    object_0 = module_0.object()
    float_0 = -258.0
    float_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5288():
    bytes_0 = b"\xb2s\xfd\xe6\n\x91F\x10TJ\x1e,"
    object_0 = module_0.object()
    object_0.write(bytes_0)


def test_case_5289():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5290():
    none_type_0 = None
    str_0 = '"h'
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5291():
    none_type_0 = None
    bytes_0 = b"\x12\x8eyF^\x9d\xcc\x8f\xaf'\xf2n2"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5292():
    str_0 = "o]=_[Sq\x0cRMc>PaEq$`B"
    dict_0 = {str_0: str_0, str_0: str_0}
    bool_0 = False
    bool_0.write(dict_0)


def test_case_5293():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_5294():
    int_0 = 1145
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5295():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5296():
    tuple_0 = ()
    object_0 = module_0.object()
    set_0 = {object_0}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5297():
    list_0 = []
    str_0 = "Hma\x0b-\twu}shl"
    none_type_0 = None
    str_1 = ":)tRN8rg/~[UG;l\x0bo-D"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5298():
    int_0 = 667
    float_0 = 744.138016
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5299():
    bytes_0 = b"\x82\xa5\x93e\x1cq\xb4"
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    tuple_0 = (a_b_c_0, bool_0, a_b_c_0)
    tuple_1 = (tuple_0,)
    list_0 = [tuple_1, bool_0, tuple_0, tuple_0]
    list_1 = [list_0, tuple_0, list_0]
    list_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5300():
    int_0 = -1949
    bool_0 = False
    bool_0.write(int_0)


def test_case_5301():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5302():
    float_0 = 286.861
    bytes_0 = b"np"
    bytes_0.write(float_0)


def test_case_5303():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5304():
    dict_0 = {}
    float_0 = -3773.9854
    list_0 = [float_0, float_0, float_0]
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5305():
    object_0 = module_0.object()
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5306():
    bytes_0 = b"\x91$lB\xd8\x13\x02e\x8b\xe1\x03"
    module_0.object(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5307():
    bool_0 = False
    bool_1 = True
    list_0 = [bool_1, bool_1]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5308():
    bytes_0 = b"\xf8\xa4\x04\x1b"
    set_0 = set()
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5309():
    bool_0 = True
    set_0 = {bool_0}
    int_0 = 721
    int_0.write(set_0)


def test_case_5310():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_5311():
    none_type_0 = None
    bytes_0 = b"W\xf7\xc2\xa6(\xacy\x05\x03mpZ\x0c\xee"
    bytes_0.write(none_type_0)


def test_case_5312():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5313():
    int_0 = 1630
    none_type_0 = None
    dict_0 = {int_0: int_0, int_0: int_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5314():
    str_0 = "\rp3+"
    object_0 = module_0.object()
    set_0 = {object_0, object_0, object_0, object_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5315():
    int_0 = 1904
    bytes_0 = b',0_k\xa8U\xf0E"\x9ej\xf4;\xeco'
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5316():
    none_type_0 = None
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5317():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0, tuple_0]
    bytes_0 = b"Z\x0b\x8b\x88M\x92\xe2"
    tuple_1 = (list_0, bytes_0)
    bool_0 = True
    bool_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_5318():
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0, object_0]
    bytes_0 = b"u?*x\xdc\x18U\xbb\x84\xde\t\x05\xe2S\xf1\xda\xd4R"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5319():
    none_type_0 = None
    bool_0 = True
    list_0 = []
    tuple_0 = (bool_0, list_0, bool_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5320():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    str_0 = "8;"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5321():
    float_0 = 3684.0
    bytes_0 = b"-S\xf5\xb6\xc9\xb1\x14K\x12I\xf7]\xf1\xeb\xc9\xd3@\x807"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5322():
    none_type_0 = None
    str_0 = "e[>{qtw2B@rh^K4"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5323():
    bool_0 = False
    bytes_0 = b"Y~"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5324():
    float_0 = 1426.95
    float_1 = 1458.7
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5325():
    bool_0 = False
    bool_1 = True
    bytes_0 = b'B/\x19Z\xfb,\xb1\xb0\xe05c\xce#\x17\x10"\xd2\x89\xc1\xe5'
    list_0 = [bool_1, bytes_0, bytes_0, bytes_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5326():
    int_0 = 3547
    list_0 = []
    str_0 = "fOa?8%3A"
    list_1 = [int_0, list_0, str_0]
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    object_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_5327():
    bool_0 = True
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5328():
    bool_0 = True
    bool_1 = False
    bytes_0 = b' \xf9\x14\x8f\xbe\x1a\x83\xf8t"C'
    tuple_0 = (bool_1, bool_1, bytes_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5329():
    none_type_0 = None
    int_0 = -3931
    int_0.write(none_type_0)


def test_case_5330():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5331():
    bool_0 = True
    list_0 = []
    a_b_c_0 = module_1.ABC()
    tuple_0 = (bool_0, list_0, bool_0, a_b_c_0)
    list_1 = []
    a_b_c_1 = module_1.ABC(*list_1)
    a_b_c_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5332():
    none_type_0 = None
    str_0 = "O[wCe\t4P9x|cga"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5333():
    int_0 = -942
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5334():
    str_0 = "gw.a+{"
    str_1 = "u<7fgfIV]?Ph!RL"
    str_2 = "yQ(rQYa-"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5335():
    none_type_0 = None
    float_0 = 5590.77
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5336():
    none_type_0 = None
    str_0 = "F7|!+P]+9<+kPQn'.Rg>"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5337():
    none_type_0 = None
    float_0 = -1991.44
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5338():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    str_0 = "K`fT"
    int_0 = 622
    str_1 = "ef%4E\n=oU&<yE{H"
    dict_0 = {str_0: int_0, str_1: str_1}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5339():
    bool_0 = False
    bytes_0 = b"\x14X\xb5-\x7fn\xb7\x90\xe1\xa3[K"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5340():
    int_0 = 60
    bool_0 = True
    a_b_c_0 = module_1.ABC()
    list_0 = [int_0, bool_0]
    float_0 = -141.2
    tuple_0 = (bool_0, a_b_c_0, list_0, float_0)
    list_1 = [int_0, int_0, tuple_0, a_b_c_0]
    a_b_c_1 = module_1.ABC()
    a_b_c_1.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_5341():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5342():
    str_0 = "V\x0c<;[,EopN3\tN{\rm"
    bool_0 = True
    tuple_0 = (bool_0,)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5343():
    complex_0 = -1922.459 - 1075.8505j
    float_0 = 1108.091
    set_0 = {float_0, float_0, float_0, float_0}
    set_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5344():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5345():
    bytes_0 = b"\x13B6\xb4/I\x1f\x81\xb2\x06\x0c\xe6\xa4\x80\x0c\xabh\x0ff\x7f"
    float_0 = 187.16679
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5346():
    list_0 = []
    str_0 = "QoXE^jyUn$"
    str_1 = ""
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5347():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5348():
    none_type_0 = None
    bytes_0 = b"<\x1b\x11\xad\x9f\x82b\xefW\x0f\xeb\x8f\xb2ps"
    list_0 = [bytes_0, bytes_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5349():
    object_0 = module_0.object()
    float_0 = -3020.0
    float_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5350():
    tuple_0 = ()
    int_0 = 1130
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5351():
    none_type_0 = None
    float_0 = 1395.92
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5352():
    complex_0 = -1308.3566 + 1936.239306j
    bytes_0 = b"\t\xed\x01\x8f3-"
    list_0 = [complex_0, bytes_0, bytes_0, complex_0]
    tuple_0 = (complex_0, list_0, bytes_0, complex_0)
    int_0 = 2400
    tuple_1 = (int_0,)
    list_1 = [tuple_1, tuple_1, tuple_1, tuple_1]
    list_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5353():
    bytes_0 = b"\x07\xb9\x00\xba\x12I\xe6J.\xc8"
    str_0 = "3c`P^OxWlEMs{k"
    tuple_0 = (str_0,)
    tuple_1 = (tuple_0,)
    tuple_2 = (bytes_0, bytes_0, str_0, tuple_1)
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0]
    list_0.write(tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_5354():
    int_0 = -1630
    list_0 = [int_0, int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5355():
    a_b_c_0 = module_1.ABC()
    int_0 = -1525
    list_0 = [int_0, int_0, int_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5356():
    bool_0 = True
    bytes_0 = b"H\xcb\x1f\x86\xf2}+?"
    set_0 = {bytes_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5357():
    bool_0 = True
    str_0 = ">G#I^Qai\\"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5358():
    float_0 = -727.9881
    list_0 = [float_0, float_0]
    dict_0 = {}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5359():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5360():
    bytes_0 = b"g\xad\xf9\xf3O\rto\xac\xeeG\xb1rw)"
    int_0 = 1418
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5361():
    str_0 = ":05h]w2]@Sg\\9k]>1"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5362():
    a_b_c_0 = module_1.ABC()
    float_0 = 2475.15
    dict_0 = {a_b_c_0: a_b_c_0, float_0: a_b_c_0, float_0: a_b_c_0, float_0: a_b_c_0}
    bytes_0 = b""
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5363():
    str_0 = "I"
    str_1 = ""
    str_2 = "2\nL"
    str_3 = "cZMWC"
    bytes_0 = b"U\x16\xe2\xc1<o\xabSRP\x93n$\xbc\xfd\x13l\x99Z"
    tuple_0 = (str_3, bytes_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: tuple_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5364():
    bool_0 = False
    bytes_0 = b"\x8bUA\xdb\xc5[\xa2\x87\xc9\xb1q"
    set_0 = {bytes_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5365():
    none_type_0 = None
    float_0 = -2814.96
    list_0 = [float_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5366():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    bool_0 = True
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5367():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bytes_0 = b"g\x0eTr"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5368():
    none_type_0 = None
    str_0 = "Yws9ZaS\tN\x0c3\x0brZ_4l/L~"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5369():
    str_0 = "9khZ6 l,!XEc1vv"
    object_0 = module_0.object()
    set_0 = {object_0, object_0, object_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5370():
    float_0 = 354.358249
    list_0 = []
    tuple_0 = (float_0, list_0, list_0)
    bool_0 = True
    set_0 = {bool_0}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5371():
    str_0 = 'KrWp(a.Iu"X"W{G(Fy'
    none_type_0 = None
    str_1 = ""
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5372():
    str_0 = "~J^KMq' ^?+wYZ9B2S"
    str_1 = ""
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5373():
    bool_0 = True
    int_0 = 211
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5374():
    bytes_0 = b'\xdc"q\x9dT\x1e;[H}\x82+\x14\xe6'
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5375():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    float_0 = -112.7121
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5376():
    bool_0 = False
    bytes_0 = b"X\xed\x19 7Qs-"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5377():
    str_0 = "nBrv1"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5378():
    complex_0 = -656.5 + 1332.30262j
    int_0 = -855
    int_0.write(complex_0)


def test_case_5379():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5380():
    int_0 = 1047
    str_0 = "_aMplOB^7VSS"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5381():
    str_0 = "66@#Jt"
    list_0 = []
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5382():
    str_0 = "/I?O1c2ta<1v]d'cvr3{"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5383():
    bytes_0 = b"D3c\xff\xa1\x11"
    bytes_1 = b"`\x15\xebo"
    dict_0 = {bytes_1: bytes_1}
    list_0 = [dict_0, dict_0, bytes_1]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5384():
    none_type_0 = None
    str_0 = 'Y`Mw1ck"a`2<M\\%_}'
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5385():
    bool_0 = True
    str_0 = "]Y4b.U"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5386():
    none_type_0 = None
    bool_0 = False
    bool_1 = False
    set_0 = {bool_0, bool_1, bool_0, bool_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5387():
    bytes_0 = b"~\xb0\x91\t\xf3\x1c?\x1dB\x9b\x01"
    str_0 = ")%-RkC(*sz:!\x0b[y= "
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5388():
    object_0 = module_0.object()
    float_0 = 1089.92277
    float_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5389():
    bytes_0 = b"/\x9f1\xcdB#<\x98\x8dX\xed\xd3\xfc\xb7\\\x0b\xb2"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5390():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    str_0 = "94`J*=OS,>\\+^ndFk"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5391():
    str_0 = "*m)=]%7Fsh(KUM7"
    int_0 = -516
    tuple_0 = ()
    list_0 = [int_0, int_0, int_0, tuple_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5392():
    float_0 = 500.059
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5393():
    bool_0 = True
    bytes_0 = b"[)\x18,\x8fT"
    str_0 = " aF6@\t}rIGG2`{\t^@3X'"
    list_0 = [str_0]
    int_0 = 3151
    tuple_0 = (bytes_0, str_0, list_0, int_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5394():
    none_type_0 = None
    float_0 = 699.548
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5395():
    bool_0 = True
    float_0 = -3895.449274
    tuple_0 = (float_0, float_0, float_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5396():
    int_0 = 311
    dict_0 = {int_0: int_0}
    list_0 = [dict_0, dict_0, dict_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5397():
    bool_0 = True
    str_0 = "B`[{c#P<y9ab"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5398():
    float_0 = 3659.9
    str_0 = "eX5j"
    bool_0 = False
    tuple_0 = (str_0, bool_0)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5399():
    int_0 = -2295
    object_0 = module_0.object()
    object_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5400():
    none_type_0 = None
    bytes_0 = b"\xcf?\xff*\x13Z\x93\x9f1\xe9\xf8X"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5401():
    str_0 = "{/uiD H.>"
    bytes_0 = b"\xec\t"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5402():
    list_0 = []
    bool_0 = False
    set_0 = {bool_0}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5403():
    none_type_0 = None
    bytes_0 = b"q\xe2>+\xdd\x98\xcb\xa9 \xae\x96y"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5404():
    bool_0 = False
    str_0 = "V6;w&w'w&lSUI{"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5405():
    str_0 = "IqC"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5406():
    list_0 = []
    module_1.ABC(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_5407():
    bytes_0 = b"0"
    bytes_1 = b"\xe5\x93\xb7"
    set_0 = {bytes_1, bytes_1, bytes_1, bytes_1}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5408():
    float_0 = 238.0
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5409():
    str_0 = ")$P_rm5D\t)d\x0co_A4Q"
    int_0 = 2450
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5410():
    int_0 = -492
    tuple_0 = ()
    dict_0 = {int_0: int_0, int_0: int_0, tuple_0: int_0, int_0: tuple_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5411():
    bool_0 = True
    int_0 = 3471
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5412():
    float_0 = -2225.81
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5413():
    str_0 = ",(!)zR;\\H7ub]B"
    str_1 = "GJ<\x0bB4}H9\x0bsZ"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5414():
    bool_0 = True
    bytes_0 = b"\x95\xfd\xc9\xb3\xd0\x84\x8e\x0c\xcc\x84\x0b"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5415():
    none_type_0 = None
    bytes_0 = b"\xc4\xc3\xe47"
    set_0 = {bytes_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5416():
    bool_0 = False
    str_0 = "1)FQOT*f'#]>C&+:^64"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5417():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    list_0 = [a_b_c_0, a_b_c_0, set_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5418():
    int_0 = -1436
    set_0 = {int_0, int_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5419():
    none_type_0 = None
    str_0 = "E|\r#e\t,Oc"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5420():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    int_0 = 2106
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5421():
    bytes_0 = b"\xb4P"
    set_0 = {bytes_0}
    bool_0 = False
    tuple_0 = (bool_0,)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5422():
    none_type_0 = None
    int_0 = -984
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5423():
    bytes_0 = b"R\x12\xbc\xb9/\x07^\xd4\x8c\x1a\xea\xa7\xb5\xe7\x06\xf5I\x15!\x12"
    int_0 = 2528
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5424():
    int_0 = 1730
    tuple_0 = (int_0, int_0, int_0)
    bool_0 = True
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5425():
    bytes_0 = b"\x18!:\xc14\xc6\x9e\xb7 \x17\n\x17\xd1"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5426():
    set_0 = set()
    list_0 = [set_0, set_0, set_0]
    list_1 = [list_0]
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_5427():
    set_0 = set()
    module_1.ABC(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_5428():
    none_type_0 = None
    float_0 = -1040.0
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5429():
    int_0 = 1630
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5430():
    set_0 = set()
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    bool_1 = True
    float_0 = 11.0
    tuple_0 = (bool_0, a_b_c_0, bool_1, float_0)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5431():
    str_0 = "@ U)"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5432():
    float_0 = -2157.6
    module_1.ABC(**float_0)


def test_case_5433():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_5434():
    int_0 = -1680
    object_0 = module_0.object()
    object_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5435():
    int_0 = -1462
    module_0.object(*int_0)


def test_case_5436():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5437():
    bytes_0 = b"\xc1\x8a\x03\xd5>e\x90\x88\x8atnU\xb6\xa9"
    bool_0 = True
    bytes_1 = b"\xbe.\x9b\x1f"
    str_0 = "a7PWR\r}|HYqY"
    tuple_0 = (bool_0, bytes_1, str_0)
    set_0 = {str_0, str_0}
    tuple_1 = (tuple_0, set_0)
    tuple_2 = (tuple_1, bool_0)
    tuple_2.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5438():
    float_0 = -4493.0
    bytes_0 = b"\xc2"
    tuple_0 = (bytes_0,)
    list_0 = [tuple_0, bytes_0, tuple_0, tuple_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5439():
    str_0 = "vsR3-W\rn%3"
    bool_0 = False
    dict_0 = {str_0: bool_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5440():
    int_0 = -1909
    float_0 = -2145.85248
    tuple_0 = (int_0, float_0, int_0)
    str_0 = "jE:"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5441():
    int_0 = -2224
    str_0 = "UGM)Li\x0cc3"
    tuple_0 = (str_0,)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5442():
    none_type_0 = None
    str_0 = "MGW)\rx.NO"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5443():
    int_0 = 1511
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5444():
    a_b_c_0 = module_1.ABC()
    list_0 = []
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5445():
    int_0 = -65
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5446():
    int_0 = -2398
    object_0 = module_0.object()
    dict_0 = {
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
        object_0: object_0,
    }
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5447():
    str_0 = "AfBNt\n*1<\nrJeTMm"
    list_0 = [str_0]
    str_1 = "0vT:[ W1="
    str_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5448():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    bool_1 = False
    set_0 = {bool_1, bool_1}
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5449():
    int_0 = 2874
    str_0 = "Qv{s3d%1f80YUg"
    str_1 = "mM*#sy\x0cNk/"
    dict_0 = {str_0: str_0, str_0: int_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5450():
    bytes_0 = b"\xdc\xc8\x19\xe9\xe7P|MS7D\xc2\xbe\xe2f\xea\xe8\xd0"
    bool_0 = False
    set_0 = {bool_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5451():
    bool_0 = False
    str_0 = "qic}._"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5452():
    int_0 = 3235
    bytes_0 = b"K\xf9\xce\xa8\xafsT\xc1\xb9\xef\xe5Z\x9dM"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5453():
    bytes_0 = b"\xccu\x93KJ\x05"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5454():
    float_0 = 1685.1
    bytes_0 = b"E\x1aR$\xb5\xe4hg\xaeT\x90SPhm'\xd7"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5455():
    bool_0 = False
    str_0 = "(\x0bYq9~ac8"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5456():
    str_0 = "x~=$)\x0cG6j;K%]"
    bytes_0 = b"6\xbc\xfd\xcam\x84}\x06"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5457():
    bytes_0 = b"\xf6\\\xb1\xb7\xcf\xe0S\x06"
    list_0 = []
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5458():
    int_0 = -40
    set_0 = {int_0}
    int_1 = 3725
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    list_0 = [int_1, object_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5459():
    tuple_0 = ()
    int_0 = 334
    list_0 = [int_0]
    list_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5460():
    str_0 = "r]q6-u;a_a<"
    dict_0 = {str_0: str_0, str_0: str_0}
    str_1 = ",`"
    str_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5461():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xfb\x1c\x176 \x8dE\xe2\x9f\xc9\xad\xea\xab\xb8E"
    bytes_0.write(a_b_c_0)


def test_case_5462():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_5463():
    str_0 = '{\n_G:\rghh\\G"'
    float_0 = -2232.049201
    float_0.write(str_0)


def test_case_5464():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5465():
    set_0 = set()
    bytes_0 = b"\x0e"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5466():
    tuple_0 = ()
    float_0 = 2377.0
    float_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5467():
    str_0 = ""
    str_1 = "\x0b@LcD\rzu(9(G"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_0.object(**dict_0)


def test_case_5468():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5469():
    str_0 = "Lv}|}U;"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5470():
    str_0 = "\nsX4"
    list_0 = [str_0, str_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5471():
    bytes_0 = b""
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5472():
    int_0 = 2797
    bytes_0 = b"\xf64\xde@E\xa0"
    tuple_0 = (int_0, int_0, bytes_0)
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5473():
    str_0 = "e,{"
    list_0 = [str_0]
    tuple_0 = ()
    list_1 = [tuple_0, tuple_0, tuple_0, tuple_0]
    bool_0 = False
    dict_0 = {bool_0: list_1, bool_0: list_1, bool_0: tuple_0}
    tuple_1 = (list_1, dict_0)
    tuple_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5474():
    int_0 = 6275
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5475():
    none_type_0 = None
    bytes_0 = b"S"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5476():
    set_0 = set()
    module_1.ABC(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_5477():
    none_type_0 = None
    list_0 = []
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5478():
    int_0 = 1536
    int_1 = 1499
    tuple_0 = (int_1,)
    tuple_0.write(int_0)


def test_case_5479():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_5480():
    bool_0 = False
    int_0 = -229
    list_0 = [int_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5481():
    int_0 = -542
    module_1.ABC(*int_0, **int_0)


@pytest.mark.xfail(strict=True)
def test_case_5482():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    module_1.ABC(*object_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5483():
    bool_0 = True
    bool_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5484():
    object_0 = module_0.object()
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5485():
    bool_0 = True
    bytes_0 = b"H\xa6\xee\xbdc\x8aiKa\xc2\xf0\r\xad\xfc\x80\x94\xb3(\x98\xe4"
    dict_0 = {bytes_0: bytes_0}
    list_0 = [dict_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5486():
    bool_0 = True
    str_0 = "xw-%`q,PHe"
    str_1 = "(n!y\rfIV2<981&"
    str_2 = 'D+;zEe_$<"P u3'
    dict_0 = {str_0: str_1, str_1: bool_0, str_2: str_2}
    module_1.ABC(*bool_0, **dict_0)


def test_case_5487():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5488():
    str_0 = '\n\nn"cR-:n\rtLR?P\njY'
    set_0 = {str_0}
    complex_0 = 3327.843 - 1183.57656j
    complex_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5489():
    none_type_0 = None
    bytes_0 = b"\xfb,\x85\xb1\xef\x04\xa7\xb3\xff\x82\x17^\x95,\xe2\x1f\x10\xea\x1c\x92"
    list_0 = [bytes_0, bytes_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5490():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5491():
    str_0 = "S1Rv\x0cq"
    tuple_0 = (str_0,)
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0}
    dict_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5492():
    str_0 = "Wj9gr/"
    float_0 = 2421.278913
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5493():
    str_0 = "'by/@|1\x0b"
    none_type_0 = None
    str_1 = "F]\x0b"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
    }
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5494():
    object_0 = module_0.object()
    float_0 = -1830.843666
    float_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5495():
    complex_0 = 1549.17714 - 1536.1868j
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5496():
    str_0 = "\nN0gR`X{\\\x0c"
    dict_0 = {}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5497():
    bytes_0 = b"\xc6\xf5\x0b\x94\xdfL2\x03qrX%\x89\xc4\x03\xd9\t\x97\x90"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5498():
    none_type_0 = None
    bytes_0 = b"\xc0\xfa\x17\x11\xab\xbe$\xd7\xc0\xf2\xd7\xef\x82Lt\xf9"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5499():
    complex_0 = -114.05275 - 1750j
    str_0 = "|d\t"
    str_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5500():
    int_0 = 4064
    float_0 = -1152.0
    set_0 = {float_0, float_0, float_0, float_0}
    list_0 = [set_0, float_0, set_0]
    str_0 = "5\r}ud|.\t-]N_o"
    tuple_0 = (set_0, list_0, str_0)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5501():
    bool_0 = False
    int_0 = 647
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5502():
    bytes_0 = b"/\xa2\x85\xc1\xe5$q\x03\x02\xdfv\x8c\xa6\xbf\xbdd\x1e"
    list_0 = []
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5503():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\x01\x83\x1cr\x06\xa9g\x17\x1cT\xd8\x9e"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5504():
    str_0 = "6G[YRA`mt"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5505():
    int_0 = 3519
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5506():
    int_0 = -978
    list_0 = [int_0]
    int_1 = -894
    set_0 = {int_1, int_1, int_1}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5507():
    int_0 = -1800
    bytes_0 = b"!\x8crH\x89"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5508():
    int_0 = -1994
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5509():
    float_0 = 2233.44
    bool_0 = False
    tuple_0 = (bool_0,)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5510():
    a_b_c_0 = module_1.ABC()
    int_0 = 1208
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5511():
    bool_0 = True
    bytes_0 = b"\xfd\xc7"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5512():
    list_0 = []
    list_1 = [list_0, list_0]
    object_0 = module_0.object()
    list_2 = [object_0, object_0]
    tuple_0 = (list_2,)
    tuple_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_5513():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5514():
    bool_0 = True
    module_0.object(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5515():
    bytes_0 = b"B\xe2)\x8b\x86s@\xect\x1e"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5516():
    list_0 = []
    dict_0 = {}
    a_b_c_0 = module_1.ABC(*list_0, **dict_0)
    bool_0 = True
    list_1 = [bool_0, bool_0]
    bytes_0 = b"s\x02\xbd;\x02m\xf5F\x8f\xf5*\x81v\xa0@0\xa8r\x8d\xdf"
    list_2 = [list_1, bytes_0]
    list_2.write(a_b_c_0)


def test_case_5517():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5518():
    int_0 = -729
    str_0 = "`,9x KGovz"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5519():
    bool_0 = False
    float_0 = -2418.0
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5520():
    float_0 = -4535.0
    int_0 = 821
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5521():
    object_0 = module_0.object()
    int_0 = -1956
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5522():
    bytes_0 = b"z>\xa4B>r\x0f\xe0\xca\x9e\x983)\\\x8d\x01\x0e\x98"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5523():
    int_0 = -1306
    dict_0 = {int_0: int_0}
    bytes_0 = b"\xd0\x05\xe3\x8bt\x98\xc5\x1de\xc8\x88,c- K\x83\xd1\xd3\xdf"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5524():
    bytes_0 = b"\x84"
    str_0 = "sSc4 TBSt"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5525():
    bool_0 = False
    str_0 = "~&&..yQ|f{n"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5526():
    bytes_0 = b"\x15\xae\xfe\xbc=\xb9\x18\x1cs\x14`\xefdE\xd7\xa35\xd0IX"
    bytes_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5527():
    object_0 = module_0.object()
    bytes_0 = b"\xe0\xcf"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5528():
    none_type_0 = None
    int_0 = 1861
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5529():
    str_0 = "0^S)2[VV+l="
    int_0 = -2617
    list_0 = [int_0]
    dict_0 = {str_0: str_0, str_0: str_0}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5530():
    int_0 = 1653
    complex_0 = 2309.483 - 498.52j
    complex_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5531():
    bool_0 = True
    str_0 = ":Mqt \\^Yi$K|<Y"
    dict_0 = {str_0: str_0, str_0: str_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5532():
    bool_0 = True
    module_1.ABC(*bool_0)


def test_case_5533():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5534():
    bytes_0 = b"\xb5V/\xa6\x9d\xe5Au\xc0$\xa2=vh\x96\xa3\xc2\xfbZ\xb7"
    list_0 = []
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5535():
    float_0 = -158.28
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5536():
    str_0 = "'Dw[`%0^\x0b5jZ"
    bool_0 = False
    list_0 = [bool_0]
    list_0.write(str_0)


def test_case_5537():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5538():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5539():
    bytes_0 = b"\xb7-\xd2\xd7\xee\x97e\xf2\xf3\x147\x88O}\xca\x1eLY\xf7"
    str_0 = "Wbd"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5540():
    none_type_0 = None
    bytes_0 = b"\xb5\x96\x06\xadH\x00\xc2^Z\xbe"
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: bytes_0, bool_0: bool_1, bytes_0: bool_0, bool_1: bool_1}
    tuple_0 = (bytes_0, bool_0, dict_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5541():
    none_type_0 = None
    bytes_0 = b"6\xd5"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5542():
    bool_0 = True
    str_0 = "%XqvkJf\n\\snhvR\te"
    str_0.write(bool_0)


def test_case_5543():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_5544():
    str_0 = "Y~Xn#MBK$16zv"
    none_type_0 = None
    str_1 = "n\tRG"
    str_2 = 'h2&"^ze\x0cwj'
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_2: none_type_0}
    module_1.ABC(**dict_0)


def test_case_5545():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5546():
    a_b_c_0 = module_1.ABC()
    str_0 = "l<Rf7T&C!$XZj"
    bytes_0 = b""
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5547():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5548():
    str_0 = "+eZ`n{\x0c<M&"
    list_0 = [str_0, str_0, str_0]
    list_1 = [list_0, list_0]
    bool_0 = True
    bool_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_5549():
    int_0 = 4146
    int_1 = 27
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5550():
    float_0 = -3454.103237
    str_0 = "6b<SOw*T^.L\t;ec;"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5551():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    bytes_0 = b"G\x14D\xaf\t1\xd6\x14u5\x95\xcd\xdcZ"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5552():
    str_0 = 'ft\nD"L4n4O=h'
    set_0 = set()
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5553():
    str_0 = "AIACNCo\t"
    str_1 = "*/^fwo_'Y$3\x0cuoRReh{@"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5554():
    str_0 = "!"
    set_0 = set()
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5555():
    str_0 = "j->@hjVR"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5556():
    str_0 = "$8MF(\x0cv)2Tg"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5557():
    list_0 = []
    bytes_0 = b"\xb2\x0e\x1f+.\xa5\x9f\xf7\x01W;\t\xb3\x83\\:\xda\xa4"
    set_0 = {bytes_0, bytes_0}
    set_0.write(list_0)


def test_case_5558():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_5559():
    int_0 = -157
    list_0 = [int_0, int_0]
    int_1 = 3676
    dict_0 = {int_1: int_1, int_1: int_1, int_1: int_1, int_1: int_1}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5560():
    int_0 = -2578
    list_0 = [int_0, int_0, int_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5561():
    str_0 = ":oh."
    list_0 = [str_0, str_0, str_0, str_0]
    module_1.ABC(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_5562():
    a_b_c_0 = module_1.ABC()
    int_0 = -1575
    int_0.write(a_b_c_0)


def test_case_5563():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5564():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    str_0 = "<ls]/sr"
    dict_0 = {str_0: none_type_0, str_0: str_0, str_0: list_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5565():
    str_0 = "N-HCo]zsi)"
    none_type_0 = None
    module_1.ABC(*none_type_0, **str_0)


@pytest.mark.xfail(strict=True)
def test_case_5566():
    int_0 = 276
    tuple_0 = (int_0, int_0)
    set_0 = {tuple_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5567():
    float_0 = -129.2
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5568():
    float_0 = -2687.75923
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5569():
    str_0 = "$"
    str_1 = 'e6w8-th \r"n{qBBnv%3'
    dict_0 = {str_0: str_0, str_1: str_0, str_1: str_1, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5570():
    int_0 = -1786
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5571():
    bytes_0 = b"\xde\xc5\n\xf2\xa8\x1b\xef=DT\xad\x93n\xc1g\xdcH\x01|"
    str_0 = "o/L%`>^oE.}"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5572():
    none_type_0 = None
    bytes_0 = b"\x9e\\nZ\x91"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5573():
    bytes_0 = b"\xc5\xa2\x82\t\x1e6\xde"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5574():
    str_0 = "~op>^86Qu8f'H3[J"
    dict_0 = {}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5575():
    bytes_0 = b""
    bytes_1 = b"\x81\xc2j\xef\xa2\xf3"
    bytes_1.write(bytes_0)


def test_case_5576():
    object_0 = module_0.object()


def test_case_5577():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_5578():
    bytes_0 = b"\x8a*m\x9c\x18\xa8}\x85=>5$"
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5579():
    bool_0 = True
    bytes_0 = b"\x9b.r\x94j\xec#\x16v\xa8\x91\xf8"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5580():
    dict_0 = {}
    bytes_0 = b"\xc7\x07u/\x07C\xaa\xa3\x84f\xdf\xb1\x04\xa3\x95\x9c9\\c\x0c"
    dict_1 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5581():
    none_type_0 = None
    bytes_0 = b"\xd8kA\x1f\xaf\xad\xd7K\xc0\x03\xb8}\t\x81\x9a"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5582():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5583():
    none_type_0 = None
    complex_0 = -735.933 - 2827.6687j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5584():
    str_0 = "=Yl"
    list_0 = [str_0, str_0]
    bytes_0 = b"\x1d=\xa8\xb3\x078C;g\x9e\xe6\x03)"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5585():
    bytes_0 = b"\x1a\x8f\x9c\x92\xaf7\xff\xd2c\x9as\x9e\t\x01\x91:X\xd6"
    set_0 = set()
    set_0.write(bytes_0)


def test_case_5586():
    pass


def test_case_5587():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5588():
    a_b_c_0 = module_1.ABC()
    int_0 = -2336
    int_0.write(a_b_c_0)


def test_case_5589():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5590():
    int_0 = 3413
    str_0 = "P(e'}a}&8O"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5591():
    str_0 = "\n8l"
    int_0 = -3049
    tuple_0 = (str_0, int_0)
    set_0 = set()
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5592():
    int_0 = -2483
    str_0 = 'f~O"a"Nsv#*g~b8'
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5593():
    bool_0 = False
    complex_0 = -2128.565823 - 2392.072j
    tuple_0 = (bool_0, complex_0, complex_0)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5594():
    str_0 = "Dw&AB{>2$1Ii"
    set_0 = {str_0, str_0}
    int_0 = 1514
    tuple_0 = (str_0, set_0, int_0)
    float_0 = -4735.64
    float_0.write(tuple_0)


def test_case_5595():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5596():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    bool_1 = True
    int_0 = 2520
    tuple_0 = (bool_0, bool_1, bool_1, int_0)
    tuple_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5597():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    str_0 = "s5Yg/\\S"
    str_1 = "\nEE4Gp\x0cAp;WO\x0b-t&BD"
    dict_0 = {str_0: str_0, str_0: none_type_0, str_1: str_1}
    module_1.ABC(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5598():
    none_type_0 = None
    bytes_0 = b"R4\x06\xb8\x93M\xa3"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5599():
    a_b_c_0 = module_1.ABC()
    str_0 = "R1Bd*eE'oh\t;wX:;."
    dict_0 = {str_0: str_0}
    str_1 = '""0hh}j%UgRy}3HRD'
    dict_1 = {str_0: dict_0, str_1: str_1}
    module_1.ABC(**dict_1)


@pytest.mark.xfail(strict=True)
def test_case_5600():
    str_0 = ""
    tuple_0 = (str_0, str_0)
    bytes_0 = b'\xca\xb8\x12a\xd49G%\xd8\xfd\x93B"\t\xbe\xc8PLgm'
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5601():
    int_0 = 2032
    str_0 = "A(DGXfv\x0bD7\r@f%"
    set_0 = {str_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5602():
    complex_0 = 121.21892 - 1653.09427j
    list_0 = [complex_0, complex_0]
    tuple_0 = (list_0,)
    bytes_0 = b"\x1f(\xc7\xcbZ\xbccT\x99\x9a\x0e\xff5\xf0O\xc5\xfd\xb5"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5603():
    list_0 = []
    object_0 = module_0.object(*list_0)
    object_1 = module_0.object()
    object_1.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5604():
    none_type_0 = None
    bytes_0 = b"\x9fD\x93N\xb0I$\xbbO\xbd`g\xf1\xa7\xad\xf2\x8d"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5605():
    str_0 = "4*lG"
    bool_0 = False
    tuple_0 = (bool_0,)
    bool_1 = True
    bytes_0 = b"\xc9\x843\xf31]|.\xeb\xe1\xaa\xb4\x90\\\xb7"
    int_0 = -937
    dict_0 = {tuple_0: bool_1, bytes_0: int_0, bool_1: bool_1, int_0: bytes_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5606():
    bool_0 = True
    bytes_0 = b"C8\t> \xdfw\xa1\x80\xa3H\x94X\xdc\xca5s\xa0\xa4\x19"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5607():
    none_type_0 = None
    float_0 = 3819.791
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5608():
    bytes_0 = b"\x98-\xa0\xf2\x1e\x1eY\xb30\xba\xa2c\x01\xf2\xf4v"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5609():
    bool_0 = True
    float_0 = -2632.123
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5610():
    int_0 = -1748
    complex_0 = -747.2274 - 983.99j
    complex_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5611():
    float_0 = 832.0
    int_0 = -1793
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5612():
    object_0 = module_0.object()
    float_0 = -789.4113
    float_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5613():
    int_0 = 1220
    list_0 = [int_0, int_0]
    tuple_0 = (int_0, list_0, int_0)
    float_0 = -2071.73691
    float_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5614():
    str_0 = "susH|E"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5615():
    none_type_0 = None
    str_0 = "ITvjX@xU2%"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5616():
    list_0 = []
    bool_0 = False
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_1, bool_1: bool_1}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5617():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bool_1 = False
    bool_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5618():
    object_0 = module_0.object()
    int_0 = 656
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5619():
    object_0 = module_0.object()
    bool_0 = True
    float_0 = 2394.79
    list_0 = [bool_0, bool_0, float_0]
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5620():
    bool_0 = False
    module_0.object(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5621():
    none_type_0 = None
    int_0 = 361
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5622():
    int_0 = 1743
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5623():
    object_0 = module_0.object()
    str_0 = "t1Yt=dv>B)RM}"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5624():
    float_0 = 1427.32
    float_1 = -563.4
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5625():
    str_0 = "T;Y2k=ho1]#y"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5626():
    object_0 = module_0.object()
    float_0 = -262.0
    set_0 = {float_0, float_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5627():
    set_0 = set()
    bytes_0 = b"\xc5\xc4\xfb"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5628():
    none_type_0 = None
    list_0 = []
    list_1 = [list_0]
    list_1.write(none_type_0)


def test_case_5629():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5630():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    str_0 = "9=#&Q=XOF^Ng"
    tuple_0 = (str_0,)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5631():
    set_0 = set()
    a_b_c_0 = module_1.ABC(*set_0)
    bytes_0 = b""
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5632():
    str_0 = "g="
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5633():
    none_type_0 = None
    str_0 = "Wh!@a,<uZZLH?xOUv"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5634():
    bytes_0 = b"\xe9\xcb\xaf\xbcqGJd\x1f\xb5\x08\x01\xc4\x9d\x96R\x04"
    set_0 = {bytes_0}
    list_0 = [set_0, set_0, set_0, bytes_0]
    float_0 = 24.1308
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5635():
    float_0 = -2898.08
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5636():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    set_0 = set()
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5637():
    str_0 = "N=jqGBOb"
    float_0 = 1533.69
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5638():
    float_0 = 803.6
    bytes_0 = b"!\x17\x8fc%V\xa22\x10\x8aD.\x11}\xba\x03\x90\xef\xa58"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5639():
    bytes_0 = b"\xb9\xb6/R\xeaU\xa6\xf2"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    dict_1 = {}
    a_b_c_0 = module_1.ABC(**dict_1)
    a_b_c_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5640():
    bool_0 = False
    bytes_0 = b"L\x0eE\xa3\xc5\x07\xdc\n\t\x06\xb5"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5641():
    object_0 = module_0.object()
    str_0 = "ypzPu;:$,79'@b("
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5642():
    int_0 = -4032
    str_0 = "-o7{szZ;@kSh#"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5643():
    none_type_0 = None
    bytes_0 = b"}\x9e\xa7\x10\xcf\x95\xed\xd3F\x01\xdav\xfc\xa8\xa2G\xe7 "
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5644():
    object_0 = module_0.object()
    bool_0 = True
    list_0 = [object_0, bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5645():
    none_type_0 = None
    str_0 = "wjr]FmC"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5646():
    int_0 = 2523
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5647():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5648():
    a_b_c_0 = module_1.ABC()
    module_1.ABC(*a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5649():
    object_0 = module_0.object()
    int_0 = -773
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5650():
    none_type_0 = None
    bytes_0 = b" v\xd9\xea\xd2\xea\r\xec\xb8\x90a_F\x80"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5651():
    complex_0 = -516.4701 + 491.8967j
    str_0 = "a=8&#3"
    bytes_0 = b"wo\xb3\xd3\xd4\x19\x8f\xbc\x81\x80OSK\xc8"
    tuple_0 = (str_0, bytes_0)
    tuple_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5652():
    bool_0 = True
    int_0 = 1011
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5653():
    bytes_0 = b"0\xa5\x80\xe4\xd8J\xe0\x16\x12&\x0c\x881\xf4\xdbq\xaf;\xf8\xc8"
    complex_0 = -2137.58452 + 1886.442j
    complex_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5654():
    int_0 = -804
    dict_0 = {}
    tuple_0 = (int_0, int_0, dict_0)
    bytes_0 = b"\x8e\x06Z5\x1d&"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5655():
    int_0 = 560
    bytes_0 = b"\xe5z"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5656():
    bool_0 = True
    none_type_0 = None
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5657():
    bool_0 = False
    float_0 = 3590.38748
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5658():
    bytes_0 = b"]\xe7\x94u \xa5o\xefD\xb3I:"
    bytes_1 = b"K\x14\xa2\xfeiU\xf8\xeb\x02\x08\xb0\xf2\x9b\xaf\xb7O\x9a\xb6"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5659():
    bool_0 = False
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5660():
    bytes_0 = b"\x03\x9e\xb4"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_0.object(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_5661():
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5662():
    str_0 = ".<PF@se\rs&kM?{\r \n(9"
    none_type_0 = None
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
    }
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5663():
    complex_0 = -941 - 2229.05j
    list_0 = [complex_0, complex_0, complex_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5664():
    tuple_0 = ()
    bool_0 = True
    tuple_1 = (tuple_0, bool_0)
    list_0 = [tuple_1, tuple_1]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5665():
    int_0 = 716
    tuple_0 = (int_0,)
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5666():
    int_0 = 742
    bool_0 = True
    a_b_c_0 = module_1.ABC()
    tuple_0 = (int_0, bool_0, bool_0, a_b_c_0)
    set_0 = {tuple_0}
    bytes_0 = b"\xf0\xef\xacN\x86\xe8\xda\xcf;6\xc4e\xe4\xff\xb7\x17"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5667():
    bytes_0 = b"\xf73\xb5\xee\x96\x90\x0f\x9b"
    int_0 = 907
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5668():
    int_0 = 268
    tuple_0 = (int_0, int_0, int_0)
    bytes_0 = b""
    tuple_1 = (tuple_0, bytes_0, tuple_0, bytes_0)
    tuple_2 = ()
    list_0 = [tuple_2, tuple_2]
    list_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_5669():
    int_0 = -454
    list_0 = [int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5670():
    bytes_0 = b"\x90~\x8e\xfa%kAf\xfd\xc7\xc1\x99\x9b\x02\xc5\nP\x8e\x17\x03"
    float_0 = 1646.56
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5671():
    str_0 = "JGm%EDc]Bvv3Wg,"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5672():
    str_0 = "E_m0\rp4s?P"
    str_1 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5673():
    dict_0 = {}
    none_type_0 = None
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5674():
    bool_0 = True
    str_0 = "Y\t"
    set_0 = {str_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5675():
    bytes_0 = b"!\xef\xbd\x85!\x0c\xfd|\xac"
    list_0 = [bytes_0, bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5676():
    none_type_0 = None
    float_0 = 1803.866792
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5677():
    str_0 = 'k[8[G99w"+T]*^r=%;'
    none_type_0 = None
    str_1 = "rIg<k3;hyvD,~N!"
    str_2 = "]I\tH:C:,|!o"
    dict_0 = {
        str_0: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
        str_2: none_type_0,
    }
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5678():
    tuple_0 = ()
    int_0 = -464
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5679():
    set_0 = set()
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    set_1 = {tuple_0, a_b_c_0, a_b_c_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5680():
    int_0 = -2119
    bytes_0 = b"\xb0\x12I\xb6\xed\xdd#"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5681():
    bytes_0 = b"\xe5\xf1"
    bytes_1 = b"\xfe-\xa1\xe5=\\\xba-t\xda\xff\xc0\x04~%6\x00"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5682():
    int_0 = -379
    dict_0 = {int_0: int_0, int_0: int_0}
    bytes_0 = b"@\xca\xb2u\x94e\xef7\xb5\xf4\x1a\xae3\x01\xbb_"
    tuple_0 = (int_0, int_0, dict_0, bytes_0)
    str_0 = "7FRw^8P#pk"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5683():
    none_type_0 = None
    float_0 = 3035.66
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5684():
    bool_0 = False
    dict_0 = {}
    module_1.ABC(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5685():
    none_type_0 = None
    complex_0 = 883.4572 - 507.5j
    tuple_0 = ()
    tuple_1 = (complex_0, tuple_0)
    tuple_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5686():
    bytes_0 = b"\r]\xf9\x17?\xc2\xf1\x18\xc5"
    bytes_1 = b"\xd4\xc6l)7B\xb2\xfe.\xc8\x05\x1bCk"
    list_0 = [bytes_1, bytes_1, bytes_1, bytes_1]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5687():
    list_0 = []
    object_0 = module_0.object(*list_0)
    int_0 = -878
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5688():
    none_type_0 = None
    str_0 = "Z]\x0b~1"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5689():
    bool_0 = False
    bytes_0 = b"\\\xde=th\xc4"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5690():
    a_b_c_0 = module_1.ABC()
    int_0 = -299
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5691():
    set_0 = set()
    dict_0 = {}
    tuple_0 = (set_0, dict_0, set_0)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_0)


def test_case_5692():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5693():
    tuple_0 = ()
    complex_0 = 235.388987 + 1571.76j
    complex_0.write(tuple_0)


def test_case_5694():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5695():
    bytes_0 = b"\xa7vKyP\xcc\xaaz(\xea\xa2\xc4\xab\x0byN\xda"
    int_0 = -200
    list_0 = [int_0, int_0, int_0, int_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5696():
    object_0 = module_0.object()
    complex_0 = -427.41479 + 1830.345575j
    complex_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5697():
    str_0 = 'bf"&5kGg\\\\<'
    int_0 = -4963
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5698():
    int_0 = 583
    str_0 = "d}avCSEQ8Vki"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5699():
    bool_0 = False
    str_0 = "9=(:ZT_V"
    list_0 = [str_0, str_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5700():
    int_0 = -4223
    int_1 = 778
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5701():
    a_b_c_0 = module_1.ABC()
    int_0 = -2296
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5702():
    bool_0 = True
    module_1.ABC(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5703():
    int_0 = -1661
    bytes_0 = b"\xe1#\x99\xac\x07\x84\x88\xc1\x85\x8a\xcf"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5704():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    list_0 = [bool_0, a_b_c_0, bool_0, a_b_c_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5705():
    int_0 = 3092
    set_0 = {int_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5706():
    float_0 = -817.32681
    complex_0 = -227.84731 - 3399j
    list_0 = [complex_0, complex_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5707():
    none_type_0 = None
    list_0 = []
    dict_0 = {}
    a_b_c_0 = module_1.ABC(*list_0, **dict_0)
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5708():
    str_0 = "=*Ul;>U@H"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5709():
    list_0 = []
    float_0 = 1786.524458
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5710():
    list_0 = []
    str_0 = "16jW%x6Q=.QuXve"
    str_0.write(list_0)


def test_case_5711():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5712():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    str_0 = "1PolC:"
    set_0 = {str_0, str_0, str_0}
    tuple_0 = (set_0, str_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5713():
    bool_0 = False
    int_0 = -2469
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5714():
    str_0 = "HHj."
    float_0 = 351.47
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5715():
    float_0 = 742.0128
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5716():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5717():
    float_0 = -2922.726533
    dict_0 = {float_0: float_0, float_0: float_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5718():
    complex_0 = 1506.87189 + 737.671j
    float_0 = 3553.59172
    list_0 = [float_0]
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5719():
    str_0 = "Vq%."
    bytes_0 = b""
    str_1 = "W-O}f"
    list_0 = [str_1, bytes_0, str_0]
    tuple_0 = (str_0, bytes_0, str_1, list_0)
    complex_0 = 544.48 - 252.070672j
    complex_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5720():
    bool_0 = True
    bytes_0 = b"\xa0\x1c\xc8\xd0#\xda\xf3\xd0\xdee\x90\x18k"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5721():
    bool_0 = True
    tuple_0 = (bool_0,)
    bytes_0 = b"\x13\xbe\xa6\xc1\x1b#l\x96"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    int_0 = 1440
    bool_1 = False
    tuple_1 = (bytes_0, dict_0, int_0, bool_1)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5722():
    float_0 = -1783.33562
    set_0 = set()
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5723():
    bytes_0 = b"t\x96\xb8\xb4<\xe3\xd6\x8e\xff\x02\x99"
    bytes_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5724():
    bool_0 = False
    bytes_0 = b"\xbaI\xc4\x0b\xc2\xfdz#VM\xd2\x02n"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5725():
    bool_0 = False
    list_0 = []
    list_1 = [list_0, list_0, list_0]
    list_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5726():
    a_b_c_0 = module_1.ABC()
    float_0 = 428.0
    float_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5727():
    str_0 = "BEN|Q;*$%A+s+e0!#pQ"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


def test_case_5728():
    a_b_c_0 = module_1.ABC()


def test_case_5729():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5730():
    str_0 = "+I"
    list_0 = [str_0]
    list_1 = [list_0, str_0, list_0]
    module_0.object(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_5731():
    str_0 = "x7"
    int_0 = -994
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5732():
    a_b_c_0 = module_1.ABC()
    complex_0 = 764.0924 - 1473.511j
    complex_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5733():
    bytes_0 = b"\xdf#"
    set_0 = {bytes_0, bytes_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5734():
    str_0 = "A?8F6v>B]w{ysu"
    set_0 = {str_0}
    set_1 = set()
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5735():
    int_0 = -496
    str_0 = "]}+npA*g`f~A44]l"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5736():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5737():
    bytes_0 = b".\xd8\xbc\xd4\xaa"
    none_type_0 = None
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5738():
    bool_0 = False
    int_0 = 1732
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5739():
    str_0 = ")Cs"
    str_1 = "{c$R#|6yF|%eQ::t+"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5740():
    none_type_0 = None
    int_0 = 4811
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5741():
    str_0 = "Aw9qH\n"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5742():
    tuple_0 = ()
    bytes_0 = b"\xf6\x94y\x99\x8aY\xaa5\xb3O\x03[T\xe6Iu\xebz\x9a\xd0"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5743():
    str_0 = "6lo"
    str_1 = "})^A\x0cnr"
    str_2 = ">NQ;NMy)PIGW"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_2}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5744():
    int_0 = -1447
    str_0 = "1K><92"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5745():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    module_1.ABC(*list_0, **bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5746():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    dict_0 = {}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5747():
    dict_0 = {}
    int_0 = 110
    tuple_0 = (dict_0, int_0, dict_0)
    bytes_0 = b"\xa8\xf0\t\x01\xa9\xfaH\x84\xd8fP\x90\xf7"
    list_0 = []
    list_1 = [bytes_0, list_0, bytes_0]
    list_2 = [list_1, list_0]
    list_2.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5748():
    str_0 = "~KsbB3IvhJq"
    set_0 = {str_0}
    complex_0 = -1098.6 + 117.78j
    complex_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5749():
    none_type_0 = None
    tuple_0 = ()
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5750():
    bytes_0 = b"{"
    bytes_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5751():
    bool_0 = True
    int_0 = -1278
    int_0.write(bool_0)


def test_case_5752():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5753():
    float_0 = 1473.0
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5754():
    float_0 = 955.43325
    str_0 = "dO2%r+m0a\x0bAi<"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5755():
    list_0 = []
    object_0 = module_0.object(*list_0)
    int_0 = -639
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5756():
    none_type_0 = None
    int_0 = 1417
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5757():
    str_0 = '"\rQTCXOJT=)~Qg3^?`\x0cL'
    int_0 = 3336
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5758():
    int_0 = 282
    dict_0 = {int_0: int_0, int_0: int_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5759():
    none_type_0 = None
    complex_0 = 745.28568 + 1914.49j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5760():
    int_0 = 1342
    float_0 = 458.0
    float_0.write(int_0)


def test_case_5761():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5762():
    object_0 = module_0.object()
    str_0 = "2Guk;R\x0c'Q,tA+"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5763():
    str_0 = "B`$k0(>eRl$?LSt"
    module_1.ABC(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_5764():
    int_0 = -2267
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5765():
    set_0 = set()
    list_0 = [set_0]
    module_1.ABC(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_5766():
    bool_0 = False
    int_0 = 356
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5767():
    none_type_0 = None
    list_0 = []
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5768():
    bytes_0 = b"\xea\x96E\xeer\xad\x9e\x02\x89\x171;\xf8\x1f\xcb\xe6?"
    list_0 = []
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5769():
    str_0 = "O)HP)9eTi9"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5770():
    str_0 = "}}*hx\tu83K"
    bytes_0 = b"\xe5\xe2\xfd*\xd7hj\xe9\xd8?\xb7\xaa\x8b\xe4\xe1\x95#\xe3R2"
    str_1 = "w.m2=2OM_"
    float_0 = 2409.342725
    str_2 = "$P!Zf]0<tGR`t?)TH"
    dict_0 = {str_0: bytes_0, str_1: float_0, str_2: str_1, str_0: str_2}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5771():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    tuple_0 = ()
    bool_1 = False
    list_0 = [tuple_0, tuple_0, tuple_0, bool_1]
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5772():
    int_0 = -25
    bool_0 = False
    str_0 = "c\tPFe?t}D Q"
    tuple_0 = (int_0, bool_0, bool_0, str_0)
    list_0 = [tuple_0]
    bytes_0 = b"\xf8\x86\xcf!-\xbb\xbc"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5773():
    bytes_0 = b"\x15\xd4\x81b"
    complex_0 = 2613.13 - 1587.7371j
    tuple_0 = (complex_0,)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5774():
    none_type_0 = None
    int_0 = -3569
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5775():
    str_0 = "["
    none_type_0 = None
    str_1 = "\x0cBbN|0V!i5py."
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_1: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5776():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5777():
    bytes_0 = b"\x99\xfc\xc5\xec~a\xef"
    bytes_1 = b"?UD\xfb\xc4\xba\n,\x88T\x9bhZ\x94\xfc\xe0+\x08\xa1"
    set_0 = {bytes_1}
    set_0.write(bytes_0)


def test_case_5778():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_5779():
    int_0 = -1703
    list_0 = [int_0, int_0]
    float_0 = -537.54571
    bytes_0 = b'\x88\xc9\xc6\xf3s\xcc\xed\xe3\xe2v\x94"\x7f<&\x87M{'
    tuple_0 = (list_0, float_0, float_0, bytes_0)
    complex_0 = -2316.76537 + 203.933j
    complex_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5780():
    bytes_0 = b"\xddqX\xd2\x95<\x06\x85\x8a!U\xd1"
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5781():
    int_0 = -2408
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5782():
    bytes_0 = b"\xeeU\xdf\xe7q\xb3\xbe\xde"
    tuple_0 = ()
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5783():
    a_b_c_0 = module_1.ABC()
    int_0 = 1276
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5784():
    none_type_0 = None
    int_0 = -208
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5785():
    bytes_0 = b"o\xe7m \xda\xa5\xd2\xfc\x8eG\xb6\xc9\xbb\x14X\xa8U"
    str_0 = ""
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5786():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5787():
    str_0 = "{\r_Ss\r&qHdEIlT%:=Gnt"
    list_0 = []
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5788():
    object_0 = module_0.object()
    bytes_0 = b"\x08\xb1\x08Hu\xce]\x14YP\xf6&\xeb{>\x9d\xe1"
    int_0 = 2822
    int_0.write(bytes_0)


def test_case_5789():
    pass


def test_case_5790():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5791():
    bool_0 = True
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5792():
    str_0 = '*??))9>~"UZ$No\x0c>'
    none_type_0 = None
    str_1 = "'{G"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5793():
    int_0 = -144
    complex_0 = 64.4816 + 4121.5625j
    complex_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5794():
    str_0 = "~ummFgI3D^~"
    bool_0 = True
    set_0 = {str_0, str_0, bool_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5795():
    str_0 = "rSq"
    str_1 = "k6`\nmi"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5796():
    a_b_c_0 = module_1.ABC()
    dict_0 = {}
    module_1.ABC(*a_b_c_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5797():
    dict_0 = {}
    object_0 = module_0.object(*dict_0)
    bool_0 = False
    tuple_0 = (bool_0,)
    tuple_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5798():
    none_type_0 = None
    int_0 = -673
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5799():
    none_type_0 = None
    str_0 = "YVPK:nty2:\t3"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5800():
    bytes_0 = b"\xee\xd4\xaf\x90K?F"
    str_0 = "VD!j^_2?@DD?![Bl0n-"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5801():
    none_type_0 = None
    int_0 = -1353
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5802():
    float_0 = -617.0
    set_0 = set()
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5803():
    str_0 = "=%EA?I"
    float_0 = -603.87294
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5804():
    str_0 = "<2o0JpywDu"
    bytes_0 = b"\x7fu!f\x1f\xc144\x95I\x8e]\x9c\x0b"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5805():
    complex_0 = -10 - 2693j
    bool_0 = True
    str_0 = "<O}'}4a?-Hl3AHh\x0bL}75"
    tuple_0 = (bool_0, bool_0, bool_0, str_0)
    tuple_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5806():
    str_0 = "U-lL(6m#s>hy@e?|pN:}"
    bool_0 = True
    bool_1 = True
    a_b_c_0 = module_1.ABC()
    tuple_0 = (bool_0, bool_1, a_b_c_0)
    list_0 = [tuple_0, tuple_0, bool_1, tuple_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5807():
    str_0 = "L33:\x0bFz"
    tuple_0 = (str_0, str_0)
    bool_0 = True
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5808():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    none_type_0 = None
    module_1.ABC(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5809():
    none_type_0 = None
    int_0 = 6028
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5810():
    str_0 = "LV1,^>+[B"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5811():
    none_type_0 = None
    bytes_0 = b"\xb3m\xbe\xa5SQ\x1al\xc1\x12\xbb\x1c\xc5\x04"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5812():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    bool_0 = False
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5813():
    float_0 = 626.65543
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5814():
    complex_0 = 968.095982 + 304j
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5815():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    bytes_0 = b"n\x91G9"
    bytes_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_5816():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    bytes_0 = b"\xfe0^\x08?"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5817():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_1, bool_1, bool_1)
    dict_0 = {tuple_0: tuple_0, tuple_0: bool_1, bool_1: bool_1, bool_1: bool_1}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5818():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    bytes_0 = b"7\xb7\x96\x84jL\xf7Kj\x82\x0f\x88\x82\x7f'"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5819():
    float_0 = 1550.50822
    int_0 = -2303
    tuple_0 = (float_0, int_0)
    set_0 = {tuple_0}
    int_1 = -2688
    int_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5820():
    bytes_0 = b'\x98!@\xfc\x00#\x1f\x1ec~\xc8\xa6\xd7\\\xcb\xa7 \xe2*"'
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5821():
    bool_0 = False
    bool_1 = False
    set_0 = {bool_1, bool_1, bool_1, bool_1}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5822():
    object_0 = module_0.object()
    int_0 = -626
    dict_0 = {int_0: int_0}
    set_0 = set()
    tuple_0 = (set_0, set_0)
    list_0 = [dict_0, dict_0, tuple_0, dict_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5823():
    bool_0 = False
    float_0 = 762.16
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5824():
    float_0 = -2119.88384
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5825():
    none_type_0 = None
    str_0 = "RiH~'&:\tF"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5826():
    bytes_0 = b"\x1d\x8d-\xd1\xa2\xd1N\x96\x90N\xd3\x11\x94\xf9\xfc\x87\xb2U"
    module_1.ABC(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5827():
    str_0 = "m<\x0bG4>#.N[-8uA*e"
    int_0 = 0
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5828():
    object_0 = module_0.object()
    float_0 = 2318.5
    float_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5829():
    str_0 = "J/mS"
    bool_0 = False
    dict_0 = {str_0: bool_0, bool_0: bool_0, str_0: str_0, str_0: bool_0}
    tuple_0 = ()
    bool_1 = True
    tuple_1 = (tuple_0, bool_1)
    tuple_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5830():
    float_0 = 106.4786
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5831():
    str_0 = "{\x0c"
    int_0 = -318
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5832():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_1: a_b_c_1}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5833():
    str_0 = "9(%0/z{fQ3\x0b\nk\t "
    dict_0 = {str_0: str_0, str_0: str_0}
    bytes_0 = b'\x06\x144"\xb1\xd8}\xb4d\xe73\xe6O\x83\xf7,t\xee\x9eD'
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5834():
    complex_0 = -2268.62393 + 1393j
    str_0 = "{$[TSDtA\\"
    str_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5835():
    bool_0 = False
    int_0 = -2752
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5836():
    object_0 = module_0.object()
    bool_0 = True
    set_0 = {bool_0, bool_0}
    list_0 = [set_0, set_0]
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5837():
    float_0 = -4127.0
    module_0.object(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_5838():
    bool_0 = True
    bytes_0 = b"\xa8"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5839():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    list_0 = [set_0, a_b_c_0, set_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5840():
    a_b_c_0 = module_1.ABC()
    str_0 = 'Nb/aSn,"f0XF?\r^f'
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5841():
    bytes_0 = b"\xebl=\x07\x14n\xb3=\x11="
    bool_0 = True
    set_0 = {bool_0, bool_0}
    set_0.write(bytes_0)


def test_case_5842():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5843():
    str_0 = " jeiu\rsiL\tyV,F"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


def test_case_5844():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5845():
    a_b_c_0 = module_1.ABC()
    complex_0 = 1423.628 - 796.20535j
    str_0 = "~dp7"
    str_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5846():
    str_0 = "'\rr.;"
    bool_0 = True
    bool_0.write(str_0)


def test_case_5847():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_5848():
    float_0 = 563.5
    complex_0 = -3619.2 + 980.29126j
    complex_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5849():
    bytes_0 = b"$\xfa\x84\x9fV"
    int_0 = 3077
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5850():
    none_type_0 = None
    int_0 = 554
    list_0 = [int_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5851():
    none_type_0 = None
    complex_0 = -772.881 - 825j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5852():
    none_type_0 = None
    float_0 = 5671.18471
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5853():
    complex_0 = 1165.6 - 606.304j
    int_0 = 2277
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5854():
    bytes_0 = b"\xc4ZU\xae-\x14U%"
    object_0 = module_0.object()
    object_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5855():
    int_0 = -1172
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5856():
    object_0 = module_0.object()
    list_0 = []
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5857():
    int_0 = -3814
    bool_0 = False
    set_0 = {bool_0, bool_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5858():
    int_0 = 1872
    str_0 = "1qG3v\x0br5"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5859():
    none_type_0 = None
    str_0 = "YmC(BM S-q\\8[a"
    dict_0 = {str_0: str_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5860():
    bytes_0 = b"Z\xfa\xec;\xe7\xbd5\x93\xf5\xad\xd5\xce\xac"
    float_0 = -356.35
    set_0 = {float_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5861():
    bytes_0 = b"\xa9"
    dict_0 = {bytes_0: bytes_0}
    int_0 = 537
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5862():
    str_0 = "%9{S'$RNmK1="
    float_0 = 1626.085626
    a_b_c_0 = module_1.ABC()
    tuple_0 = (float_0, a_b_c_0)
    int_0 = 3080
    tuple_1 = (tuple_0, a_b_c_0, a_b_c_0, int_0)
    tuple_2 = (str_0, tuple_1, str_0)
    set_0 = set()
    tuple_3 = (tuple_2, set_0, tuple_0)
    bool_0 = True
    bool_0.write(tuple_3)


@pytest.mark.xfail(strict=True)
def test_case_5863():
    dict_0 = {}
    complex_0 = -1331.1 - 1126.98j
    complex_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5864():
    str_0 = "Z1\rp%)sG4-W.eE^5Wd"
    list_0 = [str_0, str_0]
    dict_0 = {}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5865():
    none_type_0 = None
    str_0 = "14\x0ctPN`{w\x0c5j25@0o2wK"
    str_0.write(none_type_0)


def test_case_5866():
    pass


def test_case_5867():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5868():
    int_0 = -2031
    set_0 = {int_0, int_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5869():
    bool_0 = True
    complex_0 = -4023.3858 - 2181.065j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5870():
    bool_0 = False
    int_0 = 297
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5871():
    str_0 = '~";4`>I2\rf>'
    bytes_0 = b"\xda},\xd1\x04\xb2+\xb4\x8e0\xe9;\x00\xf0\xbb\x1fe\xf2\xc6\xe6"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5872():
    a_b_c_0 = module_1.ABC()
    int_0 = 1390
    list_0 = []
    tuple_0 = (a_b_c_0, int_0, list_0)
    list_1 = [tuple_0, list_0, list_0]
    int_1 = 537
    int_1.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_5873():
    float_0 = 982.28
    list_0 = [float_0, float_0]
    bool_0 = True
    set_0 = {bool_0}
    set_0.write(list_0)


def test_case_5874():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5875():
    none_type_0 = None
    bytes_0 = b"1p\xbc\x03y\xf8"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5876():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5877():
    int_0 = 3092
    bytes_0 = b"\xf8C@\xf7&\xf9kVs\xc5\x03\x89\xa1>b\x96\x84\xa6\t\xad"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5878():
    str_0 = "jx~"
    str_1 = "`"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5879():
    str_0 = "\x0b5q28rjiu,OM"
    str_1 = "}R<Kz}PY)yB^sm.t>;W"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5880():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"/ \xae\x87\xcc4\xe7\x04\xca9"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5881():
    str_0 = ""
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5882():
    none_type_0 = None
    str_0 = "cPN{\nMROy"
    str_0.write(none_type_0)


def test_case_5883():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5884():
    none_type_0 = None
    bytes_0 = b"F\x80\xab\x96\x00\xb2\xefo\xd17l\x1a\x02\x87\xbcb\x90\xc7\xe2G"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5885():
    int_0 = -58
    str_0 = "-EwC~]YN\x0c68Ji2"
    str_1 = "T~B"
    dict_0 = {str_0: str_0, str_1: int_0, str_1: int_0}
    module_0.object(*int_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5886():
    bytes_0 = b"[M\x05\xdctW\xb5\xb9!\xfcTfN+h\xb34\x03u9"
    str_0 = "r;$d|("
    str_0.write(bytes_0)


def test_case_5887():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_5888():
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0}
    set_0.write(none_type_0)


def test_case_5889():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5890():
    bool_0 = False
    complex_0 = -1903.16 + 2958j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5891():
    none_type_0 = None
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0, tuple_0: tuple_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5892():
    str_0 = ""
    float_0 = -5376.75
    dict_0 = {float_0: float_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5893():
    none_type_0 = None
    float_0 = 2861.9238
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5894():
    complex_0 = 2174.9022 - 34.41862j
    str_0 = 'Gws"\x0cK$[sN.hf'
    dict_0 = {str_0: complex_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5895():
    int_0 = 1367
    bytes_0 = b"\xf8\xe3D,\xdd)>DR\x19\xb5K\xa6\xc2."
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5896():
    a_b_c_0 = module_1.ABC()
    complex_0 = 519.36624 + 2460.6189j
    complex_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5897():
    bool_0 = True
    complex_0 = -3968 + 1977.492927j
    list_0 = [complex_0, complex_0]
    str_0 = 'RO3re}6nj~"V'
    dict_0 = {str_0: bool_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5898():
    bool_0 = True
    list_0 = [bool_0]
    bytes_0 = b'8\xef?a\xc4#\x01F\xd6Z"P\xb8'
    list_1 = [bytes_0]
    list_2 = [list_1, list_1]
    list_2.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5899():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5900():
    float_0 = -955.263
    list_0 = [float_0, float_0, float_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5901():
    float_0 = 1840.085
    float_1 = 1415.5279
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5902():
    str_0 = "}&sma:Qo%"
    set_0 = {str_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5903():
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    bytes_0 = b""
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5904():
    bool_0 = False
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5905():
    str_0 = "&v-dT5\ru FR{"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5906():
    tuple_0 = ()
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_0)


def test_case_5907():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5908():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0]
    module_0.object(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_5909():
    set_0 = set()
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5910():
    none_type_0 = None
    float_0 = 2782.204
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5911():
    bytes_0 = b"\xf6\xa0\xb3\x90\xa3\xa7r\xee2\x02\x9d]\xcf"
    bytes_1 = b"\xcb\x06d\x8a\x87\xef\xed\xcb\xa7\t<\xd0\xc1w\xbf"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5912():
    int_0 = 538
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5913():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"5r5"
    tuple_0 = (a_b_c_0, bytes_0, a_b_c_0)
    set_0 = {a_b_c_0, tuple_0}
    object_0 = module_0.object()
    object_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5914():
    none_type_0 = None
    int_0 = -1186
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5915():
    none_type_0 = None
    int_0 = 381
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5916():
    dict_0 = {}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5917():
    tuple_0 = ()
    bytes_0 = b""
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5918():
    float_0 = 223.0
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5919():
    bool_0 = False
    object_0 = module_0.object()
    object_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5920():
    set_0 = set()
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    tuple_0 = (bool_0, bool_0, dict_0)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5921():
    none_type_0 = None
    bytes_0 = b"\x93\x0b\x00\x0cO\x03j"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5922():
    bytes_0 = b"\xd9\x1a 5\x9a\xc8\x12\x89\x97"
    float_0 = 2229.55
    float_0.write(bytes_0)


def test_case_5923():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5924():
    bytes_0 = b"\xbc\x19\xeb\xb5o\xc6\x97G6[5"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [bytes_0, dict_0, dict_0]
    bool_0 = False
    tuple_0 = (bytes_0, list_0, bool_0, list_0)
    int_0 = 144
    set_0 = {int_0, int_0}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5925():
    int_0 = -2638
    set_0 = {int_0, int_0, int_0}
    tuple_0 = ()
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5926():
    str_0 = "J_)Bgjc|u.yH"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5927():
    bool_0 = False
    int_0 = -3554
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5928():
    str_0 = "I,*ME2-IM~\t^%$-eQy0"
    set_0 = {str_0, str_0, str_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5929():
    int_0 = -208
    dict_0 = {int_0: int_0}
    tuple_0 = ()
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5930():
    complex_0 = 496 - 2363.042j
    str_0 = "Izp)]y8&HCu-.0toT5Y\r"
    str_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5931():
    str_0 = "zLyY&KY-)(B[Rsz"
    object_0 = module_0.object()
    list_0 = [object_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5932():
    bool_0 = True
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5933():
    float_0 = -1952.0
    set_0 = set()
    bool_0 = True
    tuple_0 = (float_0, set_0, set_0, bool_0)
    a_b_c_0 = module_1.ABC()
    int_0 = 1844
    tuple_1 = (set_0, tuple_0, a_b_c_0, int_0)
    list_0 = [float_0, float_0, tuple_1, float_0]
    str_0 = "Z 2yz*Cytwm\x0c=V"
    str_1 = "b:\t<\x0bioGu0\n,5(o,'="
    dict_0 = {str_0: float_0, str_1: set_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5934():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    module_1.ABC(*a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5935():
    bytes_0 = b"\xea\x08VM\x89\xce\xa0g"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5936():
    int_0 = -1963
    int_1 = 2987
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5937():
    none_type_0 = None
    int_0 = 1236
    set_0 = {int_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5938():
    str_0 = "Id"
    str_1 = "_Oz<oi\n\x0bz=Rpo *p%D"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


def test_case_5939():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5940():
    str_0 = "g{6XHi"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5941():
    bytes_0 = b"\x00\xec\x8f\xa1\x9aP"
    tuple_0 = ()
    str_0 = "7Cm=[Nzj$ljl#Z[E"
    list_0 = [tuple_0, tuple_0, str_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5942():
    int_0 = 3037
    set_0 = {int_0, int_0}
    bytes_0 = b"R\xd5\x81s\xf5\xde\xa8tN\x07\xd4\xbe\xab\x81\x8bb2K:"
    float_0 = -1434.38
    tuple_0 = (bytes_0, float_0, float_0, float_0)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5943():
    set_0 = set()
    int_0 = -531
    tuple_0 = ()
    tuple_1 = (int_0, tuple_0, int_0)
    tuple_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5944():
    object_0 = module_0.object()
    bool_0 = True
    list_0 = [bool_0]
    str_0 = ""
    dict_0 = {str_0: bool_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5945():
    none_type_0 = None
    complex_0 = -686.23 + 2796.44331j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5946():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5947():
    object_0 = module_0.object()
    set_0 = {object_0, object_0, object_0}
    bytes_0 = b"\xf0"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5948():
    complex_0 = 722.5269 + 110.449j
    str_0 = "'fh"
    str_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5949():
    str_0 = "K(SH!*][e"
    str_1 = "\r\x0cp+#'"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_1}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5950():
    bytes_0 = b"<\x81\xc4@>\xd1E\xc7\x88\x83\xc7+\x8b\x1f\xa0"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    tuple_0 = (bytes_0, list_0)
    tuple_1 = (tuple_0,)
    int_0 = -3084
    int_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_5951():
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5952():
    bool_0 = False
    set_0 = {bool_0}
    bytes_0 = b"\xf5A\xf7\x95\x18"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5953():
    str_0 = "6J"
    int_0 = 3552
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5954():
    bytes_0 = b"\x1c\x84\xea\xcc\x11Q"
    set_0 = set()
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5955():
    none_type_0 = None
    bytes_0 = b"\x1b \x80OjO\x93\x1bLA\x8d\xea"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5956():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5957():
    int_0 = -418
    bytes_0 = b"2\xf2"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5958():
    bool_0 = True
    float_0 = -1084.0
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5959():
    str_0 = "\x0c\r&0eH"
    list_0 = [str_0]
    module_0.object(*list_0, **str_0)


@pytest.mark.xfail(strict=True)
def test_case_5960():
    bool_0 = True
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5961():
    int_0 = -413
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5962():
    int_0 = -44
    none_type_0 = None
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5963():
    str_0 = "{b%w)($R5N"
    bool_0 = False
    tuple_0 = ()
    str_1 = "O\rD]>o"
    tuple_1 = (bool_0, tuple_0, tuple_0, str_1)
    tuple_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5964():
    none_type_0 = None
    complex_0 = 729.03535 + 2517.1j
    set_0 = {complex_0, complex_0, complex_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5965():
    object_0 = module_0.object()
    str_0 = "16LKn?n8pd62"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5966():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5967():
    bool_0 = False
    bytes_0 = b"\xe8,r"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5968():
    a_b_c_0 = module_1.ABC()
    str_0 = 'Kw2\x0b#["mY$SWvw;P'
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_5969():
    bytes_0 = b"n\x83\xc4\x95\x8a\x81\x03G\x88\xe9O(\xb5!`Y\xe1Y"
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    set_0 = {tuple_0, bool_0, bool_0, tuple_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5970():
    none_type_0 = None
    float_0 = -554.035594
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5971():
    none_type_0 = None
    str_0 = ""
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5972():
    float_0 = -1164.72
    list_0 = [float_0, float_0, float_0, float_0]
    float_1 = 4266.1
    float_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5973():
    bool_0 = True
    bool_1 = True
    bytes_0 = b"e\x14\xe2\xde\x8b:7e\x14i\xe7*\x8a\x0e\xd8\x9c\xee\xe1\x18\x86"
    tuple_0 = (bool_1, bool_1, bytes_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5974():
    str_0 = "7Z&u\nlM@7%Z>T)"
    module_1.ABC(*str_0, **str_0)


@pytest.mark.xfail(strict=True)
def test_case_5975():
    complex_0 = -122.984475 + 2886.5j
    float_0 = 1423.2281
    float_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_5976():
    str_0 = "Gkq-}#)S"
    complex_0 = 1783.891 - 2231j
    tuple_0 = (complex_0, complex_0)
    list_0 = [tuple_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5977():
    str_0 = "TiS@SdoXDh`]NlMZD"
    str_1 = "!ax}"
    int_0 = -1062
    list_0 = [int_0, str_1, str_0, str_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_5978():
    str_0 = "fj\ty2QX,~%("
    list_0 = [str_0, str_0, str_0]
    tuple_0 = (list_0, str_0, str_0)
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5979():
    tuple_0 = ()
    int_0 = -1004
    int_0.write(tuple_0)


def test_case_5980():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_5981():
    int_0 = -1742
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5982():
    float_0 = -3509.6621
    int_0 = -1220
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5983():
    str_0 = "HU"
    str_1 = "R%x}\tJ7(Du\x0b9\tS.4N0"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5984():
    bytes_0 = b"\xc2\x1c\xaa\xdb7K\x8d\xd6\xf6\x9c\x92\xf6s"
    list_0 = [bytes_0]
    str_0 = 'J-4U"k7_'
    none_type_0 = None
    str_1 = "Hb$uI/"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
    }
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_5985():
    bool_0 = False
    int_0 = 1866
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5986():
    none_type_0 = None
    float_0 = 106.45
    float_0.write(none_type_0)


def test_case_5987():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_5988():
    object_0 = module_0.object()
    bool_0 = True
    complex_0 = -216.36437 - 1286.4464j
    set_0 = {bool_0, complex_0, complex_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_5989():
    bool_0 = False
    tuple_0 = (bool_0,)
    bool_1 = False
    list_0 = [tuple_0, bool_1, tuple_0, tuple_0]
    module_0.object(*list_0)


def test_case_5990():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5991():
    int_0 = -1610
    bytes_0 = b"\xdb5W.\xe1\x9e\x17NI"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5992():
    set_0 = set()
    bytes_0 = b"\x10\xb9"
    bytes_0.write(set_0)


def test_case_5993():
    pass


@pytest.mark.xfail(strict=True)
def test_case_5994():
    int_0 = -2953
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5995():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_1, bool_0: bool_1, bool_1: bool_1}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5996():
    none_type_0 = None
    str_0 = "\r\\Q>^}\\L9"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5997():
    float_0 = 2311.347859
    tuple_0 = ()
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_5998():
    float_0 = 3252.0
    str_0 = "`+v.z}?:qXE<q"
    str_0.write(float_0)


def test_case_5999():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6000():
    a_b_c_0 = module_1.ABC()
    complex_0 = -1093 + 988.7j
    set_0 = {complex_0, complex_0}
    list_0 = [set_0, complex_0, set_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6001():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xb7\x0c\x19\xa6\n\x0e\x14\xc5\xc5>"
    float_0 = -1396.52586
    a_b_c_1 = module_1.ABC()
    tuple_0 = (bytes_0, float_0, a_b_c_1)
    tuple_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6002():
    float_0 = -1412.6
    str_0 = "U\tj{XbH"
    str_1 = "74(?K+Sd9\x0c%F}O9"
    dict_0 = {str_0: float_0, str_1: str_1, str_1: float_0}
    module_1.ABC(*float_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6003():
    str_0 = "DN_wEoO(g\\5bt\t{%!%4"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6004():
    str_0 = ":^c /lBc1oU,0S#_\\~\nm"
    float_0 = -3113.7
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6005():
    str_0 = "~<cY"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


def test_case_6006():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6007():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6008():
    bytes_0 = b"\xa76pLH\xa8Xk':$W"
    int_0 = -1441
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6009():
    a_b_c_0 = module_1.ABC()
    int_0 = 221
    set_0 = {int_0}
    set_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6010():
    none_type_0 = None
    str_0 = 'NP\te^5IQ"0rx3yq2|02'
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6011():
    bool_0 = True
    float_0 = 1095.611
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6012():
    int_0 = -1043
    int_1 = -3008
    int_1.write(int_0)


def test_case_6013():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6014():
    bool_0 = False
    int_0 = 1604
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6015():
    object_0 = module_0.object()
    int_0 = 5285
    list_0 = [int_0]
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6016():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(a_b_c_0)


def test_case_6017():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6018():
    none_type_0 = None
    bytes_0 = b"\x89&\x83\x02*\x8e"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6019():
    bytes_0 = b"\xc2\x0b'\xe2\x0b\x1a\xef\xe2\xd32I{\xab\xb2"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6020():
    none_type_0 = None
    str_0 = 'XR@":y9<scn9;'
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6021():
    bytes_0 = b"\xb7\xa2\xf0\xd0\xa9\xea6K\x0c\x9d\x82\xef"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    bytes_1 = b"\xae\xb8\x96\x8e@\xf2\xb6\xd5\x020aO\xc7lN\xec\x9d\x1d/\xa0"
    bytes_1.write(dict_0)


def test_case_6022():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6023():
    str_0 = "d;\x0bK=<av!4< ;"
    tuple_0 = ()
    int_0 = -1582
    bool_0 = True
    tuple_1 = (tuple_0, int_0, bool_0)
    a_b_c_0 = module_1.ABC()
    tuple_2 = (str_0, tuple_1, a_b_c_0, int_0)
    float_0 = 4166.200675
    list_0 = [float_0, float_0]
    list_0.write(tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_6024():
    tuple_0 = ()
    int_0 = -306
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6025():
    float_0 = 2431.87
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6026():
    none_type_0 = None
    int_0 = -659
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6027():
    float_0 = 1514.255
    int_0 = -1477
    list_0 = [float_0, float_0, int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6028():
    str_0 = "Afu7*}CjL~"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6029():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\x0eZ\x06\xdfn\x92-\xe1\x06r~"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6030():
    str_0 = "<H\t~<)^8dJ4ufK"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(*str_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6031():
    str_0 = "wGr_RP?5TW\r/xi\x0b"
    str_1 = "m<h+r!/gBe9l\x0b5'L`-"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6032():
    bytes_0 = b"\x1aLZ\x0es\xe6x\xbcY'\x8dPf"
    complex_0 = 3358.6 - 393.03j
    complex_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6033():
    object_0 = module_0.object()
    int_0 = 2388
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6034():
    str_0 = "sWlG|BGi!0"
    complex_0 = -1823.27707 + 203j
    tuple_0 = (str_0, complex_0)
    tuple_1 = ()
    tuple_1.write(tuple_0)


def test_case_6035():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6036():
    object_0 = module_0.object()
    bool_0 = True
    bool_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6037():
    none_type_0 = None
    float_0 = 1509.1
    str_0 = "0\x0b"
    set_0 = {str_0, float_0}
    tuple_0 = (float_0, str_0, set_0)
    list_0 = [str_0, tuple_0]
    tuple_1 = (tuple_0, str_0, list_0)
    tuple_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6038():
    float_0 = 1416.1
    bool_0 = False
    set_0 = {float_0, float_0, bool_0, bool_0}
    bool_1 = False
    bytes_0 = b"%\x80\x90n\xf9I"
    dict_0 = {bool_1: bool_1, bool_1: bool_1, bytes_0: bytes_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6039():
    none_type_0 = None
    int_0 = 1478
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6040():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    bool_0 = True
    str_0 = "!M\rV]0sKeA"
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0]
    tuple_0 = (str_0, list_0)
    str_1 = "2\tibPMg6B(so5it>t9U"
    tuple_1 = (set_0, bool_0, tuple_0, str_1)
    list_1 = [tuple_1, str_0]
    module_1.ABC(*list_1)


def test_case_6041():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6042():
    bool_0 = True
    tuple_0 = (bool_0,)
    str_0 = "8,D.z!,%#Ez1J"
    tuple_1 = (str_0,)
    set_0 = {tuple_1}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6043():
    bool_0 = True
    list_0 = []
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6044():
    complex_0 = -5337.42 - 999.8j
    int_0 = -1731
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6045():
    int_0 = 1162
    float_0 = -167.7
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6046():
    int_0 = -150
    float_0 = -2904.0
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6047():
    str_0 = "sY#(P"
    bytes_0 = b"\x9c\x81T\xd0\x91\x92\x81\x98\x0e\x15c\xae+\x19\xf9"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6048():
    set_0 = set()
    str_0 = "%bG%"
    set_1 = {str_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6049():
    str_0 = "lyo?O\r .6bbHX'N{Y{&"
    dict_0 = {}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6050():
    bool_0 = True
    complex_0 = -2614 + 665j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6051():
    bool_0 = False
    int_0 = 1817
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6052():
    int_0 = -1126
    str_0 = "%>KAv~<^U\t^.*"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6053():
    int_0 = 2140
    module_0.object(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_6054():
    bytes_0 = b"\xa0#\xf9A\x10\x99i\xc5\xdex\xe9;l\xb0\x84\x98\xb9\xd2P"
    str_0 = ""
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6055():
    none_type_0 = None
    str_0 = "y\x0cZmND\x0bPPp!Q"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6056():
    str_0 = ""
    dict_0 = {}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6057():
    bool_0 = True
    bool_1 = False
    list_0 = [bool_1, bool_1, bool_1]
    tuple_0 = (bool_1, list_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6058():
    bytes_0 = b"\xf7SN"
    dict_0 = {}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6059():
    bytes_0 = b"\xe7B@\xba{"
    object_0 = module_0.object()
    object_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6060():
    complex_0 = 290.895319 + 1486.444058j
    int_0 = 1880
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6061():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xac\xb1o\xe9\xdb\xa8\xf8\x92\xa4\x8a:\xf0\xbd\x12"
    tuple_0 = (a_b_c_0, bytes_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6062():
    bytes_0 = b"W\xdc\xbdj\x96s\xdd\xd6"
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6063():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    dict_1 = {object_0: dict_0}
    bool_0 = True
    bool_0.write(dict_1)


@pytest.mark.xfail(strict=True)
def test_case_6064():
    bytes_0 = b"\xd7\x96"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6065():
    a_b_c_0 = module_1.ABC()
    int_0 = -219
    int_0.write(a_b_c_0)


def test_case_6066():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6067():
    tuple_0 = ()
    bytes_0 = b" \x8f\xda\xca\xf0\x13\xeb\x03\xd2r"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6068():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    complex_0 = -386 - 1713.4j
    complex_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6069():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6070():
    int_0 = -1764
    tuple_0 = (int_0, int_0)
    float_0 = -344.0
    float_0.write(tuple_0)


def test_case_6071():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6072():
    int_0 = -637
    str_0 = ":lad;){"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6073():
    tuple_0 = ()
    list_0 = [tuple_0]
    bool_0 = True
    bool_0.write(list_0)


def test_case_6074():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_6075():
    str_0 = "U\r\x0c&"
    complex_0 = -2288.58774 + 1577.892227j
    complex_0.write(str_0)


def test_case_6076():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6077():
    int_0 = 2726
    int_1 = -586
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6078():
    none_type_0 = None
    list_0 = [none_type_0]
    module_1.ABC(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6079():
    bool_0 = True
    tuple_0 = ()
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6080():
    none_type_0 = None
    str_0 = "h%k1xSS*#'Q3\t;"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6081():
    complex_0 = 2248 - 2694.8j
    set_0 = set()
    set_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6082():
    int_0 = 2527
    int_1 = 181
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6083():
    str_0 = "d"
    str_1 = "S>w7/V*"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6084():
    int_0 = 2351
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6085():
    list_0 = []
    str_0 = "KS>0?^*YB]\x0cLnh]'"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6086():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6087():
    list_0 = []
    str_0 = "E$[d\nN-<)L\x0bN("
    str_1 = "t(KF"
    str_2 = "]eNAV-LC98hvXAu"
    dict_0 = {str_0: str_0, str_1: str_2}
    module_1.ABC(*list_0, **dict_0)


def test_case_6088():
    pass


def test_case_6089():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_6090():
    bool_0 = False
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6091():
    int_0 = 2811
    str_0 = "@99FD`<"
    list_0 = [int_0, int_0, int_0, str_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6092():
    set_0 = set()
    int_0 = -183
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6093():
    bool_0 = False
    bytes_0 = b"\xd1\x19\x12:;\xef\xa0N\xb0l\xf4\xab\xcb){\xaf"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6094():
    str_0 = "f\nU\tZ2~![.IriI"
    str_1 = "Jn24 e_-"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6095():
    none_type_0 = None
    bytes_0 = b"\t\xb8~5"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6096():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6097():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6098():
    bytes_0 = b"~tblj\xf7\x08\\B\xb8"
    bytes_1 = b"rs[S\x90\x1b\x14$\x97\x1e\xd8"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6099():
    int_0 = 306
    tuple_0 = (int_0,)
    bool_0 = True
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6100():
    bool_0 = False
    str_0 = "F\n"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6101():
    int_0 = 338
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6102():
    str_0 = "li4v"
    str_1 = "3P3yK86UmK"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6103():
    tuple_0 = ()
    float_0 = -781.266
    float_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6104():
    set_0 = set()
    bytes_0 = b"`f\xc1J\x9e\xf5E\x8aS\x0fA"
    tuple_0 = (bytes_0,)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6105():
    bytes_0 = b"p\x9e\xc6824}r\xd9\x1a\xecrF\xa9"
    list_0 = [bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6106():
    int_0 = 2051
    set_0 = {int_0, int_0}
    bytes_0 = b""
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6107():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    module_1.ABC(*set_0)


@pytest.mark.xfail(strict=True)
def test_case_6108():
    str_0 = "K+mh9T7kr[FdSnyOK'zP"
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6109():
    none_type_0 = None
    list_0 = [none_type_0]
    module_1.ABC(*list_0)


def test_case_6110():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6111():
    float_0 = 1647.1751
    float_1 = -277.4297
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6112():
    bool_0 = False
    bytes_0 = b'0\x87\xbbU\xf3"^\n1\xa8B|\x8bFy\x99'
    set_0 = {bytes_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6113():
    tuple_0 = ()
    a_b_c_0 = module_1.ABC()
    tuple_1 = (tuple_0, a_b_c_0, a_b_c_0)
    object_0 = module_0.object()
    object_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_6114():
    str_0 = "#Y\\@|j%0$f+:sz"
    bytes_0 = b"\xf3"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6115():
    a_b_c_0 = module_1.ABC()
    int_0 = 55
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6116():
    bool_0 = False
    complex_0 = 1132.9 - 2313.2j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6117():
    bool_0 = True
    str_0 = "qu_\x0bzb;Z\x0bM<@;="
    str_0.write(bool_0)


def test_case_6118():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_6119():
    none_type_0 = None
    int_0 = 1380
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6120():
    bytes_0 = b"\xed\x86,\xb9\x01\xdf\x07D)D\xc5\x87H:D!\xb3\xfeQ"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    str_0 = "B Y7Ui"
    dict_0 = {str_0: set_0}
    module_1.ABC(*set_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6121():
    int_0 = 951
    str_0 = "`%\n_]RaH\rT/jmj"
    dict_0 = {str_0: int_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6122():
    str_0 = "[-Qyb\x0cnPQG\x0b`xjs"
    int_0 = -934
    list_0 = [str_0, int_0]
    bytes_0 = b"&\x19 \x82\xb7\xa1\xb6\xc4\xabr^A5,"
    set_0 = {bytes_0, bytes_0}
    tuple_0 = (set_0,)
    tuple_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6123():
    bool_0 = True
    a_b_c_0 = module_1.ABC()
    dict_0 = {bool_0: bool_0, bool_0: bool_0, a_b_c_0: bool_0, a_b_c_0: bool_0}
    a_b_c_1 = module_1.ABC()
    a_b_c_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6124():
    str_0 = "R .w,-DKf2\x0bchh"
    int_0 = -3303
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6125():
    str_0 = "e\x0bph40_GUd}"
    str_1 = "5DVeJJ\x0b;A`kUWCP7K-/r"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6126():
    bool_0 = False
    dict_0 = {}
    dict_0.write(bool_0)


def test_case_6127():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6128():
    str_0 = ""
    list_0 = []
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6129():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6130():
    a_b_c_0 = module_1.ABC()
    str_0 = "//-V"
    str_1 = "(2:4~D~0"
    str_2 = ""
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0, str_2: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6131():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    str_0 = "Qt#oHkYm-AW+H6"
    tuple_0 = (bool_0, str_0, str_0, str_0)
    int_0 = -2650
    int_1 = -1264
    int_2 = -3234
    tuple_1 = (int_1, int_2)
    a_b_c_1 = module_1.ABC()
    set_0 = {int_1, a_b_c_1, int_0, tuple_1}
    str_1 = 'K_">d>P'
    tuple_2 = (tuple_1, set_0, str_1)
    dict_0 = {int_0: int_0, int_0: int_0, int_0: tuple_2}
    list_0 = [dict_0, int_2, int_2]
    list_0.write(tuple_0)


def test_case_6132():
    pass


def test_case_6133():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6134():
    int_0 = 1845
    complex_0 = -845 - 1166.57j
    complex_0.write(int_0)


def test_case_6135():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6136():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6137():
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    list_0 = [dict_0, dict_0, a_b_c_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6138():
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0}
    bytes_0 = b"\xf4\x0b\xfa\xf5\x92\x9d\x89\x14\xa8e"
    tuple_0 = (bool_0, set_0, bytes_0, bool_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6139():
    none_type_0 = None
    float_0 = 2580.5
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6140():
    bool_0 = True
    float_0 = 1237.0
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6141():
    tuple_0 = ()
    str_0 = "\x0b^x"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6142():
    complex_0 = -1518 - 2797.9j
    module_0.object(**complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6143():
    str_0 = "ce\\="
    a_b_c_0 = module_1.ABC()
    complex_0 = 1962 - 1951.93j
    tuple_0 = (str_0, a_b_c_0, complex_0)
    list_0 = [tuple_0]
    tuple_1 = ()
    tuple_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6144():
    int_0 = 3021
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6145():
    str_0 = "c3p<z83'ks?@0"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6146():
    str_0 = "G v :|sf+"
    str_1 = "!^6qZa`gLN\\"
    str_2 = " g*."
    set_0 = {str_1, str_0, str_2, str_2}
    str_3 = "KDhdr"
    dict_0 = {str_0: str_0, str_1: str_1, str_2: set_0, str_3: str_2}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6147():
    bool_0 = True
    str_0 = "8iEt{+j"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6148():
    int_0 = -2078
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6149():
    object_0 = module_0.object()
    str_0 = "(^AnF~=|%zmwYOK|.s"
    str_0.write(object_0)


def test_case_6150():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6151():
    int_0 = 3821
    list_0 = [int_0]
    float_0 = 2555.77877
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6152():
    object_0 = module_0.object()
    none_type_0 = None
    list_0 = [none_type_0]
    module_1.ABC(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6153():
    bool_0 = True
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6154():
    float_0 = 273.4333
    module_1.ABC(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_6155():
    object_0 = module_0.object()
    bytes_0 = b"\x1d\xe4\xca5;\x1cBr-\xd7 \xe1"
    bytes_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6156():
    none_type_0 = None
    int_0 = -1404
    dict_0 = {int_0: int_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6157():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6158():
    str_0 = "r'i,w\x0c\"E\rywAdUUdm"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6159():
    str_0 = "v;&jjJXQ"
    str_1 = "9-$z55%.8<I"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6160():
    str_0 = "[^9KN"
    set_0 = set()
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6161():
    bool_0 = False
    object_0 = module_0.object()
    dict_0 = {object_0: object_0, object_0: object_0}
    dict_1 = {object_0: object_0, object_0: dict_0}
    dict_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6162():
    float_0 = 434.57621
    set_0 = {float_0, float_0}
    int_0 = 1145
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6163():
    bool_0 = True
    str_0 = "$\roNc"
    int_0 = -2448
    tuple_0 = (str_0, str_0, int_0, int_0)
    tuple_1 = (tuple_0, tuple_0)
    tuple_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6164():
    set_0 = set()
    bool_0 = False
    set_1 = {bool_0, bool_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6165():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    int_0 = -3910
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6166():
    float_0 = -4889.7
    set_0 = {float_0}
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    list_0 = [a_b_c_0, dict_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6167():
    bool_0 = True
    bytes_0 = b"UIWr\xbb"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6168():
    bool_0 = True
    set_0 = {bool_0}
    str_0 = "98z?KH0Cc'M3"
    list_0 = [str_0, str_0, str_0, str_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6169():
    int_0 = -1099
    list_0 = [int_0]
    int_1 = -947
    int_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6170():
    dict_0 = {}
    int_0 = 277
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6171():
    none_type_0 = None
    float_0 = 189.480509
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6172():
    str_0 = "nBX(<i+:jE/wXxL"
    bytes_0 = b"\x9f\xf5\x1f4[\xc3p\xa1Nz\xad"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6173():
    int_0 = -1486
    set_0 = {int_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6174():
    dict_0 = {}
    str_0 = 'B|<I"G. Ua)eM'
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6175():
    bytes_0 = b"\xbd\xfb}lY\x0c "
    tuple_0 = (bytes_0,)
    bool_0 = True
    bool_0.write(tuple_0)


def test_case_6176():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6177():
    int_0 = -2014
    list_0 = [int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6178():
    none_type_0 = None
    str_0 = "ucpa'*&[EF wnAa)"
    list_0 = [str_0, str_0, str_0, str_0]
    list_0.write(none_type_0)


def test_case_6179():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_6180():
    bool_0 = True
    bytes_0 = b"\xc6\xed\xf4p-R\xf3\xd9\xac3\n\xfaJ\x1c\xb4\xad1?\xb0"
    float_0 = 150.55
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, float_0: bytes_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6181():
    none_type_0 = None
    bytes_0 = b"\xdd\xf4\x06?\x85\xfc,#\xbc\xa8\xfa@\x15\x91"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6182():
    bool_0 = True
    str_0 = "ae~nR$A"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6183():
    int_0 = -1223
    int_1 = -4534
    str_0 = "U9D}S;1XD@1n-Fd&Yq$"
    tuple_0 = (int_1, int_1, int_1, str_0)
    list_0 = [tuple_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6184():
    bool_0 = True
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6185():
    none_type_0 = None
    bytes_0 = b"k\xba-\xe7a\xfb\xb3\x97L\xa6\x7fNi;M"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6186():
    int_0 = -2587
    bool_0 = False
    bool_0.write(int_0)


def test_case_6187():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_6188():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6189():
    bool_0 = False
    bytes_0 = b"O\x97\x80\xe7\x11\xa2\xb9>"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6190():
    none_type_0 = None
    str_0 = "(:t-j"
    set_0 = {str_0}
    list_0 = [set_0, str_0, set_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6191():
    float_0 = 223.6447
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = (float_0, bool_0, set_0, bool_0)
    bool_1 = False
    str_0 = "sz)r,\t"
    int_0 = 2996
    tuple_1 = (bool_1, str_0, int_0)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6192():
    bytes_0 = b"\x96t\x10\x9bry%\xff\xa9\x01i\xe4\x189"
    float_0 = 2288.20061
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6193():
    float_0 = -1914.4365
    int_0 = 2826
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6194():
    none_type_0 = None
    bytes_0 = b"\xfc\x9f"
    bool_0 = False
    dict_0 = {bytes_0: bytes_0, bytes_0: bool_0, bytes_0: bytes_0, bool_0: bool_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6195():
    bytes_0 = b"\x11\x8a\xb5"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6196():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    complex_0 = -2903.1 + 3301.006j
    complex_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6197():
    float_0 = -1130.388
    list_0 = [float_0, float_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6198():
    none_type_0 = None
    dict_0 = {}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6199():
    complex_0 = 1329.732053 - 1391.342955j
    tuple_0 = (complex_0,)
    bool_0 = False
    bool_0.write(tuple_0)


def test_case_6200():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_6201():
    str_0 = "HJ-='y"
    str_1 = "i6XA$rwcjZZ"
    str_1.write(str_0)


def test_case_6202():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6203():
    str_0 = "iYQ\t*s\r\r'7Q=aeUO"
    set_0 = {str_0, str_0}
    bytes_0 = b"[\x1a\xa82_3\xe3@\x17\x8e\x007\nA"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6204():
    bool_0 = True
    int_0 = -1753
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6205():
    int_0 = -292
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    str_0 = "A_\r"
    dict_1 = {int_0: dict_0, int_0: dict_0, str_0: str_0, str_0: int_0}
    list_0 = [dict_1, int_0]
    module_0.object(*list_0, **dict_1)


@pytest.mark.xfail(strict=True)
def test_case_6206():
    bool_0 = True
    int_0 = -488
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6207():
    float_0 = 3182.7
    int_0 = -541
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6208():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0}
    module_1.ABC(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_6209():
    complex_0 = -2202.6378 + 1563j
    list_0 = []
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6210():
    list_0 = []
    int_0 = -493
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6211():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    list_1 = []
    list_1.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6212():
    bytes_0 = b""
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    str_0 = "tZ<J]@Dxp"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6213():
    none_type_0 = None
    bytes_0 = b"@\x9d\x8d\x81\xfcb"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6214():
    object_0 = module_0.object()
    bytes_0 = b"y\x85\x9d"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6215():
    str_0 = "V+d~kwvK@D75]]"
    str_1 = "Z1du_1e]}"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6216():
    none_type_0 = None
    bytes_0 = b"\xcc\xbbtOI\xbe\x90Q\\\xd3\xdd"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6217():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_1 = module_1.ABC()
    set_0 = set()
    set_0.write(a_b_c_1)


@pytest.mark.xfail(strict=True)
def test_case_6218():
    int_0 = 203
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    float_0 = 1829.75
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6219():
    bytes_0 = b"2%lL\x9eD\xeb\xbf\xef\xe8#\xe4\xa58\xed(\xe5\x8c"
    float_0 = -248.0
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6220():
    str_0 = 'PiwD:!"$uT;n'
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6221():
    list_0 = []
    object_0 = module_0.object(*list_0)
    tuple_0 = ()
    tuple_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6222():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6223():
    str_0 = "O1y-"
    module_1.ABC(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_6224():
    complex_0 = 991.49 + 3261.5j
    bool_0 = True
    list_0 = [complex_0, bool_0, bool_0]
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6225():
    float_0 = 614.9
    dict_0 = {float_0: float_0, float_0: float_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6226():
    str_0 = "|Y"
    str_1 = '";HM!K]T"11Cpz(+:Z\x0c'
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6227():
    int_0 = 961
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6228():
    list_0 = []
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6229():
    bool_0 = True
    tuple_0 = ()
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6230():
    int_0 = 1267
    dict_0 = {}
    list_0 = [int_0, dict_0]
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6231():
    tuple_0 = ()
    str_0 = "G!yrm<# *eeYs"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6232():
    str_0 = "E^l60M,` zi"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6233():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    int_0 = -1716
    list_1 = [list_0, int_0, int_0, list_0]
    str_0 = ")npVP;et}"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    dict_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_6234():
    bytes_0 = b"\x1c*\x1a\xd6\xdd\xfc\x92\xfc>1\xbc\x05RKG)\xb4\xcf"
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6235():
    bool_0 = False
    int_0 = 150
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6236():
    float_0 = -4704.895
    float_1 = -1761.03
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6237():
    float_0 = 2594.059516
    bytes_0 = b"\xa9\x01\x86\xaa\x98\x95\xa3ke{f\xf40\x8a"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6238():
    str_0 = "o[DR8Vr1sgR='I"
    int_0 = -2679
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6239():
    float_0 = -1630.274105
    int_0 = 920
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6240():
    bytes_0 = b""
    str_0 = 'Miei=d?x\\5xVv"!'
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6241():
    int_0 = 1969
    bytes_0 = b"#\xd5\xb20'8\x9f\x99]"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6242():
    str_0 = "^B:u9''&`}"
    bytes_0 = b"*BYT\x8b\x02\xed"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6243():
    none_type_0 = None
    int_0 = -3385
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6244():
    str_0 = "g>Kv6w+"
    str_1 = 'rr"]Y5fCKt/5i'
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6245():
    none_type_0 = None
    complex_0 = 287.097802 + 2589.120643j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6246():
    int_0 = -3793
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    float_0 = -1115.011236
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6247():
    int_0 = -1686
    set_0 = {int_0, int_0, int_0, int_0}
    list_0 = [set_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6248():
    complex_0 = 4924.59 + 2528.4802j
    int_0 = -350
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6249():
    bytes_0 = b"\x11\xd7l"
    int_0 = 4559
    list_0 = [int_0, int_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6250():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0]
    str_0 = "_IA"
    none_type_0 = None
    str_1 = "!n\x0bf]w=\rY(e"
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6251():
    int_0 = 780
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6252():
    none_type_0 = None
    int_0 = -27
    int_0.write(none_type_0)


def test_case_6253():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6254():
    dict_0 = {}
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6255():
    str_0 = "("
    dict_0 = {str_0: str_0, str_0: str_0}
    bytes_0 = b"\x8e%\x93B\x8a{fUx"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6256():
    bool_0 = False
    bytes_0 = b"\xc5\xaf[\xdb"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6257():
    none_type_0 = None
    dict_0 = {}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6258():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_1 = module_1.ABC()
    a_b_c_1.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6259():
    bytes_0 = b"\x0c\x99L\xc4%\xa7\xfe\xee\x91u\xa2\x82}0\x8e}"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6260():
    set_0 = set()
    tuple_0 = ()
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6261():
    bool_0 = False
    float_0 = 335.961755
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6262():
    str_0 = "B\x0b1!Yj:]O="
    dict_0 = {str_0: str_0}
    bytes_0 = b"\x98\xa01U\x1a\x13"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6263():
    complex_0 = -250.771 - 71.88j
    int_0 = 4273
    int_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6264():
    str_0 = "Ijx\\gq@PT/`BC<"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6265():
    bool_0 = False
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    list_0 = [tuple_0, tuple_0, tuple_0]
    str_0 = "<"
    str_1 = "j?JDmRO2\r{}=3"
    str_2 = "Nn"
    dict_0 = {str_0: list_0, str_0: bool_0, str_1: bool_0, str_2: str_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6266():
    int_0 = 631
    str_0 = "lU^l!VF!kKKMVctj2\\"
    set_0 = {str_0, str_0, str_0}
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6267():
    str_0 = "B,-HU^+:C2"
    bytes_0 = b"\xdb?\xa2\x08\x8d\n\x0f"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6268():
    str_0 = "~-Bggvj(|}cV}w(\r8r"
    set_0 = {str_0, str_0}
    module_1.ABC(**set_0)


@pytest.mark.xfail(strict=True)
def test_case_6269():
    a_b_c_0 = module_1.ABC()
    int_0 = 3459
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    dict_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6270():
    str_0 = "!"
    bytes_0 = b"\x8b\x84\nKP\x857b.\xbe&0\xc9#M`~N"
    str_1 = "2"
    str_2 = "Fe)"
    dict_0 = {str_0: bytes_0, str_1: bytes_0, str_0: str_1, str_2: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6271():
    str_0 = "q}52*|7s-K\t"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6272():
    bool_0 = True
    module_1.ABC(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6273():
    none_type_0 = None
    str_0 = "VZe\\=M "
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6274():
    float_0 = -1181.066
    list_0 = [float_0, float_0, float_0, float_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6275():
    bool_0 = False
    bytes_0 = b"i\xfe\xcf\xf1\xec\x9c\xa1er\xc9]\xcc\x1d\r4"
    object_0 = module_0.object()
    set_0 = {bytes_0, bytes_0, object_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6276():
    bytes_0 = b"Dv>\xea]sa\xd5"
    module_0.object(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6277():
    float_0 = -1616.1
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6278():
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()
    list_0 = [a_b_c_1, a_b_c_1, a_b_c_1, a_b_c_1]
    module_1.ABC(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_6279():
    float_0 = 1864.0
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6280():
    str_0 = "A\t^ez&\neE\n~\x0c6'F+sD|?"
    complex_0 = 489.16371 - 1479.41j
    tuple_0 = (str_0, complex_0)
    list_0 = [tuple_0, str_0, complex_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6281():
    none_type_0 = None
    str_0 = "yd#F\\l"
    str_1 = ',;[OvH%+="H'
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
    }
    module_0.object(*none_type_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6282():
    list_0 = []
    int_0 = -2176
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6283():
    complex_0 = 2207 - 2871.96545j
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
    }
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6284():
    list_0 = []
    float_0 = 772.0
    float_0.write(list_0)


def test_case_6285():
    pass


def test_case_6286():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6287():
    str_0 = "B\r<M3;,}PhpM:L<u"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6288():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"1*\x03\xea_\x81\xf2\xa6\x08"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6289():
    bytes_0 = b""
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6290():
    bytes_0 = b"c\x14\xc9\x9d\xe7\x8d"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6291():
    str_0 = "D16h8FKR%G8a"
    float_0 = 2062.7748
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6292():
    a_b_c_0 = module_1.ABC()
    int_0 = 48
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6293():
    str_0 = "\n\\2:TBp\nla"
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6294():
    float_0 = -760.0
    list_0 = []
    list_1 = [list_0]
    list_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6295():
    none_type_0 = None
    list_0 = []
    object_0 = module_0.object(*list_0)
    object_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6296():
    bytes_0 = b"9\x13<\x10[%|\xd7`\xe1\rr\xefa\xb2"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_1.ABC(*list_0)


def test_case_6297():
    pass


def test_case_6298():
    object_0 = module_0.object()


def test_case_6299():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6300():
    str_0 = "go`bzed*1K9L\n#"
    int_0 = 1172
    tuple_0 = (str_0, int_0)
    tuple_1 = (tuple_0,)
    a_b_c_0 = module_1.ABC()
    float_0 = -2647.99
    tuple_2 = (a_b_c_0, float_0, float_0)
    dict_0 = {tuple_2: tuple_2}
    dict_0.write(tuple_1)


def test_case_6301():
    pass


def test_case_6302():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6303():
    dict_0 = {}
    bool_0 = True
    set_0 = {bool_0, bool_0}
    set_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6304():
    bytes_0 = b"\xb6\xe7\xeb]\xcdj\x14W\x89:\x80\xbd\x08P"
    str_0 = "Pm|"
    set_0 = {str_0, str_0}
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6305():
    bool_0 = True
    int_0 = -442
    tuple_0 = (int_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6306():
    bytes_0 = b"\xa3QY\xad\x17\x16\xdfn\x07^\xff\xc8L"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6307():
    bool_0 = False
    bytes_0 = b"\x86\xb1&\x9a\xfc"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6308():
    str_0 = ""
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6309():
    str_0 = "{igJS5W42:{w["
    set_0 = {str_0}
    int_0 = -664
    dict_0 = {int_0: int_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6310():
    set_0 = set()
    int_0 = -173
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6311():
    bool_0 = False
    bytes_0 = b"`hE\xb5\xacfJ\x9c\x0f\xb2\x93+\x10"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6312():
    object_0 = module_0.object()
    module_1.ABC(*object_0)


@pytest.mark.xfail(strict=True)
def test_case_6313():
    bool_0 = False
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6314():
    set_0 = set()
    str_0 = "w-d~L?8**>7 1"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6315():
    bool_0 = False
    complex_0 = 2169.66692 - 4260j
    list_0 = [complex_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6316():
    complex_0 = 1288 - 1846.274256j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    bytes_0 = b"\xbeI\x1c.\xca3$\x8f_\x89\x08;\xbfBo\x7f\xd5\xe1\xd6"
    bytes_1 = b"\xefX4q\xe7\x8fW\xdf\xe0Ob\xa6\x98\xde\x19x;"
    tuple_0 = (set_0, bytes_0, bytes_1, bytes_0)
    object_0 = module_0.object()
    object_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6317():
    none_type_0 = None
    bytes_0 = b"3\x04\x8838~4%\xe0\xde2,r\xfe\xc3vf"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6318():
    str_0 = "lq|nA[gO.0`'"
    str_1 = "jS\\bIVeS9\x0bJEn"
    str_2 = ',),r:kAdS`%8"B'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_2: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6319():
    bytes_0 = b"P\xe06y\xdd1\xaaa\xb92\xf8\x8c\xfc\x8b \x17$\xc0\xeb"
    tuple_0 = ()
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6320():
    bytes_0 = b"\x18\x1e\x0e\xfd\xf4C\x98Wg\xd6\x12\xf5\x19\x19"
    str_0 = "IU#Zd"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6321():
    bytes_0 = b"\xa2^\xaeL^@\xa1=\xf5\xc1\x0e\x97\x7f|\x82"
    str_0 = 'A{"'
    tuple_0 = (str_0,)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6322():
    float_0 = 1767.6
    bytes_0 = b"\xd9d;j\xc4\xff\x1b\xa3\n\xb4W\xe8\x8dt\x83o\xa5"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6323():
    int_0 = -218
    int_1 = -1141
    list_0 = [int_1, int_1, int_1]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6324():
    none_type_0 = None
    float_0 = -1211.764
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6325():
    bool_0 = False
    list_0 = [bool_0]
    str_0 = "DKCrv\\Wg{0,F\x0b\x0c"
    dict_0 = {str_0: str_0}
    module_0.object(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6326():
    bool_0 = False
    bool_1 = False
    float_0 = 478.127
    dict_0 = {bool_1: float_0}
    tuple_0 = (bool_1, dict_0)
    tuple_1 = (tuple_0,)
    list_0 = [tuple_1, float_0, tuple_1, tuple_1]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6327():
    float_0 = 3934.9
    module_1.ABC(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_6328():
    none_type_0 = None
    bytes_0 = b"|\x83\x0e\x11\x9d\xb9U"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6329():
    set_0 = set()
    int_0 = 1654
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6330():
    dict_0 = {}
    int_0 = 1939
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6331():
    float_0 = 1924.51481
    bytes_0 = b"\x95g<]@\x8bEC\x95"
    set_0 = {bytes_0}
    list_0 = [set_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6332():
    float_0 = -3017.468971
    str_0 = "8.KrA7\nB$+~m)4m"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6333():
    none_type_0 = None
    str_0 = "\x0c,?:lb\x0b<kE?\r@_[)[JQk"
    tuple_0 = (str_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6334():
    none_type_0 = None
    float_0 = -958.04932
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6335():
    int_0 = -851
    bool_0 = True
    float_0 = -2553.3
    dict_0 = {bool_0: bool_0, bool_0: float_0, bool_0: float_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6336():
    str_0 = "L^)HV,oF"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6337():
    bytes_0 = b'\xb56.\x81i6"\xc3\n\xc4\xfa'
    int_0 = 905
    dict_0 = {bytes_0: int_0, int_0: int_0}
    list_0 = [dict_0, int_0, dict_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6338():
    bool_0 = False
    str_0 = "7'$&Vxh!Qeyz"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6339():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    complex_0 = 2714.2288 + 534.01932j
    complex_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6340():
    str_0 = "Bs#5.W%Fd"
    str_1 = "/?*im)"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6341():
    none_type_0 = None
    list_0 = [none_type_0]
    module_1.ABC(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_6342():
    bool_0 = True
    complex_0 = -2223.20066 - 367.94495j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6343():
    bool_0 = True
    float_0 = -5435.2415
    set_0 = {float_0, float_0, float_0, float_0}
    list_0 = [set_0, set_0, set_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6344():
    int_0 = 4294
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6345():
    str_0 = "iwFpDil^P)@pKqm[,n-"
    str_1 = "K= W/6[y-Z\t-G8a4x^6="
    set_0 = {str_1, str_1, str_1}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6346():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    set_0 = {a_b_c_0, bool_0}
    bytes_0 = b"u\xc0&\xe6G\xd3\xe0v\xda\xc7"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6347():
    list_0 = []
    int_0 = 3096
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6348():
    dict_0 = {}
    int_0 = -1318
    module_0.object(*dict_0, **int_0)


@pytest.mark.xfail(strict=True)
def test_case_6349():
    list_0 = []
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    object_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6350():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    bytes_0 = b"\xaaU\rY\xea+>\x93\x9fox6x\x89\x05\xd1"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6351():
    str_0 = "7{?xL\t`"
    list_0 = [str_0, str_0, str_0]
    tuple_0 = ()
    tuple_1 = (list_0, tuple_0)
    module_1.ABC(**tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_6352():
    bool_0 = False
    str_0 = ":X&tJbm)bLE<0&];"
    str_0.write(bool_0)


def test_case_6353():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_6354():
    list_0 = []
    bytes_0 = b"\x8d\x1bTe3\x88]V\x00\n"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6355():
    none_type_0 = None
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    tuple_0 = (dict_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6356():
    bytes_0 = b"W!\xf4\x0e\xfe]\xa4\xea\xf7\xec\xf3\xfb\x87N\x99"
    str_0 = "g0(\t\tD+7DP_~\\wB\r[(Pu"
    tuple_0 = (str_0,)
    tuple_1 = (tuple_0,)
    tuple_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6357():
    float_0 = 1055.999396
    object_0 = module_0.object()
    object_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6358():
    bool_0 = False
    str_0 = "OHI z UZ\\6;<"
    str_1 = "9J:n6T7"
    str_2 = "byq"
    dict_0 = {str_0: str_0, str_0: bool_0, str_1: str_0, str_2: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6359():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    complex_0 = 1639.28218 - 811.720945j
    list_1 = [complex_0, complex_0, complex_0, complex_0]
    list_1.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6360():
    int_0 = -678
    str_0 = "p8Zk=A\x0b-(9$+p52W"
    list_0 = [int_0, str_0, int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6361():
    bool_0 = False
    float_0 = 3413.72
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6362():
    none_type_0 = None
    str_0 = "gwqD3= . \rn\r\x0cS"
    float_0 = 1251.91
    a_b_c_0 = module_1.ABC()
    dict_0 = {str_0: float_0, float_0: str_0, float_0: str_0, a_b_c_0: float_0}
    tuple_0 = (str_0, float_0, dict_0, a_b_c_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6363():
    set_0 = set()
    bytes_0 = b""
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6364():
    bool_0 = True
    object_0 = module_0.object()
    object_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6365():
    bytes_0 = b"x\x16\xabA\x13\xb9\x1a\xaa\xce/"
    dict_0 = {}
    module_0.object(*bytes_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6366():
    none_type_0 = None
    int_0 = 1556
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6367():
    int_0 = 3116
    float_0 = 1025.99484
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6368():
    bool_0 = False
    list_0 = [bool_0]
    str_0 = "NK\r4vRs.DA|lF)LL,,rB"
    list_1 = [str_0, str_0, str_0, str_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6369():
    int_0 = 228
    object_0 = module_0.object()
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: object_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6370():
    bytes_0 = b"\x85"
    bytes_1 = b""
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6371():
    bool_0 = False
    bool_1 = False
    list_0 = [bool_1, bool_1, bool_1, bool_1]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6372():
    bytes_0 = b"K9k\nO5A"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    str_0 = "]i/'0qGIfn1)GjA_\\Vv"
    dict_1 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6373():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [bool_0, bool_0, bool_0, list_0]
    list_2 = [list_1, bool_0]
    list_3 = [list_2, list_0, list_2, list_0]
    module_1.ABC(*list_3)


@pytest.mark.xfail(strict=True)
def test_case_6374():
    complex_0 = -1280.754 + 370.4j
    bool_0 = True
    complex_1 = 1783.23085 - 1183.49621j
    bytes_0 = b"\xc1\xc9\x0e9"
    tuple_0 = (bool_0, complex_1, bytes_0)
    list_0 = [complex_1, bytes_0, complex_1]
    tuple_1 = (tuple_0, list_0, complex_1, complex_1)
    bytes_1 = b"\x10\xea\xed\x0c\xb5\xa4D\xf1=G\x02\x8e\xe6\xfd\xdc\xb5\xa7\xd2\x07"
    set_0 = set()
    tuple_2 = (tuple_1, bytes_1, set_0)
    tuple_2.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6375():
    bool_0 = False
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6376():
    bool_0 = False
    tuple_0 = (bool_0,)
    str_0 = "!X\tgNMgk"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6377():
    complex_0 = 2060.41 - 312.3j
    module_1.ABC(*complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6378():
    none_type_0 = None
    complex_0 = -1072.76 + 482j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6379():
    none_type_0 = None
    str_0 = "\t$^vwrSm~O(oOarP\tV0"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6380():
    none_type_0 = None
    str_0 = "`Sl"
    str_0.write(none_type_0)


def test_case_6381():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_6382():
    bytes_0 = b"D\xd2q\x12n\x93\x8ey\xb3\x89}\xe4\xf1\xc0\xf8l\x10\x04"
    str_0 = ",X05KjWEh2V2XE"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6383():
    str_0 = "?F6/E0n"
    tuple_0 = (str_0,)
    a_b_c_0 = module_1.ABC()
    str_1 = '"'
    tuple_1 = (a_b_c_0, str_1)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6384():
    int_0 = 2602
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6385():
    str_0 = "\x0b~tt\x0ckD;}\x0cF&;Ll|zM[9"
    list_0 = [str_0]
    int_0 = -1473
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6386():
    bool_0 = True
    a_b_c_0 = module_1.ABC()
    dict_0 = {bool_0: bool_0, bool_0: a_b_c_0}
    bool_1 = False
    bool_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6387():
    bool_0 = True
    int_0 = 1546
    set_0 = {int_0, int_0, int_0, int_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6388():
    str_0 = "os(\r\x0c\tF*[l/p\nO"
    str_1 = "{|rM|ao85vVb_Pp#Tf"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6389():
    bool_0 = True
    complex_0 = -1946 - 3264.07j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6390():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6391():
    int_0 = -2699
    str_0 = "y,g@#~/i"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6392():
    str_0 = "%u_43)}}jXh%"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6393():
    str_0 = '674V]y9`r>w"xo@`Zr;'
    complex_0 = 102.68206 + 1224.1j
    complex_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6394():
    int_0 = 723
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6395():
    bool_0 = True
    bool_1 = True
    set_0 = {bool_1, bool_1}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6396():
    int_0 = 1873
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6397():
    int_0 = 1426
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6398():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    str_0 = "27g47)\rr"
    str_1 = "Hxw;XjJrk"
    dict_0 = {str_0: str_0, str_1: str_1, str_1: list_0, str_0: none_type_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6399():
    int_0 = -2567
    str_0 = '|pNwl|lQ\x0c54"rQKy\n#'
    str_0.write(int_0)


def test_case_6400():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_6401():
    float_0 = 185.765467
    module_0.object(*float_0)


@pytest.mark.xfail(strict=True)
def test_case_6402():
    bool_0 = False
    float_0 = -3769.11
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6403():
    str_0 = "7\\IBiB-O\t"
    object_0 = module_0.object()
    object_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6404():
    float_0 = -1840.256
    int_0 = 1483
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6405():
    object_0 = module_0.object()
    int_0 = -91
    dict_0 = {object_0: object_0, object_0: int_0, int_0: int_0, int_0: int_0}
    str_0 = "bC4.x(X\tLo9W"
    list_0 = [str_0, str_0]
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6406():
    str_0 = "r0[o^"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6407():
    bytes_0 = b"\xc8\xc3.a\x87\xb1"
    str_0 = "oC=p{[Fk-:nm[5|xY> ~"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6408():
    bytes_0 = b"\xb3\x15\xa3\xbe\xa11\xec\r1Y"
    module_1.ABC(**bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6409():
    bool_0 = False
    float_0 = 700.6959
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6410():
    bool_0 = True
    bytes_0 = b"k(\\Z?B"
    bool_1 = True
    tuple_0 = (bool_0, bytes_0, bool_1)
    module_1.ABC(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6411():
    str_0 = "o\x0cgUL\x0blBnZ\\"
    bytes_0 = b"x\xb3\x1f\x84\xfa\xa5\xe6\x92\x88"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6412():
    str_0 = "XhrV`MF:PuS:S]"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6413():
    bytes_0 = b"\xa9!d\x0el9\x17\xf0\xa8"
    list_0 = []
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6414():
    none_type_0 = None
    int_0 = 2887
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6415():
    str_0 = 'pl3G)\rvi~"^np'
    float_0 = -4016.20729
    dict_0 = {float_0: float_0, float_0: float_0}
    bool_0 = False
    tuple_0 = (bool_0,)
    list_0 = [float_0, float_0, bool_0, bool_0]
    tuple_1 = (tuple_0, bool_0, list_0)
    tuple_2 = (dict_0, tuple_1)
    tuple_2.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6416():
    bool_0 = False
    bool_1 = True
    bool_1.write(bool_0)


def test_case_6417():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6418():
    none_type_0 = None
    str_0 = "<hA17w]a5AE}e"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6419():
    int_0 = -2815
    bytes_0 = b"\x8bc\xef\x0f\x1f+\x93w\x9a\xc3\xd3\x13\x07g\x08\xbc\x88\x92d\x03"
    dict_0 = {int_0: int_0, int_0: bytes_0, int_0: bytes_0, bytes_0: int_0}
    bool_0 = False
    set_0 = {int_0, int_0}
    str_0 = "u^$I8MU-"
    tuple_0 = (dict_0, bool_0, set_0, str_0)
    list_0 = [int_0, int_0, int_0, tuple_0]
    bool_1 = True
    dict_1 = {bool_1: bool_1, bool_1: bool_1, bool_1: bool_1}
    dict_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6420():
    bool_0 = False
    bytes_0 = b"\xe0}\xf2\xe6%W\xbe\xc0\xa2\x9d"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6421():
    a_b_c_0 = module_1.ABC()
    str_0 = "n"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6422():
    tuple_0 = ()
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_0.write(tuple_0)


def test_case_6423():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6424():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    float_0 = -1058.0
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6425():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6426():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    bool_1 = False
    bool_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6427():
    float_0 = 2868.0
    dict_0 = {}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6428():
    bytes_0 = b"\xb32\x17\x0b\r\xf8\xd1\x12\xcf\x96\x9b\xd44\xf3\xe9\t\x84["
    int_0 = 378
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6429():
    object_0 = module_0.object()
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6430():
    int_0 = 1454
    complex_0 = 317 + 1499.854413j
    complex_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6431():
    int_0 = -494
    float_0 = 1623.76
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6432():
    a_b_c_0 = module_1.ABC()
    float_0 = 103.3216
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: float_0, float_0: a_b_c_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6433():
    bytes_0 = b"\xac\xff\xbe\xb9"
    float_0 = 2355.383
    dict_0 = {bytes_0: bytes_0, float_0: bytes_0, float_0: bytes_0}
    bytes_1 = b"b|\xa5"
    list_0 = [bytes_1, bytes_1, bytes_1, bytes_1]
    list_0.write(dict_0)


def test_case_6434():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6435():
    bytes_0 = b"|\x97\x11i\xfd\xd6\x1e"
    list_0 = [bytes_0, bytes_0]
    module_0.object(*list_0)


def test_case_6436():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6437():
    str_0 = "5n"
    bool_0 = False
    bool_0.write(str_0)


def test_case_6438():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6439():
    float_0 = 459.649
    module_0.object(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_6440():
    str_0 = "<z^?%*"
    bytes_0 = b"\x93\x0f\x92;X\x80f\xbf"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6441():
    int_0 = 173
    list_0 = [int_0, int_0, int_0, int_0]
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6442():
    bytes_0 = b"\x0c\xb8\xdcK\x84K:(\xe7\xf9\xad"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6443():
    list_0 = []
    bytes_0 = b"\x89p"
    set_0 = {bytes_0, bytes_0}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6444():
    int_0 = 2205
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6445():
    bool_0 = False
    str_0 = "*(*\x0cj\\r"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6446():
    float_0 = 671.596634
    float_1 = -79.59
    float_1.write(float_0)


def test_case_6447():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6448():
    bool_0 = True
    list_0 = [bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6449():
    list_0 = []
    bytes_0 = b"I_\xac\xc2\xdbj\xd5\xa7"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6450():
    none_type_0 = None
    str_0 = "CV"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6451():
    object_0 = module_0.object()
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6452():
    str_0 = "81|"
    float_0 = -1572.0
    float_0.write(str_0)


def test_case_6453():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6454():
    float_0 = -369.48
    bytes_0 = b"c\x18\xabw\xea\x08"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6455():
    none_type_0 = None
    float_0 = -1055.0
    bool_0 = True
    tuple_0 = (float_0, bool_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6456():
    list_0 = []
    object_0 = module_0.object(*list_0)
    object_1 = module_0.object()
    object_1.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6457():
    a_b_c_0 = module_1.ABC()
    str_0 = "Dcin~0nJgI![:>jV"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6458():
    int_0 = -618
    int_1 = 2801
    tuple_0 = (int_1,)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6459():
    bool_0 = True
    int_0 = -1582
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6460():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    float_0 = 458.8
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6461():
    list_0 = []
    str_0 = "\x0ckmFzi(`dr^|j"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6462():
    float_0 = -721.52
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0}
    complex_0 = -1769.801591 - 5744.5j
    complex_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6463():
    str_0 = "FUZ+Nw\\(T\\Q5"
    bytes_0 = b"\xab\xe3\xab\xa0\xf5~\xcf\t\xbc\xbe\x96x\xb8\xeb\x86\xba\x06\xdbO"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6464():
    none_type_0 = None
    bool_0 = True
    tuple_0 = (bool_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6465():
    str_0 = "d']"
    list_0 = [str_0]
    set_0 = set()
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6466():
    int_0 = -1916
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


def test_case_6467():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6468():
    float_0 = -1289.0
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6469():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    bytes_0 = b"!\xb22`\xb2\xa5\xa7\xecB\xd1\x89\x17\xe7\x85\xa2s%\x18"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6470():
    none_type_0 = None
    str_0 = "`[g:$kf^F?c"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6471():
    bytes_0 = b"\x11\xc4C?/n0F\xb4\xfey\x9b"
    complex_0 = -50.87 + 524j
    complex_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6472():
    str_0 = "M`rMrdKb6mE"
    int_0 = -2068
    dict_0 = {str_0: str_0, str_0: int_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6473():
    int_0 = -941
    int_1 = -175
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6474():
    none_type_0 = None
    int_0 = 0
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6475():
    dict_0 = {}
    complex_0 = 1799.33 + 1543.9j
    complex_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6476():
    bool_0 = True
    str_0 = "rU\x0b}4k^WEkX"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6477():
    none_type_0 = None
    bytes_0 = b"e*ga$\x9c\x8cq\xa5>\xe4"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6478():
    object_0 = module_0.object()
    bool_0 = False
    str_0 = '\x0b6S=0 ueCf7N\tH"D'
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6479():
    float_0 = 3369.15
    bytes_0 = b"\xbd\x14\xe3\x9d\xc0z\xd4"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6480():
    str_0 = "e'\rt.xq _x,5VpZ#5"
    none_type_0 = None
    str_1 = "FG*-^|q(s<M`H"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_0: none_type_0,
    }
    module_1.ABC(*str_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6481():
    bool_0 = True
    float_0 = -1189.5962
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6482():
    object_0 = module_0.object()
    str_0 = "C)nI\teB+VK>Tw(U"
    set_0 = {str_0, str_0, str_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6483():
    none_type_0 = None
    int_0 = -1217
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6484():
    str_0 = "<.8"
    str_1 = "O+WBwW3i$[*T5P"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6485():
    int_0 = -2221
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    a_b_c_0 = module_1.ABC()
    tuple_1 = (tuple_0, bool_0, a_b_c_0, bool_0)
    tuple_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6486():
    none_type_0 = None
    int_0 = -1623
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6487():
    str_0 = ">K$U VLTTN#}+3f"
    list_0 = [str_0]
    module_0.object(*list_0)


def test_case_6488():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_6489():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    list_0 = []
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6490():
    int_0 = -518
    list_0 = [int_0, int_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6491():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    bool_0 = True
    bool_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6492():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6493():
    int_0 = 380
    set_0 = {int_0, int_0}
    str_0 = "Ku~;~f<"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6494():
    float_0 = -3787.8
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6495():
    bool_0 = True
    str_0 = "V"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6496():
    dict_0 = {}
    str_0 = "H'N#<ViC*p<-.=e"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6497():
    bool_0 = False
    tuple_0 = (bool_0,)
    bytes_0 = b"\xfd\xeb\x03_-\x01\x96\xb1"
    bytes_0.write(tuple_0)


def test_case_6498():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6499():
    bool_0 = True
    int_0 = 5864
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6500():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6501():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    float_0 = -966.0
    list_0 = [set_0, float_0, set_0, set_0]
    bool_1 = False
    bool_2 = True
    dict_0 = {bool_1: bool_1, bool_1: bool_1, bool_1: bool_2}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6502():
    int_0 = 46
    set_0 = {int_0, int_0, int_0}
    float_0 = 2209.763534
    list_0 = [set_0, set_0, float_0]
    module_1.ABC(*list_0, **set_0)


@pytest.mark.xfail(strict=True)
def test_case_6503():
    float_0 = 723.36
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6504():
    int_0 = -265
    int_1 = -2285
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6505():
    bytes_0 = b""
    set_0 = {bytes_0}
    int_0 = -1132
    dict_0 = {int_0: int_0}
    dict_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6506():
    bool_0 = False
    bytes_0 = b"\x11\xf4o"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6507():
    tuple_0 = ()
    bool_0 = True
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6508():
    str_0 = "n\n_vUyFTI3\n6\\<"
    str_1 = ",\x0bgr(+\tbJh]58)qwi"
    dict_0 = {str_0: str_1, str_0: str_0}
    dict_1 = {str_0: str_0, str_1: str_1, str_1: dict_0}
    module_1.ABC(**dict_1)


@pytest.mark.xfail(strict=True)
def test_case_6509():
    a_b_c_0 = module_1.ABC()
    float_0 = -1127.30796
    tuple_0 = (a_b_c_0, float_0)
    str_0 = "@arzHI55]]GKM\tG]"
    list_0 = [str_0, str_0]
    list_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6510():
    bytes_0 = b"\xf9\xec\xeb\x8d\xed\xd1\x04\x1e\xbf\xef\xf9\xb8^AD"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6511():
    str_0 = ""
    list_0 = [str_0]
    a_b_c_0 = module_1.ABC()
    list_1 = [a_b_c_0, a_b_c_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6512():
    int_0 = 621
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, bool_0: a_b_c_0, a_b_c_0: bool_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6513():
    str_0 = "Ke^Sv;y\tkVk\rh\\1j"
    module_1.ABC(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_6514():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6515():
    bool_0 = False
    bool_1 = False
    list_0 = [bool_0, bool_1, bool_0, bool_0]
    float_0 = -1928.2
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6516():
    bool_0 = True
    bytes_0 = b"\x85d"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6517():
    int_0 = -803
    bytes_0 = b"i\x9f[\x06\xe7\xcc\x9e\x1e\x1cy0\xb4O\xa8\xf2\x94\x8f"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6518():
    float_0 = 229.8016
    str_0 = "g`TU}0|IVL;ZveVy)i"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6519():
    none_type_0 = None
    bytes_0 = b"V\xd4!\xc9\xb1X\x9cH/d\xcb5$\x0e!\x9f>\x1f"
    tuple_0 = (bytes_0,)
    tuple_1 = (tuple_0,)
    tuple_1.write(none_type_0)


def test_case_6520():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6521():
    int_0 = -116
    bool_0 = False
    bool_0.write(int_0)


def test_case_6522():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6523():
    dict_0 = {}
    str_0 = "\x0c6L"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6524():
    bool_0 = True
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6525():
    bool_0 = True
    int_0 = 536
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6526():
    none_type_0 = None
    list_0 = [none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6527():
    complex_0 = 325.6 + 782.4j
    bool_0 = True
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6528():
    set_0 = set()
    bytes_0 = b"\\\xafL\x18"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6529():
    int_0 = -2036
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6530():
    bool_0 = False
    complex_0 = 830.793 + 3670.77j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6531():
    bool_0 = True
    int_0 = 3329
    int_0.write(bool_0)


def test_case_6532():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6533():
    bool_0 = False
    module_0.object(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6534():
    int_0 = 845
    tuple_0 = (int_0, int_0)
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6535():
    float_0 = 3921.8
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6536():
    none_type_0 = None
    str_0 = "r.9e["
    dict_0 = {str_0: str_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6537():
    float_0 = -4288.75
    str_0 = "R"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6538():
    str_0 = "E|Eu|4&\x0cs2 b"
    int_0 = -1059
    list_0 = []
    tuple_0 = (str_0, int_0, int_0, list_0)
    set_0 = {str_0, str_0, str_0, int_0}
    set_0.write(tuple_0)


def test_case_6539():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_6540():
    bytes_0 = b"\xcacr\xcd\x8f\xf9"
    int_0 = 4327
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6541():
    float_0 = 2811.1
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6542():
    str_0 = "\n=)v+.q>F_\x0bR@.mQiOVi"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6543():
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6544():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6545():
    int_0 = 1734
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    tuple_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6546():
    float_0 = 2341.78423
    tuple_0 = (float_0,)
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6547():
    float_0 = 36.41143
    set_0 = set()
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6548():
    float_0 = 1669.537418
    bool_0 = True
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6549():
    bytes_0 = b"\xaf"
    int_0 = -255
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6550():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xd9\x9c\\:*\xdd;\xcc\xdc\xb0"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6551():
    int_0 = 1326
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6552():
    object_0 = module_0.object()
    tuple_0 = (object_0,)
    dict_0 = {tuple_0: tuple_0, object_0: object_0}
    list_0 = []
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6553():
    str_0 = "k1\\~Xt\x0bH`e"
    tuple_0 = (str_0,)
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6554():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_1 = module_1.ABC()
    object_0 = module_0.object()
    list_0 = [a_b_c_1, a_b_c_1, object_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6555():
    str_0 = "f\t\\Hhi"
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    set_0 = {a_b_c_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6556():
    float_0 = 1173.667871
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6557():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6558():
    none_type_0 = None
    str_0 = ",/;A'=\\o4y\\{uQK"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6559():
    bytes_0 = b",G\xd4\xe3L\xab\x18"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6560():
    bool_0 = False
    int_0 = -254
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6561():
    float_0 = -2325.0
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    list_0 = [a_b_c_0, a_b_c_0, bool_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6562():
    str_0 = "\n4(S"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6563():
    int_0 = -316
    str_0 = "Jc"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6564():
    set_0 = set()
    str_0 = "s=6?"
    str_0.write(set_0)


def test_case_6565():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6566():
    none_type_0 = None
    str_0 = "CAfXre"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6567():
    set_0 = set()
    bytes_0 = b"x\x04\xceO\xc8B\xe7(\x8c"
    set_1 = {bytes_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6568():
    str_0 = "'\x0b\\nm{F*-ij)"
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6569():
    str_0 = "OXC6B\\f"
    str_1 = "}{T\x0b)*Det"
    tuple_0 = (str_1,)
    str_2 = "Q#{s/\\S8&{\r@\n`"
    str_3 = "OWYm"
    dict_0 = {str_0: tuple_0, str_2: str_2, str_0: str_0, str_3: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6570():
    object_0 = module_0.object()
    float_0 = -1853.30569
    str_0 = ",C<ay$<"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    dict_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6571():
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()
    a_b_c_1.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6572():
    complex_0 = -525 - 1171.2j
    str_0 = '\x0ct5bZm"CsH'
    bool_0 = True
    dict_0 = {str_0: str_0, bool_0: bool_0}
    dict_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6573():
    dict_0 = {}
    bytes_0 = b'F\t4\xee\x82-\xd3"I\x9e\xf9\x82\x08\x9a\x06d'
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6574():
    bytes_0 = b"\x9fo\x0c=\x0c\xb0\x859\x0b\xebPJ\xbe\x14\xbbn\x9b"
    str_0 = ":R"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6575():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    bool_0.write(a_b_c_0)


def test_case_6576():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6577():
    bool_0 = False
    bytes_0 = b"\xc7#\x0c\x0fo\xd8Wx\xec\xd4\xfc\x02\x1a\xd0"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6578():
    bool_0 = True
    object_0 = module_0.object()
    object_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6579():
    none_type_0 = None
    int_0 = -1964
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6580():
    int_0 = 2325
    set_0 = {int_0, int_0, int_0, int_0}
    bool_0 = False
    set_1 = {bool_0, bool_0}
    str_0 = "=Lw1Xw]R!%O\t)R\niB"
    tuple_0 = (bool_0, set_1, bool_0, str_0)
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6581():
    int_0 = 2122
    bytes_0 = b""
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6582():
    bytes_0 = b"\xb7w\x94\xc3\xbf3\x91\xdfa\xb1\x95"
    int_0 = -286
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6583():
    complex_0 = -3685.22219 - 833j
    bytes_0 = b"q\xb0\x9d:}O\xfd\x92\xfb\x13\xc6\x81"
    list_0 = [bytes_0, bytes_0, bytes_0]
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6584():
    complex_0 = 3660.5 - 2529.956j
    set_0 = set()
    set_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6585():
    str_0 = "{\nfV)RU\x0c"
    str_1 = "s?df?:"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6586():
    str_0 = "\x0c6]\\oW\t"
    bytes_0 = b"\xfd\x95\x87\x16\x19\xab\t\xc5#y0J\x1f\xad\xdf\xc3"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6587():
    float_0 = -1887.9
    int_0 = 3846
    set_0 = {int_0, int_0}
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6588():
    str_0 = '_"pu"tI-'
    none_type_0 = None
    str_1 = "w2"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_0.object(**dict_0)


def test_case_6589():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6590():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    str_0 = "\tJ=VD}hc"
    complex_0 = -1212.0394 + 2067.7j
    dict_0 = {str_0: complex_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6591():
    bytes_0 = b"\xcf\xfe\x84\xef\x02\x12\xe3\xcak\xb2\\\x02\xea\x0f"
    dict_0 = {bytes_0: bytes_0}
    bytes_1 = b""
    dict_1 = {bytes_1: bytes_1, bytes_1: bytes_1, bytes_1: bytes_1, bytes_1: bytes_1}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6592():
    bool_0 = False
    int_0 = 5060
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6593():
    float_0 = -1616.37
    float_1 = 1719.94
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6594():
    float_0 = 133.184
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = (bool_0, set_0)
    tuple_1 = (bool_0, tuple_0)
    tuple_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6595():
    none_type_0 = None
    float_0 = -3367.1
    float_0.write(none_type_0)


def test_case_6596():
    pass


def test_case_6597():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6598():
    bool_0 = True
    bytes_0 = b"Q!\xd6N"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6599():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    int_0 = 8
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6600():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    list_0 = []
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6601():
    bool_0 = True
    bytes_0 = b"\x1b\r~\x19\x8c\xca\xc0\xd1\xf3\xb2\xf9W\xd3`\x01Gq"
    list_0 = [bytes_0, bytes_0, bytes_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6602():
    dict_0 = {}
    bool_0 = False
    bool_1 = True
    tuple_0 = (dict_0, bool_0, bool_1)
    int_0 = 1961
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6603():
    object_0 = module_0.object()
    module_0.object(*object_0, **object_0)


@pytest.mark.xfail(strict=True)
def test_case_6604():
    float_0 = -239.7215
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    tuple_0 = (set_0,)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6605():
    bytes_0 = b"\x8b\x96\xb6\xa6\xd6"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    list_0 = [set_0, bytes_0, set_0, set_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6606():
    list_0 = []
    str_0 = 'l~Z\t~Af[\t"[f32d-'
    str_1 = "oqr`3"
    dict_0 = {str_0: str_0, str_1: list_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6607():
    bool_0 = True
    int_0 = 1510
    int_0.write(bool_0)


def test_case_6608():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6609():
    str_0 = "lnKN"
    set_0 = {str_0, str_0, str_0, str_0}
    float_0 = 402.3
    bool_0 = True
    tuple_0 = (set_0, float_0, bool_0)
    bool_1 = True
    set_1 = {bool_1, bool_1}
    set_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6610():
    bool_0 = True
    tuple_0 = (bool_0,)
    list_0 = [tuple_0, bool_0]
    dict_0 = {tuple_0: tuple_0, bool_0: list_0, tuple_0: bool_0, tuple_0: list_0}
    bool_1 = True
    bool_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6611():
    object_0 = module_0.object()
    bool_0 = True
    int_0 = 694
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6612():
    a_b_c_0 = module_1.ABC()
    none_type_0 = None
    int_0 = 1109
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6613():
    none_type_0 = None
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    list_1 = [set_0]
    list_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6614():
    int_0 = -4261
    complex_0 = 1169.773767 - 2056.8j
    complex_0.write(int_0)


def test_case_6615():
    pass


def test_case_6616():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6617():
    none_type_0 = None
    tuple_0 = ()
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6618():
    str_0 = "e{bnEnY{uHz<u"
    str_1 = "k\t\x0c|c'OoTEsK#G&*>L"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6619():
    bool_0 = False
    str_0 = "NS)$\rlO\x0b~"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6620():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = [bool_0, dict_0]
    bytes_0 = b"\xcb\xe3\xcc\xf6\xcf\x0c"
    set_0 = {bytes_0, bytes_0, bytes_0}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6621():
    int_0 = -2526
    str_0 = "+$E::+J"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6622():
    bool_0 = True
    int_0 = -3369
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6623():
    dict_0 = {}
    a_b_c_0 = module_1.ABC()
    str_0 = "b\x0c"
    dict_1 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: str_0, str_0: str_0}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6624():
    tuple_0 = ()
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    dict_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6625():
    bool_0 = True
    int_0 = 3358
    list_0 = [int_0, int_0, int_0, int_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6626():
    bool_0 = False
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6627():
    str_0 = "`{"
    str_1 = "TxiDa53VJ;BF`r\r"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6628():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    float_0 = 517.351371
    dict_1 = {float_0: float_0}
    dict_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6629():
    bool_0 = True
    bool_1 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_1: bool_0}
    list_0 = []
    tuple_0 = (bool_0, bool_1, dict_0, list_0)
    dict_1 = {}
    list_1 = [tuple_0, dict_0, dict_0, dict_1]
    bool_2 = False
    bool_2.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_6630():
    str_0 = "f n]:]o0Fl2@"
    complex_0 = 3598.49082 + 104.9j
    bytes_0 = b"\x85\xb3\x96"
    bool_0 = False
    int_0 = -688
    tuple_0 = (int_0,)
    tuple_1 = (complex_0, bytes_0, bool_0, tuple_0)
    tuple_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6631():
    bytes_0 = b"\xda\xea\x10\x14\x8f6\xaa=\xa5"
    list_0 = [bytes_0, bytes_0, bytes_0]
    module_1.ABC(**list_0)


@pytest.mark.xfail(strict=True)
def test_case_6632():
    str_0 = "b0~-iXyO<_\n'jv\n;ch'z"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6633():
    bytes_0 = b"\xa1+Y\x8c\xc4BPwx\x7f}\xbf?\xa0\xea\x80@\xb8B\xff"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6634():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xa4&\tkXKR\xd7(\x90\xc6\xf1\xec4#*\xf7"
    bytes_0.write(a_b_c_0)


def test_case_6635():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6636():
    a_b_c_0 = module_1.ABC()
    set_0 = set()
    tuple_0 = (set_0,)
    float_0 = 4495.741
    tuple_1 = (tuple_0, float_0)
    tuple_1.write(a_b_c_0)


def test_case_6637():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6638():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    bool_1 = False
    bool_1.write(list_0)


def test_case_6639():
    pass


def test_case_6640():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_6641():
    float_0 = -4357.907899
    module_1.ABC(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_6642():
    bytes_0 = b"L\xda-\x86\x07\xf3\x15\x81!-\x90\xd2+tM"
    float_0 = 938.03
    float_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6643():
    bool_0 = True
    dict_0 = {}
    dict_0.write(bool_0)


def test_case_6644():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6645():
    a_b_c_0 = module_1.ABC()
    int_0 = -2535
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6646():
    bytes_0 = b"r\x97\x07\xef\x89;A\xfe\xee0\xcd\x87-\xf2'\xe0\xef\x19\xcaP"
    int_0 = -232
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6647():
    bytes_0 = b"?\xf1 \xfc\x98\x89"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6648():
    str_0 = "'="
    str_1 = "|Rf29C(X!%"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6649():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    complex_0 = 714.938084 - 895.607692j
    complex_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_6650():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    list_1 = [a_b_c_0, list_0]
    int_0 = -1680
    int_1 = -1804
    dict_0 = {int_0: int_0, int_1: int_0}
    dict_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_6651():
    int_0 = 536
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6652():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xccL`\xdcm\xe9O)\x10\xa4\xdd\x06\x97"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6653():
    bytes_0 = b"\x1e[\xca\x0bo\xad\xed\x8b\x8f\xcdl\xce\x9c\x18U"
    module_0.object(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6654():
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0, bool_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6655():
    a_b_c_0 = module_1.ABC()
    int_0 = -738
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6656():
    list_0 = []
    module_0.object(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_6657():
    str_0 = "WNl\\1Y<"
    bytes_0 = b"\xf8\x86\xcf\xb3"
    tuple_0 = (bytes_0,)
    tuple_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6658():
    str_0 = "h^44aNN8bT\rZonXA*2"
    str_1 = "Jn"
    str_1.write(str_0)


def test_case_6659():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_6660():
    bool_0 = True
    set_0 = {bool_0}
    tuple_0 = (bool_0, bool_0, bool_0, set_0)
    list_0 = [tuple_0, set_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6661():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    int_0 = 5813
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6662():
    bytes_0 = b"\x13G\t\xb7\x18m\x06\xd9\xef\x81\xd42\tiR\x16"
    int_0 = -3339
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6663():
    str_0 = "Xlw@[I"
    str_1 = ")ik\rL92Y@"
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_1, str_1: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6664():
    a_b_c_0 = module_1.ABC()
    complex_0 = 2246.83 + 1498.50487j
    complex_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6665():
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6666():
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0, bool_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6667():
    str_0 = "Q"
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6668():
    int_0 = 1919
    tuple_0 = (int_0,)
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6669():
    int_0 = -988
    int_1 = 1679
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6670():
    bool_0 = False
    float_0 = 2035.173
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6671():
    bool_0 = False
    complex_0 = 1857.66 - 3151j
    dict_0 = {complex_0: complex_0, complex_0: complex_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6672():
    str_0 = ""
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6673():
    none_type_0 = None
    bytes_0 = b"\x14}A!\xfe\xfe\x98"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6674():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6675():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6676():
    int_0 = 436
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6677():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6678():
    bool_0 = False
    float_0 = 3796.42
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6679():
    int_0 = 2301
    object_0 = module_0.object()
    bool_0 = False
    set_0 = set()
    dict_0 = {object_0: object_0, bool_0: object_0, bool_0: set_0, object_0: set_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6680():
    int_0 = 688
    bytes_0 = b"^\xc2\xcd\xba\xff\x16Uv\xa3\x91]\xbfB"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6681():
    bytes_0 = b"3F\x07.K"
    object_0 = module_0.object()
    object_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6682():
    bytes_0 = b"L\x86\x83"
    dict_0 = {}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6683():
    none_type_0 = None
    str_0 = "=\r"
    list_0 = [str_0, str_0, str_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6684():
    list_0 = []
    str_0 = "iS\x0cdkx v+WdM,((:Z9c"
    str_1 = "Lebo`ycN C"
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_1}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6685():
    float_0 = 767.1
    int_0 = 7
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6686():
    int_0 = -1991
    a_b_c_0 = module_1.ABC()
    list_0 = [int_0, int_0, int_0, a_b_c_0]
    bytes_0 = b"\xdc\xb03\x8f\x81\xd75\xdf\xae\x9c\xae7\xb9"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6687():
    bytes_0 = b"\x18[\x9a08>"
    int_0 = -3519
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6688():
    complex_0 = -2643.991 - 1424j
    bool_0 = False
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6689():
    bytes_0 = b"\xe4\xe9&(\xec\x04\x82\xf9\x9b\x03EW"
    complex_0 = -3188.5 + 4313.03j
    complex_0.write(bytes_0)


def test_case_6690():
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_6691():
    none_type_0 = None
    int_0 = -1308
    set_0 = {int_0, int_0, int_0, int_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6692():
    none_type_0 = None
    str_0 = "wJ1ivdXeHkI"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6693():
    int_0 = -2622
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6694():
    complex_0 = -1199.145737 - 243j
    bool_0 = False
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6695():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    list_0 = [dict_0, dict_0]
    str_1 = "Z_eTU$?X.-%F@"
    str_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6696():
    bytes_0 = b"\x02\x7f\x94\xf3_\xe9q\x98\x94f\x92\xd9\xb8"
    list_0 = []
    bytes_1 = b"\xf3\x0f\x13\x11\xfc${4\x18\x04\xfch\x08\x94\x14"
    tuple_0 = (list_0, bytes_1)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6697():
    object_0 = module_0.object()
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    list_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6698():
    none_type_0 = None
    int_0 = -351
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6699():
    bool_0 = True
    float_0 = 135.2
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6700():
    bool_0 = False
    float_0 = -3434.0
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6701():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b".\xf1\\\n\x9f8"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6702():
    dict_0 = {}
    str_0 = "Wx1us-#$Rl[=9Ami(J5"
    str_0.write(dict_0)


def test_case_6703():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6704():
    bool_0 = False
    bool_1 = True
    list_0 = [bool_1]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6705():
    bytes_0 = b"W\xfa\x12\xd8"
    int_0 = -2052
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6706():
    float_0 = -1005.93
    str_0 = "bUaV#a"
    dict_0 = {str_0: str_0}
    dict_0.write(float_0)


def test_case_6707():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6708():
    str_0 = "T%SHCAd[~qT@mO%"
    object_0 = module_0.object()
    object_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6709():
    int_0 = 362
    module_1.ABC(*int_0)


@pytest.mark.xfail(strict=True)
def test_case_6710():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    set_1 = set()
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6711():
    none_type_0 = None
    int_0 = 989
    tuple_0 = (int_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6712():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6713():
    bytes_0 = b"\xba\x17\xd4\xf4n\xf8E\\\x87\x9d\x0f\xb6"
    bool_0 = False
    bool_1 = True
    a_b_c_0 = module_1.ABC()
    a_b_c_1 = module_1.ABC()
    tuple_0 = (a_b_c_1,)
    tuple_1 = (tuple_0,)
    int_0 = -131
    list_0 = [tuple_0, a_b_c_1, tuple_1]
    tuple_2 = (a_b_c_0, tuple_1, int_0, list_0)
    tuple_3 = (bool_0, bool_0, bool_1, tuple_2)
    tuple_3.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6714():
    none_type_0 = None
    int_0 = 4150
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6715():
    bool_0 = True
    int_0 = -651
    tuple_0 = (int_0,)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6716():
    a_b_c_0 = module_1.ABC()
    int_0 = -503
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6717():
    dict_0 = {}
    complex_0 = 1918.4 + 1409.26564j
    complex_0.write(dict_0)


def test_case_6718():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6719():
    a_b_c_0 = module_1.ABC()
    str_0 = "$Z\x0c"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6720():
    none_type_0 = None
    module_0.object(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6721():
    int_0 = -1153
    int_1 = -512
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6722():
    object_0 = module_0.object()
    str_0 = "^?G("
    str_1 = '"xGP]SZ\r.F78\x0cj^!fj{'
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6723():
    none_type_0 = None
    int_0 = -972
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6724():
    bytes_0 = b"S\xf4"
    bytes_1 = b"<\xd0\xf4\x14\xd7\x90\xf3N\x08\xd5"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6725():
    none_type_0 = None
    str_0 = "y"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6726():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    tuple_0 = ()
    tuple_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6727():
    none_type_0 = None
    int_0 = 1310
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6728():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6729():
    float_0 = 443.0
    list_0 = [float_0, float_0, float_0, float_0]
    str_0 = "p5vvZb:-G"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6730():
    dict_0 = {}
    str_0 = "nY"
    str_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6731():
    none_type_0 = None
    int_0 = -1091
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6732():
    none_type_0 = None
    list_0 = [none_type_0]
    module_1.ABC(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_6733():
    float_0 = 754.148
    object_0 = module_0.object()
    set_0 = {float_0, float_0, object_0, float_0}
    object_1 = module_0.object()
    set_1 = {object_1}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6734():
    bool_0 = True
    bool_1 = False
    set_0 = {bool_1, bool_1}
    set_0.write(bool_0)


def test_case_6735():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6736():
    bool_0 = True
    str_0 = "!@=/t(i`%5"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6737():
    float_0 = -1513.22
    dict_0 = {float_0: float_0, float_0: float_0, float_0: float_0, float_0: float_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6738():
    int_0 = 2609
    int_1 = -1691
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6739():
    bool_0 = False
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6740():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bool_1 = False
    bool_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6741():
    bool_0 = False
    list_0 = []
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6742():
    complex_0 = -1228.6 - 972j
    bool_0 = False
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6743():
    bytes_0 = b"\xb4_\xe0\xd5\xbeF\x9eA\xf01\x84v2\xf2"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6744():
    complex_0 = 1410.27309 - 2176.7291j
    bytes_0 = b"r\xf1\xf9l\xf0c9\xad\x0e\x82n_"
    bytes_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6745():
    none_type_0 = None
    complex_0 = -1241.8544 + 2160.482808j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6746():
    str_0 = "\n'*h:j\x0bzd<[~;0uQ_C"
    bytes_0 = b"\xe7\x00\x80f#\x7f\xceSh\xde"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6747():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\x13\xd7\xf29"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6748():
    bool_0 = False
    bool_1 = True
    int_0 = 476
    float_0 = -2784.3202
    dict_0 = {bool_1: float_0}
    dict_1 = {bool_1: bool_1, bool_1: bool_1, int_0: bool_1, bool_1: dict_0}
    dict_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6749():
    bool_0 = False
    float_0 = -892.118605
    dict_0 = {bool_0: float_0, bool_0: bool_0, float_0: float_0}
    tuple_0 = ()
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6750():
    tuple_0 = ()
    str_0 = "uWUqp%zx00]_"
    dict_0 = {tuple_0: str_0, str_0: tuple_0, str_0: tuple_0, tuple_0: tuple_0}
    bytes_0 = b"\x1b\x97\xb2\xddM\x0c\x0f\x9cJ\xb75\x15\x94\\"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6751():
    bool_0 = True
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6752():
    int_0 = -885
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6753():
    str_0 = "sl?xzv_A|"
    bool_0 = True
    bool_0.write(str_0)


def test_case_6754():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6755():
    bytes_0 = b",v\xc1j0\x92\xec4\x99Ja\x1a?\x1e:\x9f4\x9c\x8b"
    set_0 = {bytes_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6756():
    bytes_0 = b"\xa4\xa1\x82\xdf%\nU\xdb\x9c\xa3\xbc\x84\xaf\xc7"
    int_0 = -215
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6757():
    list_0 = []
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6758():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6759():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6760():
    none_type_0 = None
    bytes_0 = b"\xf4\xb2"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6761():
    object_0 = module_0.object()
    float_0 = 2011.34
    dict_0 = {float_0: float_0, float_0: float_0}
    dict_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6762():
    float_0 = -1231.9
    complex_0 = 1916.598 + 1672.6603j
    complex_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6763():
    int_0 = 1252
    list_0 = []
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6764():
    str_0 = "zmJQU+wl"
    str_1 = "\\5ieHOR"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_1: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6765():
    str_0 = "!"
    str_1 = "aHWeYW^F=jYY"
    str_2 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_2: str_2}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6766():
    bytes_0 = b"I\x9a\x1a\x9a~\xda\x1agC\x13\x01`$\\\xd8p\xd3\x1c"
    bytes_1 = b"SU\t~\xb4\xff\xfd&\x05\xa7\x839\xdbp"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6767():
    tuple_0 = ()
    int_0 = 2540
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6768():
    none_type_0 = None
    int_0 = -765
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6769():
    bool_0 = True
    int_0 = -1165
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6770():
    none_type_0 = None
    bytes_0 = b"u\x99\x92\xa5\x9c\xd5R"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6771():
    bool_0 = False
    bytes_0 = b"2"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6772():
    bool_0 = False
    str_0 = "8"
    set_0 = {str_0, str_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6773():
    bool_0 = False
    str_0 = "3/khzH\\j78<}"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6774():
    int_0 = 71
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6775():
    str_0 = "r{d\nML"
    none_type_0 = None
    dict_0 = {str_0: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6776():
    int_0 = 1914
    str_0 = "`8S'y"
    list_0 = [str_0, str_0]
    list_0.write(int_0)


def test_case_6777():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6778():
    int_0 = -313
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6779():
    a_b_c_0 = module_1.ABC()
    float_0 = 23.0
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, float_0: float_0}
    int_0 = -1539
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6780():
    str_0 = ":uR1MUhM\\"
    str_1 = "\\-"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6781():
    str_0 = "K^M?<YZL&"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6782():
    float_0 = 2956.0
    bytes_0 = b"\xbf1\x14\xed\xb6\xb6\xc7\xf8"
    bytes_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6783():
    str_0 = "@qT'u/$SA/&Q"
    float_0 = 3746.271
    set_0 = {float_0}
    list_0 = [str_0, str_0, set_0, str_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6784():
    bool_0 = True
    int_0 = -1609
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6785():
    bool_0 = True
    str_0 = "5)>|"
    int_0 = -780
    dict_0 = {str_0: int_0, int_0: int_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6786():
    bytes_0 = b"8\xe4?\xa3C\xf2}2Y\x1f\xab\xe5"
    a_b_c_0 = module_1.ABC()
    set_0 = {bytes_0, bytes_0, bytes_0, a_b_c_0}
    set_1 = set()
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6787():
    bytes_0 = b"4e~\xe9m\xf1\x11\xec\x81\x08\xec\x92)"
    bytes_1 = b"%g\xe6\xed\xcc\x10\x9f\xa6\xb92h\xa0\x99c\x85\xb2"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6788():
    float_0 = -2530.58134
    list_0 = [float_0, float_0, float_0]
    str_0 = "zudFuwV$V w+{)dH0zW("
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6789():
    str_0 = "Z)\n\t:~y"
    dict_0 = {str_0: str_0}
    int_0 = -126
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6790():
    none_type_0 = None
    bytes_0 = b":\xcbl\x9c\xb4"
    bytes_0.write(none_type_0)


def test_case_6791():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6792():
    str_0 = ".ci4IYfd\x0b4C"
    dict_0 = {str_0: str_0}
    bool_0 = True
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6793():
    bytes_0 = b"O\x11\xc2"
    int_0 = -3529
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6794():
    none_type_0 = None
    module_1.ABC(**none_type_0)


def test_case_6795():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6796():
    complex_0 = -486.372376 - 100.26162j
    complex_1 = -2421.467402 - 1089.765j
    complex_1.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6797():
    str_0 = ""
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6798():
    bytes_0 = b"c\xcf&1\x9c\x13E"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6799():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    list_0 = [set_0, set_0, bool_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6800():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    set_1 = set()
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6801():
    bytes_0 = b"\xd9)"
    float_0 = 2521.0959
    float_0.write(bytes_0)


def test_case_6802():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6803():
    dict_0 = {}
    int_0 = -1984
    list_0 = [int_0, int_0]
    list_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6804():
    str_0 = ",3&'3-_n'_cqe&K_C"
    none_type_0 = None
    str_1 = "\n3?we"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6805():
    str_0 = "x"
    str_1 = "aN{!U]A@\t,hhlLV}\x0cP"
    dict_0 = {str_1: str_1}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6806():
    a_b_c_0 = module_1.ABC()
    object_0 = module_0.object()
    dict_0 = {object_0: object_0, object_0: object_0, object_0: object_0}
    dict_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6807():
    bool_0 = False
    int_0 = 1877
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6808():
    bool_0 = False
    module_0.object(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6809():
    bool_0 = False
    int_0 = -976
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6810():
    set_0 = set()
    float_0 = -1966.73693
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6811():
    none_type_0 = None
    float_0 = -5343.0
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6812():
    float_0 = 3706.74
    tuple_0 = (float_0,)
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6813():
    str_0 = "fijrQ%`:"
    object_0 = module_0.object()
    object_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6814():
    none_type_0 = None
    float_0 = 216.0
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6815():
    str_0 = "jgQ,|TbI1mJO%42E;"
    none_type_0 = None
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6816():
    none_type_0 = None
    bytes_0 = b"k\x85k\xdc8"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6817():
    bool_0 = False
    int_0 = -1794
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    tuple_0 = (int_0, a_b_c_0, dict_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6818():
    str_0 = "l~*Q@j1/'h0\"7\x0c~(Vr)+"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6819():
    tuple_0 = ()
    float_0 = 730.347
    float_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6820():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6821():
    float_0 = -479.46526
    list_0 = [float_0, float_0]
    int_0 = 1044
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6822():
    object_0 = module_0.object()
    str_0 = ""
    set_0 = {str_0, str_0, str_0}
    set_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6823():
    bytes_0 = b"\x83.f\xab\x01S\x1csm\xbe\xfe"
    bytes_1 = b"c\x88\xb4\x0e"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6824():
    bytes_0 = b'LQ\x9f\x18@\xee,e8\x03\xd9\xa4S?\xff(\x91\xa7"\xbf'
    tuple_0 = (bytes_0,)
    list_0 = [tuple_0, tuple_0, bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6825():
    int_0 = 30
    dict_0 = {}
    bytes_0 = b""
    list_0 = [dict_0, dict_0, dict_0, bytes_0]
    tuple_0 = (int_0, list_0, int_0)
    bool_0 = True
    int_1 = 4729
    tuple_1 = (bool_0, int_1)
    tuple_1.write(tuple_0)


def test_case_6826():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6827():
    object_0 = module_0.object()
    int_0 = -2645
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6828():
    str_0 = "5hMb:f"
    complex_0 = 2155.69303 + 437.63j
    int_0 = 1020
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
        int_0: int_0,
    }
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6829():
    bool_0 = True
    int_0 = -4051
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6830():
    str_0 = ""
    str_1 = "M-T;GpgrS>oM\rWcFTm"
    str_2 = "Jl#k+>:v"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6831():
    none_type_0 = None
    int_0 = 868
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6832():
    str_0 = ")&"
    str_1 = ':A|~Hk\\MYU%aC0GK{`"\\'
    dict_0 = {str_0: str_0, str_1: str_1, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6833():
    float_0 = 2244.0
    float_1 = 2232.0
    float_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6834():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0]
    complex_0 = 1069.0943 + 243.4j
    complex_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6835():
    bool_0 = True
    float_0 = 2794.08651
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6836():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0}
    float_0 = -2914.034
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6837():
    int_0 = 1606
    int_1 = 1314
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6838():
    none_type_0 = None
    bytes_0 = b"H\xade]r\xaaZ%&"
    bytes_1 = b'"$\x11T\x9f\x91\xf6 \xa8'
    dict_0 = {bytes_0: bytes_0, bytes_1: bytes_1}
    tuple_0 = (dict_0,)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6839():
    int_0 = -1846
    bool_0 = False
    dict_0 = {int_0: int_0, int_0: bool_0}
    bool_1 = False
    bool_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6840():
    int_0 = 159
    tuple_0 = (int_0, int_0)
    bool_0 = True
    bytes_0 = b"\xcf\xd5x\x9a\xbf\x82\xcb\xe4W\xc3n\x07'N|`\xce{\xcb\xc0"
    tuple_1 = (bool_0, bool_0, bool_0, bytes_0)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6841():
    bytes_0 = b"\x93\x11%"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6842():
    a_b_c_0 = module_1.ABC()
    bool_0 = True
    str_0 = "<}7n-a#7#$b7a{z\x0c1RSj"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6843():
    int_0 = -124
    list_0 = [int_0]
    str_0 = "jjL)*)~a"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6844():
    str_0 = "6*(&.ali"
    bytes_0 = b"\x94.\xc6\xd5\x9b\x03"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6845():
    bool_0 = False
    tuple_0 = (bool_0,)
    tuple_1 = (tuple_0,)
    dict_0 = {tuple_1: bool_0}
    bytes_0 = b"\xcd\xb8\x0cT\x98u2\x85\xfe\x01\xd2\xdd\xfd\x93\x14"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6846():
    bytes_0 = b"\x86W,\x7f\x87\xdfl\xd2\x18\x8f}\xb8\x16\xde(\xf3\x91\xccL"
    bytes_1 = b"\xc6\x97\xb6\x06n\xd6i\x8b\x81\\\x18r\xff\xd9\x92\xcb\xc0"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6847():
    a_b_c_0 = module_1.ABC()
    int_0 = 288
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6848():
    int_0 = 1981
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6849():
    bool_0 = False
    int_0 = -283
    int_0.write(bool_0)


def test_case_6850():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6851():
    bool_0 = False
    float_0 = -1363.0717
    list_0 = [float_0, float_0, float_0, float_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6852():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    int_0 = -1360
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6853():
    none_type_0 = None
    bytes_0 = b"(\\7\xecJ\xc7\xdee!\xd4\x8a\x1e\xb0\xcb\x86\xb3\xf6"
    str_0 = "x&y)`"
    tuple_0 = (bytes_0, str_0, str_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6854():
    int_0 = 4656
    list_0 = [int_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6855():
    str_0 = "?5RCj3"
    bool_0 = False
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6856():
    bytes_0 = b"\xc4\xbc3\x97UH"
    int_0 = 935
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6857():
    int_0 = 1143
    tuple_0 = (int_0, int_0, int_0)
    tuple_1 = ()
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6858():
    dict_0 = {}
    int_0 = 1792
    list_0 = [dict_0, int_0, int_0]
    int_1 = 1885
    int_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6859():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6860():
    object_0 = module_0.object()
    str_0 = "z?EXsXUN9N P7S-t*{CB"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    dict_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6861():
    bytes_0 = b"\x8b\xeb\x9b\x87\xe3\xc61"
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    module_1.ABC(*list_0)


def test_case_6862():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6863():
    int_0 = 1235
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6864():
    int_0 = 1586
    bytes_0 = b"`\x14\xc7\x90\x8cF]#\xe12\xe21\x86"
    bytes_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6865():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0}
    set_1 = set()
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6866():
    none_type_0 = None
    bytes_0 = b"\xf5Z\xcdvC\xe7\xbfG"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6867():
    complex_0 = 207.2643 + 1781.319329j
    tuple_0 = ()
    object_0 = module_0.object()
    set_0 = {tuple_0, tuple_0, object_0}
    set_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6868():
    a_b_c_0 = module_1.ABC()
    float_0 = 3536.0
    complex_0 = 1324.74405 + 2705.4446j
    list_0 = [complex_0, complex_0, complex_0, complex_0]
    list_1 = [list_0, complex_0, list_0]
    list_1.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6869():
    float_0 = 405.71734
    str_0 = 'kdN9Fg1u"A4c{*:mD'
    list_0 = [str_0, str_0, str_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6870():
    complex_0 = 2501 + 2346.926654j
    str_0 = "7d%-lb(g++*8"
    str_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6871():
    float_0 = 1268.7749
    str_0 = "J]3LOHYpDzB'o(-;\nJx"
    str_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6872():
    bool_0 = False
    complex_0 = 940.633989 + 379.8j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6873():
    str_0 = "KUDun|-3D"
    bool_0 = True
    bool_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6874():
    dict_0 = {}
    bool_0 = False
    list_0 = [bool_0, bool_0]
    list_0.write(dict_0)


def test_case_6875():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6876():
    bool_0 = False
    float_0 = -964.003
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6877():
    int_0 = -1606
    str_0 = "H+\x0b:Iv8)p/xSPFP0N]8"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6878():
    bool_0 = False
    float_0 = 1553.0
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6879():
    list_0 = []
    float_0 = -2783.558
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6880():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    str_0 = ""
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6881():
    a_b_c_0 = module_1.ABC()
    int_0 = 3361
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6882():
    str_0 = "8"
    str_1 = "]#\rrgg@#ZFn*/.O\x0c$C"
    dict_0 = {str_0: str_0, str_1: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6883():
    float_0 = -1105.4182
    int_0 = -359
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6884():
    object_0 = module_0.object()
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6885():
    bool_0 = False
    complex_0 = 1162.722 + 95.8j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6886():
    bool_0 = True
    str_0 = "/\t}n\x0bG=0m0uv-lA3}"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6887():
    bytes_0 = b"\x98\xb5\xb4"
    int_0 = -4281
    dict_0 = {bytes_0: bytes_0, int_0: int_0, bytes_0: bytes_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6888():
    none_type_0 = None
    float_0 = 2329.773609
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6889():
    int_0 = 855
    str_0 = "i)<C;99.hmACi\x0b(}l"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6890():
    bool_0 = False
    int_0 = 1915
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6891():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6892():
    list_0 = []
    list_1 = [list_0, list_0]
    list_2 = [list_1, list_1, list_0]
    str_0 = "fA"
    str_0.write(list_2)


@pytest.mark.xfail(strict=True)
def test_case_6893():
    bool_0 = True
    str_0 = '-L/kcW_HW5/ g"3'
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6894():
    float_0 = 766.453
    int_0 = 521
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6895():
    bool_0 = True
    int_0 = -608
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6896():
    bytes_0 = b"0\xc8\x89Q1\xf2\xa5\xb2\xd7\x97\xbc\xcf\xfdO\x0e\xc2\x80\xeb\r\xea"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6897():
    none_type_0 = None
    bytes_0 = b"\xa7jV\xbf\xe1\xfd\x86\x9e\x12\x17L4\xe6eqr;\x8a"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6898():
    int_0 = 424
    object_0 = module_0.object()
    object_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6899():
    bytes_0 = b"\x81\x80\xf3\x9d\x14\x0f\xb6,\x0f\x91\x0c"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6900():
    none_type_0 = None
    int_0 = -2146
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6901():
    str_0 = 'v"<\rj'
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6902():
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6903():
    str_0 = "&Fptd3[$^l=4Mf\x0c!S"
    list_0 = [str_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6904():
    bytes_0 = b"\x12\x9d\xed.n\x17\t\x91"
    module_1.ABC(**bytes_0)


def test_case_6905():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_6906():
    int_0 = -3016
    bool_0 = True
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6907():
    int_0 = 4056
    int_1 = -1639
    list_0 = [int_1, int_1]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6908():
    float_0 = -190.2
    set_0 = {float_0}
    set_1 = {float_0}
    set_1.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6909():
    bytes_0 = b"\xf9\x1c\xeb\xb8g`u\xa6\xda!\xeb"
    str_0 = "p6V^?%#d\x0cL7`5>&d3"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6910():
    list_0 = []
    float_0 = -4544.876
    float_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6911():
    str_0 = "sq}e:/6}30w^Mq+"
    list_0 = [str_0, str_0, str_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_6912():
    complex_0 = 5.6441 + 254j
    bool_0 = False
    list_0 = [bool_0, complex_0]
    list_1 = [bool_0]
    tuple_0 = (complex_0, bool_0, list_0, list_1)
    bool_1 = True
    bool_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6913():
    bytes_0 = b"\xf2\xa6\xcaM"
    bytes_1 = b"\xaf\x84\x7fp\xeb\x11\xd7=M\xc9["
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6914():
    int_0 = 1431
    tuple_0 = ()
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6915():
    bytes_0 = b'"\xdd\x9f\xd5JB{\xa5\xe0\x12\x91\xc2\x8d\x9d'
    int_0 = 1008
    tuple_0 = (int_0,)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6916():
    int_0 = -1840
    bytes_0 = b"R\xba\xcer\xadQ"
    str_0 = "JClSwq2Jz\rFC7"
    tuple_0 = (bytes_0, str_0)
    list_0 = [tuple_0, tuple_0, bytes_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6917():
    bytes_0 = b"\x95QYr\xbef\x7fZ\x87\xda(3(2"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6918():
    complex_0 = -1963.721 + 3549.33009j
    module_0.object(*complex_0)


@pytest.mark.xfail(strict=True)
def test_case_6919():
    bytes_0 = b"c\xb9\xc5\xff\xb3I\x03\x96\n\x92!\xe5I\xa0\x9bv\xf4"
    module_0.object(*bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6920():
    str_0 = "Y5t"
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6921():
    bool_0 = True
    int_0 = -1116
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6922():
    none_type_0 = None
    str_0 = ""
    str_1 = ""
    dict_0 = {str_0: str_0, str_0: str_1, str_0: str_0, str_0: str_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6923():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6924():
    bytes_0 = b"{\xfe\x8am3J"
    list_0 = []
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6925():
    none_type_0 = None
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6926():
    bool_0 = True
    bytes_0 = b"\xcbh"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6927():
    bool_0 = False
    str_0 = "I/Tk@\t,!Q'\r\nS."
    dict_0 = {bool_0: str_0, str_0: str_0, bool_0: bool_0, str_0: str_0}
    bytes_0 = b"\xf8H\x90\t\xfc"
    tuple_0 = (bool_0, bool_0, dict_0, bytes_0)
    bool_1 = True
    bool_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6928():
    object_0 = module_0.object()
    str_0 = "Aca/lL`b\n"
    str_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_6929():
    int_0 = 467
    dict_0 = {int_0: int_0, int_0: int_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6930():
    bytes_0 = b"\xc9\x90\x89\xd6\xc9"
    int_0 = 408
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6931():
    str_0 = "\\]$<g@UNTq+*`/#L"
    float_0 = -4778.396752
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6932():
    list_0 = []
    str_0 = "l\tYW;*\\t\rp\x0b4{Ev["
    str_1 = ' }"'
    dict_0 = {str_0: list_0, str_1: list_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6933():
    str_0 = "='y"
    list_0 = [str_0, str_0, str_0, str_0]
    dict_0 = {str_0: str_0, str_0: str_0, str_0: list_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6934():
    str_0 = "k-\x0b`3[t]d"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6935():
    bool_0 = False
    bytes_0 = b"\xe4\xcf\x138\x8f\xebi\xab\x8e5$\x9b\x0b"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6936():
    int_0 = -1096
    bytes_0 = b"\xc0?\xb5\x16\xdb;\xfaF\r\xec\x83\xfa\xce \xc3\x06\x8a"
    bytes_0.write(int_0)


def test_case_6937():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_6938():
    list_0 = []
    complex_0 = -993.28289 - 124.4j
    complex_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6939():
    bool_0 = False
    bytes_0 = b"m\x14\x11S\xbe4\xd0\x00e\x15\xe0\x16\x80X\xc7\x9a"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6940():
    int_0 = -3215
    set_0 = set()
    tuple_0 = (int_0, set_0)
    module_1.ABC(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6941():
    a_b_c_0 = module_1.ABC()
    float_0 = 2896.718606
    float_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6942():
    bytes_0 = b"J\x98\xa1b\x13/.\x98"
    dict_0 = {}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6943():
    str_0 = "}.YD\tj"
    str_1 = "+s^"
    str_2 = "=l/(iPg][h\t6"
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_2}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6944():
    float_0 = 645.2314
    object_0 = module_0.object()
    set_0 = {object_0, object_0}
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6945():
    list_0 = []
    none_type_0 = None
    module_1.ABC(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6946():
    int_0 = 2218
    object_0 = module_0.object()
    object_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6947():
    str_0 = "kE0va)"
    bool_0 = False
    bool_0.write(str_0)


def test_case_6948():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6949():
    float_0 = 771.0
    float_1 = 2560.45
    set_0 = {float_1, float_1, float_1, float_1}
    dict_0 = {float_1: float_1}
    tuple_0 = (set_0, float_1, float_1, dict_0)
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6950():
    bool_0 = True
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6951():
    bool_0 = False
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6952():
    none_type_0 = None
    bool_0 = True
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6953():
    bool_0 = True
    tuple_0 = ()
    list_0 = [bool_0, bool_0, tuple_0, bool_0]
    bytes_0 = b"5\x98\x13\xbbgb\xc0"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6954():
    str_0 = "/S-P\t5J/cGXNmlc"
    str_1 = "OwWo\n4\\\\)"
    str_2 = "N\to~g?!1{pD+~ao"
    tuple_0 = (str_0, str_0, str_1, str_2)
    dict_0 = {tuple_0: str_2, str_1: str_1, str_2: str_0}
    tuple_1 = ()
    tuple_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6955():
    str_0 = "]KNY<JuK"
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0]
    list_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6956():
    float_0 = -2678.822
    set_0 = set()
    set_0.write(float_0)


def test_case_6957():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6958():
    str_0 = "V"
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6959():
    str_0 = "cN_O:^(mQ\tk L!-+Lxg"
    int_0 = 3477
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6960():
    str_0 = "bX!c\n|m=LAaadbwr\x0c\\["
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6961():
    bytes_0 = b"5\xdeu\x1e\xe6"
    str_0 = "8"
    dict_0 = {}
    list_0 = [str_0, str_0, dict_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6962():
    bool_0 = False
    module_1.ABC(**bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6963():
    float_0 = 766.9
    str_0 = '"*\\T\\-S'
    set_0 = {str_0}
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6964():
    a_b_c_0 = module_1.ABC()
    int_0 = -1119
    list_0 = [int_0, int_0, int_0]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6965():
    str_0 = "pH;B)-xZ*BpF]sZ("
    bool_0 = True
    bool_0.write(str_0)


def test_case_6966():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6967():
    str_0 = "\r)M>>J\\"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6968():
    bool_0 = True
    float_0 = -2103.633469
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6969():
    bool_0 = False
    str_0 = "J+D"
    list_0 = [str_0, str_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6970():
    complex_0 = 306 + 2411.78318j
    int_0 = 3502
    set_0 = {complex_0, complex_0, int_0}
    list_0 = [set_0, complex_0]
    bool_0 = True
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6971():
    bool_0 = False
    list_0 = []
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6972():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = "lm"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6973():
    float_0 = 4342.310297
    str_0 = "\r2n+%H\r4X5;oj+xIXq5"
    list_0 = [str_0]
    list_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6974():
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    bool_0 = False
    bool_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6975():
    str_0 = '\tI#Ikd*t>Aq/">\r@F)'
    list_0 = [str_0, str_0, str_0, str_0]
    dict_0 = {str_0: list_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6976():
    none_type_0 = None
    bool_0 = False
    bool_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6977():
    a_b_c_0 = module_1.ABC()
    str_0 = "j:Q'\r"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_6978():
    none_type_0 = None
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0}
    tuple_1 = (tuple_0, set_0)
    tuple_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6979():
    int_0 = 2202
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6980():
    object_0 = module_0.object()
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    list_1 = [a_b_c_0, a_b_c_0]
    module_1.ABC(*list_1)


@pytest.mark.xfail(strict=True)
def test_case_6981():
    bool_0 = False
    int_0 = 3224
    dict_0 = {int_0: int_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6982():
    none_type_0 = None
    str_0 = "\\i:"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6983():
    bool_0 = True
    int_0 = 200
    dict_0 = {int_0: int_0, int_0: int_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6984():
    bool_0 = True
    int_0 = -414
    list_0 = [int_0]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6985():
    bytes_0 = b"\x8d-\xbc\xcd\xe3f\nq.\x17?"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    bool_0 = False
    list_0 = [bool_0]
    list_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6986():
    float_0 = 746.8
    complex_0 = -1733.221 - 2992.34213j
    complex_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6987():
    list_0 = []
    bytes_0 = b"EJ\xb6\xeb%\xd8\x0b]\t\xc1\xb6\x83\x97t\xed"
    bytes_0.write(list_0)


def test_case_6988():
    pass


@pytest.mark.xfail(strict=True)
def test_case_6989():
    str_0 = " ;"
    str_1 = "64WZ&Am8K4Qwm4xxX"
    str_2 = "xH[\r}?z7I@)"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_2: str_1}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6990():
    list_0 = []
    bytes_0 = b"\xa7\xb2\x16\xf2!\xe6"
    bytes_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_6991():
    bytes_0 = b"@%\x85R]\x95\x92\xdf{\xbf\x95\xb05~\xc1u\x02,\x0b"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_6992():
    int_0 = 523
    list_0 = [int_0, int_0, int_0, int_0]
    list_1 = [list_0, list_0, int_0]
    bool_0 = False
    str_0 = "`gR"
    tuple_0 = (bool_0, str_0)
    tuple_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_6993():
    str_0 = "U\x0c"
    bytes_0 = b"\xbe\x16W0\x9b\xd3+;\xb6\xe0\x0b\x1aL\x99\xadl\x0e"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6994():
    bool_0 = False
    complex_0 = -35.342 - 1085.93429j
    str_0 = "pQwEUzwE"
    tuple_0 = (bool_0, complex_0, complex_0, str_0)
    int_0 = 602
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6995():
    tuple_0 = ()
    set_0 = {tuple_0}
    set_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6996():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    dict_0 = {}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6997():
    bytes_0 = b"\\\xf3\xe8X\x95\x18\xd2l\xe1I\xc3\x9c"
    str_0 = "H.aWZY3@=6EqFz4B3"
    bool_0 = True
    tuple_0 = (bool_0,)
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: str_0, str_0: tuple_0}
    complex_0 = -2306.4 + 2875j
    complex_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_6998():
    str_0 = "cb,MrZ"
    int_0 = 435
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6999():
    dict_0 = {}
    int_0 = -877
    int_0.write(dict_0)


def test_case_7000():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7001():
    set_0 = set()
    int_0 = 1121
    int_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_7002():
    str_0 = "MCI`e;2("
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7003():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\xbak\x12&\xe5\t7\t'9\xa2\xac\xd3\x87"
    set_0 = {bytes_0}
    set_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_7004():
    bytes_0 = b"\xcc\x021\r\xe6Rj\x9b\x9e\x0c\xb2\x8d\x8e\x1aM\x1d\xa7t%"
    bytes_1 = b"Eb\x80\xd3_OQ \x9fo8\xef"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7005():
    none_type_0 = None
    int_0 = 617
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7006():
    list_0 = []
    bytes_0 = b"--\x0fd\x05o\x97\xc079\x9e\xf9\xfc\x9b:\x99=\xe9"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7007():
    float_0 = -550.5
    complex_0 = 2353.062 + 265.85j
    complex_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_7008():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    a_b_c_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7009():
    bool_0 = False
    float_0 = -917.29677
    list_0 = []
    tuple_0 = (bool_0, float_0, list_0, list_0)
    bool_1 = False
    bool_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7010():
    int_0 = -698
    int_1 = 2466
    list_0 = [int_1]
    module_0.object(*list_0, **int_0)


def test_case_7011():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7012():
    int_0 = -2368
    bool_0 = False
    bool_0.write(int_0)


def test_case_7013():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7014():
    bytes_0 = b"\x17\t\x1a)\xbe\xc1X"
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0, a_b_c_0]
    list_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7015():
    dict_0 = {}
    int_0 = 2112
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7016():
    tuple_0 = ()
    list_0 = []
    int_0 = -4022
    tuple_1 = (list_0, int_0)
    tuple_1.write(tuple_0)


def test_case_7017():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7018():
    none_type_0 = None
    object_0 = module_0.object()
    float_0 = -374.049
    list_0 = [object_0, float_0, float_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7019():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    float_0 = 2474.17035
    float_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7020():
    str_0 = "nFi0-R pGC~>"
    dict_0 = {str_0: str_0, str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7021():
    none_type_0 = None
    list_0 = [none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_7022():
    bytes_0 = b"\xc6\t\x11\x0b\x86X\xd1\xb4\xbf\x14\x9c.\x9d\x07"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7023():
    bool_0 = False
    dict_0 = {}
    tuple_0 = (bool_0, dict_0)
    bool_1 = True
    bool_1.write(tuple_0)


def test_case_7024():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7025():
    bytes_0 = b" f\xf1\xfc"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_7026():
    none_type_0 = None
    bool_0 = False
    complex_0 = 1208.373674 + 1154.54j
    list_0 = [bool_0, complex_0, complex_0]
    list_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7027():
    int_0 = 825
    float_0 = -318.31428
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_7028():
    str_0 = "M_ 2y,K^Mg="
    str_1 = "pIgs0,>_Y?\x0b'E4v"
    dict_0 = {str_0: str_0, str_1: str_0, str_0: str_1, str_0: str_1}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7029():
    complex_0 = -1495.641729 - 4809.7767j
    tuple_0 = (complex_0,)
    bool_0 = False
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7030():
    float_0 = 1873.33623
    list_0 = [float_0, float_0, float_0]
    dict_0 = {}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7031():
    set_0 = set()
    bytes_0 = b"\x99"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_7032():
    bytes_0 = b"\x8f|\xa0ht\xa4\x07\xdf\xb6l\xf5"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7033():
    none_type_0 = None
    int_0 = -1718
    int_0.write(none_type_0)


def test_case_7034():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)


def test_case_7035():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7036():
    int_0 = -5323
    bool_0 = False
    tuple_0 = (bool_0,)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_7037():
    a_b_c_0 = module_1.ABC()
    int_0 = -3800
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_7038():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    dict_0 = {}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7039():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    bool_0 = False
    bool_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_7040():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    list_0 = [a_b_c_0, a_b_c_0, a_b_c_0, set_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_7041():
    complex_0 = -1235.96069 - 631.9j
    dict_0 = {
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
        complex_0: complex_0,
    }
    tuple_0 = (complex_0, dict_0, dict_0, complex_0)
    int_0 = -424
    set_0 = {int_0, int_0, int_0, int_0}
    list_0 = [set_0, set_0]
    list_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7042():
    str_0 = ""
    str_1 = "=hX*=ijxG+t2%mS!"
    str_1.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_7043():
    float_0 = -901.3
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_7044():
    bytes_0 = b"\x81<|\xe7\xf5"
    str_0 = "yC\x0cX\\D`Edx~"
    str_0.write(bytes_0)


def test_case_7045():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_7046():
    str_0 = "wHNpl7N-sqr(mx#tWL:O"
    bytes_0 = b"9\x9c\xff`L\x13\x1c\xad"
    bytes_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_7047():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"\x94rC*\xab\xd0"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_7048():
    none_type_0 = None
    str_0 = "Slz:\x0c8"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7049():
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_1 = module_1.ABC()
    list_0 = [a_b_c_1, a_b_c_1]
    list_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_7050():
    bool_0 = False
    float_0 = 640.7056
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7051():
    a_b_c_0 = module_1.ABC()
    str_0 = "h\"W7z.'|`Y/`l#"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_7052():
    float_0 = -950.92
    str_0 = "Ast+&8E$^=dc"
    set_0 = {str_0, str_0}
    set_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_7053():
    dict_0 = {}
    bool_0 = True
    dict_1 = {}
    tuple_0 = (bool_0, dict_1)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7054():
    object_0 = module_0.object()
    bool_0 = True
    bool_1 = False
    tuple_0 = (object_0, bool_0, bool_1)
    bool_2 = True
    list_0 = [bool_2, bool_2]
    tuple_1 = (list_0, list_0, list_0)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7055():
    int_0 = -2125
    list_0 = [int_0, int_0, int_0, int_0]
    str_0 = "V5X7PQM3Z PtU](%15*"
    str_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7056():
    bool_0 = True
    bool_1 = False
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7057():
    str_0 = "5#c<\\~QdBE\nZODQ$B!"
    float_0 = 1022.774
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_7058():
    int_0 = -4221
    bool_0 = False
    bool_0.write(int_0)


def test_case_7059():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7060():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    list_1 = [a_b_c_0, list_0, a_b_c_0]
    list_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7061():
    bytes_0 = b"K9\xe3\x99\xbd"
    str_0 = '\\4"Y!Z2>\n\n&\\51f'
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7062():
    none_type_0 = None
    a_b_c_0 = module_1.ABC()
    dict_0 = {a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0, a_b_c_0: a_b_c_0}
    dict_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7063():
    none_type_0 = None
    module_1.ABC(*none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7064():
    bool_0 = False
    module_1.ABC(**bool_0)


def test_case_7065():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_7066():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_7067():
    none_type_0 = None
    float_0 = -1280.00435
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7068():
    bytes_0 = b"jm\x1e\x1bk\x138W\xb1BM\xa2\x06r\xd6${\x02"
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7069():
    bool_0 = True
    str_0 = "\tgaQfmQT1L\t"
    str_0.write(bool_0)


def test_case_7070():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7071():
    list_0 = []
    int_0 = 2043
    int_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7072():
    bytes_0 = b"\x0eg\x96\xb9\xa1\xce\xe3#@\xa5\xee\xc9\\t\xf1\xd1\x0c\xae\t\x84"
    bool_0 = True
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7073():
    bool_0 = False
    int_0 = -931
    int_0.write(bool_0)


def test_case_7074():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_7075():
    bool_0 = False
    bytes_0 = b"\xf0\xd8\xdcWZ<"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7076():
    none_type_0 = None
    int_0 = -2262
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7077():
    int_0 = 971
    bytes_0 = b"54vG\x13\xe7\x05\xe7\xd5\x01\xe2\xfe\x10l\xde,\xc0\x95\x16"
    bytes_0.write(int_0)


def test_case_7078():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7079():
    complex_0 = 552.5 + 2062.30358j
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_7080():
    bool_0 = True
    int_0 = 559
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7081():
    none_type_0 = None
    str_0 = "e<_N?\t#cJy\r(neL^:#C"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7082():
    list_0 = []
    module_0.object(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_7083():
    bool_0 = False
    list_0 = [bool_0]
    bytes_0 = b"\xe4'kGQ_\x01"
    bool_1 = True
    tuple_0 = (bytes_0, bool_1)
    tuple_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7084():
    object_0 = module_0.object()
    list_0 = [object_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_7085():
    bytes_0 = b"c=\xa9k\xb9\x89\xd6"
    set_0 = set()
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7086():
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    str_0 = "j179LA<O^K\x0b2h"
    dict_0 = {tuple_0: a_b_c_0, str_0: tuple_0, str_0: str_0}
    list_0 = [dict_0, str_0, str_0, a_b_c_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_7087():
    bool_0 = False
    bytes_0 = b"\xefZCvs{\x83\xb1\x06 \xcf"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7088():
    tuple_0 = ()
    a_b_c_0 = module_1.ABC()
    dict_0 = {tuple_0: a_b_c_0, a_b_c_0: a_b_c_0, tuple_0: tuple_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7089():
    bool_0 = False
    bool_1 = False
    set_0 = {bool_1, bool_1, bool_1}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7090():
    bytes_0 = b"\xc3l\xaa\xe8\xde:\x9e5\xdf\xd9\x10n\xcd*`\\\x0f"
    set_0 = set()
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7091():
    bytes_0 = b"n5m\xc2k"
    int_0 = -2
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7092():
    none_type_0 = None
    float_0 = -2413.0
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7093():
    bytes_0 = b"\xbd}Q\x1dnrl}\x83\x9ct\x195\xa18\xdf\x14\xab"
    int_0 = -656
    int_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7094():
    int_0 = 219
    bytes_0 = b"\xb8\xbb\x9b:R[3"
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_7095():
    str_0 = "ut8"
    dict_0 = {str_0: str_0}
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    dict_1 = {a_b_c_0: a_b_c_0, a_b_c_0: bool_0, bool_0: bool_0, bool_0: a_b_c_0}
    dict_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7096():
    a_b_c_0 = module_1.ABC()
    str_0 = "X~\n(3AtZ8g1AZU9k"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_7097():
    a_b_c_0 = module_1.ABC()
    bytes_0 = b"4\xa2\x91}"
    bytes_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_7098():
    bool_0 = False
    int_0 = 1918
    bytes_0 = b"A\x94"
    tuple_0 = (bool_0, int_0, bool_0, bytes_0)
    float_0 = -111.339336
    float_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7099():
    bool_0 = True
    float_0 = -2185.606
    float_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7100():
    float_0 = 1820.1445
    module_0.object(**float_0)


@pytest.mark.xfail(strict=True)
def test_case_7101():
    int_0 = 1966
    str_0 = ",1-7qs[\nZ"
    bool_0 = False
    tuple_0 = (int_0, str_0, bool_0, bool_0)
    module_1.ABC(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7102():
    complex_0 = -1154 + 786.677163j
    list_0 = [complex_0, complex_0]
    tuple_0 = ()
    tuple_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7103():
    none_type_0 = None
    int_0 = -5234
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7104():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0, a_b_c_0}
    float_0 = 834.4
    tuple_0 = (set_0, set_0, float_0, set_0)
    str_0 = "nDR7r./Z"
    int_0 = -445
    tuple_1 = (str_0, str_0, int_0, int_0)
    list_0 = [tuple_1]
    list_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7105():
    none_type_0 = None
    str_0 = "cR$rVuZ;hRePTi)w*}<"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7106():
    float_0 = -1248.191
    list_0 = [float_0]
    str_0 = "Af@Ho\rX>j&gcVt~ue9D"
    str_0.write(list_0)


def test_case_7107():
    a_b_c_0 = module_1.ABC()


@pytest.mark.xfail(strict=True)
def test_case_7108():
    a_b_c_0 = module_1.ABC()
    int_0 = 1820
    int_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_7109():
    bool_0 = False
    str_0 = "8e29XE\x0brw"
    str_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7110():
    str_0 = '"~!~Jw7eJgD~2NW[g'
    dict_0 = {str_0: str_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7111():
    none_type_0 = None
    int_0 = 1601
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7112():
    none_type_0 = None
    float_0 = -1786.0
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7113():
    complex_0 = -278.402 - 1848j
    tuple_0 = (complex_0,)
    bool_0 = True
    bool_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7114():
    bytes_0 = b"\x1a\x86\x85T\x10\x9fd\xc7\xec\xa9\xaf\x9bL\xf5?-\xbf\xa9"
    list_0 = [bytes_0, bytes_0]
    tuple_0 = ()
    bool_0 = True
    set_0 = {tuple_0, bool_0}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7115():
    str_0 = " ue#Ovt\nZU"
    str_1 = "@A_qKR~NM?\x0b)"
    dict_0 = {str_0: str_1, str_1: str_0}
    complex_0 = -2158.197 + 1014.05794j
    complex_0.write(dict_0)


def test_case_7116():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7117():
    tuple_0 = ()
    list_0 = [tuple_0]
    bool_0 = False
    bool_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7118():
    int_0 = 1365
    bytes_0 = b"\x91#\r\x9e\xef\xfcB])0\x8c\x9eV\xce\r"
    bytes_0.write(int_0)


def test_case_7119():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_7120():
    str_0 = "Y[f:sOY\n{cy\x0csN|hP;"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7121():
    str_0 = "Q^IE_3\x0bU"
    int_0 = -883
    int_0.write(str_0)


def test_case_7122():
    pass


def test_case_7123():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7124():
    none_type_0 = None
    str_0 = ";<-QHR\ry_D)1"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7125():
    str_0 = "gRneG.7:$88u~A<|]ni"
    dict_0 = {str_0: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7126():
    object_0 = module_0.object()
    list_0 = [object_0, object_0, object_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_7127():
    a_b_c_0 = module_1.ABC()
    int_0 = 1344
    set_0 = set()
    set_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_7128():
    tuple_0 = ()
    module_1.ABC(**tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7129():
    a_b_c_0 = module_1.ABC()
    bool_0 = False
    bool_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7130():
    float_0 = 2777.35
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_7131():
    bool_0 = True
    bool_1 = False
    tuple_0 = (bool_0, bool_1, bool_1)
    list_0 = [tuple_0, bool_1, bool_1]
    complex_0 = 3588.397 - 461.24433j
    complex_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7132():
    int_0 = -951
    int_1 = 1467
    int_1.write(int_0)


def test_case_7133():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7134():
    none_type_0 = None
    str_0 = "f\t'Ei:\nbBQ@x\\5e\rjuG"
    str_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7135():
    str_0 = "-nc`eCz(rYA|`0L;Wc"
    int_0 = 3416
    str_1 = "SQgt"
    str_2 = "7sbK9[s("
    str_3 = "y8O\rsev^vI%h\x0cEHI R]!"
    str_4 = "u\x0cf&Iw`j"
    dict_0 = {str_2: int_0, str_3: str_0, str_4: str_1}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7136():
    list_0 = []
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7137():
    str_0 = "kpj6~s8iIt}]osq"
    int_0 = -505
    int_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_7138():
    complex_0 = -1003.17 + 2191j
    object_0 = module_0.object()
    dict_0 = {complex_0: complex_0, object_0: object_0, complex_0: complex_0}
    tuple_0 = (dict_0,)
    bytes_0 = b'\x1f\xaf\xb7\x0f\xa3\xc2\xdf\x8f3\xf3m<\xf3"\x17\xb2\xf3\x1c\x92\xa0'
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7139():
    list_0 = []
    list_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7140():
    none_type_0 = None
    bytes_0 = b"\x12\xb7\x8f\x93\xf4dAytM@\xf5pE"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7141():
    int_0 = 1238
    tuple_0 = (int_0, int_0)
    set_0 = {tuple_0, int_0, int_0, int_0}
    bool_0 = True
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_7142():
    bool_0 = False
    bool_1 = True
    list_0 = [bool_0, bool_0, bool_1]
    str_0 = "[Wqn] nd^4,U-"
    list_1 = [str_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7143():
    bytes_0 = b"\xf1\xf1\xca\xfc\xf5\xb2\xc9\x84\x0bW\xf6\xf7:f\xf8s\xa1\xa5"
    object_0 = module_0.object()
    object_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7144():
    bytes_0 = b";"
    complex_0 = 1217 + 1702j
    complex_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7145():
    int_0 = 277
    int_1 = 4098
    bytes_0 = b"\x8f\xfe\x01M`l\x12\xfd\xc5~\xbe5]\xb0b1\xae"
    dict_0 = {int_1: int_1, bytes_0: int_1}
    dict_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_7146():
    int_0 = 640
    bool_0 = False
    int_1 = 3024
    set_0 = {int_0, bool_0, int_1, int_0}
    str_0 = ":(\"zJ@'H"
    str_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_7147():
    bool_0 = False
    bytes_0 = b"\xcb^\xc0Bo\x13\x8d\xb2\xca\xa8\xee\xf8\xcc"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7148():
    none_type_0 = None
    int_0 = -4212
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    tuple_0 = (int_0, dict_0, int_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7149():
    none_type_0 = None
    int_0 = -2407
    int_0.write(none_type_0)


def test_case_7150():
    object_0 = module_0.object()


@pytest.mark.xfail(strict=True)
def test_case_7151():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_7152():
    int_0 = 2702
    float_0 = 4577.3358
    float_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_7153():
    bytes_0 = b"\x1e\xa6\x8dO\xe7\x12"
    tuple_0 = (bytes_0,)
    str_0 = "<"
    str_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7154():
    complex_0 = 2188.92 + 90.606j
    bool_0 = True
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_7155():
    tuple_0 = ()
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    dict_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7156():
    str_0 = "%sC"
    float_0 = -326.46847
    float_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_7157():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    float_0 = 493.629
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_7158():
    float_0 = -632.57924
    list_0 = [float_0, float_0]
    module_0.object(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_7159():
    bool_0 = True
    str_0 = "A.P~Rn#"
    none_type_0 = None
    str_1 = "eIWP\r"
    dict_0 = {
        str_0: none_type_0,
        str_0: none_type_0,
        str_1: none_type_0,
        str_1: none_type_0,
    }
    module_1.ABC(*bool_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7160():
    set_0 = set()
    bytes_0 = b"\x1e\xe4\x0c\xdbX\xcaa1"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_7161():
    float_0 = 863.1016
    int_0 = -882
    int_0.write(float_0)


def test_case_7162():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7163():
    bool_0 = True
    int_0 = -4078
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7164():
    a_b_c_0 = module_1.ABC()
    str_0 = ";_PC\ne/5"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_7165():
    bool_0 = True
    bytes_0 = b"@~G\xec\xf5$+\xa5\x0fZ\x966\x1fm\x955\xe1"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7166():
    bool_0 = False
    complex_0 = -4301 - 4130.513j
    complex_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7167():
    bool_0 = True
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7168():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0]
    bool_0 = True
    module_0.object(*list_0, **bool_0)


def test_case_7169():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7170():
    str_0 = "HDy*,)mi$M{lG$df]d*P"
    bytes_0 = b"\x7f\xb0\xf2\x9b\x94\x1b\xf58\x12\x9d\x05a\x9d\xf50\xe1\xf8"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: bytes_0}
    bytes_1 = b"\x07P\x18\xce\xd0Yy\x16"
    bytes_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7171():
    bytes_0 = b"X\x0e"
    bool_0 = True
    bool_0.write(bytes_0)


def test_case_7172():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7173():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_7174():
    none_type_0 = None
    bytes_0 = b"\x9e\xaf\xb2!\xba\t\xc9\x91\xa9\xb4"
    bytes_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7175():
    int_0 = 929
    set_0 = {int_0, int_0, int_0}
    bytes_0 = b"yV\xbc\xe4\x90\xc4:\x93^h\xba\x19\x96\xabY\xa2"
    bytes_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_7176():
    bytes_0 = b"\x88U\xb5\xce\x89\x01}\xd9\xea\xda-\xc2\x1d\xf1Q*z\xcf"
    tuple_0 = ()
    int_0 = -5932
    list_0 = [int_0, tuple_0, tuple_0]
    tuple_1 = (tuple_0, int_0, list_0, int_0)
    tuple_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7177():
    bytes_0 = b"\xd9\xdf\xf0:h\x978\xfeb"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7178():
    int_0 = -1278
    int_1 = -999
    tuple_0 = (int_1, int_1)
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_7179():
    float_0 = -194.76694
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_7180():
    bool_0 = False
    tuple_0 = ()
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7181():
    bool_0 = False
    bool_1 = False
    list_0 = [bool_1, bool_1, bool_1]
    list_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7182():
    list_0 = []
    a_b_c_0 = module_1.ABC(*list_0)
    bool_0 = False
    module_0.object(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7183():
    str_0 = "Xmm2\tQNi`f"
    dict_0 = {}
    dict_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_7184():
    none_type_0 = None
    str_0 = "1"
    list_0 = [str_0, str_0, str_0]
    list_1 = [list_0]
    list_1.write(none_type_0)


def test_case_7185():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7186():
    a_b_c_0 = module_1.ABC()
    str_0 = "qL.*{rIPOJ9lL["
    float_0 = 1414.1826
    set_0 = {float_0, float_0}
    set_0.write(str_0)


def test_case_7187():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7188():
    bytes_0 = b"\x9b\xbc\x02\x1c\x151\x84\xccM\xf5#"
    bool_0 = False
    bool_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7189():
    bytes_0 = b"\xee\xf6\xff\xbb\xe1\x15q\xab=\t\xa9\xe3\x81:\xf9Q\x8d53"
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7190():
    bool_0 = True
    str_0 = "N;oC'q%iN4"
    set_0 = {str_0, str_0}
    set_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7191():
    float_0 = -1777.5
    bool_0 = False
    tuple_0 = (bool_0,)
    str_0 = '5"p`O\x0cmN[vini\ro2'
    tuple_1 = (float_0, tuple_0, str_0)
    dict_0 = {tuple_1: float_0, tuple_0: float_0, tuple_0: float_0}
    float_1 = 1621.878
    float_1.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7192():
    dict_0 = {}
    int_0 = -3481
    int_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7193():
    str_0 = "K/~4P]]:'d"
    bytes_0 = b"\n\xb0,\x83\xef\xc8&\xc2\xc3R\xd1\xddH\xed"
    str_1 = "pT56e"
    list_0 = [bytes_0, str_1, str_1, str_1]
    list_0.write(str_0)


def test_case_7194():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7195():
    int_0 = 2977
    object_0 = module_0.object()
    tuple_0 = ()
    list_0 = [object_0, tuple_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_7196():
    none_type_0 = None
    module_1.ABC(**none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7197():
    bool_0 = True
    bytes_0 = b"\xc9\x0c\xcfcsX\xeb>g`\xb6g\xe4"
    bytes_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7198():
    bytes_0 = b"Q\xce\xbd\x95\x03\x9eA\x97\x15\xcc\xe4;\x9e\xc2\xd1i\xb3a"
    str_0 = "3HK+["
    dict_0 = {str_0: bytes_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7199():
    none_type_0 = None
    list_0 = []
    float_0 = 311.661
    tuple_0 = (list_0, float_0, float_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7200():
    object_0 = module_0.object()
    int_0 = -724
    int_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_7201():
    str_0 = "NRu%D|e+m]5%Lth|"
    complex_0 = 2786.285169 + 731j
    complex_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_7202():
    int_0 = -4110
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_7203():
    none_type_0 = None
    object_0 = module_0.object()
    int_0 = 49
    bool_0 = True
    tuple_0 = (object_0, int_0, bool_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7204():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0, dict_0]
    bytes_0 = b"\x89\x8a\x91\x01t\xa4\x898\x02\xdblDl"
    bool_0 = True
    tuple_0 = (bool_0,)
    tuple_1 = (bytes_0, tuple_0, bool_0, bytes_0)
    tuple_2 = (dict_0, list_0, bytes_0, tuple_1)
    a_b_c_0 = module_1.ABC()
    tuple_3 = (a_b_c_0, a_b_c_0)
    tuple_3.write(tuple_2)


@pytest.mark.xfail(strict=True)
def test_case_7205():
    tuple_0 = ()
    tuple_1 = (tuple_0,)
    str_0 = ";ylvReUyfm_Uv=o"
    str_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_7206():
    list_0 = []
    module_0.object(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_7207():
    bytes_0 = b"\xf5+\xa7\x86)d\xa7\x83\xa5\x85\x1e\x03\xda\x89\x9b\xa3[6,\xdb"
    bytes_1 = b"\x98\xd2z\xf1\xbd\xc8&-$\xf6J\xfa\x80\rIV\xf5\xb9\x8f"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7208():
    dict_0 = {}
    object_0 = module_0.object(**dict_0)
    object_1 = module_0.object()
    object_1.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_7209():
    none_type_0 = None
    bool_0 = True
    set_0 = {bool_0, bool_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7210():
    str_0 = "Sy=``]3Q%FI"
    list_0 = [str_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_7211():
    bool_0 = True
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7212():
    int_0 = -330
    dict_0 = {int_0: int_0, int_0: int_0}
    bytes_0 = b"\xe5\xe8\xcf^`\xef/g\xc6\xe6\xb7"
    bytes_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7213():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    dict_0 = {}
    a_b_c_0 = module_1.ABC(**dict_0)
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7214():
    none_type_0 = None
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_0.write(none_type_0)


def test_case_7215():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7216():
    a_b_c_0 = module_1.ABC()
    str_0 = "k3]S5\x0cr[\rptqi%"
    str_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_7217():
    str_0 = "'X\nT\ns{ZRm=\x0c)i;}"
    set_0 = {str_0}
    bool_0 = False
    bool_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_7218():
    none_type_0 = None
    int_0 = 434
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7219():
    bool_0 = True
    int_0 = -3310
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7220():
    bool_0 = True
    int_0 = -2217
    int_0.write(bool_0)


def test_case_7221():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7222():
    none_type_0 = None
    complex_0 = -1282 + 1649.8861j
    complex_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7223():
    none_type_0 = None
    bytes_0 = b""
    list_0 = [bytes_0, bytes_0]
    dict_0 = {}
    int_0 = -2658
    tuple_0 = (list_0, dict_0, list_0, int_0)
    tuple_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7224():
    bytes_0 = b"\x1eLv\x88\xcf\x83D\xd6"
    bytes_1 = b"\x8et@\xe2\xf9'GK'\xd6\xe5\xba\x8d\xbf\xe3.@"
    str_0 = 'YkSu"H t'
    tuple_0 = (bytes_1, bytes_1, str_0)
    tuple_1 = (bytes_1, tuple_0)
    tuple_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7225():
    int_0 = -326
    bool_0 = False
    bool_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_7226():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    set_0 = set()
    list_1 = [set_0, set_0, set_0, set_0]
    list_1.write(list_0)


def test_case_7227():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7228():
    bytes_0 = b"dy>2=.\x7ff"
    list_0 = [bytes_0]
    module_1.ABC(*list_0)


@pytest.mark.xfail(strict=True)
def test_case_7229():
    tuple_0 = ()
    int_0 = -1444
    int_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7230():
    str_0 = "xNM9"
    module_1.ABC(**str_0)


@pytest.mark.xfail(strict=True)
def test_case_7231():
    object_0 = module_0.object()
    str_0 = "[k+DD$.vi,Fty.bG;hY"
    none_type_0 = None
    str_1 = "}.+HU"
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7232():
    str_0 = '\\zYH9=3("E'
    str_1 = ">f+1;p0"
    str_2 = ""
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_0}
    module_1.ABC(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7233():
    a_b_c_0 = module_1.ABC()
    module_1.ABC(*a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_7234():
    bool_0 = False
    module_1.ABC(*bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7235():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_0.object(*list_0)


def test_case_7236():
    pass


@pytest.mark.xfail(strict=True)
def test_case_7237():
    object_0 = module_0.object()
    str_0 = "n#zEyWJV)`|<"
    dict_0 = {str_0: str_0}
    float_0 = -829.0
    tuple_0 = (float_0,)
    tuple_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7238():
    int_0 = -2328
    int_1 = -1388
    int_1.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_7239():
    float_0 = 1538.0
    bool_0 = False
    bool_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_7240():
    complex_0 = 1374.7873 - 939.08j
    list_0 = [complex_0, complex_0, complex_0]
    str_0 = "_l6[%8V\x0ck."
    dict_0 = {str_0: complex_0, str_0: complex_0}
    module_1.ABC(*list_0, **dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7241():
    none_type_0 = None
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    int_0 = 1258
    tuple_1 = (tuple_0, tuple_0, int_0)
    tuple_1.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7242():
    none_type_0 = None
    int_0 = 370
    set_0 = {int_0, int_0, int_0}
    set_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7243():
    complex_0 = 2143.91184 + 799.84j
    float_0 = 2196.164
    float_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_7244():
    bytes_0 = b"3(\xd9\xa9\x8d\xd0="
    list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
    bytes_1 = b"\x14\xc0\xae\xde\xf0,"
    bytes_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7245():
    dict_0 = {}
    list_0 = [dict_0]
    none_type_0 = None
    module_1.ABC(*list_0, **none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7246():
    str_0 = ">GOr$q= \\\r<H\x0c~XfT"
    str_1 = "t~Y\t2"
    set_0 = {str_1}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_7247():
    bytes_0 = b"\xdb"
    bytes_1 = b"}\xe8\xd94`TT#\xea\x9e"
    bytes_1.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7248():
    none_type_0 = None
    int_0 = 3933
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7249():
    bytes_0 = b"w6z\x91\x9b.Wg"
    set_0 = set()
    tuple_0 = (set_0,)
    tuple_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7250():
    complex_0 = -400.07 + 50.862j
    list_0 = []
    tuple_0 = (list_0,)
    list_1 = [tuple_0, tuple_0, list_0, tuple_0]
    list_1.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_7251():
    bool_0 = False
    int_0 = 169
    int_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7252():
    tuple_0 = ()
    float_0 = -53.7428
    tuple_1 = (float_0,)
    tuple_1.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7253():
    a_b_c_0 = module_1.ABC()
    tuple_0 = (a_b_c_0,)
    bytes_0 = b"\xfc\x9d\x9d[\x97\r\x80"
    bytes_0.write(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7254():
    float_0 = -3830.1
    int_0 = 942
    int_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_7255():
    bytes_0 = b"\xc9\xb6u\xb9\xa4\xeb\xd3$\xb1rF]\x92\xf35ic~"
    list_0 = [bytes_0, bytes_0]
    complex_0 = -1837 + 3005.865474j
    str_0 = " hXDE)aRL:\r?lTn"
    tuple_0 = (str_0,)
    tuple_1 = (tuple_0,)
    tuple_2 = (complex_0, tuple_1)
    tuple_2.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7256():
    none_type_0 = None
    float_0 = -3359.7
    float_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7257():
    bytes_0 = b"\rk"
    set_0 = {bytes_0, bytes_0}
    complex_0 = -1116 - 1604.39815j
    complex_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_7258():
    bytes_0 = b"BA\x9cjf\xc4GTF^w\x91\x016X\xdb\xf3\x95"
    list_0 = [bytes_0, bytes_0, bytes_0]
    str_0 = "L}7?L<&;MD?NoQ)Wy0\x0cp"
    object_0 = module_0.object()
    dict_0 = {str_0: str_0, object_0: object_0, str_0: object_0, str_0: object_0}
    dict_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7259():
    bool_0 = True
    bool_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7260():
    int_0 = -3243
    list_0 = [int_0, int_0, int_0]
    int_1 = -2831
    str_0 = "&;3Gnh/!~"
    tuple_0 = (int_1, str_0)
    tuple_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7261():
    float_0 = 1694.6
    tuple_0 = ()
    tuple_0.write(float_0)


@pytest.mark.xfail(strict=True)
def test_case_7262():
    none_type_0 = None
    int_0 = -2368
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7263():
    a_b_c_0 = module_1.ABC()
    set_0 = {a_b_c_0, a_b_c_0, a_b_c_0}
    float_0 = 2456.0
    float_0.write(set_0)


@pytest.mark.xfail(strict=True)
def test_case_7264():
    bool_0 = True
    bool_1 = True
    bool_1.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7265():
    bytes_0 = b"\x8d\x87"
    list_0 = [bytes_0]
    bytes_1 = b"\x81\xc6\xb5\x9d\x03\xd8m\xe5NwNi\xfb\xb5"
    bytes_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7266():
    bool_0 = True
    float_0 = -2121.0
    list_0 = [float_0, float_0]
    tuple_0 = (float_0, list_0, list_0)
    tuple_0.write(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7267():
    complex_0 = -3047.5651 + 1694j
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    set_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_7268():
    list_0 = []
    bool_0 = False
    list_1 = [bool_0, bool_0]
    list_1.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7269():
    bytes_0 = b"`\xed:\x91\x1e#\x16'v"
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    dict_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7270():
    complex_0 = -4118.83 + 2051.2452j
    bool_0 = True
    bool_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_7271():
    bytes_0 = b"\xa1\x1c\x19\xfb"
    set_0 = set()
    set_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7272():
    str_0 = '\tyjk"3\\"b$0_+-<@*'
    float_0 = 1838.099
    bytes_0 = b"\xb4X\x0e\x80)\x9e\x8a\x13r1M["
    set_0 = {float_0, float_0, bytes_0, float_0}
    set_0.write(str_0)


@pytest.mark.xfail(strict=True)
def test_case_7273():
    bytes_0 = b"wN\x7f\x16n\xb4c\xed\x7f\xea\xcc"
    str_0 = "\nrV\nC$b-dzU1a7"
    str_0.write(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_7274():
    bytes_0 = b"\x14"
    set_0 = {bytes_0, bytes_0, bytes_0}
    list_0 = [set_0, set_0]
    tuple_0 = ()
    list_1 = [list_0, list_0, tuple_0]
    int_0 = -1476
    int_0.write(list_1)


@pytest.mark.xfail(strict=True)
def test_case_7275():
    none_type_0 = None
    int_0 = 15
    int_0.write(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7276():
    int_0 = 380
    str_0 = "n.&.K%McNP|jt"
    str_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_7277():
    str_0 = "e'0k4]tB\x0bN$@|1p"
    none_type_0 = None
    str_1 = "6`o(}wGPg|+`;"
    str_2 = "\rDwh=j,\\3h:r"
    dict_0 = {str_0: none_type_0, str_1: none_type_0, str_2: none_type_0}
    module_0.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7278():
    a_b_c_0 = module_1.ABC()
    str_0 = "L>eyVeB1`|-"
    dict_0 = {str_0: str_0, str_0: str_0}
    dict_0.write(a_b_c_0)


@pytest.mark.xfail(strict=True)
def test_case_7279():
    complex_0 = -3700.0085 - 2507.039j
    complex_1 = -314.3 + 997.7j
    complex_1.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_7280():
    object_0 = module_0.object()
    dict_0 = {object_0: object_0, object_0: object_0}
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_7281():
    tuple_0 = ()
    complex_0 = 902.3 + 1035.8764j
    tuple_1 = (tuple_0, complex_0)
    bool_0 = True
    bool_0.write(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_7282():
    list_0 = []
    module_1.ABC(*list_0, **list_0)


@pytest.mark.xfail(strict=True)
def test_case_7283():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    a_b_c_0 = module_1.ABC()
    a_b_c_0.write(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7284():
    complex_0 = 2657 - 1562.685j
    list_0 = []
    list_0.write(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_7285():
    object_0 = module_0.object()
    bytes_0 = b"G\xc5MQ\xb6\x8e\x07\xf4h\xe6\xb12b>G"
    bytes_0.write(object_0)


@pytest.mark.xfail(strict=True)
def test_case_7286():
    int_0 = -2287
    tuple_0 = ()
    tuple_0.write(int_0)


@pytest.mark.xfail(strict=True)
def test_case_7287():
    a_b_c_0 = module_1.ABC()
    list_0 = [a_b_c_0]
    module_1.ABC(*list_0)
